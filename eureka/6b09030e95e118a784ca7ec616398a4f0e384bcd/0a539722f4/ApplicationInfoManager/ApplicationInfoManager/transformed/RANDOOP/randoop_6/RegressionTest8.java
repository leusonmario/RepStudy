import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest8 {

    public static boolean debug = false;

    @Test
    public void test04001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04001");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/");
        java.lang.String str2 = myDataCenterInstanceConfig1.getAppname();
        boolean boolean3 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        boolean boolean4 = myDataCenterInstanceConfig1.isInstanceEnabledOnit();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "unknown" + "'", str2, "unknown");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test04002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04002");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str2 = myDataCenterInstanceConfig1.getIpAddress();
        java.lang.String str3 = myDataCenterInstanceConfig1.getASGName();
        boolean boolean4 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        int int5 = myDataCenterInstanceConfig1.getLeaseExpirationDurationInSeconds();
        int int6 = myDataCenterInstanceConfig1.getNonSecurePort();
        java.lang.String str7 = myDataCenterInstanceConfig1.getStatusPageUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str9 = myDataCenterInstanceConfig1.getIpAddress();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo10 = myDataCenterInstanceConfig1.getDataCenterInfo();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager11 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager11.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig14 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int15 = myDataCenterInstanceConfig14.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo16 = myDataCenterInstanceConfig14.getDataCenterInfo();
        java.lang.String str17 = myDataCenterInstanceConfig14.getNamespace();
        boolean boolean18 = myDataCenterInstanceConfig14.isNonSecurePortEnabled();
        applicationInfoManager11.config = myDataCenterInstanceConfig14;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig20 = applicationInfoManager11.config;
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager11.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo22 = applicationInfoManager11.instanceInfo;
        int int23 = 0; // flaky: instanceInfo22.getSecurePort();
        boolean boolean24 = false; // flaky: instanceInfo22.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = null; // flaky: new com.netflix.appinfo.InstanceInfo(instanceInfo22);
        java.lang.String str26 = null; // flaky: instanceInfo25.getHostName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType27 = null; // flaky: instanceInfo25.getActionType();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo28 = null; // flaky: instanceInfo25.getDataCenterInfo();
// flaky:         instanceInfo25.setLastDirtyTimestamp((java.lang.Long) 1636105983288L);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager31 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo25);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo32 = myDataCenterInstanceConfig1.getDataCenterInfo();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "172.20.26.3" + "'", str2, "172.20.26.3");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 90 + "'", int5 == 90);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 80 + "'", int6 == 80);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "172.20.26.3" + "'", str9, "172.20.26.3");
        org.junit.Assert.assertNotNull(dataCenterInfo10);
        org.junit.Assert.assertNotNull(applicationInfoManager11);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 30 + "'", int15 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig20);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo21);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo22);
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 443 + "'", int23 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str26, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertTrue("'" + actionType27 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType27.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertNotNull(dataCenterInfo28);
        org.junit.Assert.assertNotNull(dataCenterInfo32);
    }

    @Test
    public void test04003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04003");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = myDataCenterInstanceConfig1.getMetadataMap();
        java.lang.String str3 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        java.lang.String str5 = myDataCenterInstanceConfig1.getVirtualHostName();
        int int6 = myDataCenterInstanceConfig1.getNonSecurePort();
        java.lang.String str7 = myDataCenterInstanceConfig1.getAppname();
        int int8 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "/healthcheck" + "'", str3, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/Status" + "'", str4, "/Status");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str5, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 80 + "'", int6 == 80);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "unknown" + "'", str7, "unknown");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
    }

    @Test
    public void test04004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04004");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setSecureVIPAddressDeser("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo15 = builder6.build();
        instanceInfo15.setSID("na");
        long long18 = instanceInfo15.getLastUpdatedTimestamp();
        com.netflix.appinfo.InstanceInfo instanceInfo19 = new com.netflix.appinfo.InstanceInfo(instanceInfo15);
        java.lang.String str20 = instanceInfo15.getSecureVipAddress();
        boolean boolean21 = instanceInfo15.isDirty();
        java.lang.String str22 = instanceInfo15.getHomePageUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(instanceInfo15);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1636106118794L + "'", long18 == 1636106118794L);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str20, "http://inesserver2.windows.cin.ufpe.br:80/Status");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test04005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04005");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder11.setHomePageUrlForDeser("UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder13.add("unknown", "/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder16.setHealthCheckUrlsForDeser("hi!", "inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder16.setStatusPageUrlForDeser("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder21.setHealthCheckUrls("UNKNOWN", "http://hi!:35/Status", "eureka.");
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder21.setVIPAddressDeser("DEFAULT");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
    }

    @Test
    public void test04006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04006");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder12.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder12.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder12.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.LeaseInfo leaseInfo22 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder12.setLeaseInfo(leaseInfo22);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig25 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int26 = myDataCenterInstanceConfig25.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo27 = myDataCenterInstanceConfig25.getDataCenterInfo();
        java.lang.String str29 = myDataCenterInstanceConfig25.getHostName(true);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = myDataCenterInstanceConfig25.getMetadataMap();
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder12.setMetadata(strMap30);
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder31.setHomePageUrlForDeser("/healthcheck");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 30 + "'", int26 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str29, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
    }

    @Test
    public void test04007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04007");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder12.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder12.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder12.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo22 = builder21.build();
        java.lang.String str23 = instanceInfo22.getStatusPageUrl();
        com.netflix.appinfo.InstanceInfo instanceInfo24 = new com.netflix.appinfo.InstanceInfo(instanceInfo22);
        instanceInfo24.setLastDirtyTimestamp((java.lang.Long) 1636106033201L);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test04008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04008");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = null; // flaky: instanceInfo11.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.Builder builder15 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig17 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int18 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig17.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder20 = null; // flaky: builder15.setDataCenterInfo(dataCenterInfo19);
        boolean boolean21 = false; // flaky: builder20.isInitialized();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager22 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int25 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        int int26 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager22.config = myDataCenterInstanceConfig24;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig28 = applicationInfoManager22.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager29 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig31 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int32 = myDataCenterInstanceConfig31.getLeaseRenewalIntervalInSeconds();
        int int33 = myDataCenterInstanceConfig31.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager29.config = myDataCenterInstanceConfig31;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig35 = applicationInfoManager29.config;
        applicationInfoManager22.config = eurekaInstanceConfig35;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager22;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager22;
        com.netflix.appinfo.InstanceInfo.Builder builder39 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder41 = builder39.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder43 = builder39.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder45 = builder39.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig46 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo47 = myDataCenterInstanceConfig46.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder48 = builder45.setDataCenterInfo(dataCenterInfo47);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig49 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo50 = myDataCenterInstanceConfig49.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder51 = builder45.setDataCenterInfo(dataCenterInfo50);
        com.netflix.appinfo.InstanceInfo.Builder builder53 = builder45.setSecureVIPAddressDeser("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo54 = builder45.build();
        java.lang.String str55 = instanceInfo54.getHostName();
        applicationInfoManager22.instanceInfo = instanceInfo54;
        com.netflix.appinfo.DataCenterInfo dataCenterInfo57 = instanceInfo54.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder58 = null; // flaky: builder20.setDataCenterInfo(dataCenterInfo57);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo59 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder60 = null; // flaky: builder58.setDataCenterInfo(dataCenterInfo59);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UNKNOWN" + "'", str14, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 30 + "'", int18 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
// flaky:         org.junit.Assert.assertNotNull(builder20);
// flaky:         org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(applicationInfoManager22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 30 + "'", int25 == 30);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 30 + "'", int26 == 30);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig28);
        org.junit.Assert.assertNotNull(applicationInfoManager29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 30 + "'", int32 == 30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 30 + "'", int33 == 30);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig35);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(dataCenterInfo47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(dataCenterInfo50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(instanceInfo54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(dataCenterInfo57);
// flaky:         org.junit.Assert.assertNotNull(builder58);
// flaky:         org.junit.Assert.assertNotNull(builder60);
    }

    @Test
    public void test04009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04009");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder12.setSecureVIPAddressDeser("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder12.setAppName("default");
        com.netflix.appinfo.InstanceInfo instanceInfo19 = builder12.getRawInstance();
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder12.setPort((int) (short) 10);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder12.setLastDirtyTimestamp(1636105986720L);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
    }

    @Test
    public void test04010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04010");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo4 = myDataCenterInstanceConfig2.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig5 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo4);
        java.lang.String str6 = myDataCenterInstanceConfig5.getAppname();
        java.lang.String str7 = myDataCenterInstanceConfig5.getNamespace();
        java.lang.String str8 = myDataCenterInstanceConfig5.getAppname();
        java.lang.String str9 = myDataCenterInstanceConfig5.getSecureHealthCheckUrl();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "unknown" + "'", str6, "unknown");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/Status" + "'", str7, "/Status");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "unknown" + "'", str8, "unknown");
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test04011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04011");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig13 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int14 = myDataCenterInstanceConfig13.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo15 = myDataCenterInstanceConfig13.getDataCenterInfo();
        java.lang.String str17 = myDataCenterInstanceConfig13.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig13.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo18);
        java.lang.String str20 = myDataCenterInstanceConfig19.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = myDataCenterInstanceConfig19.getMetadataMap();
// flaky:         applicationInfoManager0.registerAppMetadata(strMap21);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager23 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo24 = applicationInfoManager23.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig26 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int27 = myDataCenterInstanceConfig26.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo28 = myDataCenterInstanceConfig26.getDataCenterInfo();
        java.lang.String str29 = myDataCenterInstanceConfig26.getNamespace();
        boolean boolean30 = myDataCenterInstanceConfig26.isNonSecurePortEnabled();
        applicationInfoManager23.config = myDataCenterInstanceConfig26;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig32 = applicationInfoManager23.config;
        com.netflix.appinfo.InstanceInfo instanceInfo33 = applicationInfoManager23.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig36 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int37 = myDataCenterInstanceConfig36.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo38 = myDataCenterInstanceConfig36.getDataCenterInfo();
        java.lang.String str40 = myDataCenterInstanceConfig36.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo41 = myDataCenterInstanceConfig36.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig42 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo41);
        java.lang.String str43 = myDataCenterInstanceConfig42.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = myDataCenterInstanceConfig42.getMetadataMap();
// flaky:         applicationInfoManager23.registerAppMetadata(strMap44);
        com.netflix.appinfo.InstanceInfo instanceInfo46 = applicationInfoManager23.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo47 = applicationInfoManager23.getInfo();
        com.netflix.appinfo.InstanceInfo.ActionType actionType48 = null; // flaky: instanceInfo47.getActionType();
        com.netflix.appinfo.InstanceInfo.Builder builder49 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo47);
        applicationInfoManager0.instanceInfo = instanceInfo47;
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus51 = null; // flaky: instanceInfo47.getOverriddenStatus();
        java.lang.String str52 = instanceInfo47.getAppGroupName();
        java.lang.String str53 = instanceInfo47.getSecureVipAddress();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 30 + "'", int14 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(applicationInfoManager23);
        org.junit.Assert.assertNotNull(instanceInfo24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 30 + "'", int27 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 30 + "'", int37 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str40, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(instanceInfo46);
        org.junit.Assert.assertNotNull(instanceInfo47);
        org.junit.Assert.assertNull(actionType48);
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus51 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus51.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "/" + "'", str52, "/");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str53, "http://inesserver2.windows.cin.ufpe.br:80/Status");
    }

    @Test
    public void test04012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04012");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder6.setLastDirtyTimestamp((long) (short) 10);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo15 = null;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig16 = new com.netflix.appinfo.MyDataCenterInstanceConfig("default", dataCenterInfo15);
        java.lang.String str17 = myDataCenterInstanceConfig16.getHealthCheckUrl();
        java.lang.String str18 = myDataCenterInstanceConfig16.getHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = myDataCenterInstanceConfig16.getMetadataMap();
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder13.setMetadata(strMap19);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder20.add("na", "http://hi!:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setSecureVIPAddressDeser("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
    }

    @Test
    public void test04013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04013");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder6.setLastDirtyTimestamp((long) (short) 10);
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder13.setSecurePort((int) (short) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder15.setSecureVIPAddressDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder15.setPort(10);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder15.setASGName("");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setSecureVIPAddress("/");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder21.setLastDirtyTimestamp(1636105990071L);
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder21.setAppName("/healthcheck");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager28 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager28.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig31 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int32 = myDataCenterInstanceConfig31.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo33 = myDataCenterInstanceConfig31.getDataCenterInfo();
        java.lang.String str34 = myDataCenterInstanceConfig31.getNamespace();
        boolean boolean35 = myDataCenterInstanceConfig31.isNonSecurePortEnabled();
        applicationInfoManager28.config = myDataCenterInstanceConfig31;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig37 = applicationInfoManager28.config;
        com.netflix.appinfo.InstanceInfo instanceInfo38 = applicationInfoManager28.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo39 = applicationInfoManager28.instanceInfo;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig40 = applicationInfoManager28.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager41 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo42 = applicationInfoManager41.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig44 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int45 = myDataCenterInstanceConfig44.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo46 = myDataCenterInstanceConfig44.getDataCenterInfo();
        java.lang.String str47 = myDataCenterInstanceConfig44.getNamespace();
        boolean boolean48 = myDataCenterInstanceConfig44.isNonSecurePortEnabled();
        applicationInfoManager41.config = myDataCenterInstanceConfig44;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig50 = applicationInfoManager41.config;
        com.netflix.appinfo.InstanceInfo instanceInfo51 = applicationInfoManager41.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo52 = applicationInfoManager41.instanceInfo;
        java.lang.Boolean boolean53 = null; // flaky: instanceInfo52.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus54 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
// flaky:         instanceInfo52.setOverriddenStatus(instanceStatus54);
        applicationInfoManager28.instanceInfo = instanceInfo52;
        com.netflix.appinfo.LeaseInfo leaseInfo57 = null; // flaky: instanceInfo52.getLeaseInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder58 = builder21.setLeaseInfo(leaseInfo57);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(applicationInfoManager28);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 30 + "'", int32 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig37);
        org.junit.Assert.assertNotNull(instanceInfo38);
        org.junit.Assert.assertNotNull(instanceInfo39);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig40);
        org.junit.Assert.assertNotNull(applicationInfoManager41);
        org.junit.Assert.assertNotNull(instanceInfo42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig50);
        org.junit.Assert.assertNotNull(instanceInfo51);
        org.junit.Assert.assertNotNull(instanceInfo52);
// flaky:         org.junit.Assert.assertEquals("'" + boolean53 + "' != '" + false + "'", boolean53, false);
        org.junit.Assert.assertTrue("'" + instanceStatus54 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus54.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNull(leaseInfo57);
        org.junit.Assert.assertNotNull(builder58);
    }

    @Test
    public void test04014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04014");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str5 = myDataCenterInstanceConfig4.getIpAddress();
        java.lang.String str6 = myDataCenterInstanceConfig4.getASGName();
        boolean boolean7 = myDataCenterInstanceConfig4.getSecurePortEnabled();
        java.lang.String str8 = myDataCenterInstanceConfig4.getStatusPageUrl();
        applicationInfoManager0.config = myDataCenterInstanceConfig4;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager11 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager11.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig14 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int15 = myDataCenterInstanceConfig14.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo16 = myDataCenterInstanceConfig14.getDataCenterInfo();
        java.lang.String str17 = myDataCenterInstanceConfig14.getNamespace();
        boolean boolean18 = myDataCenterInstanceConfig14.isNonSecurePortEnabled();
        applicationInfoManager11.config = myDataCenterInstanceConfig14;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig20 = applicationInfoManager11.config;
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager11.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int25 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig24.getDataCenterInfo();
        java.lang.String str28 = myDataCenterInstanceConfig24.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig24.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig30 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo29);
        java.lang.String str31 = myDataCenterInstanceConfig30.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = myDataCenterInstanceConfig30.getMetadataMap();
// flaky:         applicationInfoManager11.registerAppMetadata(strMap32);
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager11.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager11.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo36 = applicationInfoManager11.instanceInfo;
        com.netflix.appinfo.LeaseInfo leaseInfo37 = null;
// flaky:         instanceInfo36.setLeaseInfo(leaseInfo37);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null; // flaky: instanceInfo36.getMetadata();
        com.netflix.appinfo.InstanceInfo instanceInfo40 = null; // flaky: new com.netflix.appinfo.InstanceInfo(instanceInfo36);
        com.netflix.appinfo.LeaseInfo leaseInfo41 = instanceInfo36.getLeaseInfo();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo42 = instanceInfo36.getDataCenterInfo();
        applicationInfoManager0.instanceInfo = instanceInfo36;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig44 = applicationInfoManager0.config;
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertNotNull(instanceInfo2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "172.20.26.3" + "'", str5, "172.20.26.3");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(applicationInfoManager11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 30 + "'", int15 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig20);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 30 + "'", int25 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str28, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertNotNull(instanceInfo36);
// flaky:         org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(leaseInfo41);
        org.junit.Assert.assertNotNull(dataCenterInfo42);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig44);
    }

    @Test
    public void test04015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04015");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = null; // flaky: instanceInfo11.getVersion();
        java.lang.String str15 = null; // flaky: instanceInfo11.getIPAddr();
// flaky:         instanceInfo11.setLastUpdatedTimestamp();
        java.lang.String str17 = instanceInfo11.getVersion();
        java.lang.String str18 = instanceInfo11.getHomePageUrl();
        java.lang.String str19 = instanceInfo11.getVersion();
        int int20 = instanceInfo11.getSecurePort();
        com.netflix.appinfo.InstanceInfo.ActionType actionType21 = instanceInfo11.getActionType();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "unknown" + "'", str14, "unknown");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "unknown" + "'", str17, "unknown");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "unknown" + "'", str19, "unknown");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 7002 + "'", int20 == 7002);
// flaky:         org.junit.Assert.assertTrue("'" + actionType21 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType21.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
    }

    @Test
    public void test04016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04016");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig0 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        java.lang.String str1 = myDataCenterInstanceConfig0.getASGName();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = myDataCenterInstanceConfig0.getMetadataMap();
        int int3 = myDataCenterInstanceConfig0.getNonSecurePort();
        java.lang.String str4 = myDataCenterInstanceConfig0.getIpAddress();
        java.lang.String str5 = myDataCenterInstanceConfig0.getHealthCheckUrlPath();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 80 + "'", int3 == 80);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "172.20.26.3" + "'", str4, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/healthcheck" + "'", str5, "/healthcheck");
    }

    @Test
    public void test04017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04017");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
// flaky:         instanceInfo11.setLeaseInfo(leaseInfo14);
        java.lang.String str16 = null; // flaky: instanceInfo11.getSID();
        com.netflix.appinfo.LeaseInfo leaseInfo17 = null; // flaky: instanceInfo11.getLeaseInfo();
        instanceInfo11.setIsCoordinatingDiscoveryServer();
        java.lang.String str19 = instanceInfo11.getASGName();
        java.lang.String str20 = instanceInfo11.getSID();
        instanceInfo11.setSID("inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "na" + "'", str16, "na");
        org.junit.Assert.assertNull(leaseInfo17);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/healthcheck" + "'", str19, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "na" + "'", str20, "na");
    }

    @Test
    public void test04018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04018");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str2 = myDataCenterInstanceConfig1.getIpAddress();
        java.lang.String str3 = myDataCenterInstanceConfig1.getASGName();
        java.lang.String str4 = myDataCenterInstanceConfig1.getAppname();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = myDataCenterInstanceConfig1.getMetadataMap();
        java.lang.String str6 = myDataCenterInstanceConfig1.getHealthCheckUrl();
        int int7 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "172.20.26.3" + "'", str2, "172.20.26.3");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "unknown" + "'", str4, "unknown");
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 30 + "'", int7 == 30);
    }

    @Test
    public void test04019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04019");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder2.setHealthCheckUrlsForDeser("unknown", "172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder10.setAppName("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setSecureVIPAddress("172.20.26.3");
        com.netflix.appinfo.InstanceInfo instanceInfo15 = builder12.build();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager16 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo17 = applicationInfoManager16.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int20 = myDataCenterInstanceConfig19.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo21 = myDataCenterInstanceConfig19.getDataCenterInfo();
        java.lang.String str22 = myDataCenterInstanceConfig19.getNamespace();
        boolean boolean23 = myDataCenterInstanceConfig19.isNonSecurePortEnabled();
        applicationInfoManager16.config = myDataCenterInstanceConfig19;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig25 = applicationInfoManager16.config;
        com.netflix.appinfo.InstanceInfo instanceInfo26 = applicationInfoManager16.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager16.instanceInfo;
        int int28 = 0; // flaky: instanceInfo27.getSecurePort();
        com.netflix.appinfo.InstanceInfo.PortType portType29 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean30 = false; // flaky: instanceInfo27.isPortEnabled(portType29);
        java.lang.String str31 = null; // flaky: instanceInfo27.getVIPAddress();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager32 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo33 = applicationInfoManager32.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig35 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int36 = myDataCenterInstanceConfig35.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo37 = myDataCenterInstanceConfig35.getDataCenterInfo();
        java.lang.String str38 = myDataCenterInstanceConfig35.getNamespace();
        boolean boolean39 = myDataCenterInstanceConfig35.isNonSecurePortEnabled();
        applicationInfoManager32.config = myDataCenterInstanceConfig35;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig41 = applicationInfoManager32.config;
        com.netflix.appinfo.InstanceInfo instanceInfo42 = applicationInfoManager32.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo43 = applicationInfoManager32.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType44 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo43.setActionType(actionType44);
        instanceInfo27.setActionType(actionType44);
        java.lang.String str47 = instanceInfo27.getSecureVipAddress();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus48 = instanceInfo27.getOverriddenStatus();
        com.netflix.appinfo.InstanceInfo.Builder builder49 = builder12.setOverriddenStatus(instanceStatus48);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager50 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig52 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int53 = myDataCenterInstanceConfig52.getLeaseRenewalIntervalInSeconds();
        int int54 = myDataCenterInstanceConfig52.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager50.config = myDataCenterInstanceConfig52;
        java.lang.String str56 = myDataCenterInstanceConfig52.getIpAddress();
        java.lang.String str57 = myDataCenterInstanceConfig52.getVirtualHostName();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo58 = myDataCenterInstanceConfig52.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder59 = builder12.setDataCenterInfo(dataCenterInfo58);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertNotNull(applicationInfoManager16);
        org.junit.Assert.assertNotNull(instanceInfo17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 30 + "'", int20 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertNotNull(instanceInfo27);
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 7002 + "'", int28 == 7002);
        org.junit.Assert.assertTrue("'" + portType29 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType29.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
// flaky:         org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(applicationInfoManager32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 30 + "'", int36 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig41);
        org.junit.Assert.assertNotNull(instanceInfo42);
        org.junit.Assert.assertNotNull(instanceInfo43);
        org.junit.Assert.assertTrue("'" + actionType44 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType44.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
// flaky:         org.junit.Assert.assertNull(instanceStatus48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(applicationInfoManager50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 30 + "'", int53 == 30);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 30 + "'", int54 == 30);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "172.20.26.3" + "'", str56, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str57, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNotNull(dataCenterInfo58);
        org.junit.Assert.assertNotNull(builder59);
    }

    @Test
    public void test04020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04020");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("http://inesserver2.windows.cin.ufpe.br:80/", "default");
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder5.setIPAddr("http://inesserver2.windows.cin.ufpe.br:80:80/Status");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
    }

    @Test
    public void test04021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04021");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig11 = applicationInfoManager0.config;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig14 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int15 = myDataCenterInstanceConfig14.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo16 = myDataCenterInstanceConfig14.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig17 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo16);
        java.lang.String str18 = myDataCenterInstanceConfig17.getAppname();
        java.lang.String str19 = myDataCenterInstanceConfig17.getNamespace();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig20 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager21 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo22 = applicationInfoManager21.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int25 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig24.getDataCenterInfo();
        java.lang.String str27 = myDataCenterInstanceConfig24.getNamespace();
        boolean boolean28 = myDataCenterInstanceConfig24.isNonSecurePortEnabled();
        applicationInfoManager21.config = myDataCenterInstanceConfig24;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig30 = applicationInfoManager21.config;
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager21.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager21.instanceInfo;
        int int33 = 0; // flaky: instanceInfo32.getSecurePort();
        boolean boolean34 = false; // flaky: instanceInfo32.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager35 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig20, instanceInfo32);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager36 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig17, instanceInfo32);
// flaky:         instanceInfo32.setLastDirtyTimestamp((java.lang.Long) 100L);
        java.lang.String str39 = null; // flaky: instanceInfo32.getSecureVipAddress();
        java.lang.String str40 = instanceInfo32.getAppName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager41 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig11, instanceInfo32);
        boolean boolean43 = instanceInfo32.equals((java.lang.Object) 32);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 30 + "'", int15 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "unknown" + "'", str18, "unknown");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/Status" + "'", str19, "/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 30 + "'", int25 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertNotNull(instanceInfo32);
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 7002 + "'", int33 == 7002);
// flaky:         org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "DEFAULT" + "'", str40, "DEFAULT");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test04022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04022");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = 0; // flaky: instanceInfo11.getSecurePort();
        boolean boolean13 = false; // flaky: instanceInfo11.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = null; // flaky: new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        java.lang.String str15 = null; // flaky: instanceInfo14.getVersion();
// flaky:         instanceInfo14.setLastUpdatedTimestamp();
        java.lang.String str17 = null; // flaky: instanceInfo14.getAppName();
        java.lang.String str18 = null; // flaky: instanceInfo14.getSID();
        java.lang.String str19 = null; // flaky: instanceInfo14.getSecureVipAddress();
        java.lang.String str20 = null; // flaky: instanceInfo14.getStatusPageUrl();
        java.lang.String str21 = null; // flaky: instanceInfo14.getIPAddr();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7002 + "'", int12 == 7002);
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "unknown" + "'", str15, "unknown");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "DEFAULT" + "'", str17, "DEFAULT");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://hi!:80/Status" + "'", str18, "http://hi!:80/Status");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str20, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test04023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04023");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = 0; // flaky: instanceInfo11.getSecurePort();
        int int13 = 0; // flaky: instanceInfo11.getPort();
        int int14 = 0; // flaky: instanceInfo11.getSecurePort();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo16 = applicationInfoManager15.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig18 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int19 = myDataCenterInstanceConfig18.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo20 = myDataCenterInstanceConfig18.getDataCenterInfo();
        java.lang.String str21 = myDataCenterInstanceConfig18.getNamespace();
        boolean boolean22 = myDataCenterInstanceConfig18.isNonSecurePortEnabled();
        applicationInfoManager15.config = myDataCenterInstanceConfig18;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig24 = applicationInfoManager15.config;
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager15.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo26 = applicationInfoManager15.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType27 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo26.setActionType(actionType27);
        java.lang.String str29 = instanceInfo26.getStatusPageUrl();
        com.netflix.appinfo.InstanceInfo instanceInfo30 = new com.netflix.appinfo.InstanceInfo(instanceInfo26);
        int int31 = instanceInfo30.getSecurePort();
        java.lang.String[] strArray32 = new java.lang.String[] {};
        com.netflix.appinfo.InstanceInfo instanceInfo33 = null;
        java.lang.String str34 = com.netflix.appinfo.InstanceInfo.getZone(strArray32, instanceInfo33);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager35 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo36 = applicationInfoManager35.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig38 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int39 = myDataCenterInstanceConfig38.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo40 = myDataCenterInstanceConfig38.getDataCenterInfo();
        java.lang.String str41 = myDataCenterInstanceConfig38.getNamespace();
        boolean boolean42 = myDataCenterInstanceConfig38.isNonSecurePortEnabled();
        applicationInfoManager35.config = myDataCenterInstanceConfig38;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig44 = applicationInfoManager35.config;
        com.netflix.appinfo.InstanceInfo instanceInfo45 = applicationInfoManager35.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo46 = applicationInfoManager35.instanceInfo;
        int int47 = instanceInfo46.getSecurePort();
        int int48 = instanceInfo46.getPort();
        int int49 = instanceInfo46.getSecurePort();
        java.lang.String str50 = com.netflix.appinfo.InstanceInfo.getZone(strArray32, instanceInfo46);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager51 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo52 = applicationInfoManager51.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig54 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int55 = myDataCenterInstanceConfig54.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo56 = myDataCenterInstanceConfig54.getDataCenterInfo();
        java.lang.String str57 = myDataCenterInstanceConfig54.getNamespace();
        boolean boolean58 = myDataCenterInstanceConfig54.isNonSecurePortEnabled();
        applicationInfoManager51.config = myDataCenterInstanceConfig54;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig60 = applicationInfoManager51.config;
        com.netflix.appinfo.InstanceInfo instanceInfo61 = applicationInfoManager51.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo62 = applicationInfoManager51.instanceInfo;
        int int63 = instanceInfo62.getSecurePort();
        boolean boolean64 = instanceInfo62.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo65 = new com.netflix.appinfo.InstanceInfo(instanceInfo62);
        com.netflix.appinfo.InstanceInfo.ActionType actionType66 = com.netflix.appinfo.InstanceInfo.ActionType.MODIFIED;
        instanceInfo62.setActionType(actionType66);
        instanceInfo46.setActionType(actionType66);
        instanceInfo30.setActionType(actionType66);
        instanceInfo11.setActionType(actionType66);
        java.lang.Boolean boolean71 = instanceInfo11.isCoordinatingDiscoveryServer();
        java.lang.String str72 = instanceInfo11.getHomePageUrl();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7002 + "'", int12 == 7002);
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 7001 + "'", int13 == 7001);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 7002 + "'", int14 == 7002);
        org.junit.Assert.assertNotNull(applicationInfoManager15);
        org.junit.Assert.assertNotNull(instanceInfo16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 30 + "'", int19 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertTrue("'" + actionType27 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType27.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str29, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 7002 + "'", int31 == 7002);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "default" + "'", str34, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager35);
        org.junit.Assert.assertNotNull(instanceInfo36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 30 + "'", int39 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig44);
        org.junit.Assert.assertNotNull(instanceInfo45);
        org.junit.Assert.assertNotNull(instanceInfo46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 7002 + "'", int47 == 7002);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 7001 + "'", int48 == 7001);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 7002 + "'", int49 == 7002);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "default" + "'", str50, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager51);
        org.junit.Assert.assertNotNull(instanceInfo52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig60);
        org.junit.Assert.assertNotNull(instanceInfo61);
        org.junit.Assert.assertNotNull(instanceInfo62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 7002 + "'", int63 == 7002);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + actionType66 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.MODIFIED + "'", actionType66.equals(com.netflix.appinfo.InstanceInfo.ActionType.MODIFIED));
// flaky:         org.junit.Assert.assertEquals("'" + boolean71 + "' != '" + true + "'", boolean71, true);
// flaky:         org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
    }

    @Test
    public void test04024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04024");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = myDataCenterInstanceConfig1.getMetadataMap();
        java.lang.String str3 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        java.lang.String str5 = myDataCenterInstanceConfig1.getVirtualHostName();
        java.lang.String str6 = myDataCenterInstanceConfig1.getASGName();
        java.lang.String str7 = myDataCenterInstanceConfig1.getASGName();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = myDataCenterInstanceConfig1.getMetadataMap();
        java.lang.String str10 = myDataCenterInstanceConfig1.getHostName(false);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "/healthcheck" + "'", str3, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/Status" + "'", str4, "/Status");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str5, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str10, "inesserver2.windows.cin.ufpe.br");
    }

    @Test
    public void test04025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04025");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = null; // flaky: instanceInfo11.getStatusPageUrl();
        java.lang.String str15 = null; // flaky: instanceInfo11.getVersion();
// flaky:         instanceInfo11.setLastDirtyTimestamp((java.lang.Long) 10L);
        instanceInfo11.setLastDirtyTimestamp((java.lang.Long) 0L);
        java.lang.String str20 = instanceInfo11.getSecureVipAddress();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str14, "http://inesserver2.windows.cin.ufpe.br:80/Status");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "unknown" + "'", str15, "unknown");
// flaky:         org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test04026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04026");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = null; // flaky: instanceInfo11.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.Builder builder15 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        int int16 = 0; // flaky: instanceInfo11.getSecurePort();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UNKNOWN" + "'", str14, "UNKNOWN");
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 443 + "'", int16 == 443);
    }

    @Test
    public void test04027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04027");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        boolean boolean3 = myDataCenterInstanceConfig2.getSecurePortEnabled();
        java.lang.String str4 = myDataCenterInstanceConfig2.getHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig2.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig6 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/", dataCenterInfo5);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = myDataCenterInstanceConfig6.getMetadataMap();
        java.lang.String str8 = myDataCenterInstanceConfig6.getStatusPageUrl();
        java.lang.String str9 = myDataCenterInstanceConfig6.getSecureVirtualHostName();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test04028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04028");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig6 = applicationInfoManager0.config;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig7 = applicationInfoManager0.config;
// flaky:         applicationInfoManager0.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager9 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager9.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int13 = myDataCenterInstanceConfig12.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo14 = myDataCenterInstanceConfig12.getDataCenterInfo();
        java.lang.String str15 = myDataCenterInstanceConfig12.getNamespace();
        boolean boolean16 = myDataCenterInstanceConfig12.isNonSecurePortEnabled();
        applicationInfoManager9.config = myDataCenterInstanceConfig12;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig18 = applicationInfoManager9.config;
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager9.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager9.instanceInfo;
        int int21 = 0; // flaky: instanceInfo20.getSecurePort();
        boolean boolean22 = false; // flaky: instanceInfo20.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo23 = null; // flaky: new com.netflix.appinfo.InstanceInfo(instanceInfo20);
        com.netflix.appinfo.InstanceInfo instanceInfo24 = new com.netflix.appinfo.InstanceInfo(instanceInfo20);
        java.lang.String str25 = instanceInfo20.getAppGroupName();
        int int26 = instanceInfo20.getCountryId();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus27 = instanceInfo20.getStatus();
        applicationInfoManager0.setInstanceStatus(instanceStatus27);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager29 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager29.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig32 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int33 = myDataCenterInstanceConfig32.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo34 = myDataCenterInstanceConfig32.getDataCenterInfo();
        java.lang.String str35 = myDataCenterInstanceConfig32.getNamespace();
        boolean boolean36 = myDataCenterInstanceConfig32.isNonSecurePortEnabled();
        applicationInfoManager29.config = myDataCenterInstanceConfig32;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig38 = applicationInfoManager29.config;
        com.netflix.appinfo.InstanceInfo instanceInfo39 = applicationInfoManager29.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo40 = applicationInfoManager29.instanceInfo;
        int int41 = instanceInfo40.getSecurePort();
        boolean boolean42 = instanceInfo40.isDirty();
        java.lang.String str43 = instanceInfo40.getHostName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType44 = instanceInfo40.getActionType();
        boolean boolean45 = instanceInfo40.isDirty();
        instanceInfo40.setSID("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus48 = null;
        instanceInfo40.setOverriddenStatus(instanceStatus48);
        java.lang.String str50 = instanceInfo40.getSID();
        com.netflix.appinfo.InstanceInfo.Builder builder51 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo40);
        applicationInfoManager0.instanceInfo = instanceInfo40;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig53 = applicationInfoManager0.config;
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig6);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig7);
        org.junit.Assert.assertNotNull(applicationInfoManager9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 30 + "'", int13 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertNotNull(instanceInfo20);
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 443 + "'", int21 == 443);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UNKNOWN" + "'", str25, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus27 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus27.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(applicationInfoManager29);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 30 + "'", int33 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig38);
        org.junit.Assert.assertNotNull(instanceInfo39);
        org.junit.Assert.assertNotNull(instanceInfo40);
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + 443 + "'", int41 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str43, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertTrue("'" + actionType44 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType44.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str50, "http://inesserver2.windows.cin.ufpe.br:80/Status");
        org.junit.Assert.assertNotNull(eurekaInstanceConfig53);
    }

    @Test
    public void test04029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04029");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
// flaky:         instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = null; // flaky: instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = null; // flaky: instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setSecureVIPAddress("hi!");
        boolean boolean26 = builder25.isInitialized();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager27 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager27.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig30 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int31 = myDataCenterInstanceConfig30.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo32 = myDataCenterInstanceConfig30.getDataCenterInfo();
        java.lang.String str33 = myDataCenterInstanceConfig30.getNamespace();
        boolean boolean34 = myDataCenterInstanceConfig30.isNonSecurePortEnabled();
        applicationInfoManager27.config = myDataCenterInstanceConfig30;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig36 = applicationInfoManager27.config;
        com.netflix.appinfo.InstanceInfo instanceInfo37 = applicationInfoManager27.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo38 = applicationInfoManager27.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType39 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo38.setActionType(actionType39);
        com.netflix.appinfo.LeaseInfo leaseInfo41 = null;
        instanceInfo38.setLeaseInfo(leaseInfo41);
        java.lang.String str43 = instanceInfo38.getSID();
        instanceInfo38.setSID("unknown");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager46 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo47 = applicationInfoManager46.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig49 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int50 = myDataCenterInstanceConfig49.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo51 = myDataCenterInstanceConfig49.getDataCenterInfo();
        java.lang.String str52 = myDataCenterInstanceConfig49.getNamespace();
        boolean boolean53 = myDataCenterInstanceConfig49.isNonSecurePortEnabled();
        applicationInfoManager46.config = myDataCenterInstanceConfig49;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig55 = applicationInfoManager46.config;
        com.netflix.appinfo.InstanceInfo instanceInfo56 = applicationInfoManager46.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo57 = applicationInfoManager46.instanceInfo;
        java.lang.Boolean boolean58 = instanceInfo57.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus59 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo57.setOverriddenStatus(instanceStatus59);
        instanceInfo38.setStatusWithoutDirty(instanceStatus59);
        com.netflix.appinfo.InstanceInfo.Builder builder62 = builder25.setOverriddenStatus(instanceStatus59);
        com.netflix.appinfo.InstanceInfo.Builder builder64 = builder62.setSecurePort(30);
        com.netflix.appinfo.InstanceInfo.Builder builder66 = builder64.setHostName("/HEALTHCHECK");
        com.netflix.appinfo.InstanceInfo.Builder builder68 = builder66.setCountryId((int) (short) 1);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertNotNull(strSet16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(applicationInfoManager27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 30 + "'", int31 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig36);
        org.junit.Assert.assertNotNull(instanceInfo37);
        org.junit.Assert.assertNotNull(instanceInfo38);
        org.junit.Assert.assertTrue("'" + actionType39 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType39.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "/healthcheck" + "'", str43, "/healthcheck");
        org.junit.Assert.assertNotNull(applicationInfoManager46);
        org.junit.Assert.assertNotNull(instanceInfo47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 30 + "'", int50 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig55);
        org.junit.Assert.assertNotNull(instanceInfo56);
        org.junit.Assert.assertNotNull(instanceInfo57);
        org.junit.Assert.assertEquals("'" + boolean58 + "' != '" + false + "'", boolean58, false);
        org.junit.Assert.assertTrue("'" + instanceStatus59 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus59.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder68);
    }

    @Test
    public void test04030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04030");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder6.setLastDirtyTimestamp((long) (short) 10);
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder13.setSecurePort((int) (short) -1);
        com.netflix.appinfo.InstanceInfo.ActionType actionType16 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder13.setActionType(actionType16);
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder13.setSID("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder13.setPort((int) (short) 0);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setASGName("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder21.setSecureVIPAddress("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo instanceInfo26 = builder25.build();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + actionType16 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType16.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(instanceInfo26);
    }

    @Test
    public void test04031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04031");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder12.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder12.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder12.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo22 = builder21.build();
        java.lang.String str23 = instanceInfo22.getStatusPageUrl();
        com.netflix.appinfo.InstanceInfo instanceInfo24 = new com.netflix.appinfo.InstanceInfo(instanceInfo22);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus25 = instanceInfo22.getOverriddenStatus();
        com.netflix.appinfo.InstanceInfo instanceInfo26 = new com.netflix.appinfo.InstanceInfo(instanceInfo22);
        instanceInfo26.setLastUpdatedTimestamp();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + instanceStatus25 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus25.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
    }

    @Test
    public void test04032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04032");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int11 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        int int12 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        java.lang.String str13 = myDataCenterInstanceConfig10.getStatusPageUrlPath();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig10);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig16 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str17 = myDataCenterInstanceConfig16.getVirtualHostName();
        java.lang.String str18 = myDataCenterInstanceConfig16.getAppGroupName();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig16);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder20.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder20.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder20.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig27 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo28 = myDataCenterInstanceConfig27.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder26.setDataCenterInfo(dataCenterInfo28);
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder26.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder26.setLastDirtyTimestamp((long) (short) 10);
        com.netflix.appinfo.InstanceInfo.Builder builder35 = builder33.setSecurePort((int) (short) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder37 = builder35.setSecureVIPAddressDeser("");
        boolean boolean38 = builder35.isInitialized();
        com.netflix.appinfo.InstanceInfo.Builder builder39 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder41 = builder39.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder43 = builder39.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder45 = builder39.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder47 = builder45.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder49 = builder47.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder51 = builder47.setHomePageUrlForDeser("");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager52 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo53 = applicationInfoManager52.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig55 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int56 = myDataCenterInstanceConfig55.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo57 = myDataCenterInstanceConfig55.getDataCenterInfo();
        java.lang.String str58 = myDataCenterInstanceConfig55.getNamespace();
        boolean boolean59 = myDataCenterInstanceConfig55.isNonSecurePortEnabled();
        applicationInfoManager52.config = myDataCenterInstanceConfig55;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig61 = applicationInfoManager52.config;
        com.netflix.appinfo.InstanceInfo instanceInfo62 = applicationInfoManager52.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo63 = applicationInfoManager52.instanceInfo;
        int int64 = instanceInfo63.getSecurePort();
        boolean boolean65 = instanceInfo63.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo66 = new com.netflix.appinfo.InstanceInfo(instanceInfo63);
        com.netflix.appinfo.InstanceInfo instanceInfo67 = new com.netflix.appinfo.InstanceInfo(instanceInfo63);
        java.lang.String str68 = instanceInfo63.getAppGroupName();
        int int69 = instanceInfo63.getCountryId();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus70 = instanceInfo63.getStatus();
        com.netflix.appinfo.InstanceInfo.Builder builder71 = builder51.setStatus(instanceStatus70);
        com.netflix.appinfo.InstanceInfo.Builder builder72 = builder35.setOverriddenStatus(instanceStatus70);
        applicationInfoManager0.setInstanceStatus(instanceStatus70);
        com.netflix.appinfo.InstanceInfo instanceInfo74 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.LeaseInfo leaseInfo75 = instanceInfo74.getLeaseInfo();
        java.lang.String str76 = instanceInfo74.getAppName();
        java.lang.String str77 = instanceInfo74.getAppGroupName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 30 + "'", int12 == 30);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/Status" + "'", str13, "/Status");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str17, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "unknown" + "'", str18, "unknown");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(dataCenterInfo28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(applicationInfoManager52);
        org.junit.Assert.assertNotNull(instanceInfo53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 30 + "'", int56 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig61);
        org.junit.Assert.assertNotNull(instanceInfo62);
        org.junit.Assert.assertNotNull(instanceInfo63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 443 + "'", int64 == 443);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "UNKNOWN" + "'", str68, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + instanceStatus70 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING + "'", instanceStatus70.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(instanceInfo74);
        org.junit.Assert.assertNotNull(leaseInfo75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "UNKNOWN" + "'", str76, "UNKNOWN");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "UNKNOWN" + "'", str77, "UNKNOWN");
    }

    @Test
    public void test04033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04033");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig1 = applicationInfoManager0.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager2 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        int int6 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager2.config = myDataCenterInstanceConfig4;
        java.lang.String str8 = myDataCenterInstanceConfig4.getIpAddress();
        java.lang.String str9 = myDataCenterInstanceConfig4.getVirtualHostName();
        java.lang.String str11 = myDataCenterInstanceConfig4.getHostName(true);
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig4);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager13 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager13.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig16 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int17 = myDataCenterInstanceConfig16.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig16.getDataCenterInfo();
        java.lang.String str19 = myDataCenterInstanceConfig16.getNamespace();
        boolean boolean20 = myDataCenterInstanceConfig16.isNonSecurePortEnabled();
        applicationInfoManager13.config = myDataCenterInstanceConfig16;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig22 = applicationInfoManager13.config;
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager13.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo24 = applicationInfoManager13.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType25 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo24.setActionType(actionType25);
        com.netflix.appinfo.LeaseInfo leaseInfo27 = null;
        instanceInfo24.setLeaseInfo(leaseInfo27);
        java.util.Set<java.lang.String> strSet29 = instanceInfo24.getHealthCheckUrls();
        java.lang.String str30 = instanceInfo24.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder31 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo24);
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder31.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder36 = builder34.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder36.setSecureVIPAddress("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder36.setStatusPageUrlForDeser("inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.InstanceInfo.Builder builder42 = builder36.setHostName("hi!");
        com.netflix.appinfo.LeaseInfo leaseInfo43 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder44 = builder42.setLeaseInfo(leaseInfo43);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager45 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig47 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int48 = myDataCenterInstanceConfig47.getLeaseRenewalIntervalInSeconds();
        int int49 = myDataCenterInstanceConfig47.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager45.config = myDataCenterInstanceConfig47;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager45;
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus53 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("/Status");
        applicationInfoManager45.setInstanceStatus(instanceStatus53);
        com.netflix.appinfo.InstanceInfo.Builder builder55 = builder44.setStatus(instanceStatus53);
        com.netflix.appinfo.InstanceInfo.Builder builder57 = builder55.setPort((int) (short) 10);
        com.netflix.appinfo.InstanceInfo instanceInfo58 = builder57.getRawInstance();
        applicationInfoManager0.instanceInfo = instanceInfo58;
        int int60 = instanceInfo58.getPort();
        java.lang.String str61 = instanceInfo58.getAppName();
        java.lang.String str62 = instanceInfo58.getVersion();
        java.lang.String str63 = instanceInfo58.getStatusPageUrl();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig1);
        org.junit.Assert.assertNotNull(applicationInfoManager2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 30 + "'", int6 == 30);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "172.20.26.3" + "'", str8, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str9, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str11, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager13);
        org.junit.Assert.assertNotNull(instanceInfo14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig22);
        org.junit.Assert.assertNotNull(instanceInfo23);
        org.junit.Assert.assertNotNull(instanceInfo24);
        org.junit.Assert.assertTrue("'" + actionType25 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType25.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str30, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(applicationInfoManager45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 30 + "'", int48 == 30);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 30 + "'", int49 == 30);
        org.junit.Assert.assertTrue("'" + instanceStatus53 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus53.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(instanceInfo58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "UNKNOWN" + "'", str61, "UNKNOWN");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "unknown" + "'", str62, "unknown");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "http://hi!:80/Status" + "'", str63, "http://hi!:80/Status");
    }

    @Test
    public void test04034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04034");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder23.setStatusPageUrl("inesserver2.windows.cin.ufpe.br:80", "hi!");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager27 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig29 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int30 = myDataCenterInstanceConfig29.getLeaseRenewalIntervalInSeconds();
        int int31 = myDataCenterInstanceConfig29.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager27.config = myDataCenterInstanceConfig29;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager27;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig35 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int36 = myDataCenterInstanceConfig35.getLeaseRenewalIntervalInSeconds();
        int int37 = myDataCenterInstanceConfig35.getLeaseRenewalIntervalInSeconds();
        java.lang.String str38 = myDataCenterInstanceConfig35.getStatusPageUrlPath();
        boolean boolean39 = myDataCenterInstanceConfig35.getSecurePortEnabled();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = myDataCenterInstanceConfig35.getMetadataMap();
        applicationInfoManager27.config = myDataCenterInstanceConfig35;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig44 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int45 = myDataCenterInstanceConfig44.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo46 = myDataCenterInstanceConfig44.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig47 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo46);
        java.lang.String str48 = myDataCenterInstanceConfig47.getAppname();
        java.lang.String str49 = myDataCenterInstanceConfig47.getNamespace();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig50 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager51 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo52 = applicationInfoManager51.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig54 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int55 = myDataCenterInstanceConfig54.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo56 = myDataCenterInstanceConfig54.getDataCenterInfo();
        java.lang.String str57 = myDataCenterInstanceConfig54.getNamespace();
        boolean boolean58 = myDataCenterInstanceConfig54.isNonSecurePortEnabled();
        applicationInfoManager51.config = myDataCenterInstanceConfig54;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig60 = applicationInfoManager51.config;
        com.netflix.appinfo.InstanceInfo instanceInfo61 = applicationInfoManager51.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo62 = applicationInfoManager51.instanceInfo;
        int int63 = instanceInfo62.getSecurePort();
        boolean boolean64 = instanceInfo62.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager65 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig50, instanceInfo62);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager66 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig47, instanceInfo62);
        java.lang.String str67 = instanceInfo62.getHomePageUrl();
        applicationInfoManager27.instanceInfo = instanceInfo62;
        int int69 = instanceInfo62.getPort();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus70 = instanceInfo62.getStatus();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus71 = instanceInfo62.getOverriddenStatus();
        com.netflix.appinfo.InstanceInfo.Builder builder72 = builder23.setOverriddenStatus(instanceStatus71);
        com.netflix.appinfo.InstanceInfo.Builder builder74 = builder23.setSecureVIPAddressDeser("UNKNOWN");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(applicationInfoManager27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 30 + "'", int30 == 30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 30 + "'", int31 == 30);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 30 + "'", int36 == 30);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 30 + "'", int37 == 30);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/Status" + "'", str38, "/Status");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "unknown" + "'", str48, "unknown");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "/Status" + "'", str49, "/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager51);
        org.junit.Assert.assertNotNull(instanceInfo52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig60);
        org.junit.Assert.assertNotNull(instanceInfo61);
        org.junit.Assert.assertNotNull(instanceInfo62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 443 + "'", int63 == 443);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str67, "http://inesserver2.windows.cin.ufpe.br:80/");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 10 + "'", int69 == 10);
        org.junit.Assert.assertTrue("'" + instanceStatus70 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus70.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertTrue("'" + instanceStatus71 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus71.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
    }

    @Test
    public void test04035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04035");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        int int9 = myDataCenterInstanceConfig3.getLeaseExpirationDurationInSeconds();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = myDataCenterInstanceConfig3.getMetadataMap();
        java.lang.String str11 = myDataCenterInstanceConfig3.getHealthCheckUrl();
        java.lang.String str12 = myDataCenterInstanceConfig3.getASGName();
        java.lang.String str13 = myDataCenterInstanceConfig3.getSecureVirtualHostName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager14 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo15 = applicationInfoManager14.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig17 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int18 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig17.getDataCenterInfo();
        java.lang.String str20 = myDataCenterInstanceConfig17.getNamespace();
        boolean boolean21 = myDataCenterInstanceConfig17.isNonSecurePortEnabled();
        applicationInfoManager14.config = myDataCenterInstanceConfig17;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig23 = applicationInfoManager14.config;
        com.netflix.appinfo.InstanceInfo instanceInfo24 = applicationInfoManager14.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager14.instanceInfo;
        int int26 = instanceInfo25.getSecurePort();
        boolean boolean27 = instanceInfo25.isDirty();
        java.lang.String str28 = instanceInfo25.getHostName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType29 = instanceInfo25.getActionType();
        java.lang.String str30 = instanceInfo25.getHostName();
        java.lang.String str31 = instanceInfo25.getASGName();
        int int32 = instanceInfo25.getCountryId();
        java.lang.String str33 = instanceInfo25.getId();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager34 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig3, instanceInfo25);
        boolean boolean35 = instanceInfo25.isDirty();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 90 + "'", int9 == 90);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(applicationInfoManager14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 30 + "'", int18 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig23);
        org.junit.Assert.assertNotNull(instanceInfo24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 443 + "'", int26 == 443);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertTrue("'" + actionType29 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType29.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/healthcheck" + "'", str31, "/healthcheck");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test04036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04036");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        int int3 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        boolean boolean5 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        com.netflix.appinfo.InstanceInfo instanceInfo6 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager7 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo6);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig9.getDataCenterInfo();
        java.lang.String str12 = myDataCenterInstanceConfig9.getNamespace();
        applicationInfoManager7.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig9);
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager7;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig17 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int18 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        int int19 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager15.config = myDataCenterInstanceConfig17;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig21 = applicationInfoManager15.config;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig22 = applicationInfoManager15.config;
        applicationInfoManager15.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager24 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager24.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig27 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int28 = myDataCenterInstanceConfig27.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig27.getDataCenterInfo();
        java.lang.String str30 = myDataCenterInstanceConfig27.getNamespace();
        boolean boolean31 = myDataCenterInstanceConfig27.isNonSecurePortEnabled();
        applicationInfoManager24.config = myDataCenterInstanceConfig27;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig33 = applicationInfoManager24.config;
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager24.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager24.instanceInfo;
        int int36 = instanceInfo35.getSecurePort();
        boolean boolean37 = instanceInfo35.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo38 = new com.netflix.appinfo.InstanceInfo(instanceInfo35);
        com.netflix.appinfo.InstanceInfo instanceInfo39 = new com.netflix.appinfo.InstanceInfo(instanceInfo35);
        java.lang.String str40 = instanceInfo35.getAppGroupName();
        int int41 = instanceInfo35.getCountryId();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus42 = instanceInfo35.getStatus();
        applicationInfoManager15.setInstanceStatus(instanceStatus42);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig45 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str46 = myDataCenterInstanceConfig45.getIpAddress();
        java.lang.String str47 = myDataCenterInstanceConfig45.getASGName();
        boolean boolean48 = myDataCenterInstanceConfig45.getSecurePortEnabled();
        int int49 = myDataCenterInstanceConfig45.getLeaseExpirationDurationInSeconds();
        int int50 = myDataCenterInstanceConfig45.getNonSecurePort();
        java.lang.String str51 = myDataCenterInstanceConfig45.getStatusPageUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo52 = myDataCenterInstanceConfig45.getDataCenterInfo();
        java.lang.String str53 = myDataCenterInstanceConfig45.getIpAddress();
        applicationInfoManager15.config = myDataCenterInstanceConfig45;
        applicationInfoManager7.config = myDataCenterInstanceConfig45;
        com.netflix.appinfo.InstanceInfo instanceInfo56 = applicationInfoManager7.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo57 = applicationInfoManager7.instanceInfo;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/Status" + "'", str4, "/Status");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(applicationInfoManager15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 30 + "'", int18 == 30);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 30 + "'", int19 == 30);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig21);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig22);
        org.junit.Assert.assertNotNull(applicationInfoManager24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 30 + "'", int28 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 443 + "'", int36 == 443);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "UNKNOWN" + "'", str40, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + instanceStatus42 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING + "'", instanceStatus42.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "172.20.26.3" + "'", str46, "172.20.26.3");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 90 + "'", int49 == 90);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 80 + "'", int50 == 80);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(dataCenterInfo52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "172.20.26.3" + "'", str53, "172.20.26.3");
        org.junit.Assert.assertNotNull(instanceInfo56);
        org.junit.Assert.assertNotNull(instanceInfo57);
    }

    @Test
    public void test04037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04037");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/healthcheck");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = myDataCenterInstanceConfig1.getMetadataMap();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager3 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo4 = applicationInfoManager3.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig6 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int7 = myDataCenterInstanceConfig6.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig6.getDataCenterInfo();
        java.lang.String str9 = myDataCenterInstanceConfig6.getNamespace();
        boolean boolean10 = myDataCenterInstanceConfig6.isNonSecurePortEnabled();
        applicationInfoManager3.config = myDataCenterInstanceConfig6;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig12 = applicationInfoManager3.config;
        com.netflix.appinfo.InstanceInfo instanceInfo13 = applicationInfoManager3.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager3.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType15 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo14.setActionType(actionType15);
        com.netflix.appinfo.LeaseInfo leaseInfo17 = null;
        instanceInfo14.setLeaseInfo(leaseInfo17);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager19 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager19.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig22 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int23 = myDataCenterInstanceConfig22.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo24 = myDataCenterInstanceConfig22.getDataCenterInfo();
        java.lang.String str25 = myDataCenterInstanceConfig22.getNamespace();
        boolean boolean26 = myDataCenterInstanceConfig22.isNonSecurePortEnabled();
        applicationInfoManager19.config = myDataCenterInstanceConfig22;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig28 = applicationInfoManager19.config;
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager19.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager19.instanceInfo;
        int int31 = instanceInfo30.getSecurePort();
        boolean boolean32 = instanceInfo30.isDirty();
        java.lang.String str33 = instanceInfo30.getHostName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus34 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        instanceInfo30.setStatus(instanceStatus34);
        com.netflix.appinfo.InstanceInfo.PortType portType36 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean37 = instanceInfo30.isPortEnabled(portType36);
        boolean boolean38 = instanceInfo14.isPortEnabled(portType36);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager39 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo14);
        java.lang.String str40 = myDataCenterInstanceConfig1.getSecureHealthCheckUrl();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(applicationInfoManager3);
        org.junit.Assert.assertNotNull(instanceInfo4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 30 + "'", int7 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig12);
        org.junit.Assert.assertNotNull(instanceInfo13);
        org.junit.Assert.assertNotNull(instanceInfo14);
        org.junit.Assert.assertTrue("'" + actionType15 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType15.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager19);
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 30 + "'", int23 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig28);
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 443 + "'", int31 == 443);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str33, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + instanceStatus34 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus34.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertTrue("'" + portType36 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType36.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(str40);
    }

    @Test
    public void test04038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04038");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        java.lang.String str6 = myDataCenterInstanceConfig2.getHealthCheckUrlPath();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager7 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo8 = applicationInfoManager7.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int11 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo12 = myDataCenterInstanceConfig10.getDataCenterInfo();
        java.lang.String str13 = myDataCenterInstanceConfig10.getNamespace();
        boolean boolean14 = myDataCenterInstanceConfig10.isNonSecurePortEnabled();
        applicationInfoManager7.config = myDataCenterInstanceConfig10;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig16 = applicationInfoManager7.config;
        com.netflix.appinfo.InstanceInfo instanceInfo17 = applicationInfoManager7.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager7.instanceInfo;
        int int19 = instanceInfo18.getSecurePort();
        int int20 = instanceInfo18.getPort();
        int int21 = instanceInfo18.getCountryId();
        boolean boolean22 = instanceInfo18.isDirty();
        int int23 = instanceInfo18.getPort();
        java.lang.String str24 = instanceInfo18.getStatusPageUrl();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager25 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig2, instanceInfo18);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager26 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig28 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int29 = myDataCenterInstanceConfig28.getLeaseRenewalIntervalInSeconds();
        int int30 = myDataCenterInstanceConfig28.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager26.config = myDataCenterInstanceConfig28;
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager26.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig34 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int35 = myDataCenterInstanceConfig34.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo36 = myDataCenterInstanceConfig34.getDataCenterInfo();
        java.lang.String str37 = myDataCenterInstanceConfig34.getHealthCheckUrl();
        int int38 = myDataCenterInstanceConfig34.getLeaseExpirationDurationInSeconds();
        applicationInfoManager26.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig34);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig41 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int42 = myDataCenterInstanceConfig41.getLeaseRenewalIntervalInSeconds();
        int int43 = myDataCenterInstanceConfig41.getLeaseRenewalIntervalInSeconds();
        java.lang.String str44 = myDataCenterInstanceConfig41.getStatusPageUrlPath();
        boolean boolean45 = myDataCenterInstanceConfig41.getSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager46 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo47 = applicationInfoManager46.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig49 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int50 = myDataCenterInstanceConfig49.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo51 = myDataCenterInstanceConfig49.getDataCenterInfo();
        java.lang.String str52 = myDataCenterInstanceConfig49.getNamespace();
        boolean boolean53 = myDataCenterInstanceConfig49.isNonSecurePortEnabled();
        applicationInfoManager46.config = myDataCenterInstanceConfig49;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig55 = applicationInfoManager46.config;
        com.netflix.appinfo.InstanceInfo instanceInfo56 = applicationInfoManager46.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo57 = applicationInfoManager46.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType58 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo57.setActionType(actionType58);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager60 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo61 = applicationInfoManager60.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig63 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int64 = myDataCenterInstanceConfig63.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo65 = myDataCenterInstanceConfig63.getDataCenterInfo();
        java.lang.String str66 = myDataCenterInstanceConfig63.getNamespace();
        boolean boolean67 = myDataCenterInstanceConfig63.isNonSecurePortEnabled();
        applicationInfoManager60.config = myDataCenterInstanceConfig63;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig69 = applicationInfoManager60.config;
        com.netflix.appinfo.InstanceInfo instanceInfo70 = applicationInfoManager60.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo71 = applicationInfoManager60.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType72 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo71.setActionType(actionType72);
        instanceInfo57.setActionType(actionType72);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager75 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig41, instanceInfo57);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus77 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("inesserver2.windows.cin.ufpe.br:80");
        instanceInfo57.setOverriddenStatus(instanceStatus77);
        applicationInfoManager26.setInstanceStatus(instanceStatus77);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager80 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig82 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int83 = myDataCenterInstanceConfig82.getLeaseRenewalIntervalInSeconds();
        int int84 = myDataCenterInstanceConfig82.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager80.config = myDataCenterInstanceConfig82;
        java.lang.String str86 = myDataCenterInstanceConfig82.getHealthCheckUrlPath();
        java.lang.String str87 = myDataCenterInstanceConfig82.getNamespace();
        java.util.Map<java.lang.String, java.lang.String> strMap88 = myDataCenterInstanceConfig82.getMetadataMap();
        applicationInfoManager26.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig82);
        com.netflix.appinfo.InstanceInfo instanceInfo90 = applicationInfoManager26.instanceInfo;
        int int91 = instanceInfo90.getSecurePort();
        applicationInfoManager25.instanceInfo = instanceInfo90;
        com.netflix.appinfo.InstanceInfo instanceInfo93 = applicationInfoManager25.getInfo();
        java.util.Map<java.lang.String, java.lang.String> strMap94 = instanceInfo93.getMetadata();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "/healthcheck" + "'", str6, "/healthcheck");
        org.junit.Assert.assertNotNull(applicationInfoManager7);
        org.junit.Assert.assertNotNull(instanceInfo8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig16);
        org.junit.Assert.assertNotNull(instanceInfo17);
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 443 + "'", int19 == 443);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 80 + "'", int20 == 80);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 80 + "'", int23 == 80);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str24, "http://inesserver2.windows.cin.ufpe.br:80/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 30 + "'", int29 == 30);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 30 + "'", int30 == 30);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 30 + "'", int35 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 90 + "'", int38 == 90);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 30 + "'", int43 == 30);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "/Status" + "'", str44, "/Status");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager46);
        org.junit.Assert.assertNotNull(instanceInfo47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 30 + "'", int50 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig55);
        org.junit.Assert.assertNotNull(instanceInfo56);
        org.junit.Assert.assertNotNull(instanceInfo57);
        org.junit.Assert.assertTrue("'" + actionType58 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType58.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager60);
        org.junit.Assert.assertNotNull(instanceInfo61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 30 + "'", int64 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig69);
        org.junit.Assert.assertNotNull(instanceInfo70);
        org.junit.Assert.assertNotNull(instanceInfo71);
        org.junit.Assert.assertTrue("'" + actionType72 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType72.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + instanceStatus77 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus77.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(applicationInfoManager80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 30 + "'", int83 == 30);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 30 + "'", int84 == 30);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "/healthcheck" + "'", str86, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(instanceInfo90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 443 + "'", int91 == 443);
        org.junit.Assert.assertNotNull(instanceInfo93);
        org.junit.Assert.assertNotNull(strMap94);
    }

    @Test
    public void test04039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04039");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig1 = applicationInfoManager0.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager2 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.InstanceInfo instanceInfo3 = applicationInfoManager2.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig5 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int6 = myDataCenterInstanceConfig5.getLeaseRenewalIntervalInSeconds();
        java.lang.String str7 = myDataCenterInstanceConfig5.getVirtualHostName();
        java.lang.String str8 = myDataCenterInstanceConfig5.getASGName();
        boolean boolean9 = myDataCenterInstanceConfig5.isNonSecurePortEnabled();
        applicationInfoManager2.config = myDataCenterInstanceConfig5;
        java.lang.String str11 = myDataCenterInstanceConfig5.getAppname();
        java.lang.String str12 = myDataCenterInstanceConfig5.getHomePageUrl();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig5);
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig14 = applicationInfoManager0.config;
        applicationInfoManager0.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig16 = applicationInfoManager0.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager17 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int20 = myDataCenterInstanceConfig19.getLeaseRenewalIntervalInSeconds();
        int int21 = myDataCenterInstanceConfig19.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager17.config = myDataCenterInstanceConfig19;
        java.lang.String str23 = myDataCenterInstanceConfig19.getHealthCheckUrlPath();
        java.lang.String str24 = myDataCenterInstanceConfig19.getHomePageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = myDataCenterInstanceConfig19.getMetadataMap();
        applicationInfoManager0.config = myDataCenterInstanceConfig19;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager27 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager27.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig30 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int31 = myDataCenterInstanceConfig30.getLeaseRenewalIntervalInSeconds();
        java.lang.String str32 = myDataCenterInstanceConfig30.getVirtualHostName();
        java.lang.String str33 = myDataCenterInstanceConfig30.getASGName();
        boolean boolean34 = myDataCenterInstanceConfig30.isNonSecurePortEnabled();
        applicationInfoManager27.config = myDataCenterInstanceConfig30;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager27;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager37 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo38 = applicationInfoManager37.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig40 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int41 = myDataCenterInstanceConfig40.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo42 = myDataCenterInstanceConfig40.getDataCenterInfo();
        java.lang.String str43 = myDataCenterInstanceConfig40.getNamespace();
        boolean boolean44 = myDataCenterInstanceConfig40.isNonSecurePortEnabled();
        applicationInfoManager37.config = myDataCenterInstanceConfig40;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig46 = applicationInfoManager37.config;
        com.netflix.appinfo.InstanceInfo instanceInfo47 = applicationInfoManager37.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo48 = applicationInfoManager37.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType49 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo48.setActionType(actionType49);
        com.netflix.appinfo.LeaseInfo leaseInfo51 = null;
        instanceInfo48.setLeaseInfo(leaseInfo51);
        java.util.Set<java.lang.String> strSet53 = instanceInfo48.getHealthCheckUrls();
        java.lang.String str54 = instanceInfo48.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder55 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo48);
        com.netflix.appinfo.InstanceInfo.Builder builder57 = builder55.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder60 = builder55.setHealthCheckUrlsForDeser("", "hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder63 = builder55.setStatusPageUrl("default", "");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager64 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo65 = applicationInfoManager64.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig67 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int68 = myDataCenterInstanceConfig67.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo69 = myDataCenterInstanceConfig67.getDataCenterInfo();
        java.lang.String str70 = myDataCenterInstanceConfig67.getNamespace();
        boolean boolean71 = myDataCenterInstanceConfig67.isNonSecurePortEnabled();
        applicationInfoManager64.config = myDataCenterInstanceConfig67;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig73 = applicationInfoManager64.config;
        com.netflix.appinfo.InstanceInfo instanceInfo74 = applicationInfoManager64.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo75 = applicationInfoManager64.instanceInfo;
        int int76 = instanceInfo75.getSecurePort();
        com.netflix.appinfo.InstanceInfo.PortType portType77 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean78 = instanceInfo75.isPortEnabled(portType77);
        com.netflix.appinfo.InstanceInfo.Builder builder80 = builder55.enablePort(portType77, true);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig82 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int83 = myDataCenterInstanceConfig82.getLeaseRenewalIntervalInSeconds();
        boolean boolean84 = myDataCenterInstanceConfig82.isNonSecurePortEnabled();
        int int85 = myDataCenterInstanceConfig82.getLeaseRenewalIntervalInSeconds();
        int int86 = myDataCenterInstanceConfig82.getLeaseRenewalIntervalInSeconds();
        java.lang.String str87 = myDataCenterInstanceConfig82.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap88 = myDataCenterInstanceConfig82.getMetadataMap();
        com.netflix.appinfo.InstanceInfo.Builder builder89 = builder55.setMetadata(strMap88);
        applicationInfoManager27.registerAppMetadata(strMap88);
        applicationInfoManager0.registerAppMetadata(strMap88);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig1);
        org.junit.Assert.assertNotNull(applicationInfoManager2);
        org.junit.Assert.assertNotNull(instanceInfo3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 30 + "'", int6 == 30);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str7, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "unknown" + "'", str11, "unknown");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig14);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig16);
        org.junit.Assert.assertNotNull(applicationInfoManager17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 30 + "'", int20 == 30);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 30 + "'", int21 == 30);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "/healthcheck" + "'", str23, "/healthcheck");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(applicationInfoManager27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 30 + "'", int31 == 30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str32, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(applicationInfoManager37);
        org.junit.Assert.assertNotNull(instanceInfo38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 30 + "'", int41 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig46);
        org.junit.Assert.assertNotNull(instanceInfo47);
        org.junit.Assert.assertNotNull(instanceInfo48);
        org.junit.Assert.assertTrue("'" + actionType49 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType49.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str54, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(applicationInfoManager64);
        org.junit.Assert.assertNotNull(instanceInfo65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 30 + "'", int68 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig73);
        org.junit.Assert.assertNotNull(instanceInfo74);
        org.junit.Assert.assertNotNull(instanceInfo75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 443 + "'", int76 == 443);
        org.junit.Assert.assertTrue("'" + portType77 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType77.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 30 + "'", int83 == 30);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 30 + "'", int85 == 30);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 30 + "'", int86 == 30);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(builder89);
    }

    @Test
    public void test04040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04040");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig1.getDataCenterInfo();
        int int4 = myDataCenterInstanceConfig1.getSecurePort();
        java.lang.String str6 = myDataCenterInstanceConfig1.getHostName(true);
        boolean boolean7 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        java.lang.String str8 = myDataCenterInstanceConfig1.getHomePageUrlPath();
        boolean boolean9 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 443 + "'", int4 == 443);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str6, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/" + "'", str8, "/");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test04041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04041");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder20.add("/healthcheck", "UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setSecureVIPAddress("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder23.setCountryId(0);
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder23.setSID("/");
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder23.setSecurePort((int) '#');
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
    }

    @Test
    public void test04042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04042");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo instanceInfo12 = builder11.getRawInstance();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager13 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig15 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int16 = myDataCenterInstanceConfig15.getLeaseRenewalIntervalInSeconds();
        int int17 = myDataCenterInstanceConfig15.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager13.config = myDataCenterInstanceConfig15;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager13;
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus21 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("/Status");
        applicationInfoManager13.setInstanceStatus(instanceStatus21);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder11.setOverriddenStatus(instanceStatus21);
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setPort((int) (byte) 100);
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder23.setHomePageUrlForDeser("na");
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder27.setPort((int) ' ');
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder29.setPort((int) (short) -1);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertNotNull(applicationInfoManager13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 30 + "'", int16 == 30);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
        org.junit.Assert.assertTrue("'" + instanceStatus21 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus21.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
    }

    @Test
    public void test04043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04043");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isInstanceEnabledOnit();
        java.lang.String str4 = myDataCenterInstanceConfig1.getAppGroupName();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "unknown" + "'", str4, "unknown");
    }

    @Test
    public void test04044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04044");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder2.setHealthCheckUrlsForDeser("unknown", "172.20.26.3");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        boolean boolean13 = myDataCenterInstanceConfig12.getSecurePortEnabled();
        java.lang.String str14 = myDataCenterInstanceConfig12.getHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo15 = myDataCenterInstanceConfig12.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder10.setDataCenterInfo(dataCenterInfo15);
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder16.setSID("unknown");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager19 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager19.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig22 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int23 = myDataCenterInstanceConfig22.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo24 = myDataCenterInstanceConfig22.getDataCenterInfo();
        java.lang.String str25 = myDataCenterInstanceConfig22.getNamespace();
        boolean boolean26 = myDataCenterInstanceConfig22.isNonSecurePortEnabled();
        applicationInfoManager19.config = myDataCenterInstanceConfig22;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig28 = applicationInfoManager19.config;
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager19.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager19.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType31 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo30.setActionType(actionType31);
        com.netflix.appinfo.LeaseInfo leaseInfo33 = null;
        instanceInfo30.setLeaseInfo(leaseInfo33);
        java.util.Set<java.lang.String> strSet35 = instanceInfo30.getHealthCheckUrls();
        java.lang.String str36 = instanceInfo30.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder37 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo30);
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder37.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder42 = builder37.setVIPAddressDeser("hi!");
        com.netflix.appinfo.LeaseInfo leaseInfo43 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder44 = builder37.setLeaseInfo(leaseInfo43);
        com.netflix.appinfo.InstanceInfo.Builder builder46 = builder44.setHomePageUrlForDeser("/");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager47 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo48 = applicationInfoManager47.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig50 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int51 = myDataCenterInstanceConfig50.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo52 = myDataCenterInstanceConfig50.getDataCenterInfo();
        java.lang.String str53 = myDataCenterInstanceConfig50.getNamespace();
        boolean boolean54 = myDataCenterInstanceConfig50.isNonSecurePortEnabled();
        applicationInfoManager47.config = myDataCenterInstanceConfig50;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig56 = applicationInfoManager47.config;
        com.netflix.appinfo.InstanceInfo instanceInfo57 = applicationInfoManager47.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo58 = applicationInfoManager47.instanceInfo;
        java.lang.Boolean boolean59 = instanceInfo58.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus60 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo58.setOverriddenStatus(instanceStatus60);
        instanceInfo58.setLastDirtyTimestamp((java.lang.Long) (-1L));
        com.netflix.appinfo.DataCenterInfo dataCenterInfo64 = instanceInfo58.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder65 = builder46.setDataCenterInfo(dataCenterInfo64);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager66 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo67 = applicationInfoManager66.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig69 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int70 = myDataCenterInstanceConfig69.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo71 = myDataCenterInstanceConfig69.getDataCenterInfo();
        java.lang.String str72 = myDataCenterInstanceConfig69.getNamespace();
        boolean boolean73 = myDataCenterInstanceConfig69.isNonSecurePortEnabled();
        applicationInfoManager66.config = myDataCenterInstanceConfig69;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig75 = applicationInfoManager66.config;
        com.netflix.appinfo.InstanceInfo instanceInfo76 = applicationInfoManager66.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo77 = applicationInfoManager66.instanceInfo;
        int int78 = instanceInfo77.getSecurePort();
        boolean boolean79 = instanceInfo77.isDirty();
        java.lang.String str80 = instanceInfo77.getHostName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus81 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        instanceInfo77.setStatus(instanceStatus81);
        com.netflix.appinfo.InstanceInfo.PortType portType83 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean84 = instanceInfo77.isPortEnabled(portType83);
        com.netflix.appinfo.InstanceInfo.Builder builder86 = builder46.enablePort(portType83, true);
        com.netflix.appinfo.InstanceInfo.Builder builder88 = builder18.enablePort(portType83, true);
        com.netflix.appinfo.InstanceInfo.Builder builder90 = builder88.setIPAddr("http://inesserver2.windows.cin.ufpe.br:80:80/Status");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(dataCenterInfo15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(applicationInfoManager19);
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 30 + "'", int23 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig28);
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertTrue("'" + actionType31 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType31.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str36, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(applicationInfoManager47);
        org.junit.Assert.assertNotNull(instanceInfo48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 30 + "'", int51 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig56);
        org.junit.Assert.assertNotNull(instanceInfo57);
        org.junit.Assert.assertNotNull(instanceInfo58);
        org.junit.Assert.assertEquals("'" + boolean59 + "' != '" + false + "'", boolean59, false);
        org.junit.Assert.assertTrue("'" + instanceStatus60 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus60.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(dataCenterInfo64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(applicationInfoManager66);
        org.junit.Assert.assertNotNull(instanceInfo67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 30 + "'", int70 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig75);
        org.junit.Assert.assertNotNull(instanceInfo76);
        org.junit.Assert.assertNotNull(instanceInfo77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 35 + "'", int78 == 35);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str80, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + instanceStatus81 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus81.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertTrue("'" + portType83 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType83.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder90);
    }

    @Test
    public void test04045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04045");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        boolean boolean13 = instanceInfo11.isDirty();
        java.lang.String str14 = instanceInfo11.getHostName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType15 = instanceInfo11.getActionType();
        java.lang.String str16 = instanceInfo11.getHostName();
        java.lang.String str17 = instanceInfo11.getASGName();
        int int18 = instanceInfo11.getCountryId();
        java.lang.String str19 = instanceInfo11.getId();
        java.util.Set<java.lang.String> strSet20 = instanceInfo11.getHealthCheckUrls();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager21 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo22 = applicationInfoManager21.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int25 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig24.getDataCenterInfo();
        java.lang.String str27 = myDataCenterInstanceConfig24.getNamespace();
        boolean boolean28 = myDataCenterInstanceConfig24.isNonSecurePortEnabled();
        applicationInfoManager21.config = myDataCenterInstanceConfig24;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig30 = applicationInfoManager21.config;
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager21.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager21.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType33 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo32.setActionType(actionType33);
        com.netflix.appinfo.LeaseInfo leaseInfo35 = null;
        instanceInfo32.setLeaseInfo(leaseInfo35);
        java.lang.String str37 = instanceInfo32.getSID();
        com.netflix.appinfo.InstanceInfo instanceInfo38 = new com.netflix.appinfo.InstanceInfo(instanceInfo32);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager39 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo40 = applicationInfoManager39.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig42 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int43 = myDataCenterInstanceConfig42.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo44 = myDataCenterInstanceConfig42.getDataCenterInfo();
        java.lang.String str45 = myDataCenterInstanceConfig42.getNamespace();
        boolean boolean46 = myDataCenterInstanceConfig42.isNonSecurePortEnabled();
        applicationInfoManager39.config = myDataCenterInstanceConfig42;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig48 = applicationInfoManager39.config;
        com.netflix.appinfo.InstanceInfo instanceInfo49 = applicationInfoManager39.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo50 = applicationInfoManager39.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType51 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo50.setActionType(actionType51);
        com.netflix.appinfo.LeaseInfo leaseInfo53 = null;
        instanceInfo50.setLeaseInfo(leaseInfo53);
        java.util.Set<java.lang.String> strSet55 = instanceInfo50.getHealthCheckUrls();
        java.lang.String str56 = instanceInfo50.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder57 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo50);
        com.netflix.appinfo.InstanceInfo.Builder builder60 = builder57.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder62 = builder57.setVIPAddressDeser("hi!");
        com.netflix.appinfo.LeaseInfo leaseInfo63 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder64 = builder57.setLeaseInfo(leaseInfo63);
        com.netflix.appinfo.InstanceInfo.PortType portType65 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder67 = builder57.enablePort(portType65, false);
        boolean boolean68 = instanceInfo32.isPortEnabled(portType65);
        instanceInfo32.setIsCoordinatingDiscoveryServer();
        boolean boolean70 = instanceInfo11.equals((java.lang.Object) instanceInfo32);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 35 + "'", int12 == 35);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str14, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + actionType15 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType15.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str16, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str19, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(applicationInfoManager21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 30 + "'", int25 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertTrue("'" + actionType33 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType33.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "/" + "'", str37, "/");
        org.junit.Assert.assertNotNull(applicationInfoManager39);
        org.junit.Assert.assertNotNull(instanceInfo40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 30 + "'", int43 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig48);
        org.junit.Assert.assertNotNull(instanceInfo49);
        org.junit.Assert.assertNotNull(instanceInfo50);
        org.junit.Assert.assertTrue("'" + actionType51 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType51.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str56, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + portType65 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType65.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test04046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04046");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder8.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder8.setCountryId((-1));
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder8.setCountryId((-1));
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder16.setHomePageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setVIPAddressDeser("http://inesserver2.windows.cin.ufpe.br:10/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder20.setNamespace("http://inesserver2.windows.cin.ufpe.br:10/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder20.setAppGroupName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test04047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04047");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder8.setHomePageUrlForDeser("");
        com.netflix.appinfo.LeaseInfo leaseInfo13 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setLeaseInfo(leaseInfo13);
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder12.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder17.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder17.setCountryId(7002);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setSecurePort((int) (byte) 10);
        com.netflix.appinfo.InstanceInfo.PortType portType24 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder21.enablePort(portType24, false);
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder16.enablePort(portType24, true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder16.setDataCenterInfo(dataCenterInfo29);
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder16.setHostName("http://hi!:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder16.setPort((int) (short) -1);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + portType24 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType24.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
    }

    @Test
    public void test04048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04048");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        boolean boolean13 = instanceInfo11.isDirty();
        java.lang.String str14 = instanceInfo11.getHostName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType15 = instanceInfo11.getActionType();
        java.lang.String str16 = instanceInfo11.getHostName();
        java.lang.String str17 = instanceInfo11.getASGName();
        int int18 = instanceInfo11.getCountryId();
        java.lang.String str19 = instanceInfo11.getId();
        java.util.Set<java.lang.String> strSet20 = instanceInfo11.getHealthCheckUrls();
        com.netflix.appinfo.InstanceInfo.Builder builder21 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder21.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder21.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder27.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder29.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder29.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder35 = builder29.setCountryId((-1));
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager36 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo37 = applicationInfoManager36.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig39 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int40 = myDataCenterInstanceConfig39.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo41 = myDataCenterInstanceConfig39.getDataCenterInfo();
        java.lang.String str42 = myDataCenterInstanceConfig39.getNamespace();
        boolean boolean43 = myDataCenterInstanceConfig39.isNonSecurePortEnabled();
        applicationInfoManager36.config = myDataCenterInstanceConfig39;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig45 = applicationInfoManager36.config;
        com.netflix.appinfo.InstanceInfo instanceInfo46 = applicationInfoManager36.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo47 = applicationInfoManager36.instanceInfo;
        java.lang.Boolean boolean48 = instanceInfo47.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus49 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo47.setOverriddenStatus(instanceStatus49);
        int int51 = instanceInfo47.getSecurePort();
        java.lang.String str52 = instanceInfo47.getHostName();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = instanceInfo47.getMetadata();
        instanceInfo47.setIsDirty(false);
        com.netflix.appinfo.LeaseInfo leaseInfo56 = instanceInfo47.getLeaseInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder57 = builder29.setLeaseInfo(leaseInfo56);
        instanceInfo11.setLeaseInfo(leaseInfo56);
        long long59 = instanceInfo11.getLastUpdatedTimestamp();
        instanceInfo11.setLastDirtyTimestamp((java.lang.Long) 1636106018914L);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str14, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertNull(actionType15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str16, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNull(str17);
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str19, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(applicationInfoManager36);
        org.junit.Assert.assertNotNull(instanceInfo37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 30 + "'", int40 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig45);
        org.junit.Assert.assertNotNull(instanceInfo46);
        org.junit.Assert.assertNotNull(instanceInfo47);
// flaky:         org.junit.Assert.assertEquals("'" + boolean48 + "' != '" + false + "'", boolean48, false);
        org.junit.Assert.assertTrue("'" + instanceStatus49 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus49.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + 443 + "'", int51 == 443);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str52, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(strMap53);
// flaky:         org.junit.Assert.assertNotNull(leaseInfo56);
        org.junit.Assert.assertNotNull(builder57);
// flaky:         org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1636106119910L + "'", long59 == 1636106119910L);
    }

    @Test
    public void test04049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04049");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder7.setIPAddr("");
        com.netflix.appinfo.InstanceInfo instanceInfo10 = builder7.getRawInstance();
        int int11 = instanceInfo10.getSecurePort();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = instanceInfo10.getMetadata();
        instanceInfo10.setLastDirtyTimestamp((java.lang.Long) 1636105974859L);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo16 = applicationInfoManager15.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig18 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int19 = myDataCenterInstanceConfig18.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo20 = myDataCenterInstanceConfig18.getDataCenterInfo();
        java.lang.String str21 = myDataCenterInstanceConfig18.getNamespace();
        boolean boolean22 = myDataCenterInstanceConfig18.isNonSecurePortEnabled();
        applicationInfoManager15.config = myDataCenterInstanceConfig18;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig24 = applicationInfoManager15.config;
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager15.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo26 = applicationInfoManager15.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType27 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo26.setActionType(actionType27);
        com.netflix.appinfo.LeaseInfo leaseInfo29 = null;
        instanceInfo26.setLeaseInfo(leaseInfo29);
        java.util.Set<java.lang.String> strSet31 = instanceInfo26.getHealthCheckUrls();
        java.lang.String str32 = instanceInfo26.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder33 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo26);
        com.netflix.appinfo.InstanceInfo.Builder builder35 = builder33.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder35.add("/healthcheck", "UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder38.setSecureVIPAddress("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder42 = builder38.setCountryId(0);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager43 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo44 = applicationInfoManager43.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig46 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int47 = myDataCenterInstanceConfig46.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo48 = myDataCenterInstanceConfig46.getDataCenterInfo();
        java.lang.String str49 = myDataCenterInstanceConfig46.getNamespace();
        boolean boolean50 = myDataCenterInstanceConfig46.isNonSecurePortEnabled();
        applicationInfoManager43.config = myDataCenterInstanceConfig46;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig52 = applicationInfoManager43.config;
        com.netflix.appinfo.InstanceInfo instanceInfo53 = applicationInfoManager43.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo54 = applicationInfoManager43.instanceInfo;
        int int55 = instanceInfo54.getSecurePort();
        boolean boolean56 = instanceInfo54.isDirty();
        boolean boolean57 = instanceInfo54.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager58 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo59 = applicationInfoManager58.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig61 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int62 = myDataCenterInstanceConfig61.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo63 = myDataCenterInstanceConfig61.getDataCenterInfo();
        java.lang.String str64 = myDataCenterInstanceConfig61.getNamespace();
        boolean boolean65 = myDataCenterInstanceConfig61.isNonSecurePortEnabled();
        applicationInfoManager58.config = myDataCenterInstanceConfig61;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig67 = applicationInfoManager58.config;
        com.netflix.appinfo.InstanceInfo instanceInfo68 = applicationInfoManager58.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo69 = applicationInfoManager58.instanceInfo;
        int int70 = instanceInfo69.getSecurePort();
        boolean boolean71 = instanceInfo69.isDirty();
        java.lang.String str72 = instanceInfo69.getHostName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus73 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        instanceInfo69.setStatus(instanceStatus73);
        com.netflix.appinfo.InstanceInfo.PortType portType75 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean76 = instanceInfo69.isPortEnabled(portType75);
        boolean boolean77 = instanceInfo54.isPortEnabled(portType75);
        com.netflix.appinfo.InstanceInfo.Builder builder79 = builder42.enablePort(portType75, false);
        boolean boolean80 = instanceInfo10.isPortEnabled(portType75);
        com.netflix.appinfo.InstanceInfo.ActionType actionType81 = instanceInfo10.getActionType();
        int int82 = instanceInfo10.getPort();
        java.lang.String str83 = instanceInfo10.getVersion();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7002 + "'", int11 == 7002);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(applicationInfoManager15);
        org.junit.Assert.assertNotNull(instanceInfo16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 30 + "'", int19 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertTrue("'" + actionType27 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType27.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str32, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(applicationInfoManager43);
        org.junit.Assert.assertNotNull(instanceInfo44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 30 + "'", int47 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig52);
        org.junit.Assert.assertNotNull(instanceInfo53);
        org.junit.Assert.assertNotNull(instanceInfo54);
// flaky:         org.junit.Assert.assertTrue("'" + int55 + "' != '" + 443 + "'", int55 == 443);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager58);
        org.junit.Assert.assertNotNull(instanceInfo59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 30 + "'", int62 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig67);
        org.junit.Assert.assertNotNull(instanceInfo68);
        org.junit.Assert.assertNotNull(instanceInfo69);
// flaky:         org.junit.Assert.assertTrue("'" + int70 + "' != '" + 443 + "'", int70 == 443);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str72, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + instanceStatus73 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus73.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertTrue("'" + portType75 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType75.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
// flaky:         org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(actionType81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 7001 + "'", int82 == 7001);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "unknown" + "'", str83, "unknown");
    }

    @Test
    public void test04050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04050");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo instanceInfo12 = builder11.getRawInstance();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager13 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig15 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int16 = myDataCenterInstanceConfig15.getLeaseRenewalIntervalInSeconds();
        int int17 = myDataCenterInstanceConfig15.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager13.config = myDataCenterInstanceConfig15;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager13;
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus21 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("/Status");
        applicationInfoManager13.setInstanceStatus(instanceStatus21);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder11.setOverriddenStatus(instanceStatus21);
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setPort((int) (byte) 100);
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder23.setAppGroupName("eureka.");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertNotNull(applicationInfoManager13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 30 + "'", int16 == 30);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
        org.junit.Assert.assertTrue("'" + instanceStatus21 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus21.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
    }

    @Test
    public void test04051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04051");
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig0 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager1 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig4.getDataCenterInfo();
        java.lang.String str7 = myDataCenterInstanceConfig4.getNamespace();
        boolean boolean8 = myDataCenterInstanceConfig4.isNonSecurePortEnabled();
        applicationInfoManager1.config = myDataCenterInstanceConfig4;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig10 = applicationInfoManager1.config;
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager1.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager1.instanceInfo;
        int int13 = instanceInfo12.getSecurePort();
        boolean boolean14 = instanceInfo12.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig0, instanceInfo12);
        com.netflix.appinfo.InstanceInfo.Builder builder16 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder16.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder16.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder16.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig23 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo24 = myDataCenterInstanceConfig23.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder22.setDataCenterInfo(dataCenterInfo24);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig26 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo27 = myDataCenterInstanceConfig26.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder22.setDataCenterInfo(dataCenterInfo27);
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder28.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder28.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder35 = builder28.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo instanceInfo36 = builder28.build();
        com.netflix.appinfo.InstanceInfo instanceInfo37 = builder28.getRawInstance();
        applicationInfoManager15.instanceInfo = instanceInfo37;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig40 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int41 = myDataCenterInstanceConfig40.getLeaseRenewalIntervalInSeconds();
        int int42 = myDataCenterInstanceConfig40.getLeaseRenewalIntervalInSeconds();
        java.lang.String str43 = myDataCenterInstanceConfig40.getStatusPageUrlPath();
        boolean boolean44 = myDataCenterInstanceConfig40.getSecurePortEnabled();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = myDataCenterInstanceConfig40.getMetadataMap();
        boolean boolean46 = myDataCenterInstanceConfig40.isInstanceEnabledOnit();
        int int47 = myDataCenterInstanceConfig40.getSecurePort();
        int int48 = myDataCenterInstanceConfig40.getLeaseExpirationDurationInSeconds();
        boolean boolean49 = myDataCenterInstanceConfig40.isInstanceEnabledOnit();
        int int50 = myDataCenterInstanceConfig40.getNonSecurePort();
        applicationInfoManager15.config = myDataCenterInstanceConfig40;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig52 = applicationInfoManager15.config;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig54 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int55 = myDataCenterInstanceConfig54.getLeaseRenewalIntervalInSeconds();
        boolean boolean56 = myDataCenterInstanceConfig54.isNonSecurePortEnabled();
        java.lang.String str57 = myDataCenterInstanceConfig54.getHealthCheckUrlPath();
        com.netflix.appinfo.InstanceInfo instanceInfo58 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager59 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig54, instanceInfo58);
        boolean boolean60 = myDataCenterInstanceConfig54.getSecurePortEnabled();
        java.util.Map<java.lang.String, java.lang.String> strMap61 = myDataCenterInstanceConfig54.getMetadataMap();
        applicationInfoManager15.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig54);
        applicationInfoManager15.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager64 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo65 = applicationInfoManager64.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig67 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int68 = myDataCenterInstanceConfig67.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo69 = myDataCenterInstanceConfig67.getDataCenterInfo();
        java.lang.String str70 = myDataCenterInstanceConfig67.getNamespace();
        boolean boolean71 = myDataCenterInstanceConfig67.isNonSecurePortEnabled();
        applicationInfoManager64.config = myDataCenterInstanceConfig67;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig73 = applicationInfoManager64.config;
        com.netflix.appinfo.InstanceInfo instanceInfo74 = applicationInfoManager64.getInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig76 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int77 = myDataCenterInstanceConfig76.getLeaseRenewalIntervalInSeconds();
        int int78 = myDataCenterInstanceConfig76.getLeaseRenewalIntervalInSeconds();
        java.lang.String str79 = myDataCenterInstanceConfig76.getStatusPageUrlPath();
        boolean boolean80 = myDataCenterInstanceConfig76.getSecurePortEnabled();
        com.netflix.appinfo.InstanceInfo instanceInfo81 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager82 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig76, instanceInfo81);
        boolean boolean83 = myDataCenterInstanceConfig76.getSecurePortEnabled();
        applicationInfoManager64.config = myDataCenterInstanceConfig76;
        boolean boolean85 = myDataCenterInstanceConfig76.isInstanceEnabledOnit();
        applicationInfoManager15.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig76);
        org.junit.Assert.assertNotNull(applicationInfoManager1);
        org.junit.Assert.assertNotNull(instanceInfo2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(instanceInfo12);
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 443 + "'", int13 == 443);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(dataCenterInfo24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(dataCenterInfo27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(instanceInfo36);
        org.junit.Assert.assertNotNull(instanceInfo37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 30 + "'", int41 == 30);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "/Status" + "'", str43, "/Status");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 443 + "'", int47 == 443);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 90 + "'", int48 == 90);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 80 + "'", int50 == 80);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "/healthcheck" + "'", str57, "/healthcheck");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(applicationInfoManager64);
        org.junit.Assert.assertNull(instanceInfo65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 30 + "'", int68 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig73);
        org.junit.Assert.assertNull(instanceInfo74);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 30 + "'", int77 == 30);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 30 + "'", int78 == 30);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "/Status" + "'", str79, "/Status");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test04052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04052");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setCountryId(7002);
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder4.setHostName("na");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder6.setHomePageUrlForDeser("na");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder10.setSecurePort((int) (short) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder10.setHomePageUrl("http:///:80/Status", "172.20.26.3");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder15);
    }

    @Test
    public void test04053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04053");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("http://inesserver2.windows.cin.ufpe.br:80/", "default");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager6 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo7 = applicationInfoManager6.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig9.getDataCenterInfo();
        java.lang.String str12 = myDataCenterInstanceConfig9.getNamespace();
        boolean boolean13 = myDataCenterInstanceConfig9.isNonSecurePortEnabled();
        applicationInfoManager6.config = myDataCenterInstanceConfig9;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig15 = applicationInfoManager6.config;
        com.netflix.appinfo.InstanceInfo instanceInfo16 = applicationInfoManager6.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo17 = applicationInfoManager6.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType18 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo17.setActionType(actionType18);
        com.netflix.appinfo.LeaseInfo leaseInfo20 = null;
// flaky:         instanceInfo17.setLeaseInfo(leaseInfo20);
        java.lang.String str22 = null; // flaky: instanceInfo17.getSID();
        com.netflix.appinfo.InstanceInfo instanceInfo23 = null; // flaky: new com.netflix.appinfo.InstanceInfo(instanceInfo17);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager24 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager24.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig27 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int28 = myDataCenterInstanceConfig27.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig27.getDataCenterInfo();
        java.lang.String str30 = myDataCenterInstanceConfig27.getNamespace();
        boolean boolean31 = myDataCenterInstanceConfig27.isNonSecurePortEnabled();
        applicationInfoManager24.config = myDataCenterInstanceConfig27;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig33 = applicationInfoManager24.config;
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager24.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager24.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType36 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo35.setActionType(actionType36);
        com.netflix.appinfo.LeaseInfo leaseInfo38 = null;
// flaky:         instanceInfo35.setLeaseInfo(leaseInfo38);
        java.util.Set<java.lang.String> strSet40 = null; // flaky: instanceInfo35.getHealthCheckUrls();
        java.lang.String str41 = null; // flaky: instanceInfo35.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder42 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo35);
        com.netflix.appinfo.InstanceInfo.Builder builder45 = null; // flaky: builder42.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder47 = null; // flaky: builder42.setVIPAddressDeser("hi!");
        com.netflix.appinfo.LeaseInfo leaseInfo48 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder49 = null; // flaky: builder42.setLeaseInfo(leaseInfo48);
        com.netflix.appinfo.InstanceInfo.PortType portType50 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder52 = null; // flaky: builder42.enablePort(portType50, false);
        boolean boolean53 = false; // flaky: instanceInfo17.isPortEnabled(portType50);
        com.netflix.appinfo.InstanceInfo.Builder builder55 = builder2.enablePort(portType50, false);
        com.netflix.appinfo.InstanceInfo.Builder builder57 = builder55.setAppGroupName("inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.InstanceInfo.Builder builder59 = builder57.setAppName("/Status");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(applicationInfoManager6);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig15);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo16);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo17);
        org.junit.Assert.assertTrue("'" + actionType18 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType18.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "na" + "'", str22, "na");
        org.junit.Assert.assertNotNull(applicationInfoManager24);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 30 + "'", int28 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig33);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo34);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertTrue("'" + actionType36 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType36.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertNotNull(strSet40);
// flaky:         org.junit.Assert.assertEquals("'" + str41 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str41, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertNotNull(builder45);
// flaky:         org.junit.Assert.assertNotNull(builder47);
// flaky:         org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + portType50 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType50.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
// flaky:         org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
    }

    @Test
    public void test04054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04054");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        int int6 = myDataCenterInstanceConfig3.getLeaseExpirationDurationInSeconds();
        java.lang.String str7 = myDataCenterInstanceConfig3.getHomePageUrlPath();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        java.lang.String str9 = myDataCenterInstanceConfig3.getHealthCheckUrlPath();
        java.lang.String str10 = myDataCenterInstanceConfig3.getHealthCheckUrlPath();
        java.lang.String str11 = myDataCenterInstanceConfig3.getIpAddress();
        java.lang.String str12 = myDataCenterInstanceConfig3.getAppname();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 90 + "'", int6 == 90);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/" + "'", str7, "/");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/healthcheck" + "'", str9, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/healthcheck" + "'", str10, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "172.20.26.3" + "'", str11, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "unknown" + "'", str12, "unknown");
    }

    @Test
    public void test04055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04055");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        int int3 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        boolean boolean5 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        com.netflix.appinfo.InstanceInfo instanceInfo6 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager7 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo6);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = myDataCenterInstanceConfig9.getMetadataMap();
        java.lang.String str11 = myDataCenterInstanceConfig9.getHealthCheckUrlPath();
        int int12 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        java.lang.String str14 = myDataCenterInstanceConfig9.getHostName(true);
        applicationInfoManager7.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig9);
        applicationInfoManager7.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig18 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int19 = myDataCenterInstanceConfig18.getLeaseRenewalIntervalInSeconds();
        int int20 = myDataCenterInstanceConfig18.getLeaseRenewalIntervalInSeconds();
        java.lang.String str21 = myDataCenterInstanceConfig18.getStatusPageUrlPath();
        boolean boolean22 = myDataCenterInstanceConfig18.getSecurePortEnabled();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = myDataCenterInstanceConfig18.getMetadataMap();
        java.lang.String str24 = myDataCenterInstanceConfig18.getAppname();
        java.lang.String str25 = myDataCenterInstanceConfig18.getNamespace();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = myDataCenterInstanceConfig18.getMetadataMap();
        applicationInfoManager7.registerAppMetadata(strMap26);
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager7;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig30 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int31 = myDataCenterInstanceConfig30.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo32 = myDataCenterInstanceConfig30.getDataCenterInfo();
        java.lang.String str33 = myDataCenterInstanceConfig30.getHealthCheckUrl();
        int int34 = myDataCenterInstanceConfig30.getLeaseRenewalIntervalInSeconds();
        boolean boolean35 = myDataCenterInstanceConfig30.isNonSecurePortEnabled();
        java.lang.String str36 = myDataCenterInstanceConfig30.getVirtualHostName();
        applicationInfoManager7.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig30);
        java.lang.String str38 = myDataCenterInstanceConfig30.getIpAddress();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/Status" + "'", str4, "/Status");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/healthcheck" + "'", str11, "/healthcheck");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 30 + "'", int12 == 30);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str14, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 30 + "'", int19 == 30);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 30 + "'", int20 == 30);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "/Status" + "'", str21, "/Status");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "unknown" + "'", str24, "unknown");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 30 + "'", int31 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str36, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "172.20.26.3" + "'", str38, "172.20.26.3");
    }

    @Test
    public void test04056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04056");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setNamespace("na");
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder6.setLastDirtyTimestamp(1636105969900L);
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder16.setSecureVIPAddress("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder16.setSecureVIPAddressDeser("na");
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder16.setCountryId(1);
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder22.setVIPAddress("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder22.setHostName("INESSERVER2.WINDOWS.CIN.UFPE.BR");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
    }

    @Test
    public void test04057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04057");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setSecureVIPAddress("hi!");
        boolean boolean26 = builder25.isInitialized();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager27 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager27.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig30 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int31 = myDataCenterInstanceConfig30.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo32 = myDataCenterInstanceConfig30.getDataCenterInfo();
        java.lang.String str33 = myDataCenterInstanceConfig30.getNamespace();
        boolean boolean34 = myDataCenterInstanceConfig30.isNonSecurePortEnabled();
        applicationInfoManager27.config = myDataCenterInstanceConfig30;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig36 = applicationInfoManager27.config;
        com.netflix.appinfo.InstanceInfo instanceInfo37 = applicationInfoManager27.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo38 = applicationInfoManager27.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType39 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo38.setActionType(actionType39);
        com.netflix.appinfo.LeaseInfo leaseInfo41 = null;
        instanceInfo38.setLeaseInfo(leaseInfo41);
        java.lang.String str43 = instanceInfo38.getSID();
        instanceInfo38.setSID("unknown");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager46 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo47 = applicationInfoManager46.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig49 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int50 = myDataCenterInstanceConfig49.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo51 = myDataCenterInstanceConfig49.getDataCenterInfo();
        java.lang.String str52 = myDataCenterInstanceConfig49.getNamespace();
        boolean boolean53 = myDataCenterInstanceConfig49.isNonSecurePortEnabled();
        applicationInfoManager46.config = myDataCenterInstanceConfig49;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig55 = applicationInfoManager46.config;
        com.netflix.appinfo.InstanceInfo instanceInfo56 = applicationInfoManager46.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo57 = applicationInfoManager46.instanceInfo;
        java.lang.Boolean boolean58 = instanceInfo57.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus59 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo57.setOverriddenStatus(instanceStatus59);
        instanceInfo38.setStatusWithoutDirty(instanceStatus59);
        com.netflix.appinfo.InstanceInfo.Builder builder62 = builder25.setOverriddenStatus(instanceStatus59);
        com.netflix.appinfo.InstanceInfo.Builder builder64 = builder62.setSecurePort(30);
        com.netflix.appinfo.InstanceInfo.Builder builder66 = builder64.setHostName("/HEALTHCHECK");
        com.netflix.appinfo.InstanceInfo.PortType portType67 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder69 = builder66.enablePort(portType67, false);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(applicationInfoManager27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 30 + "'", int31 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig36);
        org.junit.Assert.assertNotNull(instanceInfo37);
        org.junit.Assert.assertNotNull(instanceInfo38);
        org.junit.Assert.assertTrue("'" + actionType39 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType39.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "na" + "'", str43, "na");
        org.junit.Assert.assertNotNull(applicationInfoManager46);
        org.junit.Assert.assertNotNull(instanceInfo47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 30 + "'", int50 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig55);
        org.junit.Assert.assertNotNull(instanceInfo56);
        org.junit.Assert.assertNotNull(instanceInfo57);
        org.junit.Assert.assertEquals("'" + boolean58 + "' != '" + false + "'", boolean58, false);
        org.junit.Assert.assertTrue("'" + instanceStatus59 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus59.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder69);
    }

    @Test
    public void test04058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04058");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        boolean boolean3 = myDataCenterInstanceConfig2.getSecurePortEnabled();
        java.lang.String str4 = myDataCenterInstanceConfig2.getHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig2.getDataCenterInfo();
        java.lang.String str7 = myDataCenterInstanceConfig2.getHostName(false);
        java.lang.String str8 = myDataCenterInstanceConfig2.getNamespace();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo9 = myDataCenterInstanceConfig2.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig("UNKNOWN", dataCenterInfo9);
        int int11 = myDataCenterInstanceConfig10.getNonSecurePort();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo12 = myDataCenterInstanceConfig10.getDataCenterInfo();
        boolean boolean13 = myDataCenterInstanceConfig10.isNonSecurePortEnabled();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str7, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(dataCenterInfo9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 80 + "'", int11 == 80);
        org.junit.Assert.assertNotNull(dataCenterInfo12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test04059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04059");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        long long18 = instanceInfo11.getLastUpdatedTimestamp();
        java.lang.Boolean boolean19 = instanceInfo11.isCoordinatingDiscoveryServer();
        java.lang.String str20 = instanceInfo11.getHostName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/HEALTHCHECK" + "'", str17, "/HEALTHCHECK");
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1636106120103L + "'", long18 == 1636106120103L);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "/HEALTHCHECK" + "'", str20, "/HEALTHCHECK");
    }

    @Test
    public void test04060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04060");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder6.setAppName("INESSERVER2.WINDOWS.CIN.UFPE.BR");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder10.setHostName("");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test04061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04061");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder18.setHomePageUrlForDeser("");
        com.netflix.appinfo.LeaseInfo leaseInfo23 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder22.setLeaseInfo(leaseInfo23);
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder22.add("HI!", "default");
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder27.setLastDirtyTimestamp(1636105964640L);
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder29.setSecureVIPAddressDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder31.setPort((int) 'a');
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager34 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig36 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int37 = myDataCenterInstanceConfig36.getLeaseRenewalIntervalInSeconds();
        int int38 = myDataCenterInstanceConfig36.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager34.config = myDataCenterInstanceConfig36;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager34;
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus42 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("/Status");
        applicationInfoManager34.setInstanceStatus(instanceStatus42);
        com.netflix.appinfo.InstanceInfo.Builder builder44 = builder31.setStatus(instanceStatus42);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/HEALTHCHECK" + "'", str17, "/HEALTHCHECK");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(applicationInfoManager34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 30 + "'", int37 == 30);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 30 + "'", int38 == 30);
        org.junit.Assert.assertTrue("'" + instanceStatus42 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus42.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder44);
    }

    @Test
    public void test04062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04062");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setCountryId(7002);
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder0.setHealthCheckUrlsForDeser("UNKNOWN", "UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder7.setHostName("/healthcheck");
        com.netflix.appinfo.InstanceInfo instanceInfo10 = builder9.getRawInstance();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder9.setASGName("unknown");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager13 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager13.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig16 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int17 = myDataCenterInstanceConfig16.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig16.getDataCenterInfo();
        java.lang.String str19 = myDataCenterInstanceConfig16.getNamespace();
        boolean boolean20 = myDataCenterInstanceConfig16.isNonSecurePortEnabled();
        applicationInfoManager13.config = myDataCenterInstanceConfig16;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig22 = applicationInfoManager13.config;
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager13.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo24 = applicationInfoManager13.instanceInfo;
        java.lang.Boolean boolean25 = instanceInfo24.isCoordinatingDiscoveryServer();
        java.lang.String str26 = instanceInfo24.getVIPAddress();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = instanceInfo24.getMetadata();
        com.netflix.appinfo.LeaseInfo leaseInfo28 = instanceInfo24.getLeaseInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder12.setLeaseInfo(leaseInfo28);
        com.netflix.appinfo.InstanceInfo.Builder builder31 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder31.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder35 = builder31.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder37 = builder31.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig38 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo39 = myDataCenterInstanceConfig38.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder37.setDataCenterInfo(dataCenterInfo39);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig41 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo42 = myDataCenterInstanceConfig41.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder43 = builder37.setDataCenterInfo(dataCenterInfo42);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig44 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br", dataCenterInfo42);
        com.netflix.appinfo.InstanceInfo.Builder builder45 = builder29.setDataCenterInfo(dataCenterInfo42);
        com.netflix.appinfo.InstanceInfo.Builder builder47 = builder45.setStatusPageUrlForDeser("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(applicationInfoManager13);
        org.junit.Assert.assertNotNull(instanceInfo14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig22);
        org.junit.Assert.assertNotNull(instanceInfo23);
        org.junit.Assert.assertNotNull(instanceInfo24);
        org.junit.Assert.assertEquals("'" + boolean25 + "' != '" + false + "'", boolean25, false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str26, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNotNull(strMap27);
// flaky:         org.junit.Assert.assertNotNull(leaseInfo28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(dataCenterInfo39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(dataCenterInfo42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
    }

    @Test
    public void test04063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04063");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/");
        java.lang.String str2 = myDataCenterInstanceConfig1.getAppname();
        boolean boolean3 = myDataCenterInstanceConfig1.isInstanceEnabledOnit();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = myDataCenterInstanceConfig1.getMetadataMap();
        boolean boolean5 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "unknown" + "'", str2, "unknown");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test04064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04064");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager3 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo4 = applicationInfoManager3.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig6 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int7 = myDataCenterInstanceConfig6.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig6.getDataCenterInfo();
        java.lang.String str9 = myDataCenterInstanceConfig6.getNamespace();
        boolean boolean10 = myDataCenterInstanceConfig6.isNonSecurePortEnabled();
        applicationInfoManager3.config = myDataCenterInstanceConfig6;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig12 = applicationInfoManager3.config;
        com.netflix.appinfo.InstanceInfo instanceInfo13 = applicationInfoManager3.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager3.instanceInfo;
        java.lang.String str15 = instanceInfo14.getVersion();
        instanceInfo14.setLastUpdatedTimestamp();
        applicationInfoManager0.instanceInfo = instanceInfo14;
        long long18 = instanceInfo14.getLastUpdatedTimestamp();
        instanceInfo14.setSID("");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertNotNull(applicationInfoManager3);
        org.junit.Assert.assertNotNull(instanceInfo4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 30 + "'", int7 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig12);
        org.junit.Assert.assertNotNull(instanceInfo13);
        org.junit.Assert.assertNotNull(instanceInfo14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "unknown" + "'", str15, "unknown");
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1636106120307L + "'", long18 == 1636106120307L);
    }

    @Test
    public void test04065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04065");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig1 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo2 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager3 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig1, instanceInfo2);
        com.netflix.appinfo.InstanceInfo instanceInfo4 = null;
        applicationInfoManager3.instanceInfo = instanceInfo4;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int8 = myDataCenterInstanceConfig7.getLeaseRenewalIntervalInSeconds();
        boolean boolean9 = myDataCenterInstanceConfig7.isNonSecurePortEnabled();
        int int10 = myDataCenterInstanceConfig7.getSecurePort();
        java.lang.String str11 = myDataCenterInstanceConfig7.getAppGroupName();
        java.lang.String str12 = myDataCenterInstanceConfig7.getASGName();
        java.lang.String str13 = myDataCenterInstanceConfig7.getASGName();
        int int14 = myDataCenterInstanceConfig7.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.InstanceInfo.Builder builder15 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder15.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder15.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder15.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig22 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo23 = myDataCenterInstanceConfig22.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder21.setDataCenterInfo(dataCenterInfo23);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig25 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig25.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder21.setDataCenterInfo(dataCenterInfo26);
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder27.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder27.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder27.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder36 = builder27.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo37 = builder36.build();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager38 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig7, instanceInfo37);
        applicationInfoManager38.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig41 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int42 = myDataCenterInstanceConfig41.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo43 = myDataCenterInstanceConfig41.getDataCenterInfo();
        java.lang.String str44 = myDataCenterInstanceConfig41.getHealthCheckUrl();
        applicationInfoManager38.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig41);
        applicationInfoManager3.config = myDataCenterInstanceConfig41;
        java.lang.String str47 = myDataCenterInstanceConfig41.getHomePageUrl();
        java.lang.Class<?> wildcardClass48 = myDataCenterInstanceConfig41.getClass();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 443 + "'", int10 == 443);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "unknown" + "'", str11, "unknown");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 30 + "'", int14 == 30);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(dataCenterInfo23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(instanceInfo37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test04066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04066");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        int int4 = myDataCenterInstanceConfig1.getSecurePort();
        java.lang.String str5 = myDataCenterInstanceConfig1.getAppGroupName();
        java.lang.String str6 = myDataCenterInstanceConfig1.getASGName();
        java.lang.String str7 = myDataCenterInstanceConfig1.getASGName();
        int int8 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder9.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder9.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder9.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig16 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo17 = myDataCenterInstanceConfig16.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder15.setDataCenterInfo(dataCenterInfo17);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo20 = myDataCenterInstanceConfig19.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder15.setDataCenterInfo(dataCenterInfo20);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder21.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder21.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder21.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo31 = builder30.build();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager32 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo31);
        instanceInfo31.setIsDirty(true);
        long long35 = instanceInfo31.getLastUpdatedTimestamp();
        java.lang.Boolean boolean36 = instanceInfo31.isCoordinatingDiscoveryServer();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 443 + "'", int4 == 443);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "unknown" + "'", str5, "unknown");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(dataCenterInfo17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(dataCenterInfo20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(instanceInfo31);
// flaky:         org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1636106120351L + "'", long35 == 1636106120351L);
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + false + "'", boolean36, false);
    }

    @Test
    public void test04067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04067");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig12 = applicationInfoManager0.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager13 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager13.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig16 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int17 = myDataCenterInstanceConfig16.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig16.getDataCenterInfo();
        java.lang.String str19 = myDataCenterInstanceConfig16.getNamespace();
        boolean boolean20 = myDataCenterInstanceConfig16.isNonSecurePortEnabled();
        applicationInfoManager13.config = myDataCenterInstanceConfig16;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig22 = applicationInfoManager13.config;
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager13.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo24 = applicationInfoManager13.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType25 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo24.setActionType(actionType25);
        java.lang.String str27 = instanceInfo24.getVersion();
        java.lang.String str28 = instanceInfo24.getIPAddr();
        instanceInfo24.setLastUpdatedTimestamp();
        java.lang.String str30 = instanceInfo24.getVersion();
        java.lang.String str31 = instanceInfo24.getHomePageUrl();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus32 = instanceInfo24.getStatus();
        applicationInfoManager0.setInstanceStatus(instanceStatus32);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager34 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig36 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int37 = myDataCenterInstanceConfig36.getLeaseRenewalIntervalInSeconds();
        int int38 = myDataCenterInstanceConfig36.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager34.config = myDataCenterInstanceConfig36;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager34;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig42 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int43 = myDataCenterInstanceConfig42.getLeaseRenewalIntervalInSeconds();
        int int44 = myDataCenterInstanceConfig42.getLeaseRenewalIntervalInSeconds();
        java.lang.String str45 = myDataCenterInstanceConfig42.getStatusPageUrlPath();
        boolean boolean46 = myDataCenterInstanceConfig42.getSecurePortEnabled();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = myDataCenterInstanceConfig42.getMetadataMap();
        applicationInfoManager34.config = myDataCenterInstanceConfig42;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig51 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int52 = myDataCenterInstanceConfig51.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo53 = myDataCenterInstanceConfig51.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig54 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo53);
        java.lang.String str55 = myDataCenterInstanceConfig54.getAppname();
        java.lang.String str56 = myDataCenterInstanceConfig54.getNamespace();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig57 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager58 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo59 = applicationInfoManager58.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig61 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int62 = myDataCenterInstanceConfig61.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo63 = myDataCenterInstanceConfig61.getDataCenterInfo();
        java.lang.String str64 = myDataCenterInstanceConfig61.getNamespace();
        boolean boolean65 = myDataCenterInstanceConfig61.isNonSecurePortEnabled();
        applicationInfoManager58.config = myDataCenterInstanceConfig61;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig67 = applicationInfoManager58.config;
        com.netflix.appinfo.InstanceInfo instanceInfo68 = applicationInfoManager58.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo69 = applicationInfoManager58.instanceInfo;
        int int70 = instanceInfo69.getSecurePort();
        boolean boolean71 = instanceInfo69.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager72 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig57, instanceInfo69);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager73 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig54, instanceInfo69);
        java.lang.String str74 = instanceInfo69.getHomePageUrl();
        applicationInfoManager34.instanceInfo = instanceInfo69;
        int int76 = instanceInfo69.getPort();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus77 = instanceInfo69.getStatus();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus78 = instanceInfo69.getOverriddenStatus();
        applicationInfoManager0.setInstanceStatus(instanceStatus78);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig12);
        org.junit.Assert.assertNotNull(applicationInfoManager13);
        org.junit.Assert.assertNotNull(instanceInfo14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig22);
        org.junit.Assert.assertNotNull(instanceInfo23);
        org.junit.Assert.assertNotNull(instanceInfo24);
        org.junit.Assert.assertTrue("'" + actionType25 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType25.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "unknown" + "'", str27, "unknown");
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "172.20.26.3" + "'", str28, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "unknown" + "'", str30, "unknown");
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str31, "http://inesserver2.windows.cin.ufpe.br:80/");
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus32 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING + "'", instanceStatus32.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING));
        org.junit.Assert.assertNotNull(applicationInfoManager34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 30 + "'", int37 == 30);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 30 + "'", int38 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 30 + "'", int43 == 30);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 30 + "'", int44 == 30);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/Status" + "'", str45, "/Status");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 30 + "'", int52 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "unknown" + "'", str55, "unknown");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "/Status" + "'", str56, "/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager58);
        org.junit.Assert.assertNotNull(instanceInfo59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 30 + "'", int62 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig67);
        org.junit.Assert.assertNotNull(instanceInfo68);
        org.junit.Assert.assertNotNull(instanceInfo69);
// flaky:         org.junit.Assert.assertTrue("'" + int70 + "' != '" + 443 + "'", int70 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str74 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str74, "http://inesserver2.windows.cin.ufpe.br:80/");
// flaky:         org.junit.Assert.assertTrue("'" + int76 + "' != '" + 80 + "'", int76 == 80);
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus77 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING + "'", instanceStatus77.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING));
        org.junit.Assert.assertTrue("'" + instanceStatus78 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus78.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
    }

    @Test
    public void test04068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04068");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setCountryId(7002);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager5 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo6 = applicationInfoManager5.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int9 = myDataCenterInstanceConfig8.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo10 = myDataCenterInstanceConfig8.getDataCenterInfo();
        java.lang.String str11 = myDataCenterInstanceConfig8.getNamespace();
        boolean boolean12 = myDataCenterInstanceConfig8.isNonSecurePortEnabled();
        applicationInfoManager5.config = myDataCenterInstanceConfig8;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig15 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int16 = myDataCenterInstanceConfig15.getLeaseRenewalIntervalInSeconds();
        int int17 = myDataCenterInstanceConfig15.getLeaseRenewalIntervalInSeconds();
        java.lang.String str18 = myDataCenterInstanceConfig15.getStatusPageUrlPath();
        applicationInfoManager5.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig15);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int22 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        int int23 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        java.lang.String str24 = myDataCenterInstanceConfig21.getStatusPageUrlPath();
        boolean boolean25 = myDataCenterInstanceConfig21.getSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager26 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager26.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig29 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int30 = myDataCenterInstanceConfig29.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo31 = myDataCenterInstanceConfig29.getDataCenterInfo();
        java.lang.String str32 = myDataCenterInstanceConfig29.getNamespace();
        boolean boolean33 = myDataCenterInstanceConfig29.isNonSecurePortEnabled();
        applicationInfoManager26.config = myDataCenterInstanceConfig29;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig35 = applicationInfoManager26.config;
        com.netflix.appinfo.InstanceInfo instanceInfo36 = applicationInfoManager26.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo37 = applicationInfoManager26.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType38 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo37.setActionType(actionType38);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager40 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo41 = applicationInfoManager40.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig43 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int44 = myDataCenterInstanceConfig43.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo45 = myDataCenterInstanceConfig43.getDataCenterInfo();
        java.lang.String str46 = myDataCenterInstanceConfig43.getNamespace();
        boolean boolean47 = myDataCenterInstanceConfig43.isNonSecurePortEnabled();
        applicationInfoManager40.config = myDataCenterInstanceConfig43;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig49 = applicationInfoManager40.config;
        com.netflix.appinfo.InstanceInfo instanceInfo50 = applicationInfoManager40.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo51 = applicationInfoManager40.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType52 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo51.setActionType(actionType52);
        instanceInfo37.setActionType(actionType52);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager55 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig21, instanceInfo37);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus57 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("inesserver2.windows.cin.ufpe.br:80");
        instanceInfo37.setOverriddenStatus(instanceStatus57);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus60 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("/Status");
        instanceInfo37.setOverriddenStatus(instanceStatus60);
        applicationInfoManager5.setInstanceStatus(instanceStatus60);
        com.netflix.appinfo.InstanceInfo.Builder builder63 = builder0.setStatus(instanceStatus60);
        com.netflix.appinfo.InstanceInfo.Builder builder65 = builder63.setVIPAddress("/");
        java.lang.Class<?> wildcardClass66 = builder63.getClass();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(applicationInfoManager5);
        org.junit.Assert.assertNotNull(instanceInfo6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 30 + "'", int9 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 30 + "'", int16 == 30);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/Status" + "'", str18, "/Status");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 30 + "'", int22 == 30);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 30 + "'", int23 == 30);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/Status" + "'", str24, "/Status");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 30 + "'", int30 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig35);
        org.junit.Assert.assertNotNull(instanceInfo36);
        org.junit.Assert.assertNotNull(instanceInfo37);
        org.junit.Assert.assertTrue("'" + actionType38 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType38.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager40);
        org.junit.Assert.assertNotNull(instanceInfo41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 30 + "'", int44 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig49);
        org.junit.Assert.assertNotNull(instanceInfo50);
        org.junit.Assert.assertNotNull(instanceInfo51);
        org.junit.Assert.assertTrue("'" + actionType52 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType52.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + instanceStatus57 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus57.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertTrue("'" + instanceStatus60 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus60.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test04069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04069");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setCountryId(7002);
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder0.setHealthCheckUrlsForDeser("UNKNOWN", "UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder7.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder9.setSID("DEFAULT");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager12 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo13 = applicationInfoManager12.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig16 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int17 = myDataCenterInstanceConfig16.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig16.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo18);
        java.lang.String str20 = myDataCenterInstanceConfig19.getAppname();
        java.lang.String str21 = myDataCenterInstanceConfig19.getNamespace();
        applicationInfoManager12.config = myDataCenterInstanceConfig19;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager23 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo24 = applicationInfoManager23.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig26 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int27 = myDataCenterInstanceConfig26.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo28 = myDataCenterInstanceConfig26.getDataCenterInfo();
        java.lang.String str29 = myDataCenterInstanceConfig26.getNamespace();
        boolean boolean30 = myDataCenterInstanceConfig26.isNonSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo31 = myDataCenterInstanceConfig26.getDataCenterInfo();
        applicationInfoManager23.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig26);
        applicationInfoManager12.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig26);
        com.netflix.appinfo.InstanceInfo.Builder builder34 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder36 = builder34.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder34.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder34.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig41 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo42 = myDataCenterInstanceConfig41.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder43 = builder40.setDataCenterInfo(dataCenterInfo42);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig44 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo45 = myDataCenterInstanceConfig44.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder46 = builder40.setDataCenterInfo(dataCenterInfo45);
        com.netflix.appinfo.InstanceInfo.Builder builder48 = builder40.setNamespace("na");
        com.netflix.appinfo.InstanceInfo.Builder builder50 = builder40.setLastDirtyTimestamp(1636105969900L);
        com.netflix.appinfo.InstanceInfo.Builder builder52 = builder50.setSecureVIPAddress("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder54 = builder50.setSecureVIPAddressDeser("na");
        com.netflix.appinfo.InstanceInfo instanceInfo55 = builder50.getRawInstance();
        java.lang.String str56 = instanceInfo55.getHostName();
        com.netflix.appinfo.LeaseInfo leaseInfo57 = instanceInfo55.getLeaseInfo();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager58 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig26, instanceInfo55);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo59 = myDataCenterInstanceConfig26.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder60 = builder9.setDataCenterInfo(dataCenterInfo59);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(applicationInfoManager12);
        org.junit.Assert.assertNotNull(instanceInfo13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "unknown" + "'", str20, "unknown");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "/Status" + "'", str21, "/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager23);
        org.junit.Assert.assertNotNull(instanceInfo24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 30 + "'", int27 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo31);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(dataCenterInfo42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(dataCenterInfo45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(instanceInfo55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(leaseInfo57);
        org.junit.Assert.assertNotNull(dataCenterInfo59);
        org.junit.Assert.assertNotNull(builder60);
    }

    @Test
    public void test04070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04070");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setIPAddr("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder0.setSecureVIPAddressDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setAppName("na");
        com.netflix.appinfo.InstanceInfo instanceInfo11 = builder8.build();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        java.lang.String str13 = instanceInfo11.getAppGroupName();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test04071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04071");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus24 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder21.setStatus(instanceStatus24);
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder25.setHealthCheckUrlsForDeser("http://inesserver2.windows.cin.ufpe.br:80/Status", "unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder25.setVIPAddress("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder25.setPort(0);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager34 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager34.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig37 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int38 = myDataCenterInstanceConfig37.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo39 = myDataCenterInstanceConfig37.getDataCenterInfo();
        java.lang.String str40 = myDataCenterInstanceConfig37.getNamespace();
        boolean boolean41 = myDataCenterInstanceConfig37.isNonSecurePortEnabled();
        applicationInfoManager34.config = myDataCenterInstanceConfig37;
        int int43 = myDataCenterInstanceConfig37.getLeaseExpirationDurationInSeconds();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = myDataCenterInstanceConfig37.getMetadataMap();
        java.lang.String str45 = myDataCenterInstanceConfig37.getHealthCheckUrl();
        java.lang.String str46 = myDataCenterInstanceConfig37.getHomePageUrlPath();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo47 = myDataCenterInstanceConfig37.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig48 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo47);
        com.netflix.appinfo.InstanceInfo.Builder builder49 = builder32.setDataCenterInfo(dataCenterInfo47);
        com.netflix.appinfo.InstanceInfo.Builder builder51 = builder32.setVIPAddress("http:///:80/Status");
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder55 = builder51.setHealthCheckUrls("INESSERVER2.WINDOWS.CIN.UFPE.BR", "http:///:80/Status", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + instanceStatus24 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus24.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(applicationInfoManager34);
        org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 30 + "'", int38 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 90 + "'", int43 == 90);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/" + "'", str46, "/");
        org.junit.Assert.assertNotNull(dataCenterInfo47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
    }

    @Test
    public void test04072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04072");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder6.setLastDirtyTimestamp((long) (short) 10);
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder13.setSecurePort((int) (short) -1);
        com.netflix.appinfo.InstanceInfo.ActionType actionType16 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder13.setActionType(actionType16);
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder17.setVIPAddressDeser("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder17.setPort(0);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder17.setSecureVIPAddress("HI!");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder17.setPort((-1));
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + actionType16 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType16.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
    }

    @Test
    public void test04073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04073");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        java.lang.Boolean boolean12 = instanceInfo11.isCoordinatingDiscoveryServer();
        java.lang.String str13 = instanceInfo11.getVIPAddress();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus14 = instanceInfo11.getOverriddenStatus();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo15 = instanceInfo11.getDataCenterInfo();
        java.lang.String str16 = instanceInfo11.getAppName();
        java.lang.String str17 = instanceInfo11.getId();
        java.lang.String str18 = instanceInfo11.getHostName();
        instanceInfo11.setSID("http:///:80/Status");
        java.lang.String str21 = instanceInfo11.getAppGroupName();
        java.lang.String str22 = instanceInfo11.getAppName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "http:///:80/Status" + "'", str13, "http:///:80/Status");
        org.junit.Assert.assertTrue("'" + instanceStatus14 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus14.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(dataCenterInfo15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "DEFAULT" + "'", str16, "DEFAULT");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "/" + "'", str21, "/");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "DEFAULT" + "'", str22, "DEFAULT");
    }

    @Test
    public void test04074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04074");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = instanceInfo11.getVersion();
        java.lang.String str15 = instanceInfo11.getIPAddr();
        com.netflix.appinfo.InstanceInfo.ActionType actionType16 = instanceInfo11.getActionType();
        boolean boolean17 = instanceInfo11.isDirty();
        int int18 = instanceInfo11.getCountryId();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "unknown" + "'", str14, "unknown");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + actionType16 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType16.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test04075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04075");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str4 = myDataCenterInstanceConfig1.getHealthCheckUrl();
        java.lang.String str5 = myDataCenterInstanceConfig1.getIpAddress();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "172.20.26.3" + "'", str5, "172.20.26.3");
    }

    @Test
    public void test04076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04076");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig1.getDataCenterInfo();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager4 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo5 = applicationInfoManager4.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int8 = myDataCenterInstanceConfig7.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo9 = myDataCenterInstanceConfig7.getDataCenterInfo();
        java.lang.String str10 = myDataCenterInstanceConfig7.getNamespace();
        boolean boolean11 = myDataCenterInstanceConfig7.isNonSecurePortEnabled();
        applicationInfoManager4.config = myDataCenterInstanceConfig7;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig13 = applicationInfoManager4.config;
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager4.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo15 = applicationInfoManager4.instanceInfo;
        int int16 = instanceInfo15.getSecurePort();
        boolean boolean17 = instanceInfo15.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo18 = new com.netflix.appinfo.InstanceInfo(instanceInfo15);
        com.netflix.appinfo.InstanceInfo instanceInfo19 = new com.netflix.appinfo.InstanceInfo(instanceInfo15);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager20 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo15);
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager20.getInfo();
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager20;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager23 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig24 = applicationInfoManager23.config;
        com.netflix.appinfo.InstanceInfo instanceInfo25 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager26 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig24, instanceInfo25);
        com.netflix.appinfo.InstanceInfo instanceInfo27 = null;
        applicationInfoManager26.instanceInfo = instanceInfo27;
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager26.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager30 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig32 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int33 = myDataCenterInstanceConfig32.getLeaseRenewalIntervalInSeconds();
        int int34 = myDataCenterInstanceConfig32.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager30.config = myDataCenterInstanceConfig32;
        java.lang.String str36 = myDataCenterInstanceConfig32.getIpAddress();
        java.lang.String str37 = myDataCenterInstanceConfig32.getVirtualHostName();
        java.lang.String str39 = myDataCenterInstanceConfig32.getHostName(true);
        applicationInfoManager26.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig32);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus41 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        applicationInfoManager26.setInstanceStatus(instanceStatus41);
        com.netflix.appinfo.InstanceInfo instanceInfo43 = applicationInfoManager26.getInfo();
        int int44 = instanceInfo43.getSecurePort();
        applicationInfoManager20.instanceInfo = instanceInfo43;
        java.lang.Boolean boolean46 = instanceInfo43.isCoordinatingDiscoveryServer();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo3);
        org.junit.Assert.assertNotNull(applicationInfoManager4);
        org.junit.Assert.assertNotNull(instanceInfo5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig13);
        org.junit.Assert.assertNotNull(instanceInfo14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 7002 + "'", int16 == 7002);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertNotNull(applicationInfoManager23);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig24);
        org.junit.Assert.assertNull(instanceInfo29);
        org.junit.Assert.assertNotNull(applicationInfoManager30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 30 + "'", int33 == 30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "172.20.26.3" + "'", str36, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str37, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str39, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + instanceStatus41 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus41.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(instanceInfo43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 443 + "'", int44 == 443);
        org.junit.Assert.assertEquals("'" + boolean46 + "' != '" + false + "'", boolean46, false);
    }

    @Test
    public void test04077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04077");
        com.netflix.appinfo.InstanceInfo instanceInfo0 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder1 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo0);
        com.netflix.appinfo.InstanceInfo.Builder builder3 = builder1.setNamespace("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder3.setNamespace("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo instanceInfo6 = builder5.getRawInstance();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(instanceInfo6);
    }

    @Test
    public void test04078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04078");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder12.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder12.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder12.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo22 = builder21.build();
        boolean boolean23 = instanceInfo22.isDirty();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus24 = instanceInfo22.getStatus();
        java.lang.String str25 = instanceInfo22.getVersion();
        java.lang.String str26 = instanceInfo22.getVersion();
        instanceInfo22.setLastUpdatedTimestamp();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + instanceStatus24 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UP + "'", instanceStatus24.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UP));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "unknown" + "'", str25, "unknown");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "unknown" + "'", str26, "unknown");
    }

    @Test
    public void test04079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04079");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        boolean boolean9 = builder6.isInitialized();
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setVIPAddress("na");
        com.netflix.appinfo.InstanceInfo instanceInfo12 = builder11.getRawInstance();
        com.netflix.appinfo.InstanceInfo.ActionType actionType13 = instanceInfo12.getActionType();
        java.lang.String str14 = instanceInfo12.getAppName();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertNull(actionType13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "DEFAULT" + "'", str14, "DEFAULT");
    }

    @Test
    public void test04080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04080");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig1 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo2 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager3 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig1, instanceInfo2);
        com.netflix.appinfo.InstanceInfo instanceInfo4 = null;
        applicationInfoManager3.instanceInfo = instanceInfo4;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig("172.20.26.3");
        java.lang.String str8 = myDataCenterInstanceConfig7.getSecureHealthCheckUrl();
        applicationInfoManager3.config = myDataCenterInstanceConfig7;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        java.lang.String str11 = myDataCenterInstanceConfig10.getIpAddress();
        java.lang.String str12 = myDataCenterInstanceConfig10.getAppGroupName();
        applicationInfoManager3.config = myDataCenterInstanceConfig10;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager3;
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig1);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "172.20.26.3" + "'", str11, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "unknown" + "'", str12, "unknown");
    }

    @Test
    public void test04081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04081");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = 0; // flaky: instanceInfo11.getSecurePort();
        boolean boolean13 = false; // flaky: instanceInfo11.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = null; // flaky: new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        java.lang.String str15 = null; // flaky: instanceInfo14.getVersion();
// flaky:         instanceInfo14.setLastUpdatedTimestamp();
        java.lang.String str17 = null; // flaky: instanceInfo14.getAppName();
        java.lang.String str18 = null; // flaky: instanceInfo14.getSID();
        java.lang.String str19 = null; // flaky: instanceInfo14.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.Builder builder20 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder20.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder20.setCountryId(7002);
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder24.setSecurePort((int) (byte) 10);
        com.netflix.appinfo.InstanceInfo.PortType portType27 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder24.enablePort(portType27, false);
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder29.setHomePageUrlForDeser("");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager32 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo33 = applicationInfoManager32.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig35 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int36 = myDataCenterInstanceConfig35.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo37 = myDataCenterInstanceConfig35.getDataCenterInfo();
        java.lang.String str38 = myDataCenterInstanceConfig35.getNamespace();
        boolean boolean39 = myDataCenterInstanceConfig35.isNonSecurePortEnabled();
        applicationInfoManager32.config = myDataCenterInstanceConfig35;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig41 = applicationInfoManager32.config;
        com.netflix.appinfo.InstanceInfo instanceInfo42 = applicationInfoManager32.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo43 = applicationInfoManager32.instanceInfo;
        int int44 = 0; // flaky: instanceInfo43.getSecurePort();
        boolean boolean45 = false; // flaky: instanceInfo43.isDirty();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus46 = null; // flaky: instanceInfo43.getOverriddenStatus();
        com.netflix.appinfo.InstanceInfo.Builder builder47 = builder29.setOverriddenStatus(instanceStatus46);
// flaky:         instanceInfo14.setStatusWithoutDirty(instanceStatus46);
        java.lang.String str49 = null; // flaky: instanceInfo14.getIPAddr();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "unknown" + "'", str15, "unknown");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UNKNOWN" + "'", str17, "UNKNOWN");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "na" + "'", str18, "na");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UNKNOWN" + "'", str19, "UNKNOWN");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + portType27 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType27.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(applicationInfoManager32);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 30 + "'", int36 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig41);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo42);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo43);
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 443 + "'", int44 == 443);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus46 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus46.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder47);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "172.20.26.3" + "'", str49, "172.20.26.3");
    }

    @Test
    public void test04082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04082");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("unknown");
        boolean boolean2 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        boolean boolean3 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        java.lang.String str4 = myDataCenterInstanceConfig1.getHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig1.getASGName();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test04083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04083");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        java.lang.String str4 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        com.netflix.appinfo.InstanceInfo instanceInfo5 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager6 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo5);
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig7 = applicationInfoManager6.config;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        int int11 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        java.lang.String str12 = myDataCenterInstanceConfig9.getStatusPageUrlPath();
        applicationInfoManager6.config = myDataCenterInstanceConfig9;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager6;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager6;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig16 = applicationInfoManager6.config;
        com.netflix.appinfo.InstanceInfo instanceInfo17 = applicationInfoManager6.getInfo();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/healthcheck" + "'", str4, "/healthcheck");
        org.junit.Assert.assertNotNull(eurekaInstanceConfig7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/Status" + "'", str12, "/Status");
        org.junit.Assert.assertNotNull(eurekaInstanceConfig16);
        org.junit.Assert.assertNull(instanceInfo17);
    }

    @Test
    public void test04084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04084");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder12.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder12.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo instanceInfo20 = builder12.build();
        com.netflix.appinfo.InstanceInfo instanceInfo21 = builder12.getRawInstance();
        boolean boolean22 = instanceInfo21.isDirty();
        com.netflix.appinfo.LeaseInfo leaseInfo23 = instanceInfo21.getLeaseInfo();
        instanceInfo21.setLastDirtyTimestamp((java.lang.Long) 1636106058095L);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(leaseInfo23);
    }

    @Test
    public void test04085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04085");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        java.lang.String str6 = myDataCenterInstanceConfig2.getIpAddress();
        java.lang.String str7 = myDataCenterInstanceConfig2.getVirtualHostName();
        java.lang.String str9 = myDataCenterInstanceConfig2.getHostName(true);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager10 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager10.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig13 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int14 = myDataCenterInstanceConfig13.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo15 = myDataCenterInstanceConfig13.getDataCenterInfo();
        java.lang.String str16 = myDataCenterInstanceConfig13.getNamespace();
        boolean boolean17 = myDataCenterInstanceConfig13.isNonSecurePortEnabled();
        applicationInfoManager10.config = myDataCenterInstanceConfig13;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig19 = applicationInfoManager10.config;
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager10.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager10.instanceInfo;
        java.lang.Boolean boolean22 = null; // flaky: instanceInfo21.isCoordinatingDiscoveryServer();
        java.lang.String str23 = null; // flaky: instanceInfo21.getVIPAddress();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager24 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig2, instanceInfo21);
        boolean boolean25 = myDataCenterInstanceConfig2.isInstanceEnabledOnit();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig2.getDataCenterInfo();
        java.lang.String str27 = myDataCenterInstanceConfig2.getStatusPageUrl();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "172.20.26.3" + "'", str6, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str7, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str9, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 30 + "'", int14 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig19);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo20);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo21);
// flaky:         org.junit.Assert.assertEquals("'" + boolean22 + "' != '" + false + "'", boolean22, false);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "/Status" + "'", str23, "/Status");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test04086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04086");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
// flaky:         applicationInfoManager0.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.InstanceInfo instanceInfo3 = applicationInfoManager0.getInfo();
// flaky:         applicationInfoManager0.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig6 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int7 = myDataCenterInstanceConfig6.getLeaseRenewalIntervalInSeconds();
        java.lang.String str8 = myDataCenterInstanceConfig6.getNamespace();
        java.lang.String str9 = myDataCenterInstanceConfig6.getNamespace();
        java.lang.String str10 = myDataCenterInstanceConfig6.getHealthCheckUrlPath();
        java.lang.String str11 = myDataCenterInstanceConfig6.getASGName();
        int int12 = myDataCenterInstanceConfig6.getLeaseExpirationDurationInSeconds();
        java.lang.String str13 = myDataCenterInstanceConfig6.getNamespace();
        java.lang.String str14 = myDataCenterInstanceConfig6.getAppGroupName();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig6);
        java.lang.String str16 = myDataCenterInstanceConfig6.getStatusPageUrlPath();
        int int17 = myDataCenterInstanceConfig6.getLeaseRenewalIntervalInSeconds();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 30 + "'", int7 == 30);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/healthcheck" + "'", str10, "/healthcheck");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 90 + "'", int12 == 90);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "unknown" + "'", str14, "unknown");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/Status" + "'", str16, "/Status");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
    }

    @Test
    public void test04087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04087");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
// flaky:         instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder18.add("na", "/");
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder18.add("/Status", "");
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder18.setHealthCheckUrls("inesserver2.windows.cin.ufpe.br", "", "172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder18.setASGName("");
        com.netflix.appinfo.InstanceInfo.Builder builder35 = builder18.setHomePageUrlForDeser("http://hi!:97/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
    }

    @Test
    public void test04088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04088");
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig0 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager1 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig4.getDataCenterInfo();
        java.lang.String str7 = myDataCenterInstanceConfig4.getNamespace();
        boolean boolean8 = myDataCenterInstanceConfig4.isNonSecurePortEnabled();
        applicationInfoManager1.config = myDataCenterInstanceConfig4;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig10 = applicationInfoManager1.config;
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager1.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager1.instanceInfo;
        int int13 = 0; // flaky: instanceInfo12.getSecurePort();
        boolean boolean14 = false; // flaky: instanceInfo12.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig0, instanceInfo12);
        int int16 = instanceInfo12.getCountryId();
        java.lang.Boolean boolean17 = instanceInfo12.isCoordinatingDiscoveryServer();
        int int18 = instanceInfo12.getSecurePort();
        java.lang.String str19 = instanceInfo12.getSID();
        java.lang.Boolean boolean20 = instanceInfo12.isCoordinatingDiscoveryServer();
        instanceInfo12.setSID("http://inesserver2.windows.cin.ufpe.br:10/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager1);
        org.junit.Assert.assertNotNull(instanceInfo2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(instanceInfo12);
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 443 + "'", int13 == 443);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 443 + "'", int18 == 443);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "na" + "'", str19, "na");
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + false + "'", boolean20, false);
    }

    @Test
    public void test04089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04089");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder12.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder12.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo instanceInfo20 = builder12.build();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager21 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo22 = applicationInfoManager21.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int25 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig24.getDataCenterInfo();
        java.lang.String str27 = myDataCenterInstanceConfig24.getNamespace();
        boolean boolean28 = myDataCenterInstanceConfig24.isNonSecurePortEnabled();
        applicationInfoManager21.config = myDataCenterInstanceConfig24;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig30 = applicationInfoManager21.config;
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager21.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager21.instanceInfo;
        java.lang.Boolean boolean33 = null; // flaky: instanceInfo32.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus34 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
// flaky:         instanceInfo32.setOverriddenStatus(instanceStatus34);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager36 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo37 = applicationInfoManager36.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig39 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int40 = myDataCenterInstanceConfig39.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo41 = myDataCenterInstanceConfig39.getDataCenterInfo();
        java.lang.String str42 = myDataCenterInstanceConfig39.getNamespace();
        boolean boolean43 = myDataCenterInstanceConfig39.isNonSecurePortEnabled();
        applicationInfoManager36.config = myDataCenterInstanceConfig39;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig45 = applicationInfoManager36.config;
        com.netflix.appinfo.InstanceInfo instanceInfo46 = applicationInfoManager36.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo47 = applicationInfoManager36.instanceInfo;
        java.lang.Boolean boolean48 = instanceInfo47.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus49 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo47.setOverriddenStatus(instanceStatus49);
        instanceInfo47.setLastDirtyTimestamp((java.lang.Long) (-1L));
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus53 = instanceInfo47.getOverriddenStatus();
        instanceInfo32.setOverriddenStatus(instanceStatus53);
        instanceInfo20.setStatus(instanceStatus53);
        java.lang.String str56 = instanceInfo20.getSID();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertNotNull(applicationInfoManager21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 30 + "'", int25 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertNotNull(instanceInfo32);
// flaky:         org.junit.Assert.assertEquals("'" + boolean33 + "' != '" + false + "'", boolean33, false);
        org.junit.Assert.assertTrue("'" + instanceStatus34 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus34.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(applicationInfoManager36);
        org.junit.Assert.assertNotNull(instanceInfo37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 30 + "'", int40 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig45);
        org.junit.Assert.assertNotNull(instanceInfo46);
        org.junit.Assert.assertNotNull(instanceInfo47);
        org.junit.Assert.assertEquals("'" + boolean48 + "' != '" + false + "'", boolean48, false);
        org.junit.Assert.assertTrue("'" + instanceStatus49 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus49.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + instanceStatus53 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus53.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "na" + "'", str56, "na");
    }

    @Test
    public void test04090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04090");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = 0; // flaky: instanceInfo11.getSecurePort();
        java.lang.String str13 = null; // flaky: instanceInfo11.getSID();
        java.util.Set<java.lang.String> strSet14 = instanceInfo11.getHealthCheckUrls();
        java.util.Set<java.lang.String> strSet15 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str16 = instanceInfo11.getASGName();
        instanceInfo11.setLastUpdatedTimestamp();
        java.lang.String str18 = instanceInfo11.getAppName();
        boolean boolean19 = instanceInfo11.isDirty();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:10/Status" + "'", str13, "http://inesserver2.windows.cin.ufpe.br:10/Status");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UNKNOWN" + "'", str18, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test04091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04091");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        int int6 = myDataCenterInstanceConfig3.getLeaseExpirationDurationInSeconds();
        java.lang.String str7 = myDataCenterInstanceConfig3.getHomePageUrlPath();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        applicationInfoManager0.config = myDataCenterInstanceConfig10;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig13 = applicationInfoManager0.config;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig15 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int16 = myDataCenterInstanceConfig15.getLeaseRenewalIntervalInSeconds();
        boolean boolean17 = myDataCenterInstanceConfig15.isNonSecurePortEnabled();
        int int18 = myDataCenterInstanceConfig15.getSecurePort();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig15.getDataCenterInfo();
        applicationInfoManager0.config = myDataCenterInstanceConfig15;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager21 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo22 = applicationInfoManager21.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int25 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig24.getDataCenterInfo();
        java.lang.String str27 = myDataCenterInstanceConfig24.getNamespace();
        boolean boolean28 = myDataCenterInstanceConfig24.isNonSecurePortEnabled();
        applicationInfoManager21.config = myDataCenterInstanceConfig24;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig30 = applicationInfoManager21.config;
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager21.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager21.instanceInfo;
        int int33 = 0; // flaky: instanceInfo32.getSecurePort();
        boolean boolean34 = false; // flaky: instanceInfo32.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = new com.netflix.appinfo.InstanceInfo(instanceInfo32);
        applicationInfoManager0.instanceInfo = instanceInfo35;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig38 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.util.Map<java.lang.String, java.lang.String> strMap39 = myDataCenterInstanceConfig38.getMetadataMap();
        applicationInfoManager0.registerAppMetadata(strMap39);
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 90 + "'", int6 == 90);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/" + "'", str7, "/");
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 30 + "'", int16 == 30);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 443 + "'", int18 == 443);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertNotNull(applicationInfoManager21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 30 + "'", int25 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertNotNull(instanceInfo32);
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 443 + "'", int33 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMap39);
    }

    @Test
    public void test04092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04092");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder8.setSecurePort((int) '4');
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setSecurePort((int) ' ');
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder14.add("/", "unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder17.setStatusPageUrlForDeser("HTTP://HI!:80/STATUS");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder19.setHostName("http://hi!:35/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setCountryId(7002);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
    }

    @Test
    public void test04093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04093");
        com.netflix.appinfo.InstanceInfo.Builder builder1 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder1.setHealthCheckUrlsForDeser("/healthcheck", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder1.setNamespace("/Status");
        boolean boolean7 = builder6.isInitialized();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager8 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo9 = applicationInfoManager8.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig11 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int12 = myDataCenterInstanceConfig11.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo13 = myDataCenterInstanceConfig11.getDataCenterInfo();
        java.lang.String str14 = myDataCenterInstanceConfig11.getNamespace();
        boolean boolean15 = myDataCenterInstanceConfig11.isNonSecurePortEnabled();
        applicationInfoManager8.config = myDataCenterInstanceConfig11;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig17 = applicationInfoManager8.config;
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager8.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager8.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType20 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo19.setActionType(actionType20);
        com.netflix.appinfo.LeaseInfo leaseInfo22 = null;
// flaky:         instanceInfo19.setLeaseInfo(leaseInfo22);
        java.util.Set<java.lang.String> strSet24 = instanceInfo19.getHealthCheckUrls();
        java.lang.String str25 = instanceInfo19.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder26 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo19);
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder26.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder29.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder31.setSecureVIPAddress("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder35 = builder31.setStatusPageUrlForDeser("inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.InstanceInfo.Builder builder37 = builder31.setHostName("hi!");
        com.netflix.appinfo.LeaseInfo leaseInfo38 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder39 = builder37.setLeaseInfo(leaseInfo38);
        com.netflix.appinfo.InstanceInfo.Builder builder41 = builder37.setVIPAddress("http://hi!:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder43 = builder37.setPort(443);
        com.netflix.appinfo.InstanceInfo.Builder builder45 = builder37.setASGName("DEFAULT");
        com.netflix.appinfo.InstanceInfo.Builder builder47 = builder45.setVIPAddressDeser("HI!");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager48 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo49 = applicationInfoManager48.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig51 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int52 = myDataCenterInstanceConfig51.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo53 = myDataCenterInstanceConfig51.getDataCenterInfo();
        java.lang.String str54 = myDataCenterInstanceConfig51.getNamespace();
        boolean boolean55 = myDataCenterInstanceConfig51.isNonSecurePortEnabled();
        applicationInfoManager48.config = myDataCenterInstanceConfig51;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig57 = applicationInfoManager48.config;
        com.netflix.appinfo.InstanceInfo instanceInfo58 = applicationInfoManager48.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo59 = applicationInfoManager48.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType60 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo59.setActionType(actionType60);
        com.netflix.appinfo.LeaseInfo leaseInfo62 = null;
        instanceInfo59.setLeaseInfo(leaseInfo62);
        java.util.Set<java.lang.String> strSet64 = instanceInfo59.getHealthCheckUrls();
        java.lang.String str65 = instanceInfo59.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder66 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo59);
        com.netflix.appinfo.InstanceInfo.Builder builder69 = builder66.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder71 = builder69.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder73 = builder71.setSecureVIPAddress("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder75 = builder71.setStatusPageUrlForDeser("inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.InstanceInfo.Builder builder77 = builder71.setHostName("hi!");
        com.netflix.appinfo.LeaseInfo leaseInfo78 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder79 = builder77.setLeaseInfo(leaseInfo78);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager80 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig82 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int83 = myDataCenterInstanceConfig82.getLeaseRenewalIntervalInSeconds();
        int int84 = myDataCenterInstanceConfig82.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager80.config = myDataCenterInstanceConfig82;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager80;
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus88 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("/Status");
        applicationInfoManager80.setInstanceStatus(instanceStatus88);
        com.netflix.appinfo.InstanceInfo.Builder builder90 = builder79.setStatus(instanceStatus88);
        com.netflix.appinfo.InstanceInfo.Builder builder92 = builder90.setPort((int) (short) 10);
        com.netflix.appinfo.InstanceInfo instanceInfo93 = builder92.getRawInstance();
        java.lang.String str94 = instanceInfo93.getStatusPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap95 = instanceInfo93.getMetadata();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo96 = instanceInfo93.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder97 = builder47.setDataCenterInfo(dataCenterInfo96);
        com.netflix.appinfo.InstanceInfo.Builder builder98 = builder6.setDataCenterInfo(dataCenterInfo96);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig99 = new com.netflix.appinfo.MyDataCenterInstanceConfig("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS", dataCenterInfo96);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager8);
        org.junit.Assert.assertNotNull(instanceInfo9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 30 + "'", int12 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig17);
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertTrue("'" + actionType20 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType20.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str25, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(applicationInfoManager48);
        org.junit.Assert.assertNotNull(instanceInfo49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 30 + "'", int52 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig57);
        org.junit.Assert.assertNotNull(instanceInfo58);
        org.junit.Assert.assertNotNull(instanceInfo59);
        org.junit.Assert.assertTrue("'" + actionType60 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType60.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(applicationInfoManager80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 30 + "'", int83 == 30);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 30 + "'", int84 == 30);
        org.junit.Assert.assertTrue("'" + instanceStatus88 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus88.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(instanceInfo93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str94, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNotNull(strMap95);
        org.junit.Assert.assertNotNull(dataCenterInfo96);
        org.junit.Assert.assertNotNull(builder97);
        org.junit.Assert.assertNotNull(builder98);
    }

    @Test
    public void test04094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04094");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
// flaky:         instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder20.add("/healthcheck", "UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder20.setPort((int) (short) 100);
        com.netflix.appinfo.InstanceInfo instanceInfo26 = builder25.getRawInstance();
        java.lang.String str27 = instanceInfo26.getVIPAddress();
        int int28 = instanceInfo26.getCountryId();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = instanceInfo26.getDataCenterInfo();
        java.lang.Boolean boolean30 = instanceInfo26.isCoordinatingDiscoveryServer();
        int int31 = instanceInfo26.getSecurePort();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "HI!" + "'", str27, "HI!");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + false + "'", boolean30, false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 443 + "'", int31 == 443);
    }

    @Test
    public void test04095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04095");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig12 = applicationInfoManager0.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager13 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager13.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig16 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int17 = myDataCenterInstanceConfig16.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig16.getDataCenterInfo();
        java.lang.String str19 = myDataCenterInstanceConfig16.getNamespace();
        boolean boolean20 = myDataCenterInstanceConfig16.isNonSecurePortEnabled();
        applicationInfoManager13.config = myDataCenterInstanceConfig16;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig22 = applicationInfoManager13.config;
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager13.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo24 = applicationInfoManager13.instanceInfo;
        java.lang.Boolean boolean25 = null; // flaky: instanceInfo24.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus26 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
// flaky:         instanceInfo24.setOverriddenStatus(instanceStatus26);
        applicationInfoManager0.instanceInfo = instanceInfo24;
        java.lang.String str29 = instanceInfo24.getHostName();
        com.netflix.appinfo.InstanceInfo.Builder builder30 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder30.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder30.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder36 = builder30.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder36.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder38.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder42 = builder38.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder44 = builder38.setCountryId((-1));
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager45 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo46 = applicationInfoManager45.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig48 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int49 = myDataCenterInstanceConfig48.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo50 = myDataCenterInstanceConfig48.getDataCenterInfo();
        java.lang.String str51 = myDataCenterInstanceConfig48.getNamespace();
        boolean boolean52 = myDataCenterInstanceConfig48.isNonSecurePortEnabled();
        applicationInfoManager45.config = myDataCenterInstanceConfig48;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig54 = applicationInfoManager45.config;
        com.netflix.appinfo.InstanceInfo instanceInfo55 = applicationInfoManager45.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo56 = applicationInfoManager45.instanceInfo;
        java.lang.Boolean boolean57 = instanceInfo56.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus58 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo56.setOverriddenStatus(instanceStatus58);
        int int60 = instanceInfo56.getSecurePort();
        java.lang.String str61 = instanceInfo56.getHostName();
        java.util.Map<java.lang.String, java.lang.String> strMap62 = instanceInfo56.getMetadata();
        instanceInfo56.setIsDirty(false);
        com.netflix.appinfo.LeaseInfo leaseInfo65 = instanceInfo56.getLeaseInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder66 = builder38.setLeaseInfo(leaseInfo65);
        instanceInfo24.setLeaseInfo(leaseInfo65);
        long long68 = instanceInfo24.getLastUpdatedTimestamp();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig12);
        org.junit.Assert.assertNotNull(applicationInfoManager13);
        org.junit.Assert.assertNotNull(instanceInfo14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig22);
        org.junit.Assert.assertNotNull(instanceInfo23);
        org.junit.Assert.assertNotNull(instanceInfo24);
// flaky:         org.junit.Assert.assertEquals("'" + boolean25 + "' != '" + false + "'", boolean25, false);
        org.junit.Assert.assertTrue("'" + instanceStatus26 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus26.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(applicationInfoManager45);
        org.junit.Assert.assertNotNull(instanceInfo46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 30 + "'", int49 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig54);
        org.junit.Assert.assertNotNull(instanceInfo55);
        org.junit.Assert.assertNotNull(instanceInfo56);
        org.junit.Assert.assertEquals("'" + boolean57 + "' != '" + false + "'", boolean57, false);
        org.junit.Assert.assertTrue("'" + instanceStatus58 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus58.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 443 + "'", int60 == 443);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(leaseInfo65);
        org.junit.Assert.assertNotNull(builder66);
// flaky:         org.junit.Assert.assertTrue("'" + long68 + "' != '" + 1636106120940L + "'", long68 == 1636106120940L);
    }

    @Test
    public void test04096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04096");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = null; // flaky: instanceInfo11.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.Builder builder15 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo instanceInfo16 = builder15.build();
        java.lang.String str17 = instanceInfo16.getVersion();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int20 = myDataCenterInstanceConfig19.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo21 = myDataCenterInstanceConfig19.getDataCenterInfo();
        int int22 = myDataCenterInstanceConfig19.getNonSecurePort();
        java.lang.String str23 = myDataCenterInstanceConfig19.getIpAddress();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = myDataCenterInstanceConfig19.getMetadataMap();
        int int25 = myDataCenterInstanceConfig19.getLeaseRenewalIntervalInSeconds();
        boolean boolean26 = instanceInfo16.equals((java.lang.Object) myDataCenterInstanceConfig19);
        java.lang.String str27 = myDataCenterInstanceConfig19.getHomePageUrlPath();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UNKNOWN" + "'", str14, "UNKNOWN");
        org.junit.Assert.assertNotNull(instanceInfo16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "unknown" + "'", str17, "unknown");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 30 + "'", int20 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 80 + "'", int22 == 80);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "172.20.26.3" + "'", str23, "172.20.26.3");
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 30 + "'", int25 == 30);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/" + "'", str27, "/");
    }

    @Test
    public void test04097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04097");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = 0; // flaky: instanceInfo11.getSecurePort();
        int int13 = 0; // flaky: instanceInfo11.getPort();
        int int14 = instanceInfo11.getCountryId();
        boolean boolean15 = instanceInfo11.isDirty();
        int int16 = instanceInfo11.getPort();
        int int17 = instanceInfo11.getPort();
        java.lang.String str18 = instanceInfo11.getHomePageUrl();
        java.lang.String[] strArray19 = new java.lang.String[] {};
        com.netflix.appinfo.InstanceInfo instanceInfo20 = null;
        java.lang.String str21 = com.netflix.appinfo.InstanceInfo.getZone(strArray19, instanceInfo20);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager22 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager22.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig25 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int26 = myDataCenterInstanceConfig25.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo27 = myDataCenterInstanceConfig25.getDataCenterInfo();
        java.lang.String str28 = myDataCenterInstanceConfig25.getNamespace();
        boolean boolean29 = myDataCenterInstanceConfig25.isNonSecurePortEnabled();
        applicationInfoManager22.config = myDataCenterInstanceConfig25;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig31 = applicationInfoManager22.config;
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager22.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo33 = applicationInfoManager22.instanceInfo;
        int int34 = instanceInfo33.getSecurePort();
        int int35 = instanceInfo33.getPort();
        int int36 = instanceInfo33.getSecurePort();
        java.lang.String str37 = com.netflix.appinfo.InstanceInfo.getZone(strArray19, instanceInfo33);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager38 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo39 = applicationInfoManager38.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig41 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int42 = myDataCenterInstanceConfig41.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo43 = myDataCenterInstanceConfig41.getDataCenterInfo();
        java.lang.String str44 = myDataCenterInstanceConfig41.getNamespace();
        boolean boolean45 = myDataCenterInstanceConfig41.isNonSecurePortEnabled();
        applicationInfoManager38.config = myDataCenterInstanceConfig41;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig47 = applicationInfoManager38.config;
        com.netflix.appinfo.InstanceInfo instanceInfo48 = applicationInfoManager38.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo49 = applicationInfoManager38.instanceInfo;
        int int50 = instanceInfo49.getSecurePort();
        boolean boolean51 = instanceInfo49.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo52 = new com.netflix.appinfo.InstanceInfo(instanceInfo49);
        com.netflix.appinfo.InstanceInfo.ActionType actionType53 = com.netflix.appinfo.InstanceInfo.ActionType.MODIFIED;
        instanceInfo49.setActionType(actionType53);
        instanceInfo33.setActionType(actionType53);
        instanceInfo11.setActionType(actionType53);
        java.lang.String str57 = instanceInfo11.getVIPAddress();
        java.lang.Boolean boolean58 = instanceInfo11.isCoordinatingDiscoveryServer();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 80 + "'", int13 == 80);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
// flaky:         org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 80 + "'", int16 == 80);
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 80 + "'", int17 == 80);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str18, "http://inesserver2.windows.cin.ufpe.br:80/");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "default" + "'", str21, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager22);
        org.junit.Assert.assertNotNull(instanceInfo23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 30 + "'", int26 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig31);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 443 + "'", int34 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + int35 + "' != '" + 80 + "'", int35 == 80);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 443 + "'", int36 == 443);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "default" + "'", str37, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager38);
        org.junit.Assert.assertNotNull(instanceInfo39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig47);
        org.junit.Assert.assertNotNull(instanceInfo48);
        org.junit.Assert.assertNotNull(instanceInfo49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 443 + "'", int50 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + actionType53 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.MODIFIED + "'", actionType53.equals(com.netflix.appinfo.InstanceInfo.ActionType.MODIFIED));
// flaky:         org.junit.Assert.assertEquals("'" + str57 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str57, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + boolean58 + "' != '" + false + "'", boolean58, false);
    }

    @Test
    public void test04098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04098");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager3 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo4 = applicationInfoManager3.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig6 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int7 = myDataCenterInstanceConfig6.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig6.getDataCenterInfo();
        java.lang.String str9 = myDataCenterInstanceConfig6.getNamespace();
        boolean boolean10 = myDataCenterInstanceConfig6.isNonSecurePortEnabled();
        applicationInfoManager3.config = myDataCenterInstanceConfig6;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig12 = applicationInfoManager3.config;
        com.netflix.appinfo.InstanceInfo instanceInfo13 = applicationInfoManager3.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager3.instanceInfo;
        java.lang.String str15 = null; // flaky: instanceInfo14.getVersion();
// flaky:         instanceInfo14.setLastUpdatedTimestamp();
        applicationInfoManager0.instanceInfo = instanceInfo14;
        instanceInfo14.setLastDirtyTimestamp((java.lang.Long) 1636106097914L);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertNotNull(applicationInfoManager3);
        org.junit.Assert.assertNotNull(instanceInfo4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 30 + "'", int7 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig12);
        org.junit.Assert.assertNotNull(instanceInfo13);
        org.junit.Assert.assertNotNull(instanceInfo14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "unknown" + "'", str15, "unknown");
    }

    @Test
    public void test04099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04099");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        boolean boolean2 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        java.lang.String str3 = myDataCenterInstanceConfig1.getHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo4 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig1.getHostName(false);
        java.lang.String str7 = myDataCenterInstanceConfig1.getStatusPageUrl();
        java.lang.String str8 = myDataCenterInstanceConfig1.getHomePageUrlPath();
        java.lang.String str9 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        int int10 = myDataCenterInstanceConfig1.getSecurePort();
        int int11 = myDataCenterInstanceConfig1.getLeaseExpirationDurationInSeconds();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(dataCenterInfo4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str6, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/" + "'", str8, "/");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/Status" + "'", str9, "/Status");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 443 + "'", int10 == 443);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 90 + "'", int11 == 90);
    }

    @Test
    public void test04100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04100");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
// flaky:         instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder20.add("/healthcheck", "UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setSecureVIPAddress("172.20.26.3");
        com.netflix.appinfo.InstanceInfo instanceInfo26 = builder23.getRawInstance();
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder23.setNamespace("default");
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder28.setSecurePort((int) (byte) 100);
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder30.setSecureVIPAddress("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
    }

    @Test
    public void test04101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04101");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo instanceInfo12 = builder11.getRawInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = instanceInfo12.getMetadata();
        int int14 = instanceInfo12.getCountryId();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
    }

    @Test
    public void test04102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04102");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder6.setLastDirtyTimestamp((long) (short) 10);
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder13.setSecurePort((int) (short) -1);
        com.netflix.appinfo.InstanceInfo.ActionType actionType16 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder13.setActionType(actionType16);
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder17.setNamespace("http://default:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder17.setHealthCheckUrls("default", "", "http://default:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo24 = builder17.getRawInstance();
        instanceInfo24.setIsDirty(true);
        java.lang.String str27 = instanceInfo24.getAppName();
        int int28 = instanceInfo24.getCountryId();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + actionType16 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType16.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(instanceInfo24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "DEFAULT" + "'", str27, "DEFAULT");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
    }

    @Test
    public void test04103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04103");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        java.lang.String str6 = myDataCenterInstanceConfig2.getIpAddress();
        java.lang.String str7 = myDataCenterInstanceConfig2.getHealthCheckUrlPath();
        int int8 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager9 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager9.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int13 = myDataCenterInstanceConfig12.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo14 = myDataCenterInstanceConfig12.getDataCenterInfo();
        java.lang.String str15 = myDataCenterInstanceConfig12.getNamespace();
        boolean boolean16 = myDataCenterInstanceConfig12.isNonSecurePortEnabled();
        applicationInfoManager9.config = myDataCenterInstanceConfig12;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig18 = applicationInfoManager9.config;
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager9.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager9.instanceInfo;
        int int21 = 0; // flaky: instanceInfo20.getSecurePort();
        int int22 = 0; // flaky: instanceInfo20.getPort();
        int int23 = instanceInfo20.getCountryId();
        boolean boolean24 = instanceInfo20.isDirty();
        int int25 = instanceInfo20.getPort();
        java.lang.String str26 = instanceInfo20.getASGName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager27 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig2, instanceInfo20);
        java.lang.String str28 = instanceInfo20.getStatusPageUrl();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus29 = instanceInfo20.getStatus();
        java.lang.String str30 = instanceInfo20.getASGName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "172.20.26.3" + "'", str6, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/healthcheck" + "'", str7, "/healthcheck");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
        org.junit.Assert.assertNotNull(applicationInfoManager9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 30 + "'", int13 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertNotNull(instanceInfo20);
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 80 + "'", int22 == 80);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
// flaky:         org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 80 + "'", int25 == 80);
// flaky:         org.junit.Assert.assertNull(str26);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str28, "http://inesserver2.windows.cin.ufpe.br:80/Status");
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus29 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus29.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
// flaky:         org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test04104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04104");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setIPAddr("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.LeaseInfo leaseInfo7 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setLeaseInfo(leaseInfo7);
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder6.setSecurePort((int) (short) 0);
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder10.setNamespace("UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setSecureVIPAddressDeser("HI!");
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder14.setSID("172.20.26.3");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int20 = myDataCenterInstanceConfig19.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo21 = myDataCenterInstanceConfig19.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig22 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo21);
        java.lang.String str23 = myDataCenterInstanceConfig22.getAppname();
        java.lang.String str24 = myDataCenterInstanceConfig22.getNamespace();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig25 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager26 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager26.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig29 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int30 = myDataCenterInstanceConfig29.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo31 = myDataCenterInstanceConfig29.getDataCenterInfo();
        java.lang.String str32 = myDataCenterInstanceConfig29.getNamespace();
        boolean boolean33 = myDataCenterInstanceConfig29.isNonSecurePortEnabled();
        applicationInfoManager26.config = myDataCenterInstanceConfig29;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig35 = applicationInfoManager26.config;
        com.netflix.appinfo.InstanceInfo instanceInfo36 = applicationInfoManager26.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo37 = applicationInfoManager26.instanceInfo;
        int int38 = 0; // flaky: instanceInfo37.getSecurePort();
        boolean boolean39 = false; // flaky: instanceInfo37.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager40 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig25, instanceInfo37);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager41 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig22, instanceInfo37);
        instanceInfo37.setLastDirtyTimestamp((java.lang.Long) 100L);
        java.lang.String str44 = instanceInfo37.getSecureVipAddress();
        com.netflix.appinfo.InstanceInfo.ActionType actionType45 = instanceInfo37.getActionType();
        com.netflix.appinfo.InstanceInfo.Builder builder46 = builder16.setActionType(actionType45);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 30 + "'", int20 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "unknown" + "'", str23, "unknown");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/Status" + "'", str24, "/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 30 + "'", int30 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig35);
        org.junit.Assert.assertNotNull(instanceInfo36);
        org.junit.Assert.assertNotNull(instanceInfo37);
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
// flaky:         org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/" + "'", str44, "HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/");
// flaky:         org.junit.Assert.assertTrue("'" + actionType45 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType45.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(builder46);
    }

    @Test
    public void test04105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04105");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig0 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo1 = myDataCenterInstanceConfig0.getDataCenterInfo();
        boolean boolean2 = myDataCenterInstanceConfig0.getSecurePortEnabled();
        java.lang.String str3 = myDataCenterInstanceConfig0.getASGName();
        org.junit.Assert.assertNotNull(dataCenterInfo1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test04106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04106");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        java.lang.String str4 = myDataCenterInstanceConfig1.getVirtualHostName();
        java.lang.String str5 = myDataCenterInstanceConfig1.getHomePageUrl();
        com.netflix.appinfo.InstanceInfo.Builder builder6 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder6.setAppName("default");
        com.netflix.appinfo.InstanceInfo instanceInfo11 = builder6.build();
        boolean boolean12 = builder6.isInitialized();
        com.netflix.appinfo.InstanceInfo instanceInfo13 = builder6.getRawInstance();
        com.netflix.appinfo.LeaseInfo leaseInfo14 = instanceInfo13.getLeaseInfo();
        java.lang.String str15 = instanceInfo13.getAppGroupName();
        java.lang.String str16 = instanceInfo13.getStatusPageUrl();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager17 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo13);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus18 = null;
        applicationInfoManager17.setInstanceStatus(instanceStatus18);
        applicationInfoManager17.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager21 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo22 = applicationInfoManager21.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int25 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig24.getDataCenterInfo();
        java.lang.String str27 = myDataCenterInstanceConfig24.getNamespace();
        boolean boolean28 = myDataCenterInstanceConfig24.isNonSecurePortEnabled();
        applicationInfoManager21.config = myDataCenterInstanceConfig24;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig30 = applicationInfoManager21.config;
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager21.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager21.instanceInfo;
        java.lang.String str33 = instanceInfo32.getHomePageUrl();
        com.netflix.appinfo.LeaseInfo leaseInfo34 = null;
        instanceInfo32.setLeaseInfo(leaseInfo34);
        com.netflix.appinfo.InstanceInfo.Builder builder36 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder36.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder36.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder42 = builder36.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig43 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo44 = myDataCenterInstanceConfig43.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder45 = builder42.setDataCenterInfo(dataCenterInfo44);
        com.netflix.appinfo.InstanceInfo.Builder builder47 = builder42.setHostName("172.20.26.3");
        boolean boolean48 = instanceInfo32.equals((java.lang.Object) "172.20.26.3");
        boolean boolean49 = instanceInfo32.isDirty();
        java.lang.String str50 = instanceInfo32.getHostName();
        applicationInfoManager17.instanceInfo = instanceInfo32;
        int int52 = instanceInfo32.getSecurePort();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str4, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(instanceInfo13);
        org.junit.Assert.assertNull(leaseInfo14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(applicationInfoManager21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 30 + "'", int25 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(dataCenterInfo44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str50, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 7002 + "'", int52 == 7002);
    }

    @Test
    public void test04107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04107");
        com.netflix.appinfo.InstanceInfo instanceInfo0 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder1 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo0);
        com.netflix.appinfo.InstanceInfo.Builder builder3 = builder1.setNamespace("/Status");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean4 = builder1.isInitialized();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
    }

    @Test
    public void test04108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04108");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        java.lang.String str6 = myDataCenterInstanceConfig2.getIpAddress();
        java.lang.String str7 = myDataCenterInstanceConfig2.getHealthCheckUrlPath();
        int int8 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager9 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager9.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int13 = myDataCenterInstanceConfig12.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo14 = myDataCenterInstanceConfig12.getDataCenterInfo();
        java.lang.String str15 = myDataCenterInstanceConfig12.getNamespace();
        boolean boolean16 = myDataCenterInstanceConfig12.isNonSecurePortEnabled();
        applicationInfoManager9.config = myDataCenterInstanceConfig12;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig18 = applicationInfoManager9.config;
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager9.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager9.instanceInfo;
        int int21 = instanceInfo20.getSecurePort();
        int int22 = instanceInfo20.getPort();
        int int23 = instanceInfo20.getCountryId();
        boolean boolean24 = instanceInfo20.isDirty();
        int int25 = instanceInfo20.getPort();
        java.lang.String str26 = instanceInfo20.getASGName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager27 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig2, instanceInfo20);
        com.netflix.appinfo.InstanceInfo.PortType portType28 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        boolean boolean29 = instanceInfo20.isPortEnabled(portType28);
        java.lang.String str30 = instanceInfo20.getASGName();
        java.lang.String str31 = instanceInfo20.getHomePageUrl();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "172.20.26.3" + "'", str6, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/healthcheck" + "'", str7, "/healthcheck");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
        org.junit.Assert.assertNotNull(applicationInfoManager9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 30 + "'", int13 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 7002 + "'", int21 == 7002);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 7001 + "'", int22 == 7001);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 7001 + "'", int25 == 7001);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + portType28 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType28.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test04109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04109");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setNamespace("na");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder6.add("unknown", "UNKNOWN");
        com.netflix.appinfo.LeaseInfo leaseInfo18 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder17.setLeaseInfo(leaseInfo18);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder17.setIPAddr("default");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager22 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager22.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig25 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int26 = myDataCenterInstanceConfig25.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo27 = myDataCenterInstanceConfig25.getDataCenterInfo();
        java.lang.String str28 = myDataCenterInstanceConfig25.getNamespace();
        boolean boolean29 = myDataCenterInstanceConfig25.isNonSecurePortEnabled();
        applicationInfoManager22.config = myDataCenterInstanceConfig25;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig32 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int33 = myDataCenterInstanceConfig32.getLeaseRenewalIntervalInSeconds();
        int int34 = myDataCenterInstanceConfig32.getLeaseRenewalIntervalInSeconds();
        java.lang.String str35 = myDataCenterInstanceConfig32.getStatusPageUrlPath();
        applicationInfoManager22.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig32);
        applicationInfoManager22.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager38 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo39 = applicationInfoManager38.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig41 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int42 = myDataCenterInstanceConfig41.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo43 = myDataCenterInstanceConfig41.getDataCenterInfo();
        java.lang.String str44 = myDataCenterInstanceConfig41.getNamespace();
        boolean boolean45 = myDataCenterInstanceConfig41.isNonSecurePortEnabled();
        applicationInfoManager38.config = myDataCenterInstanceConfig41;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig47 = applicationInfoManager38.config;
        com.netflix.appinfo.InstanceInfo instanceInfo48 = applicationInfoManager38.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo49 = applicationInfoManager38.instanceInfo;
        int int50 = instanceInfo49.getSecurePort();
        boolean boolean51 = instanceInfo49.isDirty();
        java.lang.String str52 = instanceInfo49.getHostName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType53 = instanceInfo49.getActionType();
        boolean boolean54 = instanceInfo49.isDirty();
        boolean boolean55 = instanceInfo49.isDirty();
        int int56 = instanceInfo49.getPort();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus58 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("/Status");
        instanceInfo49.setStatusWithoutDirty(instanceStatus58);
        applicationInfoManager22.instanceInfo = instanceInfo49;
        com.netflix.appinfo.InstanceInfo instanceInfo61 = applicationInfoManager22.getInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig63 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int64 = myDataCenterInstanceConfig63.getLeaseRenewalIntervalInSeconds();
        int int65 = myDataCenterInstanceConfig63.getLeaseRenewalIntervalInSeconds();
        java.lang.String str66 = myDataCenterInstanceConfig63.getStatusPageUrlPath();
        boolean boolean67 = myDataCenterInstanceConfig63.getSecurePortEnabled();
        java.util.Map<java.lang.String, java.lang.String> strMap68 = myDataCenterInstanceConfig63.getMetadataMap();
        applicationInfoManager22.registerAppMetadata(strMap68);
        com.netflix.appinfo.InstanceInfo.Builder builder70 = builder17.setMetadata(strMap68);
        com.netflix.appinfo.InstanceInfo.Builder builder72 = builder70.setHomePageUrlForDeser("inesserver2.windows.cin.ufpe.br:80");
        boolean boolean73 = builder72.isInitialized();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(applicationInfoManager22);
// flaky:         org.junit.Assert.assertNull(instanceInfo23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 30 + "'", int26 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 30 + "'", int33 == 30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/Status" + "'", str35, "/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager38);
        org.junit.Assert.assertNotNull(instanceInfo39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig47);
        org.junit.Assert.assertNotNull(instanceInfo48);
        org.junit.Assert.assertNotNull(instanceInfo49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 443 + "'", int50 == 443);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str52, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNull(actionType53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 80 + "'", int56 == 80);
        org.junit.Assert.assertTrue("'" + instanceStatus58 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus58.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(instanceInfo61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 30 + "'", int64 == 30);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 30 + "'", int65 == 30);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "/Status" + "'", str66, "/Status");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test04110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04110");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig4.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo6);
        java.lang.String str8 = myDataCenterInstanceConfig7.getAppname();
        java.lang.String str9 = myDataCenterInstanceConfig7.getNamespace();
        applicationInfoManager0.config = myDataCenterInstanceConfig7;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager11 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager11.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig14 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int15 = myDataCenterInstanceConfig14.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo16 = myDataCenterInstanceConfig14.getDataCenterInfo();
        java.lang.String str17 = myDataCenterInstanceConfig14.getNamespace();
        boolean boolean18 = myDataCenterInstanceConfig14.isNonSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig14.getDataCenterInfo();
        applicationInfoManager11.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig14);
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig14);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager22 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager22.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig25 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int26 = myDataCenterInstanceConfig25.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo27 = myDataCenterInstanceConfig25.getDataCenterInfo();
        java.lang.String str28 = myDataCenterInstanceConfig25.getNamespace();
        boolean boolean29 = myDataCenterInstanceConfig25.isNonSecurePortEnabled();
        applicationInfoManager22.config = myDataCenterInstanceConfig25;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig31 = applicationInfoManager22.config;
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager22.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig35 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int36 = myDataCenterInstanceConfig35.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo37 = myDataCenterInstanceConfig35.getDataCenterInfo();
        java.lang.String str39 = myDataCenterInstanceConfig35.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo40 = myDataCenterInstanceConfig35.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig41 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo40);
        java.lang.String str42 = myDataCenterInstanceConfig41.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = myDataCenterInstanceConfig41.getMetadataMap();
        applicationInfoManager22.registerAppMetadata(strMap43);
        com.netflix.appinfo.InstanceInfo instanceInfo45 = applicationInfoManager22.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo46 = applicationInfoManager22.getInfo();
        java.lang.String str47 = instanceInfo46.getAppName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager48 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig14, instanceInfo46);
        com.netflix.appinfo.InstanceInfo.Builder builder49 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder51 = builder49.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder53 = builder49.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder55 = builder49.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig56 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo57 = myDataCenterInstanceConfig56.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder58 = builder55.setDataCenterInfo(dataCenterInfo57);
        com.netflix.appinfo.InstanceInfo.Builder builder60 = builder55.setHostName("172.20.26.3");
        com.netflix.appinfo.LeaseInfo leaseInfo61 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder62 = builder60.setLeaseInfo(leaseInfo61);
        com.netflix.appinfo.InstanceInfo.Builder builder64 = builder60.setHomePageUrlForDeser("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager65 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig67 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int68 = myDataCenterInstanceConfig67.getLeaseRenewalIntervalInSeconds();
        int int69 = myDataCenterInstanceConfig67.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager65.config = myDataCenterInstanceConfig67;
        java.lang.String str71 = myDataCenterInstanceConfig67.getHealthCheckUrlPath();
        java.lang.String str72 = myDataCenterInstanceConfig67.getNamespace();
        java.util.Map<java.lang.String, java.lang.String> strMap73 = myDataCenterInstanceConfig67.getMetadataMap();
        com.netflix.appinfo.InstanceInfo.Builder builder74 = builder60.setMetadata(strMap73);
        com.netflix.appinfo.InstanceInfo.Builder builder78 = builder60.setHealthCheckUrls("/Status", "/", "172.20.26.3");
        com.netflix.appinfo.InstanceInfo instanceInfo79 = builder78.getRawInstance();
        java.util.Set<java.lang.String> strSet80 = instanceInfo79.getHealthCheckUrls();
        boolean boolean81 = instanceInfo46.equals((java.lang.Object) strSet80);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "unknown" + "'", str8, "unknown");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/Status" + "'", str9, "/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 30 + "'", int15 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertNotNull(applicationInfoManager22);
        org.junit.Assert.assertNotNull(instanceInfo23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 30 + "'", int26 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig31);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 30 + "'", int36 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str39, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(instanceInfo45);
        org.junit.Assert.assertNotNull(instanceInfo46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "UNKNOWN" + "'", str47, "UNKNOWN");
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(dataCenterInfo57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(applicationInfoManager65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 30 + "'", int68 == 30);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 30 + "'", int69 == 30);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "/healthcheck" + "'", str71, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(instanceInfo79);
        org.junit.Assert.assertNotNull(strSet80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test04111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04111");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder12.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder12.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder19.setAppName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder19.setLastDirtyTimestamp(1636105971992L);
        boolean boolean24 = builder19.isInitialized();
        com.netflix.appinfo.LeaseInfo leaseInfo25 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder19.setLeaseInfo(leaseInfo25);
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder19.setHealthCheckUrlsForDeser("http://hi!:80/Status", "http://inesserver2.windows.cin.ufpe.br:80/Status");
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder32 = builder19.setHomePageUrl("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/", "na");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder29);
    }

    @Test
    public void test04112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04112");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        java.lang.Boolean boolean12 = instanceInfo11.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus13 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo11.setOverriddenStatus(instanceStatus13);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo16 = applicationInfoManager15.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig18 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int19 = myDataCenterInstanceConfig18.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo20 = myDataCenterInstanceConfig18.getDataCenterInfo();
        java.lang.String str21 = myDataCenterInstanceConfig18.getNamespace();
        boolean boolean22 = myDataCenterInstanceConfig18.isNonSecurePortEnabled();
        applicationInfoManager15.config = myDataCenterInstanceConfig18;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig24 = applicationInfoManager15.config;
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager15.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo26 = applicationInfoManager15.instanceInfo;
        java.lang.Boolean boolean27 = instanceInfo26.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus28 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo26.setOverriddenStatus(instanceStatus28);
        instanceInfo26.setLastDirtyTimestamp((java.lang.Long) (-1L));
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus32 = instanceInfo26.getOverriddenStatus();
        instanceInfo11.setOverriddenStatus(instanceStatus32);
        java.util.Map<java.lang.String, java.lang.String> strMap34 = instanceInfo11.getMetadata();
        instanceInfo11.setLastUpdatedTimestamp();
        long long36 = instanceInfo11.getLastUpdatedTimestamp();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertTrue("'" + instanceStatus13 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus13.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(applicationInfoManager15);
        org.junit.Assert.assertNotNull(instanceInfo16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 30 + "'", int19 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertEquals("'" + boolean27 + "' != '" + false + "'", boolean27, false);
        org.junit.Assert.assertTrue("'" + instanceStatus28 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus28.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + instanceStatus32 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus32.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(strMap34);
// flaky:         org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1636106121456L + "'", long36 == 1636106121456L);
    }

    @Test
    public void test04113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04113");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder18.setHealthCheckUrlsForDeser("", "hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setLastDirtyTimestamp((long) 443);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager26 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager26.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig29 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int30 = myDataCenterInstanceConfig29.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo31 = myDataCenterInstanceConfig29.getDataCenterInfo();
        int int32 = myDataCenterInstanceConfig29.getLeaseExpirationDurationInSeconds();
        java.lang.String str33 = myDataCenterInstanceConfig29.getHomePageUrlPath();
        applicationInfoManager26.config = myDataCenterInstanceConfig29;
        java.util.Map<java.lang.String, java.lang.String> strMap35 = myDataCenterInstanceConfig29.getMetadataMap();
        com.netflix.appinfo.InstanceInfo.Builder builder36 = builder25.setMetadata(strMap35);
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder36.setStatusPageUrlForDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder36.setPort((int) '#');
        com.netflix.appinfo.InstanceInfo.Builder builder42 = builder40.setStatusPageUrlForDeser("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder44 = builder42.setHostName("inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.InstanceInfo.Builder builder46 = builder44.setAppGroupName("inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(applicationInfoManager26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 30 + "'", int30 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 90 + "'", int32 == 90);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/" + "'", str33, "/");
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
    }

    @Test
    public void test04114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04114");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("hi!");
        java.lang.String str2 = myDataCenterInstanceConfig1.getStatusPageUrl();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        boolean boolean4 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        java.lang.String str5 = myDataCenterInstanceConfig1.getNamespace();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
    }

    @Test
    public void test04115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04115");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("http://inesserver2.windows.cin.ufpe.br:80/", "default");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager6 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo7 = applicationInfoManager6.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig9.getDataCenterInfo();
        java.lang.String str12 = myDataCenterInstanceConfig9.getNamespace();
        boolean boolean13 = myDataCenterInstanceConfig9.isNonSecurePortEnabled();
        applicationInfoManager6.config = myDataCenterInstanceConfig9;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig15 = applicationInfoManager6.config;
        com.netflix.appinfo.InstanceInfo instanceInfo16 = applicationInfoManager6.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo17 = applicationInfoManager6.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType18 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo17.setActionType(actionType18);
        com.netflix.appinfo.LeaseInfo leaseInfo20 = null;
        instanceInfo17.setLeaseInfo(leaseInfo20);
        java.lang.String str22 = instanceInfo17.getSID();
        com.netflix.appinfo.InstanceInfo instanceInfo23 = new com.netflix.appinfo.InstanceInfo(instanceInfo17);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager24 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager24.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig27 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int28 = myDataCenterInstanceConfig27.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig27.getDataCenterInfo();
        java.lang.String str30 = myDataCenterInstanceConfig27.getNamespace();
        boolean boolean31 = myDataCenterInstanceConfig27.isNonSecurePortEnabled();
        applicationInfoManager24.config = myDataCenterInstanceConfig27;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig33 = applicationInfoManager24.config;
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager24.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager24.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType36 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo35.setActionType(actionType36);
        com.netflix.appinfo.LeaseInfo leaseInfo38 = null;
        instanceInfo35.setLeaseInfo(leaseInfo38);
        java.util.Set<java.lang.String> strSet40 = instanceInfo35.getHealthCheckUrls();
        java.lang.String str41 = instanceInfo35.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder42 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo35);
        com.netflix.appinfo.InstanceInfo.Builder builder45 = builder42.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder47 = builder42.setVIPAddressDeser("hi!");
        com.netflix.appinfo.LeaseInfo leaseInfo48 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder49 = builder42.setLeaseInfo(leaseInfo48);
        com.netflix.appinfo.InstanceInfo.PortType portType50 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder52 = builder42.enablePort(portType50, false);
        boolean boolean53 = instanceInfo17.isPortEnabled(portType50);
        com.netflix.appinfo.InstanceInfo.Builder builder55 = builder2.enablePort(portType50, false);
        com.netflix.appinfo.InstanceInfo.Builder builder57 = builder2.setAppName("inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.InstanceInfo.Builder builder60 = builder2.setHealthCheckUrlsForDeser("inesserver2.windows.cin.ufpe.br", "http://hi!:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder62 = builder2.setPort((int) (byte) 0);
        boolean boolean63 = builder62.isInitialized();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(applicationInfoManager6);
        org.junit.Assert.assertNotNull(instanceInfo7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig15);
        org.junit.Assert.assertNotNull(instanceInfo16);
        org.junit.Assert.assertNotNull(instanceInfo17);
        org.junit.Assert.assertTrue("'" + actionType18 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType18.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "na" + "'", str22, "na");
        org.junit.Assert.assertNotNull(applicationInfoManager24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 30 + "'", int28 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertTrue("'" + actionType36 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType36.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str41, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + portType50 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType50.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test04116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04116");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        java.lang.String str4 = myDataCenterInstanceConfig3.getASGName();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = myDataCenterInstanceConfig3.getMetadataMap();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig3.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig("na", dataCenterInfo6);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig("", dataCenterInfo6);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("default", dataCenterInfo6);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo10 = myDataCenterInstanceConfig9.getDataCenterInfo();
        java.lang.String str11 = myDataCenterInstanceConfig9.getSecureVirtualHostName();
        int int12 = myDataCenterInstanceConfig9.getLeaseExpirationDurationInSeconds();
        boolean boolean13 = myDataCenterInstanceConfig9.isInstanceEnabledOnit();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertNotNull(dataCenterInfo10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 90 + "'", int12 == 90);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test04117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04117");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig1.getDataCenterInfo();
        int int4 = myDataCenterInstanceConfig1.getNonSecurePort();
        java.lang.String str5 = myDataCenterInstanceConfig1.getSecureHealthCheckUrl();
        java.lang.String str6 = myDataCenterInstanceConfig1.getHomePageUrl();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager7 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig8 = applicationInfoManager7.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager9 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig11 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int12 = myDataCenterInstanceConfig11.getLeaseRenewalIntervalInSeconds();
        int int13 = myDataCenterInstanceConfig11.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager9.config = myDataCenterInstanceConfig11;
        java.lang.String str15 = myDataCenterInstanceConfig11.getIpAddress();
        java.lang.String str16 = myDataCenterInstanceConfig11.getVirtualHostName();
        java.lang.String str18 = myDataCenterInstanceConfig11.getHostName(true);
        applicationInfoManager7.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig11);
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager7.instanceInfo;
        java.lang.String str21 = instanceInfo20.getVIPAddress();
        com.netflix.appinfo.InstanceInfo instanceInfo22 = new com.netflix.appinfo.InstanceInfo(instanceInfo20);
        java.lang.String str23 = instanceInfo22.getVersion();
        java.lang.String str24 = instanceInfo22.getVersion();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager25 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo22);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 80 + "'", int4 == 80);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(applicationInfoManager7);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig8);
        org.junit.Assert.assertNotNull(applicationInfoManager9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 30 + "'", int12 == 30);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 30 + "'", int13 == 30);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "172.20.26.3" + "'", str15, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str16, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str18, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str21, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "unknown" + "'", str23, "unknown");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "unknown" + "'", str24, "unknown");
    }

    @Test
    public void test04118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04118");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder18.setHealthCheckUrlsForDeser("", "hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setLastDirtyTimestamp((long) 443);
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder23.setAppGroupName("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder27.setPort((int) (byte) 10);
        com.netflix.appinfo.InstanceInfo instanceInfo30 = builder29.build();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(instanceInfo30);
    }

    @Test
    public void test04119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04119");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        int int3 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        boolean boolean5 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager6 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo7 = applicationInfoManager6.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig9.getDataCenterInfo();
        java.lang.String str12 = myDataCenterInstanceConfig9.getNamespace();
        boolean boolean13 = myDataCenterInstanceConfig9.isNonSecurePortEnabled();
        applicationInfoManager6.config = myDataCenterInstanceConfig9;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig15 = applicationInfoManager6.config;
        com.netflix.appinfo.InstanceInfo instanceInfo16 = applicationInfoManager6.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo17 = applicationInfoManager6.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType18 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo17.setActionType(actionType18);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager20 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager20.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig23 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int24 = myDataCenterInstanceConfig23.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = myDataCenterInstanceConfig23.getDataCenterInfo();
        java.lang.String str26 = myDataCenterInstanceConfig23.getNamespace();
        boolean boolean27 = myDataCenterInstanceConfig23.isNonSecurePortEnabled();
        applicationInfoManager20.config = myDataCenterInstanceConfig23;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig29 = applicationInfoManager20.config;
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager20.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager20.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType32 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo31.setActionType(actionType32);
        instanceInfo17.setActionType(actionType32);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager35 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo17);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus37 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("inesserver2.windows.cin.ufpe.br:80");
        instanceInfo17.setOverriddenStatus(instanceStatus37);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus40 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("/Status");
        instanceInfo17.setOverriddenStatus(instanceStatus40);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus42 = instanceInfo17.getOverriddenStatus();
        java.lang.String str43 = instanceInfo17.getAppName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus44 = instanceInfo17.getOverriddenStatus();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/Status" + "'", str4, "/Status");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager6);
        org.junit.Assert.assertNotNull(instanceInfo7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig15);
        org.junit.Assert.assertNotNull(instanceInfo16);
        org.junit.Assert.assertNotNull(instanceInfo17);
        org.junit.Assert.assertTrue("'" + actionType18 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType18.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager20);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 30 + "'", int24 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig29);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertTrue("'" + actionType32 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType32.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + instanceStatus37 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus37.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertTrue("'" + instanceStatus40 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus40.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertTrue("'" + instanceStatus42 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus42.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UNKNOWN" + "'", str43, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + instanceStatus44 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus44.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
    }

    @Test
    public void test04120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04120");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder8.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder8.setSecureVIPAddress("na");
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder8.setPort(10);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test04121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04121");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setSecurePort(30);
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder20.setAppGroupName("");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig27 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int28 = myDataCenterInstanceConfig27.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig27.getDataCenterInfo();
        java.lang.String str31 = myDataCenterInstanceConfig27.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo32 = myDataCenterInstanceConfig27.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig33 = new com.netflix.appinfo.MyDataCenterInstanceConfig("UNKNOWN", dataCenterInfo32);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig34 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo32);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig35 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo32);
        java.lang.String str36 = myDataCenterInstanceConfig35.getHomePageUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo37 = myDataCenterInstanceConfig35.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder22.setDataCenterInfo(dataCenterInfo37);
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder22.setHostName("http://default:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder42 = builder22.setLastDirtyTimestamp(1636105983675L);
        com.netflix.appinfo.InstanceInfo.Builder builder46 = builder22.setHealthCheckUrls("http://inesserver2.windows.cin.ufpe.br:80/Status", "DEFAULT", "hi!");
        com.netflix.appinfo.InstanceInfo instanceInfo47 = builder46.getRawInstance();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 30 + "'", int28 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str31, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(dataCenterInfo37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(instanceInfo47);
    }

    @Test
    public void test04122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04122");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder6.setLastDirtyTimestamp((long) (short) 10);
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder13.setSecurePort((int) (short) -1);
        com.netflix.appinfo.InstanceInfo.ActionType actionType16 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder13.setActionType(actionType16);
        com.netflix.appinfo.InstanceInfo instanceInfo18 = builder13.getRawInstance();
        java.lang.String str19 = instanceInfo18.getId();
        java.util.Set<java.lang.String> strSet20 = instanceInfo18.getHealthCheckUrls();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + actionType16 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType16.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "172.20.26.3" + "'", str19, "172.20.26.3");
        org.junit.Assert.assertNotNull(strSet20);
    }

    @Test
    public void test04123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04123");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setSecureVIPAddress("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder25.setHostName("default");
        com.netflix.appinfo.LeaseInfo leaseInfo28 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder25.setLeaseInfo(leaseInfo28);
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder29.setHealthCheckUrls("unknown", "hi!", "http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig34 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        java.lang.String str35 = myDataCenterInstanceConfig34.getASGName();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = myDataCenterInstanceConfig34.getMetadataMap();
        com.netflix.appinfo.InstanceInfo.Builder builder37 = builder29.setMetadata(strMap36);
        com.netflix.appinfo.InstanceInfo.Builder builder39 = builder37.setAppGroupName("HTTP://HI!:80/STATUS");
        com.netflix.appinfo.InstanceInfo.Builder builder41 = builder37.setHomePageUrlForDeser("");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
    }

    @Test
    public void test04124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04124");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setSecureVIPAddressDeser("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo15 = builder6.build();
        com.netflix.appinfo.LeaseInfo leaseInfo16 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder6.setLeaseInfo(leaseInfo16);
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder6.setPort((int) ' ');
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder6.setStatusPageUrlForDeser("HTTP://HI!:80/STATUS");
        boolean boolean22 = builder21.isInitialized();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager23 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo24 = applicationInfoManager23.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig26 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int27 = myDataCenterInstanceConfig26.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo28 = myDataCenterInstanceConfig26.getDataCenterInfo();
        java.lang.String str29 = myDataCenterInstanceConfig26.getNamespace();
        boolean boolean30 = myDataCenterInstanceConfig26.isNonSecurePortEnabled();
        applicationInfoManager23.config = myDataCenterInstanceConfig26;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig32 = applicationInfoManager23.config;
        com.netflix.appinfo.InstanceInfo instanceInfo33 = applicationInfoManager23.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager23.instanceInfo;
        int int35 = instanceInfo34.getSecurePort();
        boolean boolean36 = instanceInfo34.isDirty();
        java.lang.String str37 = instanceInfo34.getHostName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus38 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        instanceInfo34.setStatus(instanceStatus38);
        com.netflix.appinfo.LeaseInfo leaseInfo40 = instanceInfo34.getLeaseInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder41 = builder21.setLeaseInfo(leaseInfo40);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(applicationInfoManager23);
        org.junit.Assert.assertNotNull(instanceInfo24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 30 + "'", int27 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 30 + "'", int35 == 30);
// flaky:         org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "default" + "'", str37, "default");
        org.junit.Assert.assertTrue("'" + instanceStatus38 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus38.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNull(leaseInfo40);
        org.junit.Assert.assertNotNull(builder41);
    }

    @Test
    public void test04125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04125");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        int int3 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        boolean boolean5 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        com.netflix.appinfo.InstanceInfo instanceInfo6 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager7 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo6);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = myDataCenterInstanceConfig9.getMetadataMap();
        java.lang.String str11 = myDataCenterInstanceConfig9.getHealthCheckUrlPath();
        int int12 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        java.lang.String str14 = myDataCenterInstanceConfig9.getHostName(true);
        applicationInfoManager7.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig9);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager16 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo17 = applicationInfoManager16.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int20 = myDataCenterInstanceConfig19.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo21 = myDataCenterInstanceConfig19.getDataCenterInfo();
        java.lang.String str22 = myDataCenterInstanceConfig19.getNamespace();
        boolean boolean23 = myDataCenterInstanceConfig19.isNonSecurePortEnabled();
        applicationInfoManager16.config = myDataCenterInstanceConfig19;
        int int25 = myDataCenterInstanceConfig19.getLeaseExpirationDurationInSeconds();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = myDataCenterInstanceConfig19.getMetadataMap();
        java.lang.String str27 = myDataCenterInstanceConfig19.getHealthCheckUrl();
        java.lang.String str28 = myDataCenterInstanceConfig19.getHomePageUrlPath();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig19.getDataCenterInfo();
        java.lang.String str30 = myDataCenterInstanceConfig19.getHomePageUrlPath();
        applicationInfoManager7.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig19);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/Status" + "'", str4, "/Status");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/healthcheck" + "'", str11, "/healthcheck");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 30 + "'", int12 == 30);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str14, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager16);
        org.junit.Assert.assertNotNull(instanceInfo17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 30 + "'", int20 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 90 + "'", int25 == 90);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "/" + "'", str28, "/");
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "/" + "'", str30, "/");
    }

    @Test
    public void test04126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04126");
        com.netflix.appinfo.InstanceInfo instanceInfo0 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder1 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo0);
        com.netflix.appinfo.InstanceInfo.Builder builder3 = builder1.setNamespace("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder3.setNamespace("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int9 = myDataCenterInstanceConfig8.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo10 = myDataCenterInstanceConfig8.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig11 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo10);
        java.lang.String str12 = myDataCenterInstanceConfig11.getAppname();
        java.lang.String str13 = myDataCenterInstanceConfig11.getNamespace();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig14 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo16 = applicationInfoManager15.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig18 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int19 = myDataCenterInstanceConfig18.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo20 = myDataCenterInstanceConfig18.getDataCenterInfo();
        java.lang.String str21 = myDataCenterInstanceConfig18.getNamespace();
        boolean boolean22 = myDataCenterInstanceConfig18.isNonSecurePortEnabled();
        applicationInfoManager15.config = myDataCenterInstanceConfig18;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig24 = applicationInfoManager15.config;
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager15.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo26 = applicationInfoManager15.instanceInfo;
        int int27 = instanceInfo26.getSecurePort();
        boolean boolean28 = instanceInfo26.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager29 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig14, instanceInfo26);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager30 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig11, instanceInfo26);
        java.lang.String str31 = instanceInfo26.getHomePageUrl();
        long long32 = instanceInfo26.getLastUpdatedTimestamp();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager33 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager33.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig36 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int37 = myDataCenterInstanceConfig36.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo38 = myDataCenterInstanceConfig36.getDataCenterInfo();
        java.lang.String str39 = myDataCenterInstanceConfig36.getNamespace();
        boolean boolean40 = myDataCenterInstanceConfig36.isNonSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo41 = myDataCenterInstanceConfig36.getDataCenterInfo();
        applicationInfoManager33.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig36);
        boolean boolean43 = myDataCenterInstanceConfig36.getSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager44 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo45 = applicationInfoManager44.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig47 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int48 = myDataCenterInstanceConfig47.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo49 = myDataCenterInstanceConfig47.getDataCenterInfo();
        java.lang.String str50 = myDataCenterInstanceConfig47.getNamespace();
        boolean boolean51 = myDataCenterInstanceConfig47.isNonSecurePortEnabled();
        applicationInfoManager44.config = myDataCenterInstanceConfig47;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig53 = applicationInfoManager44.config;
        com.netflix.appinfo.InstanceInfo instanceInfo54 = applicationInfoManager44.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo55 = applicationInfoManager44.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType56 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo55.setActionType(actionType56);
        java.lang.String str58 = instanceInfo55.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType59 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo55.setActionType(actionType59);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager61 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig36, instanceInfo55);
        java.lang.String str62 = instanceInfo55.getIPAddr();
        java.util.Set<java.lang.String> strSet63 = instanceInfo55.getHealthCheckUrls();
        boolean boolean64 = instanceInfo26.equals((java.lang.Object) instanceInfo55);
        com.netflix.appinfo.LeaseInfo leaseInfo65 = instanceInfo55.getLeaseInfo();
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder66 = builder3.setLeaseInfo(leaseInfo65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 30 + "'", int9 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "unknown" + "'", str12, "unknown");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/Status" + "'", str13, "/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager15);
        org.junit.Assert.assertNotNull(instanceInfo16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 30 + "'", int19 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 443 + "'", int27 == 443);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str31, "http://inesserver2.windows.cin.ufpe.br:80/");
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1636106121719L + "'", long32 == 1636106121719L);
        org.junit.Assert.assertNotNull(applicationInfoManager33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 30 + "'", int37 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager44);
        org.junit.Assert.assertNotNull(instanceInfo45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 30 + "'", int48 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig53);
        org.junit.Assert.assertNotNull(instanceInfo54);
        org.junit.Assert.assertNotNull(instanceInfo55);
        org.junit.Assert.assertTrue("'" + actionType56 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType56.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "UNKNOWN" + "'", str58, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + actionType59 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType59.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "172.20.26.3" + "'", str62, "172.20.26.3");
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(leaseInfo65);
    }

    @Test
    public void test04127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04127");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setHostName("172.20.26.3");
        com.netflix.appinfo.LeaseInfo leaseInfo12 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder11.setLeaseInfo(leaseInfo12);
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder11.setHomePageUrlForDeser("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder15.setHealthCheckUrlsForDeser("inesserver2.windows.cin.ufpe.br:80", "default");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.setStatusPageUrl("http://hi!:80/Status", "eureka.");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager22 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int25 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        int int26 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager22.config = myDataCenterInstanceConfig24;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig28 = applicationInfoManager22.config;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager22;
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager22.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo31 = new com.netflix.appinfo.InstanceInfo(instanceInfo30);
        java.lang.String str32 = instanceInfo30.getAppName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager33 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager33.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig36 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int37 = myDataCenterInstanceConfig36.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo38 = myDataCenterInstanceConfig36.getDataCenterInfo();
        java.lang.String str39 = myDataCenterInstanceConfig36.getNamespace();
        boolean boolean40 = myDataCenterInstanceConfig36.isNonSecurePortEnabled();
        applicationInfoManager33.config = myDataCenterInstanceConfig36;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig42 = applicationInfoManager33.config;
        com.netflix.appinfo.InstanceInfo instanceInfo43 = applicationInfoManager33.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo44 = applicationInfoManager33.instanceInfo;
        int int45 = instanceInfo44.getSecurePort();
        boolean boolean46 = instanceInfo44.isDirty();
        java.lang.String str47 = instanceInfo44.getHostName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus48 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        instanceInfo44.setStatus(instanceStatus48);
        com.netflix.appinfo.InstanceInfo.PortType portType50 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean51 = instanceInfo44.isPortEnabled(portType50);
        boolean boolean52 = instanceInfo30.isPortEnabled(portType50);
        com.netflix.appinfo.InstanceInfo.Builder builder54 = builder18.enablePort(portType50, false);
        com.netflix.appinfo.InstanceInfo.Builder builder56 = builder54.setSecureVIPAddressDeser("unknown");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(applicationInfoManager22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 30 + "'", int25 == 30);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 30 + "'", int26 == 30);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig28);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UNKNOWN" + "'", str32, "UNKNOWN");
        org.junit.Assert.assertNotNull(applicationInfoManager33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 30 + "'", int37 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig42);
        org.junit.Assert.assertNotNull(instanceInfo43);
        org.junit.Assert.assertNotNull(instanceInfo44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 443 + "'", int45 == 443);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str47, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + instanceStatus48 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus48.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertTrue("'" + portType50 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType50.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
    }

    @Test
    public void test04128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04128");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = myDataCenterInstanceConfig1.getMetadataMap();
        java.lang.String str3 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        int int4 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        int int5 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str6 = myDataCenterInstanceConfig1.getStatusPageUrl();
        java.lang.String str7 = myDataCenterInstanceConfig1.getVirtualHostName();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "/healthcheck" + "'", str3, "/healthcheck");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str7, "inesserver2.windows.cin.ufpe.br:80");
    }

    @Test
    public void test04129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04129");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        java.lang.String str4 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        java.lang.String str5 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        java.lang.String str6 = myDataCenterInstanceConfig1.getAppname();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = myDataCenterInstanceConfig1.getMetadataMap();
        java.lang.String str8 = myDataCenterInstanceConfig1.getSecureHealthCheckUrl();
        int int9 = myDataCenterInstanceConfig1.getNonSecurePort();
        java.lang.String str11 = myDataCenterInstanceConfig1.getHostName(false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/healthcheck" + "'", str4, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/Status" + "'", str5, "/Status");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "unknown" + "'", str6, "unknown");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 80 + "'", int9 == 80);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str11, "inesserver2.windows.cin.ufpe.br");
    }

    @Test
    public void test04130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04130");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        boolean boolean13 = instanceInfo11.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        java.lang.String str15 = instanceInfo14.getVersion();
        instanceInfo14.setLastUpdatedTimestamp();
        java.lang.String str17 = instanceInfo14.getAppName();
        java.lang.String str18 = instanceInfo14.getSID();
        java.lang.String str19 = instanceInfo14.getASGName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager20 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager20.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig23 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int24 = myDataCenterInstanceConfig23.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = myDataCenterInstanceConfig23.getDataCenterInfo();
        java.lang.String str26 = myDataCenterInstanceConfig23.getNamespace();
        boolean boolean27 = myDataCenterInstanceConfig23.isNonSecurePortEnabled();
        applicationInfoManager20.config = myDataCenterInstanceConfig23;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig29 = applicationInfoManager20.config;
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager20.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager20.instanceInfo;
        java.lang.Boolean boolean32 = instanceInfo31.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus33 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo31.setOverriddenStatus(instanceStatus33);
        int int35 = instanceInfo31.getSecurePort();
        java.lang.String str36 = instanceInfo31.getHostName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager37 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo38 = applicationInfoManager37.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig40 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int41 = myDataCenterInstanceConfig40.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo42 = myDataCenterInstanceConfig40.getDataCenterInfo();
        java.lang.String str43 = myDataCenterInstanceConfig40.getNamespace();
        boolean boolean44 = myDataCenterInstanceConfig40.isNonSecurePortEnabled();
        applicationInfoManager37.config = myDataCenterInstanceConfig40;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig46 = applicationInfoManager37.config;
        com.netflix.appinfo.InstanceInfo instanceInfo47 = applicationInfoManager37.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo48 = applicationInfoManager37.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType49 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo48.setActionType(actionType49);
        com.netflix.appinfo.LeaseInfo leaseInfo51 = null;
        instanceInfo48.setLeaseInfo(leaseInfo51);
        java.lang.String str53 = instanceInfo48.getSID();
        com.netflix.appinfo.LeaseInfo leaseInfo54 = instanceInfo48.getLeaseInfo();
        boolean boolean55 = instanceInfo31.equals((java.lang.Object) instanceInfo48);
        com.netflix.appinfo.LeaseInfo leaseInfo56 = instanceInfo48.getLeaseInfo();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo57 = instanceInfo48.getDataCenterInfo();
        boolean boolean58 = instanceInfo14.equals((java.lang.Object) instanceInfo48);
        java.lang.String str59 = instanceInfo14.getAppName();
        java.lang.String str60 = instanceInfo14.getId();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "unknown" + "'", str15, "unknown");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UNKNOWN" + "'", str17, "UNKNOWN");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "INESSERVER2.WINDOWS.CIN.UFPE.BR" + "'", str18, "INESSERVER2.WINDOWS.CIN.UFPE.BR");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(applicationInfoManager20);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 30 + "'", int24 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig29);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertTrue("'" + instanceStatus33 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus33.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 443 + "'", int35 == 443);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str36, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager37);
        org.junit.Assert.assertNotNull(instanceInfo38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 30 + "'", int41 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig46);
        org.junit.Assert.assertNotNull(instanceInfo47);
        org.junit.Assert.assertNotNull(instanceInfo48);
        org.junit.Assert.assertTrue("'" + actionType49 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType49.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "INESSERVER2.WINDOWS.CIN.UFPE.BR" + "'", str53, "INESSERVER2.WINDOWS.CIN.UFPE.BR");
        org.junit.Assert.assertNull(leaseInfo54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(leaseInfo56);
        org.junit.Assert.assertNotNull(dataCenterInfo57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "UNKNOWN" + "'", str59, "UNKNOWN");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str60, "inesserver2.windows.cin.ufpe.br");
    }

    @Test
    public void test04131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04131");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        int int4 = myDataCenterInstanceConfig1.getSecurePort();
        java.lang.String str5 = myDataCenterInstanceConfig1.getAppGroupName();
        java.lang.String str6 = myDataCenterInstanceConfig1.getASGName();
        java.lang.String str7 = myDataCenterInstanceConfig1.getASGName();
        boolean boolean8 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        java.lang.String str9 = myDataCenterInstanceConfig1.getSecureHealthCheckUrl();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 443 + "'", int4 == 443);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "unknown" + "'", str5, "unknown");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test04132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04132");
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig0 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager1 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig4.getDataCenterInfo();
        java.lang.String str7 = myDataCenterInstanceConfig4.getNamespace();
        boolean boolean8 = myDataCenterInstanceConfig4.isNonSecurePortEnabled();
        applicationInfoManager1.config = myDataCenterInstanceConfig4;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig10 = applicationInfoManager1.config;
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig14 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int15 = myDataCenterInstanceConfig14.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo16 = myDataCenterInstanceConfig14.getDataCenterInfo();
        java.lang.String str18 = myDataCenterInstanceConfig14.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig14.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig20 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo19);
        java.lang.String str21 = myDataCenterInstanceConfig20.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = myDataCenterInstanceConfig20.getMetadataMap();
        applicationInfoManager1.registerAppMetadata(strMap22);
        com.netflix.appinfo.InstanceInfo instanceInfo24 = applicationInfoManager1.instanceInfo;
        java.lang.String str25 = instanceInfo24.getStatusPageUrl();
        java.lang.String str26 = instanceInfo24.getId();
        java.lang.String str27 = instanceInfo24.getSecureVipAddress();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager28 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig0, instanceInfo24);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager29 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager29.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig32 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int33 = myDataCenterInstanceConfig32.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo34 = myDataCenterInstanceConfig32.getDataCenterInfo();
        java.lang.String str35 = myDataCenterInstanceConfig32.getNamespace();
        boolean boolean36 = myDataCenterInstanceConfig32.isNonSecurePortEnabled();
        applicationInfoManager29.config = myDataCenterInstanceConfig32;
        int int38 = myDataCenterInstanceConfig32.getLeaseExpirationDurationInSeconds();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = myDataCenterInstanceConfig32.getMetadataMap();
        applicationInfoManager28.registerAppMetadata(strMap39);
        com.netflix.appinfo.InstanceInfo instanceInfo41 = applicationInfoManager28.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager42 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo43 = applicationInfoManager42.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig45 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int46 = myDataCenterInstanceConfig45.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo47 = myDataCenterInstanceConfig45.getDataCenterInfo();
        java.lang.String str48 = myDataCenterInstanceConfig45.getNamespace();
        boolean boolean49 = myDataCenterInstanceConfig45.isNonSecurePortEnabled();
        applicationInfoManager42.config = myDataCenterInstanceConfig45;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig51 = applicationInfoManager42.config;
        com.netflix.appinfo.InstanceInfo instanceInfo52 = applicationInfoManager42.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo53 = applicationInfoManager42.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo54 = applicationInfoManager42.getInfo();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig55 = applicationInfoManager42.config;
        applicationInfoManager28.initComponent(eurekaInstanceConfig55);
        org.junit.Assert.assertNotNull(applicationInfoManager1);
        org.junit.Assert.assertNotNull(instanceInfo2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 30 + "'", int15 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str18, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(instanceInfo24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str25, "http://inesserver2.windows.cin.ufpe.br:80/Status");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str26, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(applicationInfoManager29);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 30 + "'", int33 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 90 + "'", int38 == 90);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(instanceInfo41);
        org.junit.Assert.assertNotNull(applicationInfoManager42);
        org.junit.Assert.assertNotNull(instanceInfo43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 30 + "'", int46 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig51);
        org.junit.Assert.assertNotNull(instanceInfo52);
        org.junit.Assert.assertNotNull(instanceInfo53);
        org.junit.Assert.assertNotNull(instanceInfo54);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig55);
    }

    @Test
    public void test04133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04133");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "/Status", "default", "inesserver2.windows.cin.ufpe.br:80", "default", "default" };
        com.netflix.appinfo.InstanceInfo instanceInfo7 = null;
        java.lang.String str8 = com.netflix.appinfo.InstanceInfo.getZone(strArray6, instanceInfo7);
        com.netflix.appinfo.InstanceInfo instanceInfo9 = null;
        java.lang.String str10 = com.netflix.appinfo.InstanceInfo.getZone(strArray6, instanceInfo9);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder11.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder11.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder11.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig18 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig18.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder17.setDataCenterInfo(dataCenterInfo19);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = myDataCenterInstanceConfig21.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder17.setDataCenterInfo(dataCenterInfo22);
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder17.setNamespace("na");
        com.netflix.appinfo.InstanceInfo instanceInfo26 = builder17.build();
        int int27 = instanceInfo26.getSecurePort();
        instanceInfo26.setSID("http://inesserver2.windows.cin.ufpe.br:80/Status");
        int int30 = instanceInfo26.getPort();
        java.lang.String str31 = com.netflix.appinfo.InstanceInfo.getZone(strArray6, instanceInfo26);
        instanceInfo26.setLastDirtyTimestamp((java.lang.Long) 1636106046373L);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 7002 + "'", int27 == 7002);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 7001 + "'", int30 == 7001);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
    }

    @Test
    public void test04134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04134");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str2 = myDataCenterInstanceConfig1.getIpAddress();
        java.lang.String str3 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        java.lang.String str4 = myDataCenterInstanceConfig1.getAppGroupName();
        java.lang.String str5 = myDataCenterInstanceConfig1.getASGName();
        java.lang.String str6 = myDataCenterInstanceConfig1.getVirtualHostName();
        java.lang.String str7 = myDataCenterInstanceConfig1.getVirtualHostName();
        java.lang.String str8 = myDataCenterInstanceConfig1.getSecureVirtualHostName();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "172.20.26.3" + "'", str2, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "/healthcheck" + "'", str3, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "unknown" + "'", str4, "unknown");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str6, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str7, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test04135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04135");
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig0 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager1 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig4.getDataCenterInfo();
        java.lang.String str7 = myDataCenterInstanceConfig4.getNamespace();
        boolean boolean8 = myDataCenterInstanceConfig4.isNonSecurePortEnabled();
        applicationInfoManager1.config = myDataCenterInstanceConfig4;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig10 = applicationInfoManager1.config;
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager1.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager1.instanceInfo;
        int int13 = instanceInfo12.getSecurePort();
        boolean boolean14 = instanceInfo12.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig0, instanceInfo12);
        java.lang.String str16 = instanceInfo12.getHostName();
        int int17 = instanceInfo12.getPort();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder18.setCountryId(7002);
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder18.setHealthCheckUrlsForDeser("UNKNOWN", "UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder18.setASGName("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS");
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder27.setSecureVIPAddress("eureka.");
        boolean boolean30 = instanceInfo12.equals((java.lang.Object) "eureka.");
        org.junit.Assert.assertNotNull(applicationInfoManager1);
        org.junit.Assert.assertNotNull(instanceInfo2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 443 + "'", int13 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str16, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 80 + "'", int17 == 80);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test04136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04136");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = instanceInfo11.getAppGroupName();
        java.lang.String str15 = instanceInfo11.getAppName();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = instanceInfo11.getMetadata();
        java.lang.String str17 = instanceInfo11.getASGName();
        java.lang.String str18 = instanceInfo11.getVIPAddress();
        java.lang.Boolean boolean19 = instanceInfo11.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int22 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        boolean boolean23 = myDataCenterInstanceConfig21.isNonSecurePortEnabled();
        java.lang.String str24 = myDataCenterInstanceConfig21.getHealthCheckUrlPath();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager26 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig21, instanceInfo25);
        java.lang.String str27 = myDataCenterInstanceConfig21.getNamespace();
        boolean boolean28 = instanceInfo11.equals((java.lang.Object) myDataCenterInstanceConfig21);
        boolean boolean29 = myDataCenterInstanceConfig21.getSecurePortEnabled();
        boolean boolean30 = myDataCenterInstanceConfig21.isInstanceEnabledOnit();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UNKNOWN" + "'", str14, "UNKNOWN");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UNKNOWN" + "'", str15, "UNKNOWN");
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str18, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 30 + "'", int22 == 30);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/healthcheck" + "'", str24, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test04137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04137");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig13 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int14 = myDataCenterInstanceConfig13.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo15 = myDataCenterInstanceConfig13.getDataCenterInfo();
        java.lang.String str17 = myDataCenterInstanceConfig13.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig13.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo18);
        java.lang.String str20 = myDataCenterInstanceConfig19.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = myDataCenterInstanceConfig19.getMetadataMap();
// flaky:         applicationInfoManager0.registerAppMetadata(strMap21);
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager0.instanceInfo;
        java.lang.String str24 = null; // flaky: instanceInfo23.getStatusPageUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = null; // flaky: instanceInfo23.getDataCenterInfo();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = null; // flaky: instanceInfo23.getDataCenterInfo();
        java.lang.String str27 = null; // flaky: instanceInfo23.getStatusPageUrl();
// flaky:         instanceInfo23.setLastUpdatedTimestamp();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 30 + "'", int14 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo23);
        org.junit.Assert.assertNull(str24);
// flaky:         org.junit.Assert.assertNotNull(dataCenterInfo25);
// flaky:         org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test04138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04138");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
// flaky:         instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = null; // flaky: instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = null; // flaky: instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = null; // flaky: builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = null; // flaky: builder18.add("na", "/");
        com.netflix.appinfo.InstanceInfo.Builder builder27 = null; // flaky: builder18.add("/Status", "");
        com.netflix.appinfo.InstanceInfo.Builder builder31 = null; // flaky: builder18.setHealthCheckUrls("inesserver2.windows.cin.ufpe.br", "", "172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder33 = null; // flaky: builder18.setASGName("");
        com.netflix.appinfo.InstanceInfo.Builder builder35 = null; // flaky: builder33.setVIPAddress("http://default:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo36 = null; // flaky: builder35.getRawInstance();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertNotNull(strSet16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "172.20.26.3" + "'", str17, "172.20.26.3");
// flaky:         org.junit.Assert.assertNotNull(builder21);
// flaky:         org.junit.Assert.assertNotNull(builder24);
// flaky:         org.junit.Assert.assertNotNull(builder27);
// flaky:         org.junit.Assert.assertNotNull(builder31);
// flaky:         org.junit.Assert.assertNotNull(builder33);
// flaky:         org.junit.Assert.assertNotNull(builder35);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo36);
    }

    @Test
    public void test04139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04139");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = 0; // flaky: instanceInfo11.getSecurePort();
        boolean boolean13 = false; // flaky: instanceInfo11.isDirty();
        java.lang.String str14 = null; // flaky: instanceInfo11.getHostName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType15 = null; // flaky: instanceInfo11.getActionType();
        boolean boolean16 = false; // flaky: instanceInfo11.isDirty();
// flaky:         instanceInfo11.setSID("http://inesserver2.windows.cin.ufpe.br:80/Status");
        java.lang.String str19 = null; // flaky: instanceInfo11.getId();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7002 + "'", int12 == 7002);
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "172.20.26.3" + "'", str14, "172.20.26.3");
// flaky:         org.junit.Assert.assertTrue("'" + actionType15 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType15.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "172.20.26.3" + "'", str19, "172.20.26.3");
    }

    @Test
    public void test04140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04140");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = 0; // flaky: instanceInfo11.getSecurePort();
        boolean boolean13 = false; // flaky: instanceInfo11.isDirty();
        boolean boolean14 = false; // flaky: instanceInfo11.isDirty();
        java.lang.String str15 = null; // flaky: instanceInfo11.getVersion();
        com.netflix.appinfo.InstanceInfo instanceInfo16 = null; // flaky: new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager17 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager17.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig20 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int21 = myDataCenterInstanceConfig20.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = myDataCenterInstanceConfig20.getDataCenterInfo();
        java.lang.String str23 = myDataCenterInstanceConfig20.getNamespace();
        boolean boolean24 = myDataCenterInstanceConfig20.isNonSecurePortEnabled();
        applicationInfoManager17.config = myDataCenterInstanceConfig20;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig26 = applicationInfoManager17.config;
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager17.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager17.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType29 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo28.setActionType(actionType29);
        com.netflix.appinfo.LeaseInfo leaseInfo31 = null;
// flaky:         instanceInfo28.setLeaseInfo(leaseInfo31);
        java.util.Set<java.lang.String> strSet33 = null; // flaky: instanceInfo28.getHealthCheckUrls();
        java.lang.String str34 = null; // flaky: instanceInfo28.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder35 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo28);
        com.netflix.appinfo.InstanceInfo.Builder builder37 = null; // flaky: builder35.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.PortType portType38 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder40 = null; // flaky: builder35.enablePort(portType38, true);
        boolean boolean41 = false; // flaky: instanceInfo16.isPortEnabled(portType38);
        java.lang.String str42 = null; // flaky: instanceInfo16.getId();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "unknown" + "'", str15, "unknown");
        org.junit.Assert.assertNotNull(applicationInfoManager17);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 30 + "'", int21 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig26);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo27);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertTrue("'" + actionType29 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType29.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertNotNull(strSet33);
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str34, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + portType38 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType38.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
// flaky:         org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str42, "inesserver2.windows.cin.ufpe.br");
    }

    @Test
    public void test04141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04141");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        int int3 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        boolean boolean5 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        com.netflix.appinfo.InstanceInfo instanceInfo6 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager7 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo6);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig9.getDataCenterInfo();
        java.lang.String str12 = myDataCenterInstanceConfig9.getNamespace();
        applicationInfoManager7.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig9);
        java.lang.String str14 = myDataCenterInstanceConfig9.getNamespace();
        int int15 = myDataCenterInstanceConfig9.getSecurePort();
        java.lang.String str16 = myDataCenterInstanceConfig9.getHomePageUrl();
        java.lang.String str17 = myDataCenterInstanceConfig9.getHomePageUrlPath();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/Status" + "'", str4, "/Status");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 443 + "'", int15 == 443);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/" + "'", str17, "/");
    }

    @Test
    public void test04142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04142");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig0 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        java.lang.String str1 = myDataCenterInstanceConfig0.getIpAddress();
        java.lang.String str2 = myDataCenterInstanceConfig0.getAppname();
        boolean boolean3 = myDataCenterInstanceConfig0.isNonSecurePortEnabled();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "172.20.26.3" + "'", str1, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "unknown" + "'", str2, "unknown");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test04143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04143");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder7.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder9.add("http://inesserver2.windows.cin.ufpe.br:80/Status", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setSID("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder12.setHomePageUrlForDeser("na");
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder12.setASGName("HI!");
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setIPAddr("http://inesserver2.windows.cin.ufpe.br:80/");
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder23 = builder20.setHomePageUrl("INESSERVER2.WINDOWS.CIN.UFPE.BR", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test04144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04144");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = instanceInfo11.getAppGroupName();
        int int15 = instanceInfo11.getPort();
        boolean boolean16 = instanceInfo11.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager17 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager17.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig20 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int21 = myDataCenterInstanceConfig20.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = myDataCenterInstanceConfig20.getDataCenterInfo();
        java.lang.String str23 = myDataCenterInstanceConfig20.getNamespace();
        boolean boolean24 = myDataCenterInstanceConfig20.isNonSecurePortEnabled();
        applicationInfoManager17.config = myDataCenterInstanceConfig20;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig26 = applicationInfoManager17.config;
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager17.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager17.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType29 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo28.setActionType(actionType29);
        java.lang.String str31 = instanceInfo28.getVersion();
        java.lang.String str32 = instanceInfo28.getIPAddr();
        instanceInfo28.setLastUpdatedTimestamp();
        java.lang.String str34 = instanceInfo28.getVersion();
        java.lang.String str35 = instanceInfo28.getHomePageUrl();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus36 = instanceInfo28.getStatus();
        instanceInfo11.setStatus(instanceStatus36);
        instanceInfo11.setLastUpdatedTimestamp();
        java.lang.String str39 = instanceInfo11.getIPAddr();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UNKNOWN" + "'", str14, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 80 + "'", int15 == 80);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager17);
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 30 + "'", int21 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertTrue("'" + actionType29 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType29.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "unknown" + "'", str31, "unknown");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "172.20.26.3" + "'", str32, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "unknown" + "'", str34, "unknown");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str35, "http://inesserver2.windows.cin.ufpe.br:80/");
        org.junit.Assert.assertTrue("'" + instanceStatus36 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING + "'", instanceStatus36.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "172.20.26.3" + "'", str39, "172.20.26.3");
    }

    @Test
    public void test04145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04145");
        com.netflix.appinfo.InstanceInfo instanceInfo0 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder1 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo0);
        com.netflix.appinfo.InstanceInfo.Builder builder3 = builder1.setNamespace("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder1.setNamespace("");
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder1.setNamespace("");
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder9 = builder7.setAppGroupName("eureka.");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
    }

    @Test
    public void test04146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04146");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("hi!");
        java.lang.String str2 = myDataCenterInstanceConfig1.getStatusPageUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str4 = myDataCenterInstanceConfig1.getAppname();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(dataCenterInfo3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "unknown" + "'", str4, "unknown");
    }

    @Test
    public void test04147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04147");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setSecureVIPAddressDeser("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo15 = builder6.build();
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder6.setIPAddr("");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int20 = myDataCenterInstanceConfig19.getLeaseRenewalIntervalInSeconds();
        int int21 = myDataCenterInstanceConfig19.getLeaseRenewalIntervalInSeconds();
        java.lang.String str22 = myDataCenterInstanceConfig19.getStatusPageUrlPath();
        boolean boolean23 = myDataCenterInstanceConfig19.getSecurePortEnabled();
        java.lang.String str24 = myDataCenterInstanceConfig19.getHealthCheckUrl();
        int int25 = myDataCenterInstanceConfig19.getLeaseRenewalIntervalInSeconds();
        java.lang.String str26 = myDataCenterInstanceConfig19.getStatusPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = myDataCenterInstanceConfig19.getMetadataMap();
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder6.setMetadata(strMap27);
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder28.setNamespace("http://inesserver2.windows.cin.ufpe.br:80:80/Status");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 30 + "'", int20 == 30);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 30 + "'", int21 == 30);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "/Status" + "'", str22, "/Status");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 30 + "'", int25 == 30);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
    }

    @Test
    public void test04148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04148");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setSecureVIPAddressDeser("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo15 = builder6.build();
        com.netflix.appinfo.LeaseInfo leaseInfo16 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder6.setLeaseInfo(leaseInfo16);
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder6.setPort((int) ' ');
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder6.setSecureVIPAddressDeser("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setSecureVIPAddressDeser("http://hi!:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder21.setVIPAddress("");
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder21.setPort(97);
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder31 = builder21.setHealthCheckUrls("inesserver2.windows.cin.ufpe.br", "http:///HEALTHCHECK:80/Status", "HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
    }

    @Test
    public void test04149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04149");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setIPAddr("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder0.setSecureVIPAddressDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setSecureVIPAddressDeser("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder8.setIPAddr("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder8.setHealthCheckUrlsForDeser("unknown", "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder15);
    }

    @Test
    public void test04150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04150");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        boolean boolean22 = builder21.isInitialized();
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder21.setPort((int) '#');
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder21.setSID("inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder21.setSecurePort(80);
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder21.setNamespace("HTTP://HI!:80/STATUS");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig33 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int34 = myDataCenterInstanceConfig33.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo35 = myDataCenterInstanceConfig33.getDataCenterInfo();
        java.lang.String str37 = myDataCenterInstanceConfig33.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo38 = myDataCenterInstanceConfig33.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig39 = new com.netflix.appinfo.MyDataCenterInstanceConfig("UNKNOWN", dataCenterInfo38);
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder21.setDataCenterInfo(dataCenterInfo38);
        com.netflix.appinfo.InstanceInfo.Builder builder42 = builder40.setLastDirtyTimestamp(1636106021372L);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str37, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
    }

    @Test
    public void test04151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04151");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        java.lang.String str4 = myDataCenterInstanceConfig1.getVirtualHostName();
        java.lang.String str5 = myDataCenterInstanceConfig1.getHomePageUrl();
        java.lang.String str7 = myDataCenterInstanceConfig1.getHostName(true);
        int int8 = myDataCenterInstanceConfig1.getNonSecurePort();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str4, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str7, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 80 + "'", int8 == 80);
    }

    @Test
    public void test04152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04152");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder8.setHomePageUrlForDeser("");
        com.netflix.appinfo.LeaseInfo leaseInfo13 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setLeaseInfo(leaseInfo13);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo16 = applicationInfoManager15.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig18 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int19 = myDataCenterInstanceConfig18.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo20 = myDataCenterInstanceConfig18.getDataCenterInfo();
        java.lang.String str21 = myDataCenterInstanceConfig18.getNamespace();
        boolean boolean22 = myDataCenterInstanceConfig18.isNonSecurePortEnabled();
        applicationInfoManager15.config = myDataCenterInstanceConfig18;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig24 = applicationInfoManager15.config;
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager15.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo26 = applicationInfoManager15.getInfo();
        java.lang.String[] strArray27 = new java.lang.String[] {};
        com.netflix.appinfo.InstanceInfo instanceInfo28 = null;
        java.lang.String str29 = com.netflix.appinfo.InstanceInfo.getZone(strArray27, instanceInfo28);
        com.netflix.appinfo.InstanceInfo instanceInfo30 = null;
        java.lang.String str31 = com.netflix.appinfo.InstanceInfo.getZone(strArray27, instanceInfo30);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager32 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo33 = applicationInfoManager32.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig35 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int36 = myDataCenterInstanceConfig35.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo37 = myDataCenterInstanceConfig35.getDataCenterInfo();
        java.lang.String str38 = myDataCenterInstanceConfig35.getNamespace();
        boolean boolean39 = myDataCenterInstanceConfig35.isNonSecurePortEnabled();
        applicationInfoManager32.config = myDataCenterInstanceConfig35;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig41 = applicationInfoManager32.config;
        com.netflix.appinfo.InstanceInfo instanceInfo42 = applicationInfoManager32.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo43 = applicationInfoManager32.instanceInfo;
        int int44 = instanceInfo43.getSecurePort();
        boolean boolean45 = instanceInfo43.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo46 = new com.netflix.appinfo.InstanceInfo(instanceInfo43);
        com.netflix.appinfo.InstanceInfo instanceInfo47 = new com.netflix.appinfo.InstanceInfo(instanceInfo43);
        java.lang.String str48 = instanceInfo43.getAppGroupName();
        int int49 = instanceInfo43.getCountryId();
        java.lang.String str50 = com.netflix.appinfo.InstanceInfo.getZone(strArray27, instanceInfo43);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus51 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo43.setStatus(instanceStatus51);
        applicationInfoManager15.setInstanceStatus(instanceStatus51);
        com.netflix.appinfo.InstanceInfo.Builder builder54 = builder12.setOverriddenStatus(instanceStatus51);
        com.netflix.appinfo.InstanceInfo.Builder builder56 = builder12.setSID("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder58 = builder12.setASGName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder61 = builder58.setHealthCheckUrlsForDeser("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS", "172.20.26.3");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(applicationInfoManager15);
        org.junit.Assert.assertNotNull(instanceInfo16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 30 + "'", int19 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "default" + "'", str29, "default");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "default" + "'", str31, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 30 + "'", int36 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig41);
        org.junit.Assert.assertNotNull(instanceInfo42);
        org.junit.Assert.assertNotNull(instanceInfo43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 80 + "'", int44 == 80);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "UNKNOWN" + "'", str48, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "default" + "'", str50, "default");
        org.junit.Assert.assertTrue("'" + instanceStatus51 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus51.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder61);
    }

    @Test
    public void test04153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04153");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setSecurePort(30);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager21 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo22 = applicationInfoManager21.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int25 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig24.getDataCenterInfo();
        java.lang.String str27 = myDataCenterInstanceConfig24.getNamespace();
        boolean boolean28 = myDataCenterInstanceConfig24.isNonSecurePortEnabled();
        applicationInfoManager21.config = myDataCenterInstanceConfig24;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig30 = applicationInfoManager21.config;
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager21.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager21.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType33 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo32.setActionType(actionType33);
        com.netflix.appinfo.LeaseInfo leaseInfo35 = null;
        instanceInfo32.setLeaseInfo(leaseInfo35);
        java.util.Set<java.lang.String> strSet37 = instanceInfo32.getHealthCheckUrls();
        java.lang.String str38 = instanceInfo32.getId();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager39 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo40 = applicationInfoManager39.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig42 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int43 = myDataCenterInstanceConfig42.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo44 = myDataCenterInstanceConfig42.getDataCenterInfo();
        java.lang.String str45 = myDataCenterInstanceConfig42.getNamespace();
        boolean boolean46 = myDataCenterInstanceConfig42.isNonSecurePortEnabled();
        applicationInfoManager39.config = myDataCenterInstanceConfig42;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig48 = applicationInfoManager39.config;
        com.netflix.appinfo.InstanceInfo instanceInfo49 = applicationInfoManager39.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo50 = applicationInfoManager39.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType51 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo50.setActionType(actionType51);
        instanceInfo32.setActionType(actionType51);
        com.netflix.appinfo.InstanceInfo.PortType portType54 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        boolean boolean55 = instanceInfo32.isPortEnabled(portType54);
        com.netflix.appinfo.InstanceInfo.Builder builder57 = builder20.enablePort(portType54, false);
        com.netflix.appinfo.InstanceInfo.Builder builder59 = builder57.setStatusPageUrlForDeser("eureka.");
        com.netflix.appinfo.InstanceInfo.Builder builder61 = builder59.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder63 = builder59.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager64 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo65 = applicationInfoManager64.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig67 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int68 = myDataCenterInstanceConfig67.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo69 = myDataCenterInstanceConfig67.getDataCenterInfo();
        java.lang.String str70 = myDataCenterInstanceConfig67.getNamespace();
        boolean boolean71 = myDataCenterInstanceConfig67.isNonSecurePortEnabled();
        applicationInfoManager64.config = myDataCenterInstanceConfig67;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig73 = applicationInfoManager64.config;
        com.netflix.appinfo.InstanceInfo instanceInfo74 = applicationInfoManager64.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo75 = applicationInfoManager64.instanceInfo;
        int int76 = instanceInfo75.getSecurePort();
        boolean boolean77 = instanceInfo75.isDirty();
        java.lang.String str78 = instanceInfo75.getHostName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType79 = instanceInfo75.getActionType();
        boolean boolean80 = instanceInfo75.isDirty();
        boolean boolean81 = instanceInfo75.isDirty();
        int int82 = instanceInfo75.getPort();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus84 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("/Status");
        instanceInfo75.setStatusWithoutDirty(instanceStatus84);
        java.util.Map<java.lang.String, java.lang.String> strMap86 = instanceInfo75.getMetadata();
        com.netflix.appinfo.InstanceInfo.Builder builder87 = builder63.setMetadata(strMap86);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(applicationInfoManager21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 30 + "'", int25 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertTrue("'" + actionType33 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType33.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str38, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager39);
        org.junit.Assert.assertNotNull(instanceInfo40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 30 + "'", int43 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig48);
        org.junit.Assert.assertNotNull(instanceInfo49);
        org.junit.Assert.assertNotNull(instanceInfo50);
        org.junit.Assert.assertTrue("'" + actionType51 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType51.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + portType54 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType54.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(applicationInfoManager64);
        org.junit.Assert.assertNotNull(instanceInfo65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 30 + "'", int68 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig73);
        org.junit.Assert.assertNotNull(instanceInfo74);
        org.junit.Assert.assertNotNull(instanceInfo75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 30 + "'", int76 == 30);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "172.20.26.3" + "'", str78, "172.20.26.3");
        org.junit.Assert.assertTrue("'" + actionType79 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType79.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 35 + "'", int82 == 35);
        org.junit.Assert.assertTrue("'" + instanceStatus84 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus84.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(builder87);
    }

    @Test
    public void test04154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04154");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setSecurePort((-1));
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setSecureVIPAddress("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder0.setSecureVIPAddressDeser("http://hi!:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setIPAddr("na");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test04155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04155");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setNamespace("na");
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder6.setLastDirtyTimestamp(1636105969900L);
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder16.setSecureVIPAddress("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder16.setSecureVIPAddressDeser("na");
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder16.setPort((int) '#');
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder16.setCountryId(80);
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder24.setSecurePort(7002);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
    }

    @Test
    public void test04156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04156");
        com.netflix.appinfo.DataCenterInfo dataCenterInfo1 = null;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("", dataCenterInfo1);
        boolean boolean3 = myDataCenterInstanceConfig2.isNonSecurePortEnabled();
        java.lang.String str4 = myDataCenterInstanceConfig2.getIpAddress();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "172.20.26.3" + "'", str4, "172.20.26.3");
    }

    @Test
    public void test04157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04157");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int11 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        int int12 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        java.lang.String str13 = myDataCenterInstanceConfig10.getStatusPageUrlPath();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig10);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig16 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int17 = myDataCenterInstanceConfig16.getLeaseRenewalIntervalInSeconds();
        int int18 = myDataCenterInstanceConfig16.getLeaseRenewalIntervalInSeconds();
        java.lang.String str19 = myDataCenterInstanceConfig16.getStatusPageUrlPath();
        boolean boolean20 = myDataCenterInstanceConfig16.getSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager21 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo22 = applicationInfoManager21.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int25 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig24.getDataCenterInfo();
        java.lang.String str27 = myDataCenterInstanceConfig24.getNamespace();
        boolean boolean28 = myDataCenterInstanceConfig24.isNonSecurePortEnabled();
        applicationInfoManager21.config = myDataCenterInstanceConfig24;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig30 = applicationInfoManager21.config;
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager21.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager21.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType33 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo32.setActionType(actionType33);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager35 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo36 = applicationInfoManager35.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig38 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int39 = myDataCenterInstanceConfig38.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo40 = myDataCenterInstanceConfig38.getDataCenterInfo();
        java.lang.String str41 = myDataCenterInstanceConfig38.getNamespace();
        boolean boolean42 = myDataCenterInstanceConfig38.isNonSecurePortEnabled();
        applicationInfoManager35.config = myDataCenterInstanceConfig38;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig44 = applicationInfoManager35.config;
        com.netflix.appinfo.InstanceInfo instanceInfo45 = applicationInfoManager35.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo46 = applicationInfoManager35.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType47 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo46.setActionType(actionType47);
        instanceInfo32.setActionType(actionType47);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager50 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig16, instanceInfo32);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus52 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("inesserver2.windows.cin.ufpe.br:80");
        instanceInfo32.setOverriddenStatus(instanceStatus52);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus55 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("/Status");
        instanceInfo32.setOverriddenStatus(instanceStatus55);
        applicationInfoManager0.setInstanceStatus(instanceStatus55);
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig59 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo60 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig62 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int63 = myDataCenterInstanceConfig62.getLeaseRenewalIntervalInSeconds();
        boolean boolean64 = myDataCenterInstanceConfig62.isNonSecurePortEnabled();
        java.lang.String str65 = myDataCenterInstanceConfig62.getHealthCheckUrlPath();
        com.netflix.appinfo.InstanceInfo instanceInfo66 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager67 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig62, instanceInfo66);
        java.lang.String str69 = myDataCenterInstanceConfig62.getHostName(false);
        int int70 = myDataCenterInstanceConfig62.getNonSecurePort();
        int int71 = myDataCenterInstanceConfig62.getLeaseRenewalIntervalInSeconds();
        java.lang.String str72 = myDataCenterInstanceConfig62.getSecureHealthCheckUrl();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig62);
        java.lang.String str74 = myDataCenterInstanceConfig62.getVirtualHostName();
        java.lang.String str76 = myDataCenterInstanceConfig62.getHostName(false);
        java.lang.String str78 = myDataCenterInstanceConfig62.getHostName(false);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 30 + "'", int12 == 30);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/Status" + "'", str13, "/Status");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 30 + "'", int18 == 30);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/Status" + "'", str19, "/Status");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 30 + "'", int25 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertTrue("'" + actionType33 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType33.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager35);
        org.junit.Assert.assertNotNull(instanceInfo36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 30 + "'", int39 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig44);
        org.junit.Assert.assertNotNull(instanceInfo45);
        org.junit.Assert.assertNotNull(instanceInfo46);
        org.junit.Assert.assertTrue("'" + actionType47 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType47.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + instanceStatus52 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus52.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertTrue("'" + instanceStatus55 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus55.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(eurekaInstanceConfig59);
        org.junit.Assert.assertNotNull(instanceInfo60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 30 + "'", int63 == 30);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "/healthcheck" + "'", str65, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str69, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 80 + "'", int70 == 80);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 30 + "'", int71 == 30);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str74, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str76, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str78, "inesserver2.windows.cin.ufpe.br");
    }

    @Test
    public void test04158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04158");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo instanceInfo5 = builder0.build();
        instanceInfo5.setLastUpdatedTimestamp();
        java.lang.String str7 = instanceInfo5.getASGName();
        com.netflix.appinfo.LeaseInfo leaseInfo8 = instanceInfo5.getLeaseInfo();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager9 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager9.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int13 = myDataCenterInstanceConfig12.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo14 = myDataCenterInstanceConfig12.getDataCenterInfo();
        java.lang.String str15 = myDataCenterInstanceConfig12.getNamespace();
        boolean boolean16 = myDataCenterInstanceConfig12.isNonSecurePortEnabled();
        applicationInfoManager9.config = myDataCenterInstanceConfig12;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig18 = applicationInfoManager9.config;
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager9.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager9.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType21 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo20.setActionType(actionType21);
        com.netflix.appinfo.LeaseInfo leaseInfo23 = null;
// flaky:         instanceInfo20.setLeaseInfo(leaseInfo23);
        java.util.Set<java.lang.String> strSet25 = null; // flaky: instanceInfo20.getHealthCheckUrls();
        java.lang.String str26 = null; // flaky: instanceInfo20.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder27 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo20);
        com.netflix.appinfo.InstanceInfo.Builder builder30 = null; // flaky: builder27.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder32 = null; // flaky: builder30.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder34 = null; // flaky: builder32.setSecureVIPAddress("hi!");
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "/Status", "default", "inesserver2.windows.cin.ufpe.br:80", "default", "default" };
        com.netflix.appinfo.InstanceInfo instanceInfo42 = null;
        java.lang.String str43 = com.netflix.appinfo.InstanceInfo.getZone(strArray41, instanceInfo42);
        com.netflix.appinfo.InstanceInfo instanceInfo44 = null;
        java.lang.String str45 = com.netflix.appinfo.InstanceInfo.getZone(strArray41, instanceInfo44);
        com.netflix.appinfo.InstanceInfo.Builder builder46 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder48 = builder46.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder50 = builder46.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder52 = builder46.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig53 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo54 = myDataCenterInstanceConfig53.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder55 = builder52.setDataCenterInfo(dataCenterInfo54);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig56 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo57 = myDataCenterInstanceConfig56.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder58 = builder52.setDataCenterInfo(dataCenterInfo57);
        com.netflix.appinfo.InstanceInfo.Builder builder60 = builder52.setNamespace("na");
        com.netflix.appinfo.InstanceInfo instanceInfo61 = builder52.build();
        int int62 = instanceInfo61.getSecurePort();
        instanceInfo61.setSID("http://inesserver2.windows.cin.ufpe.br:80/Status");
        int int65 = instanceInfo61.getPort();
        java.lang.String str66 = com.netflix.appinfo.InstanceInfo.getZone(strArray41, instanceInfo61);
        java.lang.String str67 = instanceInfo61.getAppName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager68 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo69 = applicationInfoManager68.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig71 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int72 = myDataCenterInstanceConfig71.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo73 = myDataCenterInstanceConfig71.getDataCenterInfo();
        java.lang.String str74 = myDataCenterInstanceConfig71.getNamespace();
        boolean boolean75 = myDataCenterInstanceConfig71.isNonSecurePortEnabled();
        applicationInfoManager68.config = myDataCenterInstanceConfig71;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig77 = applicationInfoManager68.config;
        com.netflix.appinfo.InstanceInfo instanceInfo78 = applicationInfoManager68.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo79 = applicationInfoManager68.instanceInfo;
        int int80 = 0; // flaky: instanceInfo79.getSecurePort();
        com.netflix.appinfo.InstanceInfo.PortType portType81 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean82 = false; // flaky: instanceInfo79.isPortEnabled(portType81);
        boolean boolean83 = instanceInfo61.isPortEnabled(portType81);
        com.netflix.appinfo.InstanceInfo.Builder builder85 = null; // flaky: builder32.enablePort(portType81, false);
        boolean boolean86 = instanceInfo5.isPortEnabled(portType81);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(instanceInfo5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(leaseInfo8);
        org.junit.Assert.assertNotNull(applicationInfoManager9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 30 + "'", int13 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig18);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo19);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertTrue("'" + actionType21 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType21.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertNotNull(strSet25);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str26, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertNotNull(builder30);
// flaky:         org.junit.Assert.assertNotNull(builder32);
// flaky:         org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(dataCenterInfo54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(dataCenterInfo57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(instanceInfo61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 7002 + "'", int62 == 7002);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 7001 + "'", int65 == 7001);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "DEFAULT" + "'", str67, "DEFAULT");
        org.junit.Assert.assertNotNull(applicationInfoManager68);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo69);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 30 + "'", int72 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig77);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo78);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + portType81 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType81.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
// flaky:         org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test04159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04159");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
// flaky:         instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = null; // flaky: instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = null; // flaky: instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = null; // flaky: builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = null; // flaky: builder18.setHealthCheckUrlsForDeser("", "hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = null; // flaky: builder23.setLastDirtyTimestamp((long) 443);
        com.netflix.appinfo.InstanceInfo.Builder builder27 = null; // flaky: builder25.setIPAddr("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder30 = null; // flaky: builder27.setHealthCheckUrlsForDeser("inesserver2.windows.cin.ufpe.br", "DEFAULT");
        com.netflix.appinfo.InstanceInfo.Builder builder32 = null; // flaky: builder27.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder34 = null; // flaky: builder27.setNamespace("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo.Builder builder36 = null; // flaky: builder34.setAppName("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertNotNull(strSet16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertNotNull(builder20);
// flaky:         org.junit.Assert.assertNotNull(builder23);
// flaky:         org.junit.Assert.assertNotNull(builder25);
// flaky:         org.junit.Assert.assertNotNull(builder27);
// flaky:         org.junit.Assert.assertNotNull(builder30);
// flaky:         org.junit.Assert.assertNotNull(builder32);
// flaky:         org.junit.Assert.assertNotNull(builder34);
// flaky:         org.junit.Assert.assertNotNull(builder36);
    }

    @Test
    public void test04160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04160");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        java.lang.String str6 = myDataCenterInstanceConfig2.getIpAddress();
        java.lang.String str7 = myDataCenterInstanceConfig2.getVirtualHostName();
        java.lang.String str9 = myDataCenterInstanceConfig2.getHostName(true);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager10 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager10.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig13 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int14 = myDataCenterInstanceConfig13.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo15 = myDataCenterInstanceConfig13.getDataCenterInfo();
        java.lang.String str16 = myDataCenterInstanceConfig13.getNamespace();
        boolean boolean17 = myDataCenterInstanceConfig13.isNonSecurePortEnabled();
        applicationInfoManager10.config = myDataCenterInstanceConfig13;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig19 = applicationInfoManager10.config;
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager10.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager10.instanceInfo;
        java.lang.Boolean boolean22 = null; // flaky: instanceInfo21.isCoordinatingDiscoveryServer();
        java.lang.String str23 = null; // flaky: instanceInfo21.getVIPAddress();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager24 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig2, instanceInfo21);
        com.netflix.appinfo.InstanceInfo.Builder builder25 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo21);
        com.netflix.appinfo.InstanceInfo instanceInfo26 = null; // flaky: builder25.build();
        java.lang.String str27 = null; // flaky: instanceInfo26.getHomePageUrl();
        java.lang.String str28 = null; // flaky: instanceInfo26.getAppName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "172.20.26.3" + "'", str6, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str7, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str9, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 30 + "'", int14 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig19);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo20);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo21);
// flaky:         org.junit.Assert.assertEquals("'" + boolean22 + "' != '" + false + "'", boolean22, false);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str23, "inesserver2.windows.cin.ufpe.br:80");
// flaky:         org.junit.Assert.assertNotNull(instanceInfo26);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str27, "http://inesserver2.windows.cin.ufpe.br:80/");
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/" + "'", str28, "HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/");
    }

    @Test
    public void test04161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04161");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        int int9 = myDataCenterInstanceConfig3.getLeaseExpirationDurationInSeconds();
        java.lang.String str10 = myDataCenterInstanceConfig3.getHomePageUrl();
        java.lang.String str11 = myDataCenterInstanceConfig3.getSecureVirtualHostName();
        java.lang.String str13 = myDataCenterInstanceConfig3.getHostName(false);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager14 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo15 = applicationInfoManager14.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig17 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int18 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig17.getDataCenterInfo();
        java.lang.String str20 = myDataCenterInstanceConfig17.getNamespace();
        boolean boolean21 = myDataCenterInstanceConfig17.isNonSecurePortEnabled();
        applicationInfoManager14.config = myDataCenterInstanceConfig17;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig23 = applicationInfoManager14.config;
        com.netflix.appinfo.InstanceInfo instanceInfo24 = applicationInfoManager14.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager14.instanceInfo;
        int int26 = 0; // flaky: instanceInfo25.getSecurePort();
        boolean boolean27 = false; // flaky: instanceInfo25.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = null; // flaky: new com.netflix.appinfo.InstanceInfo(instanceInfo25);
        java.lang.String str29 = null; // flaky: instanceInfo28.getVersion();
// flaky:         instanceInfo28.setLastUpdatedTimestamp();
        java.lang.String str31 = null; // flaky: instanceInfo28.getAppName();
        java.lang.String str32 = null; // flaky: instanceInfo28.getSID();
        java.lang.String str33 = null; // flaky: instanceInfo28.getASGName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager34 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager34.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig37 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int38 = myDataCenterInstanceConfig37.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo39 = myDataCenterInstanceConfig37.getDataCenterInfo();
        java.lang.String str40 = myDataCenterInstanceConfig37.getNamespace();
        boolean boolean41 = myDataCenterInstanceConfig37.isNonSecurePortEnabled();
        applicationInfoManager34.config = myDataCenterInstanceConfig37;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig43 = applicationInfoManager34.config;
        com.netflix.appinfo.InstanceInfo instanceInfo44 = applicationInfoManager34.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo45 = applicationInfoManager34.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType46 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo45.setActionType(actionType46);
        java.lang.String str48 = null; // flaky: instanceInfo45.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType49 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo45.setActionType(actionType49);
// flaky:         instanceInfo28.setActionType(actionType49);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager52 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig3, instanceInfo28);
        com.netflix.appinfo.InstanceInfo instanceInfo53 = applicationInfoManager52.getInfo();
        java.lang.String str54 = null; // flaky: instanceInfo53.getSecureVipAddress();
// flaky:         instanceInfo53.setLastDirtyTimestamp((java.lang.Long) 1636106008298L);
        java.lang.String str57 = null; // flaky: instanceInfo53.getVIPAddress();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 90 + "'", int9 == 90);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str13, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager14);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 30 + "'", int18 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig23);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo24);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "unknown" + "'", str29, "unknown");
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/" + "'", str31, "HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/");
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "na" + "'", str32, "na");
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/healthcheck" + "'", str33, "/healthcheck");
        org.junit.Assert.assertNotNull(applicationInfoManager34);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 30 + "'", int38 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig43);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo44);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo45);
        org.junit.Assert.assertTrue("'" + actionType46 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType46.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:10/STATUS" + "'", str48, "HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:10/STATUS");
        org.junit.Assert.assertTrue("'" + actionType49 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType49.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertNotNull(instanceInfo53);
// flaky:         org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str57 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str57, "inesserver2.windows.cin.ufpe.br:80");
    }

    @Test
    public void test04162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04162");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
// flaky:         instanceInfo11.setLeaseInfo(leaseInfo14);
        long long16 = 0L; // flaky: instanceInfo11.getLastUpdatedTimestamp();
        com.netflix.appinfo.InstanceInfo.Builder builder17 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder18 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder18.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder18.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig25 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig25.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder24.setDataCenterInfo(dataCenterInfo26);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig28 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig28.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder24.setDataCenterInfo(dataCenterInfo29);
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder24.setNamespace("na");
        com.netflix.appinfo.InstanceInfo.Builder builder35 = builder24.add("unknown", "UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder37 = builder24.setSecureVIPAddressDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder39 = builder24.setHostName("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder41 = builder39.setAppGroupName("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder43 = builder41.setHomePageUrlForDeser("http://default:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder45 = builder41.setHomePageUrlForDeser("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig47 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        boolean boolean48 = myDataCenterInstanceConfig47.getSecurePortEnabled();
        java.lang.String str49 = myDataCenterInstanceConfig47.getHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo50 = myDataCenterInstanceConfig47.getDataCenterInfo();
        java.lang.String str52 = myDataCenterInstanceConfig47.getHostName(false);
        java.util.Map<java.lang.String, java.lang.String> strMap53 = myDataCenterInstanceConfig47.getMetadataMap();
        com.netflix.appinfo.InstanceInfo.Builder builder54 = builder41.setMetadata(strMap53);
        com.netflix.appinfo.InstanceInfo.Builder builder55 = null; // flaky: builder17.setMetadata(strMap53);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager56 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo57 = applicationInfoManager56.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig59 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int60 = myDataCenterInstanceConfig59.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo61 = myDataCenterInstanceConfig59.getDataCenterInfo();
        java.lang.String str62 = myDataCenterInstanceConfig59.getNamespace();
        boolean boolean63 = myDataCenterInstanceConfig59.isNonSecurePortEnabled();
        applicationInfoManager56.config = myDataCenterInstanceConfig59;
        int int65 = myDataCenterInstanceConfig59.getLeaseExpirationDurationInSeconds();
        java.util.Map<java.lang.String, java.lang.String> strMap66 = myDataCenterInstanceConfig59.getMetadataMap();
        java.lang.String str67 = myDataCenterInstanceConfig59.getHealthCheckUrl();
        boolean boolean68 = myDataCenterInstanceConfig59.getSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager69 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo70 = applicationInfoManager69.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig72 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int73 = myDataCenterInstanceConfig72.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo74 = myDataCenterInstanceConfig72.getDataCenterInfo();
        java.lang.String str75 = myDataCenterInstanceConfig72.getNamespace();
        boolean boolean76 = myDataCenterInstanceConfig72.isNonSecurePortEnabled();
        applicationInfoManager69.config = myDataCenterInstanceConfig72;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig78 = applicationInfoManager69.config;
        com.netflix.appinfo.InstanceInfo instanceInfo79 = applicationInfoManager69.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo80 = applicationInfoManager69.instanceInfo;
        int int81 = 0; // flaky: instanceInfo80.getSecurePort();
        int int82 = 0; // flaky: instanceInfo80.getPort();
        int int83 = 0; // flaky: instanceInfo80.getCountryId();
        boolean boolean84 = false; // flaky: instanceInfo80.isDirty();
        int int85 = 0; // flaky: instanceInfo80.getPort();
        java.lang.String str86 = null; // flaky: instanceInfo80.getASGName();
        java.lang.String str87 = null; // flaky: instanceInfo80.getHomePageUrl();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager88 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig59, instanceInfo80);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus89 = null; // flaky: instanceInfo80.getStatus();
        java.lang.String str90 = null; // flaky: instanceInfo80.getIPAddr();
        com.netflix.appinfo.InstanceInfo.PortType portType91 = null;
        boolean boolean92 = false; // flaky: instanceInfo80.isPortEnabled(portType91);
        int int93 = 0; // flaky: instanceInfo80.getPort();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo94 = null; // flaky: instanceInfo80.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder95 = null; // flaky: builder55.setDataCenterInfo(dataCenterInfo94);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1636106122713L + "'", long16 == 1636106122713L);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(dataCenterInfo50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str52, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(builder54);
// flaky:         org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(applicationInfoManager56);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 30 + "'", int60 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 90 + "'", int65 == 90);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager69);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo70);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 30 + "'", int73 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig78);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo79);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
// flaky:         org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
// flaky:         org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int85 + "' != '" + 100 + "'", int85 == 100);
// flaky:         org.junit.Assert.assertEquals("'" + str86 + "' != '" + "/healthcheck" + "'", str86, "/healthcheck");
// flaky:         org.junit.Assert.assertEquals("'" + str87 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str87, "http://inesserver2.windows.cin.ufpe.br:80/");
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus89 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus89.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
// flaky:         org.junit.Assert.assertEquals("'" + str90 + "' != '" + "172.20.26.3" + "'", str90, "172.20.26.3");
// flaky:         org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int93 + "' != '" + 100 + "'", int93 == 100);
// flaky:         org.junit.Assert.assertNotNull(dataCenterInfo94);
// flaky:         org.junit.Assert.assertNotNull(builder95);
    }

    @Test
    public void test04163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04163");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder12.setSecureVIPAddressDeser("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder16.add("na", "/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder16.setCountryId((int) (short) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder16.setSecurePort((int) (short) 0);
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder16.setVIPAddress("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder16.setHomePageUrlForDeser("eureka.");
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder27.setASGName("na");
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder29.setHealthCheckUrlsForDeser("", "http://hi!:97/Status");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder32);
    }

    @Test
    public void test04164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04164");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder12.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder12.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder12.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo22 = builder21.build();
        java.lang.String str23 = instanceInfo22.getStatusPageUrl();
        com.netflix.appinfo.InstanceInfo instanceInfo24 = new com.netflix.appinfo.InstanceInfo(instanceInfo22);
        instanceInfo24.setIsDirty(true);
        com.netflix.appinfo.LeaseInfo leaseInfo27 = instanceInfo24.getLeaseInfo();
        java.lang.String str28 = instanceInfo24.getStatusPageUrl();
        java.util.Set<java.lang.String> strSet29 = instanceInfo24.getHealthCheckUrls();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(leaseInfo27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strSet29);
    }

    @Test
    public void test04165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04165");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo4 = myDataCenterInstanceConfig2.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig2.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo7 = myDataCenterInstanceConfig2.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig("UNKNOWN", dataCenterInfo7);
        java.lang.String str9 = myDataCenterInstanceConfig8.getStatusPageUrl();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str6, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo7);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test04166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04166");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
// flaky:         instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = null; // flaky: instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = null; // flaky: instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = null; // flaky: builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = null; // flaky: builder21.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = null; // flaky: builder23.setSecureVIPAddress("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder27 = null; // flaky: builder23.setStatusPageUrlForDeser("inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.InstanceInfo.Builder builder29 = null; // flaky: builder23.setHostName("hi!");
        com.netflix.appinfo.LeaseInfo leaseInfo30 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder31 = null; // flaky: builder29.setLeaseInfo(leaseInfo30);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager32 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig34 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int35 = myDataCenterInstanceConfig34.getLeaseRenewalIntervalInSeconds();
        int int36 = myDataCenterInstanceConfig34.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager32.config = myDataCenterInstanceConfig34;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager32;
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus40 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("/Status");
// flaky:         applicationInfoManager32.setInstanceStatus(instanceStatus40);
        com.netflix.appinfo.InstanceInfo.Builder builder42 = null; // flaky: builder31.setStatus(instanceStatus40);
        com.netflix.appinfo.InstanceInfo.Builder builder44 = null; // flaky: builder42.setPort((int) (short) 10);
        com.netflix.appinfo.InstanceInfo instanceInfo45 = null; // flaky: builder44.getRawInstance();
        java.lang.String str46 = null; // flaky: instanceInfo45.getStatusPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null; // flaky: instanceInfo45.getMetadata();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo48 = null; // flaky: instanceInfo45.getDataCenterInfo();
        java.lang.String str49 = null; // flaky: instanceInfo45.getStatusPageUrl();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus50 = null; // flaky: instanceInfo45.getOverriddenStatus();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertNotNull(strSet16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertNotNull(builder21);
// flaky:         org.junit.Assert.assertNotNull(builder23);
// flaky:         org.junit.Assert.assertNotNull(builder25);
// flaky:         org.junit.Assert.assertNotNull(builder27);
// flaky:         org.junit.Assert.assertNotNull(builder29);
// flaky:         org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(applicationInfoManager32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 30 + "'", int35 == 30);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 30 + "'", int36 == 30);
        org.junit.Assert.assertTrue("'" + instanceStatus40 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus40.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
// flaky:         org.junit.Assert.assertNotNull(builder42);
// flaky:         org.junit.Assert.assertNotNull(builder44);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo45);
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "http://hi!:80/Status" + "'", str46, "http://hi!:80/Status");
// flaky:         org.junit.Assert.assertNotNull(strMap47);
// flaky:         org.junit.Assert.assertNotNull(dataCenterInfo48);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "http://hi!:80/Status" + "'", str49, "http://hi!:80/Status");
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus50 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus50.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
    }

    @Test
    public void test04167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04167");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int11 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        int int12 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        java.lang.String str13 = myDataCenterInstanceConfig10.getStatusPageUrlPath();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig10);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig16 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int17 = myDataCenterInstanceConfig16.getLeaseRenewalIntervalInSeconds();
        int int18 = myDataCenterInstanceConfig16.getLeaseRenewalIntervalInSeconds();
        java.lang.String str19 = myDataCenterInstanceConfig16.getStatusPageUrlPath();
        boolean boolean20 = myDataCenterInstanceConfig16.getSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager21 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo22 = applicationInfoManager21.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int25 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig24.getDataCenterInfo();
        java.lang.String str27 = myDataCenterInstanceConfig24.getNamespace();
        boolean boolean28 = myDataCenterInstanceConfig24.isNonSecurePortEnabled();
        applicationInfoManager21.config = myDataCenterInstanceConfig24;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig30 = applicationInfoManager21.config;
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager21.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager21.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType33 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo32.setActionType(actionType33);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager35 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo36 = applicationInfoManager35.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig38 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int39 = myDataCenterInstanceConfig38.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo40 = myDataCenterInstanceConfig38.getDataCenterInfo();
        java.lang.String str41 = myDataCenterInstanceConfig38.getNamespace();
        boolean boolean42 = myDataCenterInstanceConfig38.isNonSecurePortEnabled();
        applicationInfoManager35.config = myDataCenterInstanceConfig38;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig44 = applicationInfoManager35.config;
        com.netflix.appinfo.InstanceInfo instanceInfo45 = applicationInfoManager35.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo46 = applicationInfoManager35.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType47 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo46.setActionType(actionType47);
        instanceInfo32.setActionType(actionType47);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager50 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig16, instanceInfo32);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus52 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("inesserver2.windows.cin.ufpe.br:80");
        instanceInfo32.setOverriddenStatus(instanceStatus52);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus55 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("/Status");
        instanceInfo32.setOverriddenStatus(instanceStatus55);
        applicationInfoManager0.setInstanceStatus(instanceStatus55);
        com.netflix.appinfo.InstanceInfo instanceInfo58 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType59 = instanceInfo58.getActionType();
        java.lang.Class<?> wildcardClass60 = actionType59.getClass();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 30 + "'", int12 == 30);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/Status" + "'", str13, "/Status");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 30 + "'", int18 == 30);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/Status" + "'", str19, "/Status");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 30 + "'", int25 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertTrue("'" + actionType33 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType33.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager35);
        org.junit.Assert.assertNotNull(instanceInfo36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 30 + "'", int39 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig44);
        org.junit.Assert.assertNotNull(instanceInfo45);
        org.junit.Assert.assertNotNull(instanceInfo46);
        org.junit.Assert.assertTrue("'" + actionType47 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType47.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + instanceStatus52 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus52.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertTrue("'" + instanceStatus55 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus55.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(instanceInfo58);
        org.junit.Assert.assertTrue("'" + actionType59 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType59.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test04168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04168");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder7.setASGName("inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.InstanceInfo instanceInfo10 = builder7.getRawInstance();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder7.setCountryId((int) (byte) 10);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder7.setNamespace("default");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder7.add("172.20.26.3", "/healthcheck");
        boolean boolean18 = builder7.isInitialized();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test04169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04169");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setHostName("172.20.26.3");
        com.netflix.appinfo.LeaseInfo leaseInfo12 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder11.setLeaseInfo(leaseInfo12);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager14 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo15 = applicationInfoManager14.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig17 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int18 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig17.getDataCenterInfo();
        java.lang.String str20 = myDataCenterInstanceConfig17.getNamespace();
        boolean boolean21 = myDataCenterInstanceConfig17.isNonSecurePortEnabled();
        applicationInfoManager14.config = myDataCenterInstanceConfig17;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig23 = applicationInfoManager14.config;
        com.netflix.appinfo.InstanceInfo instanceInfo24 = applicationInfoManager14.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager14.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType26 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo25.setActionType(actionType26);
        java.lang.String str28 = instanceInfo25.getVersion();
        java.lang.String str29 = instanceInfo25.getIPAddr();
        instanceInfo25.setLastUpdatedTimestamp();
        java.lang.String str31 = instanceInfo25.getVersion();
        boolean boolean32 = instanceInfo25.isDirty();
        instanceInfo25.setLastDirtyTimestamp((java.lang.Long) 1636105963791L);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager35 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig37 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int38 = myDataCenterInstanceConfig37.getLeaseRenewalIntervalInSeconds();
        int int39 = myDataCenterInstanceConfig37.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager35.config = myDataCenterInstanceConfig37;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig41 = applicationInfoManager35.config;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig42 = applicationInfoManager35.config;
        com.netflix.appinfo.InstanceInfo instanceInfo43 = applicationInfoManager35.getInfo();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus44 = instanceInfo43.getOverriddenStatus();
        instanceInfo25.setStatusWithoutDirty(instanceStatus44);
        com.netflix.appinfo.InstanceInfo.Builder builder46 = builder13.setOverriddenStatus(instanceStatus44);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(applicationInfoManager14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 30 + "'", int18 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig23);
        org.junit.Assert.assertNotNull(instanceInfo24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertTrue("'" + actionType26 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType26.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "unknown" + "'", str28, "unknown");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "172.20.26.3" + "'", str29, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "unknown" + "'", str31, "unknown");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(applicationInfoManager35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 30 + "'", int38 == 30);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 30 + "'", int39 == 30);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig41);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig42);
        org.junit.Assert.assertNotNull(instanceInfo43);
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus44 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus44.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(builder46);
    }

    @Test
    public void test04170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04170");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder18.setVIPAddressDeser("hi!");
        com.netflix.appinfo.InstanceInfo.PortType portType24 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder23.enablePort(portType24, false);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager27 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager27.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig30 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int31 = myDataCenterInstanceConfig30.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo32 = myDataCenterInstanceConfig30.getDataCenterInfo();
        java.lang.String str33 = myDataCenterInstanceConfig30.getNamespace();
        boolean boolean34 = myDataCenterInstanceConfig30.isNonSecurePortEnabled();
        applicationInfoManager27.config = myDataCenterInstanceConfig30;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig36 = applicationInfoManager27.config;
        com.netflix.appinfo.InstanceInfo instanceInfo37 = applicationInfoManager27.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo38 = applicationInfoManager27.instanceInfo;
        java.lang.Boolean boolean39 = instanceInfo38.isCoordinatingDiscoveryServer();
        java.lang.String str40 = instanceInfo38.getVIPAddress();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus41 = instanceInfo38.getOverriddenStatus();
        com.netflix.appinfo.InstanceInfo.Builder builder42 = builder26.setOverriddenStatus(instanceStatus41);
        com.netflix.appinfo.InstanceInfo.Builder builder45 = builder42.add("/healthcheck", "hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder47 = builder42.setIPAddr("eureka.");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager48 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo49 = applicationInfoManager48.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig51 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int52 = myDataCenterInstanceConfig51.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo53 = myDataCenterInstanceConfig51.getDataCenterInfo();
        java.lang.String str54 = myDataCenterInstanceConfig51.getNamespace();
        boolean boolean55 = myDataCenterInstanceConfig51.isNonSecurePortEnabled();
        applicationInfoManager48.config = myDataCenterInstanceConfig51;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig57 = applicationInfoManager48.config;
        com.netflix.appinfo.InstanceInfo instanceInfo58 = applicationInfoManager48.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo59 = applicationInfoManager48.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType60 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo59.setActionType(actionType60);
        com.netflix.appinfo.LeaseInfo leaseInfo62 = null;
        instanceInfo59.setLeaseInfo(leaseInfo62);
        java.util.Set<java.lang.String> strSet64 = instanceInfo59.getHealthCheckUrls();
        java.lang.String str65 = instanceInfo59.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder66 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo59);
        com.netflix.appinfo.InstanceInfo.Builder builder69 = builder66.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder71 = builder69.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder74 = builder71.setStatusPageUrl("inesserver2.windows.cin.ufpe.br:80", "hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder76 = builder74.setSID("/HEALTHCHECK");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig78 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        java.lang.String str79 = myDataCenterInstanceConfig78.getASGName();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = myDataCenterInstanceConfig78.getMetadataMap();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo81 = myDataCenterInstanceConfig78.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig82 = new com.netflix.appinfo.MyDataCenterInstanceConfig("na", dataCenterInfo81);
        com.netflix.appinfo.InstanceInfo.Builder builder83 = builder76.setDataCenterInfo(dataCenterInfo81);
        com.netflix.appinfo.InstanceInfo.Builder builder84 = builder47.setDataCenterInfo(dataCenterInfo81);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + portType24 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType24.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(applicationInfoManager27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 30 + "'", int31 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig36);
        org.junit.Assert.assertNotNull(instanceInfo37);
        org.junit.Assert.assertNotNull(instanceInfo38);
// flaky:         org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + true + "'", boolean39, true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus41 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus41.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(applicationInfoManager48);
        org.junit.Assert.assertNotNull(instanceInfo49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 30 + "'", int52 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig57);
        org.junit.Assert.assertNotNull(instanceInfo58);
        org.junit.Assert.assertNotNull(instanceInfo59);
        org.junit.Assert.assertTrue("'" + actionType60 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType60.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str65, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(dataCenterInfo81);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder84);
    }

    @Test
    public void test04171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04171");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.PortType portType21 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder18.enablePort(portType21, true);
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setCountryId(0);
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder25.setAppGroupName("http://hi!:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder25.setNamespace("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder25.setHostName("");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager32 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo33 = applicationInfoManager32.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig35 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int36 = myDataCenterInstanceConfig35.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo37 = myDataCenterInstanceConfig35.getDataCenterInfo();
        java.lang.String str38 = myDataCenterInstanceConfig35.getNamespace();
        boolean boolean39 = myDataCenterInstanceConfig35.isNonSecurePortEnabled();
        applicationInfoManager32.config = myDataCenterInstanceConfig35;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig41 = applicationInfoManager32.config;
        com.netflix.appinfo.InstanceInfo instanceInfo42 = applicationInfoManager32.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo43 = applicationInfoManager32.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType44 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo43.setActionType(actionType44);
        com.netflix.appinfo.LeaseInfo leaseInfo46 = null;
        instanceInfo43.setLeaseInfo(leaseInfo46);
        java.util.Set<java.lang.String> strSet48 = instanceInfo43.getHealthCheckUrls();
        java.lang.String str49 = instanceInfo43.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder50 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo43);
        com.netflix.appinfo.InstanceInfo.Builder builder53 = builder50.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder56 = builder50.add("na", "/");
        com.netflix.appinfo.InstanceInfo.Builder builder59 = builder50.add("/", "/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder61 = builder50.setLastDirtyTimestamp(1636105981830L);
        com.netflix.appinfo.InstanceInfo.Builder builder63 = builder61.setSecureVIPAddress("http://default:80/Status");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager64 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo65 = applicationInfoManager64.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig67 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int68 = myDataCenterInstanceConfig67.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo69 = myDataCenterInstanceConfig67.getDataCenterInfo();
        java.lang.String str70 = myDataCenterInstanceConfig67.getNamespace();
        boolean boolean71 = myDataCenterInstanceConfig67.isNonSecurePortEnabled();
        applicationInfoManager64.config = myDataCenterInstanceConfig67;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig73 = applicationInfoManager64.config;
        com.netflix.appinfo.InstanceInfo instanceInfo74 = applicationInfoManager64.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo75 = applicationInfoManager64.instanceInfo;
        java.lang.Boolean boolean76 = instanceInfo75.isCoordinatingDiscoveryServer();
        java.lang.String str77 = instanceInfo75.getVIPAddress();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus78 = instanceInfo75.getOverriddenStatus();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo79 = instanceInfo75.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder80 = builder63.setDataCenterInfo(dataCenterInfo79);
        com.netflix.appinfo.InstanceInfo.Builder builder81 = builder31.setDataCenterInfo(dataCenterInfo79);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + portType21 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType21.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(applicationInfoManager32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 30 + "'", int36 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig41);
        org.junit.Assert.assertNotNull(instanceInfo42);
        org.junit.Assert.assertNotNull(instanceInfo43);
        org.junit.Assert.assertTrue("'" + actionType44 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType44.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(applicationInfoManager64);
        org.junit.Assert.assertNotNull(instanceInfo65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 30 + "'", int68 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig73);
        org.junit.Assert.assertNotNull(instanceInfo74);
        org.junit.Assert.assertNotNull(instanceInfo75);
// flaky:         org.junit.Assert.assertEquals("'" + boolean76 + "' != '" + true + "'", boolean76, true);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str77, "inesserver2.windows.cin.ufpe.br:80");
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus78 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus78.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(dataCenterInfo79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder81);
    }

    @Test
    public void test04172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04172");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig12 = applicationInfoManager0.config;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager14 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.InstanceInfo instanceInfo15 = applicationInfoManager14.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig17 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int18 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        java.lang.String str19 = myDataCenterInstanceConfig17.getVirtualHostName();
        java.lang.String str20 = myDataCenterInstanceConfig17.getASGName();
        boolean boolean21 = myDataCenterInstanceConfig17.isNonSecurePortEnabled();
        applicationInfoManager14.config = myDataCenterInstanceConfig17;
        java.lang.String str23 = myDataCenterInstanceConfig17.getAppname();
        java.lang.String str24 = myDataCenterInstanceConfig17.getNamespace();
        applicationInfoManager0.config = myDataCenterInstanceConfig17;
        java.lang.String str26 = myDataCenterInstanceConfig17.getASGName();
        int int27 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig12);
        org.junit.Assert.assertNotNull(applicationInfoManager14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 30 + "'", int18 == 30);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str19, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "unknown" + "'", str23, "unknown");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 30 + "'", int27 == 30);
    }

    @Test
    public void test04173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04173");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int9 = myDataCenterInstanceConfig8.getLeaseRenewalIntervalInSeconds();
        int int10 = myDataCenterInstanceConfig8.getLeaseRenewalIntervalInSeconds();
        java.lang.String str11 = myDataCenterInstanceConfig8.getStatusPageUrlPath();
        boolean boolean12 = myDataCenterInstanceConfig8.getSecurePortEnabled();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = myDataCenterInstanceConfig8.getMetadataMap();
        applicationInfoManager0.config = myDataCenterInstanceConfig8;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig17 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int18 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        int int19 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager15.config = myDataCenterInstanceConfig17;
        java.lang.String str21 = myDataCenterInstanceConfig17.getHealthCheckUrlPath();
        java.lang.String str22 = myDataCenterInstanceConfig17.getNamespace();
        java.lang.String str23 = myDataCenterInstanceConfig17.getASGName();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig17);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig26 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int27 = myDataCenterInstanceConfig26.getLeaseRenewalIntervalInSeconds();
        java.lang.String str28 = myDataCenterInstanceConfig26.getVirtualHostName();
        java.lang.String str29 = myDataCenterInstanceConfig26.getASGName();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig26);
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig31 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager34 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager34.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig37 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int38 = myDataCenterInstanceConfig37.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo39 = myDataCenterInstanceConfig37.getDataCenterInfo();
        int int40 = myDataCenterInstanceConfig37.getLeaseExpirationDurationInSeconds();
        java.lang.String str41 = myDataCenterInstanceConfig37.getHomePageUrlPath();
        applicationInfoManager34.config = myDataCenterInstanceConfig37;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig43 = applicationInfoManager34.config;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig45 = new com.netflix.appinfo.MyDataCenterInstanceConfig("hi!");
        java.lang.String str46 = myDataCenterInstanceConfig45.getStatusPageUrl();
        boolean boolean47 = myDataCenterInstanceConfig45.isNonSecurePortEnabled();
        java.lang.String str48 = myDataCenterInstanceConfig45.getHealthCheckUrl();
        java.lang.String str49 = myDataCenterInstanceConfig45.getSecureHealthCheckUrl();
        boolean boolean50 = myDataCenterInstanceConfig45.isNonSecurePortEnabled();
        applicationInfoManager34.config = myDataCenterInstanceConfig45;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig53 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int54 = myDataCenterInstanceConfig53.getLeaseRenewalIntervalInSeconds();
        java.lang.String str55 = myDataCenterInstanceConfig53.getNamespace();
        java.lang.String str56 = myDataCenterInstanceConfig53.getNamespace();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo57 = myDataCenterInstanceConfig53.getDataCenterInfo();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = myDataCenterInstanceConfig53.getMetadataMap();
        applicationInfoManager34.registerAppMetadata(strMap58);
        applicationInfoManager0.registerAppMetadata(strMap58);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 30 + "'", int9 == 30);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/Status" + "'", str11, "/Status");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(applicationInfoManager15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 30 + "'", int18 == 30);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 30 + "'", int19 == 30);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "/healthcheck" + "'", str21, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 30 + "'", int27 == 30);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str28, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig31);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertNotNull(applicationInfoManager34);
        org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 30 + "'", int38 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 90 + "'", int40 == 90);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/" + "'", str41, "/");
        org.junit.Assert.assertNotNull(eurekaInstanceConfig43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 30 + "'", int54 == 30);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(dataCenterInfo57);
        org.junit.Assert.assertNotNull(strMap58);
    }

    @Test
    public void test04174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04174");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder20.add("/healthcheck", "UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder20.setPort((int) (short) 100);
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder25.setStatusPageUrl("UNKNOWN", "http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder28.setHealthCheckUrlsForDeser("na", "/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder28.setStatusPageUrlForDeser("DEFAULT");
        com.netflix.appinfo.InstanceInfo.Builder builder37 = builder33.setHealthCheckUrls("172.20.26.3", "hi!", "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder37);
    }

    @Test
    public void test04175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04175");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setCountryId(7002);
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder4.setHealthCheckUrlsForDeser("http://hi!:80/Status", "inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder7.setStatusPageUrlForDeser("http://default:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder9.setASGName("HTTP://HI!:80/STATUS");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
    }

    @Test
    public void test04176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04176");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo instanceInfo5 = builder0.build();
        boolean boolean6 = builder0.isInitialized();
        com.netflix.appinfo.InstanceInfo instanceInfo7 = builder0.getRawInstance();
        com.netflix.appinfo.LeaseInfo leaseInfo8 = instanceInfo7.getLeaseInfo();
        java.lang.String str9 = instanceInfo7.getId();
        instanceInfo7.setLastUpdatedTimestamp();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = instanceInfo7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = new com.netflix.appinfo.InstanceInfo(instanceInfo7);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(instanceInfo5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(instanceInfo7);
        org.junit.Assert.assertNull(leaseInfo8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(dataCenterInfo11);
    }

    @Test
    public void test04177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04177");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = instanceInfo11.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.Builder builder15 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig17 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int18 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig17.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder15.setDataCenterInfo(dataCenterInfo19);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder15.setHomePageUrl("http://inesserver2.windows.cin.ufpe.br:80/Status", "UNKNOWN");
        com.netflix.appinfo.InstanceInfo instanceInfo24 = builder15.build();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UNKNOWN" + "'", str14, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 30 + "'", int18 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(instanceInfo24);
    }

    @Test
    public void test04178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04178");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "/Status", "default", "inesserver2.windows.cin.ufpe.br:80", "default", "default" };
        com.netflix.appinfo.InstanceInfo instanceInfo7 = null;
        java.lang.String str8 = com.netflix.appinfo.InstanceInfo.getZone(strArray6, instanceInfo7);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager9 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager9.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int13 = myDataCenterInstanceConfig12.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo14 = myDataCenterInstanceConfig12.getDataCenterInfo();
        java.lang.String str15 = myDataCenterInstanceConfig12.getNamespace();
        boolean boolean16 = myDataCenterInstanceConfig12.isNonSecurePortEnabled();
        applicationInfoManager9.config = myDataCenterInstanceConfig12;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig18 = applicationInfoManager9.config;
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager9.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager9.instanceInfo;
        int int21 = instanceInfo20.getSecurePort();
        boolean boolean22 = instanceInfo20.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo23 = new com.netflix.appinfo.InstanceInfo(instanceInfo20);
        long long24 = instanceInfo23.getLastUpdatedTimestamp();
        java.lang.String str25 = com.netflix.appinfo.InstanceInfo.getZone(strArray6, instanceInfo23);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig28 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int29 = myDataCenterInstanceConfig28.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo30 = myDataCenterInstanceConfig28.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig31 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo30);
        java.lang.String str32 = myDataCenterInstanceConfig31.getAppname();
        java.lang.String str33 = myDataCenterInstanceConfig31.getNamespace();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig34 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager35 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo36 = applicationInfoManager35.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig38 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int39 = myDataCenterInstanceConfig38.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo40 = myDataCenterInstanceConfig38.getDataCenterInfo();
        java.lang.String str41 = myDataCenterInstanceConfig38.getNamespace();
        boolean boolean42 = myDataCenterInstanceConfig38.isNonSecurePortEnabled();
        applicationInfoManager35.config = myDataCenterInstanceConfig38;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig44 = applicationInfoManager35.config;
        com.netflix.appinfo.InstanceInfo instanceInfo45 = applicationInfoManager35.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo46 = applicationInfoManager35.instanceInfo;
        int int47 = instanceInfo46.getSecurePort();
        boolean boolean48 = instanceInfo46.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager49 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig34, instanceInfo46);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager50 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig31, instanceInfo46);
        instanceInfo46.setLastDirtyTimestamp((java.lang.Long) 100L);
        java.util.Set<java.lang.String> strSet53 = instanceInfo46.getHealthCheckUrls();
        java.util.Set<java.lang.String> strSet54 = instanceInfo46.getHealthCheckUrls();
        java.lang.String str55 = instanceInfo46.getAppGroupName();
        java.util.Set<java.lang.String> strSet56 = instanceInfo46.getHealthCheckUrls();
        java.lang.String str57 = com.netflix.appinfo.InstanceInfo.getZone(strArray6, instanceInfo46);
        long long58 = instanceInfo46.getLastUpdatedTimestamp();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(applicationInfoManager9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 30 + "'", int13 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 443 + "'", int21 == 443);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1636106123092L + "'", long24 == 1636106123092L);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 30 + "'", int29 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "unknown" + "'", str32, "unknown");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/Status" + "'", str33, "/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager35);
        org.junit.Assert.assertNotNull(instanceInfo36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 30 + "'", int39 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig44);
        org.junit.Assert.assertNotNull(instanceInfo45);
        org.junit.Assert.assertNotNull(instanceInfo46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 443 + "'", int47 == 443);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "UNKNOWN" + "'", str55, "UNKNOWN");
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1636106123092L + "'", long58 == 1636106123092L);
    }

    @Test
    public void test04179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04179");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("http://inesserver2.windows.cin.ufpe.br:80/", "default");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager6 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo7 = applicationInfoManager6.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig9.getDataCenterInfo();
        java.lang.String str12 = myDataCenterInstanceConfig9.getNamespace();
        boolean boolean13 = myDataCenterInstanceConfig9.isNonSecurePortEnabled();
        applicationInfoManager6.config = myDataCenterInstanceConfig9;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig15 = applicationInfoManager6.config;
        com.netflix.appinfo.InstanceInfo instanceInfo16 = applicationInfoManager6.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo17 = applicationInfoManager6.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType18 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo17.setActionType(actionType18);
        com.netflix.appinfo.LeaseInfo leaseInfo20 = null;
        instanceInfo17.setLeaseInfo(leaseInfo20);
        java.lang.String str22 = instanceInfo17.getSID();
        com.netflix.appinfo.InstanceInfo instanceInfo23 = new com.netflix.appinfo.InstanceInfo(instanceInfo17);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager24 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager24.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig27 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int28 = myDataCenterInstanceConfig27.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig27.getDataCenterInfo();
        java.lang.String str30 = myDataCenterInstanceConfig27.getNamespace();
        boolean boolean31 = myDataCenterInstanceConfig27.isNonSecurePortEnabled();
        applicationInfoManager24.config = myDataCenterInstanceConfig27;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig33 = applicationInfoManager24.config;
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager24.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager24.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType36 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo35.setActionType(actionType36);
        com.netflix.appinfo.LeaseInfo leaseInfo38 = null;
        instanceInfo35.setLeaseInfo(leaseInfo38);
        java.util.Set<java.lang.String> strSet40 = instanceInfo35.getHealthCheckUrls();
        java.lang.String str41 = instanceInfo35.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder42 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo35);
        com.netflix.appinfo.InstanceInfo.Builder builder45 = builder42.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder47 = builder42.setVIPAddressDeser("hi!");
        com.netflix.appinfo.LeaseInfo leaseInfo48 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder49 = builder42.setLeaseInfo(leaseInfo48);
        com.netflix.appinfo.InstanceInfo.PortType portType50 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder52 = builder42.enablePort(portType50, false);
        boolean boolean53 = instanceInfo17.isPortEnabled(portType50);
        com.netflix.appinfo.InstanceInfo.Builder builder55 = builder2.enablePort(portType50, false);
        com.netflix.appinfo.InstanceInfo.Builder builder57 = builder55.setVIPAddressDeser("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder59 = builder57.setHomePageUrlForDeser("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager61 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo62 = applicationInfoManager61.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig64 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int65 = myDataCenterInstanceConfig64.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo66 = myDataCenterInstanceConfig64.getDataCenterInfo();
        java.lang.String str67 = myDataCenterInstanceConfig64.getNamespace();
        boolean boolean68 = myDataCenterInstanceConfig64.isNonSecurePortEnabled();
        applicationInfoManager61.config = myDataCenterInstanceConfig64;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig70 = applicationInfoManager61.config;
        com.netflix.appinfo.InstanceInfo instanceInfo71 = applicationInfoManager61.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig74 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int75 = myDataCenterInstanceConfig74.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo76 = myDataCenterInstanceConfig74.getDataCenterInfo();
        java.lang.String str78 = myDataCenterInstanceConfig74.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo79 = myDataCenterInstanceConfig74.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig80 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo79);
        java.lang.String str81 = myDataCenterInstanceConfig80.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap82 = myDataCenterInstanceConfig80.getMetadataMap();
        applicationInfoManager61.registerAppMetadata(strMap82);
        com.netflix.appinfo.InstanceInfo instanceInfo84 = applicationInfoManager61.instanceInfo;
        java.lang.String str85 = instanceInfo84.getStatusPageUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo86 = instanceInfo84.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig87 = new com.netflix.appinfo.MyDataCenterInstanceConfig("unknown", dataCenterInfo86);
        com.netflix.appinfo.InstanceInfo.Builder builder88 = builder57.setDataCenterInfo(dataCenterInfo86);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(applicationInfoManager6);
        org.junit.Assert.assertNotNull(instanceInfo7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig15);
        org.junit.Assert.assertNotNull(instanceInfo16);
        org.junit.Assert.assertNotNull(instanceInfo17);
        org.junit.Assert.assertTrue("'" + actionType18 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType18.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str22, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNotNull(applicationInfoManager24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 30 + "'", int28 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertTrue("'" + actionType36 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType36.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str41, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + portType50 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType50.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(applicationInfoManager61);
        org.junit.Assert.assertNotNull(instanceInfo62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 30 + "'", int65 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig70);
        org.junit.Assert.assertNotNull(instanceInfo71);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 30 + "'", int75 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str78, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo79);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(instanceInfo84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "DEFAULT" + "'", str85, "DEFAULT");
        org.junit.Assert.assertNotNull(dataCenterInfo86);
        org.junit.Assert.assertNotNull(builder88);
    }

    @Test
    public void test04180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04180");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig4.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo6);
        java.lang.String str8 = myDataCenterInstanceConfig7.getAppname();
        java.lang.String str9 = myDataCenterInstanceConfig7.getNamespace();
        applicationInfoManager0.config = myDataCenterInstanceConfig7;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager11 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager11.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig14 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int15 = myDataCenterInstanceConfig14.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo16 = myDataCenterInstanceConfig14.getDataCenterInfo();
        java.lang.String str17 = myDataCenterInstanceConfig14.getNamespace();
        boolean boolean18 = myDataCenterInstanceConfig14.isNonSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig14.getDataCenterInfo();
        applicationInfoManager11.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig14);
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig14);
        com.netflix.appinfo.InstanceInfo.Builder builder22 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder22.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder22.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder22.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig29 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo30 = myDataCenterInstanceConfig29.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder28.setDataCenterInfo(dataCenterInfo30);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig32 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo33 = myDataCenterInstanceConfig32.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder28.setDataCenterInfo(dataCenterInfo33);
        com.netflix.appinfo.InstanceInfo.Builder builder36 = builder28.setNamespace("na");
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder28.setLastDirtyTimestamp(1636105969900L);
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder38.setSecureVIPAddress("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder42 = builder38.setSecureVIPAddressDeser("na");
        com.netflix.appinfo.InstanceInfo instanceInfo43 = builder38.getRawInstance();
        java.lang.String str44 = instanceInfo43.getHostName();
        com.netflix.appinfo.LeaseInfo leaseInfo45 = instanceInfo43.getLeaseInfo();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager46 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig14, instanceInfo43);
        com.netflix.appinfo.InstanceInfo instanceInfo47 = new com.netflix.appinfo.InstanceInfo(instanceInfo43);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "unknown" + "'", str8, "unknown");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/Status" + "'", str9, "/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 30 + "'", int15 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(dataCenterInfo30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(dataCenterInfo33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(instanceInfo43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(leaseInfo45);
    }

    @Test
    public void test04181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04181");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        int int3 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        boolean boolean5 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager6 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo7 = applicationInfoManager6.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig9.getDataCenterInfo();
        java.lang.String str12 = myDataCenterInstanceConfig9.getNamespace();
        boolean boolean13 = myDataCenterInstanceConfig9.isNonSecurePortEnabled();
        applicationInfoManager6.config = myDataCenterInstanceConfig9;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig15 = applicationInfoManager6.config;
        com.netflix.appinfo.InstanceInfo instanceInfo16 = applicationInfoManager6.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo17 = applicationInfoManager6.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType18 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo17.setActionType(actionType18);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager20 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager20.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig23 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int24 = myDataCenterInstanceConfig23.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = myDataCenterInstanceConfig23.getDataCenterInfo();
        java.lang.String str26 = myDataCenterInstanceConfig23.getNamespace();
        boolean boolean27 = myDataCenterInstanceConfig23.isNonSecurePortEnabled();
        applicationInfoManager20.config = myDataCenterInstanceConfig23;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig29 = applicationInfoManager20.config;
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager20.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager20.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType32 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo31.setActionType(actionType32);
        instanceInfo17.setActionType(actionType32);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager35 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo17);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus37 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("inesserver2.windows.cin.ufpe.br:80");
        instanceInfo17.setOverriddenStatus(instanceStatus37);
        java.util.Set<java.lang.String> strSet39 = instanceInfo17.getHealthCheckUrls();
        java.lang.String str40 = instanceInfo17.getId();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager41 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig43 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int44 = myDataCenterInstanceConfig43.getLeaseRenewalIntervalInSeconds();
        int int45 = myDataCenterInstanceConfig43.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager41.config = myDataCenterInstanceConfig43;
        java.lang.String str47 = myDataCenterInstanceConfig43.getHealthCheckUrlPath();
        java.lang.String str48 = myDataCenterInstanceConfig43.getNamespace();
        java.lang.String str49 = myDataCenterInstanceConfig43.getASGName();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo50 = myDataCenterInstanceConfig43.getDataCenterInfo();
        boolean boolean51 = instanceInfo17.equals((java.lang.Object) myDataCenterInstanceConfig43);
        java.lang.String str52 = myDataCenterInstanceConfig43.getVirtualHostName();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/Status" + "'", str4, "/Status");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager6);
        org.junit.Assert.assertNotNull(instanceInfo7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig15);
        org.junit.Assert.assertNotNull(instanceInfo16);
        org.junit.Assert.assertNotNull(instanceInfo17);
        org.junit.Assert.assertTrue("'" + actionType18 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType18.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager20);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 30 + "'", int24 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig29);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertTrue("'" + actionType32 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType32.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + instanceStatus37 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus37.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(applicationInfoManager41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 30 + "'", int44 == 30);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "/healthcheck" + "'", str47, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(dataCenterInfo50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str52, "inesserver2.windows.cin.ufpe.br:80");
    }

    @Test
    public void test04182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04182");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        com.netflix.appinfo.InstanceInfo instanceInfo6 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int9 = myDataCenterInstanceConfig8.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo10 = myDataCenterInstanceConfig8.getDataCenterInfo();
        java.lang.String str11 = myDataCenterInstanceConfig8.getHealthCheckUrl();
        int int12 = myDataCenterInstanceConfig8.getLeaseExpirationDurationInSeconds();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig8);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager14 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo15 = applicationInfoManager14.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig17 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int18 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig17.getDataCenterInfo();
        java.lang.String str20 = myDataCenterInstanceConfig17.getNamespace();
        boolean boolean21 = myDataCenterInstanceConfig17.isNonSecurePortEnabled();
        applicationInfoManager14.config = myDataCenterInstanceConfig17;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig23 = applicationInfoManager14.config;
        com.netflix.appinfo.InstanceInfo instanceInfo24 = applicationInfoManager14.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager14.instanceInfo;
        java.lang.Boolean boolean26 = instanceInfo25.isCoordinatingDiscoveryServer();
        java.lang.String str27 = instanceInfo25.getVIPAddress();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = instanceInfo25.getMetadata();
        applicationInfoManager0.registerAppMetadata(strMap28);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager30 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager30.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig33 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int34 = myDataCenterInstanceConfig33.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo35 = myDataCenterInstanceConfig33.getDataCenterInfo();
        java.lang.String str36 = myDataCenterInstanceConfig33.getNamespace();
        boolean boolean37 = myDataCenterInstanceConfig33.isNonSecurePortEnabled();
        applicationInfoManager30.config = myDataCenterInstanceConfig33;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig39 = applicationInfoManager30.config;
        com.netflix.appinfo.InstanceInfo instanceInfo40 = applicationInfoManager30.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo41 = applicationInfoManager30.instanceInfo;
        java.lang.Boolean boolean42 = instanceInfo41.isCoordinatingDiscoveryServer();
        java.lang.String str43 = instanceInfo41.getVIPAddress();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus44 = instanceInfo41.getOverriddenStatus();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager45 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo46 = applicationInfoManager45.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig48 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int49 = myDataCenterInstanceConfig48.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo50 = myDataCenterInstanceConfig48.getDataCenterInfo();
        java.lang.String str51 = myDataCenterInstanceConfig48.getNamespace();
        boolean boolean52 = myDataCenterInstanceConfig48.isNonSecurePortEnabled();
        applicationInfoManager45.config = myDataCenterInstanceConfig48;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig54 = applicationInfoManager45.config;
        com.netflix.appinfo.InstanceInfo instanceInfo55 = applicationInfoManager45.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo56 = applicationInfoManager45.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType57 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo56.setActionType(actionType57);
        com.netflix.appinfo.LeaseInfo leaseInfo59 = null;
        instanceInfo56.setLeaseInfo(leaseInfo59);
        java.util.Set<java.lang.String> strSet61 = instanceInfo56.getHealthCheckUrls();
        java.lang.String str62 = instanceInfo56.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder63 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo56);
        com.netflix.appinfo.InstanceInfo.Builder builder66 = builder63.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder68 = builder66.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus69 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        com.netflix.appinfo.InstanceInfo.Builder builder70 = builder66.setStatus(instanceStatus69);
        instanceInfo41.setOverriddenStatus(instanceStatus69);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager72 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo73 = applicationInfoManager72.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig75 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int76 = myDataCenterInstanceConfig75.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo77 = myDataCenterInstanceConfig75.getDataCenterInfo();
        java.lang.String str78 = myDataCenterInstanceConfig75.getNamespace();
        boolean boolean79 = myDataCenterInstanceConfig75.isNonSecurePortEnabled();
        applicationInfoManager72.config = myDataCenterInstanceConfig75;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig81 = applicationInfoManager72.config;
        com.netflix.appinfo.InstanceInfo instanceInfo82 = applicationInfoManager72.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo83 = applicationInfoManager72.instanceInfo;
        int int84 = instanceInfo83.getSecurePort();
        boolean boolean85 = instanceInfo83.isDirty();
        java.lang.String str86 = instanceInfo83.getHostName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus87 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        instanceInfo83.setStatus(instanceStatus87);
        instanceInfo41.setStatusWithoutDirty(instanceStatus87);
        applicationInfoManager0.setInstanceStatus(instanceStatus87);
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig93 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.util.Map<java.lang.String, java.lang.String> strMap94 = myDataCenterInstanceConfig93.getMetadataMap();
        java.lang.String str95 = myDataCenterInstanceConfig93.getStatusPageUrl();
        applicationInfoManager0.config = myDataCenterInstanceConfig93;
        com.netflix.appinfo.InstanceInfo instanceInfo97 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo98 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo99 = new com.netflix.appinfo.InstanceInfo(instanceInfo98);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(instanceInfo6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 30 + "'", int9 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 90 + "'", int12 == 90);
        org.junit.Assert.assertNotNull(applicationInfoManager14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 30 + "'", int18 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig23);
        org.junit.Assert.assertNotNull(instanceInfo24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertEquals("'" + boolean26 + "' != '" + false + "'", boolean26, false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str27, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(applicationInfoManager30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig39);
        org.junit.Assert.assertNotNull(instanceInfo40);
        org.junit.Assert.assertNotNull(instanceInfo41);
        org.junit.Assert.assertEquals("'" + boolean42 + "' != '" + false + "'", boolean42, false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str43, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertTrue("'" + instanceStatus44 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus44.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(applicationInfoManager45);
        org.junit.Assert.assertNotNull(instanceInfo46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 30 + "'", int49 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig54);
        org.junit.Assert.assertNotNull(instanceInfo55);
        org.junit.Assert.assertNotNull(instanceInfo56);
        org.junit.Assert.assertTrue("'" + actionType57 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType57.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str62, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertTrue("'" + instanceStatus69 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus69.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(applicationInfoManager72);
        org.junit.Assert.assertNotNull(instanceInfo73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 30 + "'", int76 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig81);
        org.junit.Assert.assertNotNull(instanceInfo82);
        org.junit.Assert.assertNotNull(instanceInfo83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 443 + "'", int84 == 443);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str86, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + instanceStatus87 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus87.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNull(str95);
        org.junit.Assert.assertNotNull(instanceInfo97);
        org.junit.Assert.assertNotNull(instanceInfo98);
    }

    @Test
    public void test04183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04183");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig12 = applicationInfoManager0.config;
        applicationInfoManager0.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig15 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int16 = myDataCenterInstanceConfig15.getLeaseRenewalIntervalInSeconds();
        int int17 = myDataCenterInstanceConfig15.getLeaseRenewalIntervalInSeconds();
        java.lang.String str18 = myDataCenterInstanceConfig15.getStatusPageUrlPath();
        boolean boolean19 = myDataCenterInstanceConfig15.getSecurePortEnabled();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager21 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig15, instanceInfo20);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig23 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int24 = myDataCenterInstanceConfig23.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = myDataCenterInstanceConfig23.getDataCenterInfo();
        java.lang.String str26 = myDataCenterInstanceConfig23.getNamespace();
        applicationInfoManager21.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig23);
        java.lang.String str28 = myDataCenterInstanceConfig23.getNamespace();
        applicationInfoManager0.config = myDataCenterInstanceConfig23;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig30 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        java.lang.String str31 = myDataCenterInstanceConfig30.getASGName();
        int int32 = myDataCenterInstanceConfig30.getNonSecurePort();
        boolean boolean33 = myDataCenterInstanceConfig30.isInstanceEnabledOnit();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig30);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 30 + "'", int16 == 30);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/Status" + "'", str18, "/Status");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 30 + "'", int24 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 80 + "'", int32 == 80);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test04184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04184");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder12.setSecureVIPAddressDeser("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder16.add("na", "/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder16.setCountryId((int) (short) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setAppGroupName("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus24 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setOverriddenStatus(instanceStatus24);
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder23.setAppName("INESSERVER2.WINDOWS.CIN.UFPE.BR");
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder27.setHealthCheckUrlsForDeser("http:///:80/Status", "HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:10/STATUS");
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder30.setIPAddr("http://inesserver2.windows.cin.ufpe.br:80:80/Status");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + instanceStatus24 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus24.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
    }

    @Test
    public void test04185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04185");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setNamespace("na");
        com.netflix.appinfo.InstanceInfo instanceInfo15 = builder6.build();
        int int16 = instanceInfo15.getSecurePort();
        java.util.Set<java.lang.String> strSet17 = instanceInfo15.getHealthCheckUrls();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus18 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        instanceInfo15.setStatusWithoutDirty(instanceStatus18);
        instanceInfo15.setIsCoordinatingDiscoveryServer();
        instanceInfo15.setLastUpdatedTimestamp();
        int int22 = instanceInfo15.getSecurePort();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 7002 + "'", int16 == 7002);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + instanceStatus18 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus18.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 7002 + "'", int22 == 7002);
    }

    @Test
    public void test04186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04186");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        java.lang.String str4 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        com.netflix.appinfo.InstanceInfo instanceInfo5 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager6 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo5);
        java.lang.String str7 = myDataCenterInstanceConfig1.getNamespace();
        java.lang.String str8 = myDataCenterInstanceConfig1.getNamespace();
        int int9 = myDataCenterInstanceConfig1.getNonSecurePort();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/healthcheck" + "'", str4, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 80 + "'", int9 == 80);
    }

    @Test
    public void test04187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04187");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str3 = myDataCenterInstanceConfig1.getNamespace();
        java.lang.String str4 = myDataCenterInstanceConfig1.getNamespace();
        java.lang.String str5 = myDataCenterInstanceConfig1.getStatusPageUrl();
        int int6 = myDataCenterInstanceConfig1.getNonSecurePort();
        boolean boolean7 = myDataCenterInstanceConfig1.isInstanceEnabledOnit();
        java.lang.String str8 = myDataCenterInstanceConfig1.getAppGroupName();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 80 + "'", int6 == 80);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "unknown" + "'", str8, "unknown");
    }

    @Test
    public void test04188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04188");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder2.setSecureVIPAddressDeser("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder4.setAppGroupName("na");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder4.setVIPAddressDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder4.setSecureVIPAddress("http://default:80/Status");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test04189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04189");
        com.netflix.appinfo.DataCenterInfo dataCenterInfo1 = null;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("default", dataCenterInfo1);
        java.lang.String str3 = myDataCenterInstanceConfig2.getHealthCheckUrl();
        java.lang.String str4 = myDataCenterInstanceConfig2.getHealthCheckUrl();
        int int5 = myDataCenterInstanceConfig2.getNonSecurePort();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 80 + "'", int5 == 80);
    }

    @Test
    public void test04190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04190");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig14 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int15 = myDataCenterInstanceConfig14.getLeaseRenewalIntervalInSeconds();
        java.lang.String str16 = myDataCenterInstanceConfig14.getSecureVirtualHostName();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig14);
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig18 = applicationInfoManager0.config;
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "/Status", "default", "inesserver2.windows.cin.ufpe.br:80", "default", "default" };
        com.netflix.appinfo.InstanceInfo instanceInfo26 = null;
        java.lang.String str27 = com.netflix.appinfo.InstanceInfo.getZone(strArray25, instanceInfo26);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager28 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager28.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig31 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int32 = myDataCenterInstanceConfig31.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo33 = myDataCenterInstanceConfig31.getDataCenterInfo();
        java.lang.String str34 = myDataCenterInstanceConfig31.getNamespace();
        boolean boolean35 = myDataCenterInstanceConfig31.isNonSecurePortEnabled();
        applicationInfoManager28.config = myDataCenterInstanceConfig31;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig37 = applicationInfoManager28.config;
        com.netflix.appinfo.InstanceInfo instanceInfo38 = applicationInfoManager28.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo39 = applicationInfoManager28.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType40 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo39.setActionType(actionType40);
        com.netflix.appinfo.LeaseInfo leaseInfo42 = null;
        instanceInfo39.setLeaseInfo(leaseInfo42);
        java.lang.String str44 = instanceInfo39.getSID();
        java.lang.String str45 = com.netflix.appinfo.InstanceInfo.getZone(strArray25, instanceInfo39);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager46 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo47 = applicationInfoManager46.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig49 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int50 = myDataCenterInstanceConfig49.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo51 = myDataCenterInstanceConfig49.getDataCenterInfo();
        java.lang.String str52 = myDataCenterInstanceConfig49.getNamespace();
        boolean boolean53 = myDataCenterInstanceConfig49.isNonSecurePortEnabled();
        applicationInfoManager46.config = myDataCenterInstanceConfig49;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig55 = applicationInfoManager46.config;
        com.netflix.appinfo.InstanceInfo instanceInfo56 = applicationInfoManager46.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo57 = applicationInfoManager46.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType58 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo57.setActionType(actionType58);
        java.lang.String str60 = instanceInfo57.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.Builder builder61 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo57);
        com.netflix.appinfo.InstanceInfo instanceInfo62 = builder61.build();
        java.lang.String str63 = instanceInfo62.getIPAddr();
        java.lang.String str64 = com.netflix.appinfo.InstanceInfo.getZone(strArray25, instanceInfo62);
        java.lang.String str65 = instanceInfo62.getStatusPageUrl();
        com.netflix.appinfo.InstanceInfo instanceInfo66 = new com.netflix.appinfo.InstanceInfo(instanceInfo62);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager67 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig18, instanceInfo66);
        java.lang.String str68 = instanceInfo66.getAppName();
        com.netflix.appinfo.LeaseInfo leaseInfo69 = null;
        instanceInfo66.setLeaseInfo(leaseInfo69);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNull(instanceInfo10);
        org.junit.Assert.assertNull(instanceInfo11);
        org.junit.Assert.assertNull(instanceInfo12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 30 + "'", int15 == 30);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig18);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(applicationInfoManager28);
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 30 + "'", int32 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig37);
        org.junit.Assert.assertNotNull(instanceInfo38);
        org.junit.Assert.assertNotNull(instanceInfo39);
        org.junit.Assert.assertTrue("'" + actionType40 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType40.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "na" + "'", str44, "na");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(applicationInfoManager46);
        org.junit.Assert.assertNotNull(instanceInfo47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 30 + "'", int50 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig55);
        org.junit.Assert.assertNotNull(instanceInfo56);
        org.junit.Assert.assertNotNull(instanceInfo57);
        org.junit.Assert.assertTrue("'" + actionType58 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType58.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "UNKNOWN" + "'", str60, "UNKNOWN");
        org.junit.Assert.assertNotNull(instanceInfo62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "172.20.26.3" + "'", str63, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str65, "http://inesserver2.windows.cin.ufpe.br:80/Status");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "UNKNOWN" + "'", str68, "UNKNOWN");
    }

    @Test
    public void test04191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04191");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        int int4 = myDataCenterInstanceConfig1.getSecurePort();
        java.lang.String str5 = myDataCenterInstanceConfig1.getAppGroupName();
        java.lang.String str6 = myDataCenterInstanceConfig1.getASGName();
        java.lang.String str7 = myDataCenterInstanceConfig1.getASGName();
        int int8 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder9.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder9.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder9.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig16 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo17 = myDataCenterInstanceConfig16.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder15.setDataCenterInfo(dataCenterInfo17);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo20 = myDataCenterInstanceConfig19.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder15.setDataCenterInfo(dataCenterInfo20);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder21.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder21.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder21.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo31 = builder30.build();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager32 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo31);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager33 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager33.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig36 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int37 = myDataCenterInstanceConfig36.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo38 = myDataCenterInstanceConfig36.getDataCenterInfo();
        java.lang.String str39 = myDataCenterInstanceConfig36.getNamespace();
        boolean boolean40 = myDataCenterInstanceConfig36.isNonSecurePortEnabled();
        applicationInfoManager33.config = myDataCenterInstanceConfig36;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig42 = applicationInfoManager33.config;
        com.netflix.appinfo.InstanceInfo instanceInfo43 = applicationInfoManager33.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo44 = applicationInfoManager33.instanceInfo;
        java.lang.Boolean boolean45 = instanceInfo44.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus46 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo44.setOverriddenStatus(instanceStatus46);
        int int48 = instanceInfo44.getSecurePort();
        java.lang.String str49 = instanceInfo44.getHostName();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = instanceInfo44.getMetadata();
        instanceInfo44.setIsDirty(false);
        com.netflix.appinfo.LeaseInfo leaseInfo53 = instanceInfo44.getLeaseInfo();
        instanceInfo31.setLeaseInfo(leaseInfo53);
        java.lang.String str55 = instanceInfo31.getAppName();
        java.util.Set<java.lang.String> strSet56 = instanceInfo31.getHealthCheckUrls();
        java.lang.Class<?> wildcardClass57 = strSet56.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 443 + "'", int4 == 443);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "unknown" + "'", str5, "unknown");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(dataCenterInfo17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(dataCenterInfo20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertNotNull(applicationInfoManager33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 30 + "'", int37 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig42);
        org.junit.Assert.assertNotNull(instanceInfo43);
        org.junit.Assert.assertNotNull(instanceInfo44);
        org.junit.Assert.assertEquals("'" + boolean45 + "' != '" + false + "'", boolean45, false);
        org.junit.Assert.assertTrue("'" + instanceStatus46 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus46.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 7002 + "'", int48 == 7002);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(leaseInfo53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS" + "'", str55, "HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS");
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test04192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04192");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig1 = applicationInfoManager0.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager2 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        int int6 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager2.config = myDataCenterInstanceConfig4;
        java.lang.String str8 = myDataCenterInstanceConfig4.getIpAddress();
        java.lang.String str9 = myDataCenterInstanceConfig4.getVirtualHostName();
        java.lang.String str11 = myDataCenterInstanceConfig4.getHostName(true);
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig4);
        com.netflix.appinfo.InstanceInfo instanceInfo13 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder15 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo14);
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder15.setASGName("DEFAULT");
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder17.setHealthCheckUrlsForDeser("http://inesserver2.windows.cin.ufpe.br:80/", "http://inesserver2.windows.cin.ufpe.br:80:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder20.setAppGroupName("http:///HEALTHCHECK:80/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNull(eurekaInstanceConfig1);
        org.junit.Assert.assertNotNull(applicationInfoManager2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 30 + "'", int6 == 30);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "172.20.26.3" + "'", str8, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str9, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str11, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(instanceInfo13);
        org.junit.Assert.assertNotNull(instanceInfo14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test04193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04193");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        java.lang.String str6 = myDataCenterInstanceConfig2.getHealthCheckUrlPath();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager7 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo8 = applicationInfoManager7.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int11 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo12 = myDataCenterInstanceConfig10.getDataCenterInfo();
        java.lang.String str13 = myDataCenterInstanceConfig10.getNamespace();
        boolean boolean14 = myDataCenterInstanceConfig10.isNonSecurePortEnabled();
        applicationInfoManager7.config = myDataCenterInstanceConfig10;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig16 = applicationInfoManager7.config;
        com.netflix.appinfo.InstanceInfo instanceInfo17 = applicationInfoManager7.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager7.instanceInfo;
        int int19 = instanceInfo18.getSecurePort();
        int int20 = instanceInfo18.getPort();
        int int21 = instanceInfo18.getCountryId();
        boolean boolean22 = instanceInfo18.isDirty();
        int int23 = instanceInfo18.getPort();
        java.lang.String str24 = instanceInfo18.getStatusPageUrl();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager25 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig2, instanceInfo18);
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager25;
        applicationInfoManager25.refreshDataCenterInfoIfRequired();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "/healthcheck" + "'", str6, "/healthcheck");
        org.junit.Assert.assertNotNull(applicationInfoManager7);
        org.junit.Assert.assertNotNull(instanceInfo8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig16);
        org.junit.Assert.assertNotNull(instanceInfo17);
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 443 + "'", int19 == 443);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 80 + "'", int20 == 80);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 80 + "'", int23 == 80);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str24, "http://inesserver2.windows.cin.ufpe.br:80/Status");
    }

    @Test
    public void test04194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04194");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        int int13 = instanceInfo11.getPort();
        int int14 = instanceInfo11.getCountryId();
        boolean boolean15 = instanceInfo11.isDirty();
        int int16 = instanceInfo11.getPort();
        java.lang.String str17 = instanceInfo11.getStatusPageUrl();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager18 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager18.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int22 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo23 = myDataCenterInstanceConfig21.getDataCenterInfo();
        java.lang.String str24 = myDataCenterInstanceConfig21.getNamespace();
        boolean boolean25 = myDataCenterInstanceConfig21.isNonSecurePortEnabled();
        applicationInfoManager18.config = myDataCenterInstanceConfig21;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig27 = applicationInfoManager18.config;
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager18.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager18.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType30 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo29.setActionType(actionType30);
        com.netflix.appinfo.LeaseInfo leaseInfo32 = null;
        instanceInfo29.setLeaseInfo(leaseInfo32);
        java.util.Set<java.lang.String> strSet34 = instanceInfo29.getHealthCheckUrls();
        java.lang.String str35 = instanceInfo29.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder36 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo29);
        com.netflix.appinfo.InstanceInfo.ActionType actionType37 = instanceInfo29.getActionType();
        instanceInfo11.setActionType(actionType37);
        java.lang.String str39 = instanceInfo11.getASGName();
        com.netflix.appinfo.InstanceInfo instanceInfo40 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 80 + "'", int13 == 80);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 80 + "'", int16 == 80);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str17, "http://inesserver2.windows.cin.ufpe.br:80/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 30 + "'", int22 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertTrue("'" + actionType30 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType30.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str35, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + actionType37 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType37.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "DEFAULT" + "'", str39, "DEFAULT");
    }

    @Test
    public void test04195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04195");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str5 = myDataCenterInstanceConfig4.getIpAddress();
        java.lang.String str6 = myDataCenterInstanceConfig4.getASGName();
        boolean boolean7 = myDataCenterInstanceConfig4.getSecurePortEnabled();
        java.lang.String str8 = myDataCenterInstanceConfig4.getStatusPageUrl();
        applicationInfoManager0.config = myDataCenterInstanceConfig4;
        java.lang.String str11 = myDataCenterInstanceConfig4.getHostName(false);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertNotNull(instanceInfo2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "172.20.26.3" + "'", str5, "172.20.26.3");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str11, "inesserver2.windows.cin.ufpe.br");
    }

    @Test
    public void test04196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04196");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        boolean boolean13 = instanceInfo11.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        int int15 = instanceInfo11.getPort();
        java.lang.String str16 = instanceInfo11.getASGName();
        int int17 = instanceInfo11.getCountryId();
        com.netflix.appinfo.InstanceInfo instanceInfo18 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        instanceInfo18.setLastUpdatedTimestamp();
        int int20 = instanceInfo18.getPort();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 80 + "'", int15 == 80);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "DEFAULT" + "'", str16, "DEFAULT");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 80 + "'", int20 == 80);
    }

    @Test
    public void test04197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04197");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        boolean boolean13 = instanceInfo11.isDirty();
        boolean boolean14 = instanceInfo11.isDirty();
        java.lang.String str15 = instanceInfo11.getVersion();
        com.netflix.appinfo.InstanceInfo instanceInfo16 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager17 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager17.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig20 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int21 = myDataCenterInstanceConfig20.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = myDataCenterInstanceConfig20.getDataCenterInfo();
        java.lang.String str23 = myDataCenterInstanceConfig20.getNamespace();
        boolean boolean24 = myDataCenterInstanceConfig20.isNonSecurePortEnabled();
        applicationInfoManager17.config = myDataCenterInstanceConfig20;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig26 = applicationInfoManager17.config;
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager17.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager17.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType29 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo28.setActionType(actionType29);
        com.netflix.appinfo.LeaseInfo leaseInfo31 = null;
        instanceInfo28.setLeaseInfo(leaseInfo31);
        java.util.Set<java.lang.String> strSet33 = instanceInfo28.getHealthCheckUrls();
        java.lang.String str34 = instanceInfo28.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder35 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo28);
        com.netflix.appinfo.InstanceInfo.Builder builder37 = builder35.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.PortType portType38 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder35.enablePort(portType38, true);
        boolean boolean41 = instanceInfo16.isPortEnabled(portType38);
        com.netflix.appinfo.InstanceInfo instanceInfo42 = new com.netflix.appinfo.InstanceInfo(instanceInfo16);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "unknown" + "'", str15, "unknown");
        org.junit.Assert.assertNotNull(applicationInfoManager17);
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 30 + "'", int21 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertTrue("'" + actionType29 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType29.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str34, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + portType38 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType38.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test04198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04198");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str3 = myDataCenterInstanceConfig1.getVirtualHostName();
        java.lang.String str4 = myDataCenterInstanceConfig1.getSecureHealthCheckUrl();
        java.lang.String str5 = myDataCenterInstanceConfig1.getHomePageUrlPath();
        java.lang.String str7 = myDataCenterInstanceConfig1.getHostName(false);
        java.lang.String str8 = myDataCenterInstanceConfig1.getIpAddress();
        int int9 = myDataCenterInstanceConfig1.getNonSecurePort();
        java.lang.String str10 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        boolean boolean11 = myDataCenterInstanceConfig1.isInstanceEnabledOnit();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str3, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/" + "'", str5, "/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str7, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "172.20.26.3" + "'", str8, "172.20.26.3");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 80 + "'", int9 == 80);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/healthcheck" + "'", str10, "/healthcheck");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test04199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04199");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder8.setHomePageUrlForDeser("");
        com.netflix.appinfo.LeaseInfo leaseInfo13 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setLeaseInfo(leaseInfo13);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo16 = applicationInfoManager15.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig18 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int19 = myDataCenterInstanceConfig18.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo20 = myDataCenterInstanceConfig18.getDataCenterInfo();
        java.lang.String str21 = myDataCenterInstanceConfig18.getNamespace();
        boolean boolean22 = myDataCenterInstanceConfig18.isNonSecurePortEnabled();
        applicationInfoManager15.config = myDataCenterInstanceConfig18;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig24 = applicationInfoManager15.config;
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager15.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo26 = applicationInfoManager15.getInfo();
        java.lang.String[] strArray27 = new java.lang.String[] {};
        com.netflix.appinfo.InstanceInfo instanceInfo28 = null;
        java.lang.String str29 = com.netflix.appinfo.InstanceInfo.getZone(strArray27, instanceInfo28);
        com.netflix.appinfo.InstanceInfo instanceInfo30 = null;
        java.lang.String str31 = com.netflix.appinfo.InstanceInfo.getZone(strArray27, instanceInfo30);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager32 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo33 = applicationInfoManager32.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig35 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int36 = myDataCenterInstanceConfig35.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo37 = myDataCenterInstanceConfig35.getDataCenterInfo();
        java.lang.String str38 = myDataCenterInstanceConfig35.getNamespace();
        boolean boolean39 = myDataCenterInstanceConfig35.isNonSecurePortEnabled();
        applicationInfoManager32.config = myDataCenterInstanceConfig35;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig41 = applicationInfoManager32.config;
        com.netflix.appinfo.InstanceInfo instanceInfo42 = applicationInfoManager32.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo43 = applicationInfoManager32.instanceInfo;
        int int44 = instanceInfo43.getSecurePort();
        boolean boolean45 = instanceInfo43.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo46 = new com.netflix.appinfo.InstanceInfo(instanceInfo43);
        com.netflix.appinfo.InstanceInfo instanceInfo47 = new com.netflix.appinfo.InstanceInfo(instanceInfo43);
        java.lang.String str48 = instanceInfo43.getAppGroupName();
        int int49 = instanceInfo43.getCountryId();
        java.lang.String str50 = com.netflix.appinfo.InstanceInfo.getZone(strArray27, instanceInfo43);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus51 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo43.setStatus(instanceStatus51);
        applicationInfoManager15.setInstanceStatus(instanceStatus51);
        com.netflix.appinfo.InstanceInfo.Builder builder54 = builder12.setOverriddenStatus(instanceStatus51);
        com.netflix.appinfo.InstanceInfo.Builder builder56 = builder12.setSID("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder58 = builder12.setASGName("default");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager59 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo60 = applicationInfoManager59.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig62 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int63 = myDataCenterInstanceConfig62.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo64 = myDataCenterInstanceConfig62.getDataCenterInfo();
        java.lang.String str65 = myDataCenterInstanceConfig62.getNamespace();
        boolean boolean66 = myDataCenterInstanceConfig62.isNonSecurePortEnabled();
        applicationInfoManager59.config = myDataCenterInstanceConfig62;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig68 = applicationInfoManager59.config;
        com.netflix.appinfo.InstanceInfo instanceInfo69 = applicationInfoManager59.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo70 = applicationInfoManager59.instanceInfo;
        int int71 = instanceInfo70.getSecurePort();
        boolean boolean72 = instanceInfo70.isDirty();
        java.lang.String str73 = instanceInfo70.getHostName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType74 = instanceInfo70.getActionType();
        com.netflix.appinfo.InstanceInfo.Builder builder75 = builder12.setActionType(actionType74);
        com.netflix.appinfo.InstanceInfo.Builder builder77 = builder75.setSecureVIPAddress("/healthcheck");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(applicationInfoManager15);
        org.junit.Assert.assertNotNull(instanceInfo16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 30 + "'", int19 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "default" + "'", str29, "default");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "default" + "'", str31, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 30 + "'", int36 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig41);
        org.junit.Assert.assertNotNull(instanceInfo42);
        org.junit.Assert.assertNotNull(instanceInfo43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 443 + "'", int44 == 443);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "HTTP:///HEALTHCHECK:80/STATUS" + "'", str48, "HTTP:///HEALTHCHECK:80/STATUS");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "default" + "'", str50, "default");
        org.junit.Assert.assertTrue("'" + instanceStatus51 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus51.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(applicationInfoManager59);
        org.junit.Assert.assertNotNull(instanceInfo60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 30 + "'", int63 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig68);
        org.junit.Assert.assertNotNull(instanceInfo69);
        org.junit.Assert.assertNotNull(instanceInfo70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 443 + "'", int71 == 443);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str73, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + actionType74 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType74.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder77);
    }

    @Test
    public void test04200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04200");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo4 = myDataCenterInstanceConfig2.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig2.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo7 = myDataCenterInstanceConfig2.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig("default", dataCenterInfo7);
        java.lang.String str9 = myDataCenterInstanceConfig8.getSecureHealthCheckUrl();
        int int10 = myDataCenterInstanceConfig8.getLeaseRenewalIntervalInSeconds();
        int int11 = myDataCenterInstanceConfig8.getLeaseExpirationDurationInSeconds();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str6, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 90 + "'", int11 == 90);
    }

    @Test
    public void test04201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04201");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setSecurePort((-1));
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setStatusPageUrlForDeser("na");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
    }

    @Test
    public void test04202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04202");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo instanceInfo5 = builder0.build();
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder0.setIPAddr("http://hi!:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder8.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder8.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig15 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo16 = myDataCenterInstanceConfig15.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder14.setDataCenterInfo(dataCenterInfo16);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder17.setHealthCheckUrlsForDeser("hi!", "");
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder20.setASGName("");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager23 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo24 = applicationInfoManager23.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig26 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int27 = myDataCenterInstanceConfig26.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo28 = myDataCenterInstanceConfig26.getDataCenterInfo();
        java.lang.String str29 = myDataCenterInstanceConfig26.getNamespace();
        boolean boolean30 = myDataCenterInstanceConfig26.isNonSecurePortEnabled();
        applicationInfoManager23.config = myDataCenterInstanceConfig26;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig32 = applicationInfoManager23.config;
        com.netflix.appinfo.InstanceInfo instanceInfo33 = applicationInfoManager23.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager23.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType35 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo34.setActionType(actionType35);
        com.netflix.appinfo.LeaseInfo leaseInfo37 = null;
        instanceInfo34.setLeaseInfo(leaseInfo37);
        java.util.Set<java.lang.String> strSet39 = instanceInfo34.getHealthCheckUrls();
        java.lang.String str40 = instanceInfo34.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder41 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo34);
        com.netflix.appinfo.InstanceInfo.Builder builder43 = builder41.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder46 = builder41.setHealthCheckUrlsForDeser("", "hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder49 = builder41.setStatusPageUrl("default", "");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager50 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo51 = applicationInfoManager50.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig53 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int54 = myDataCenterInstanceConfig53.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo55 = myDataCenterInstanceConfig53.getDataCenterInfo();
        java.lang.String str56 = myDataCenterInstanceConfig53.getNamespace();
        boolean boolean57 = myDataCenterInstanceConfig53.isNonSecurePortEnabled();
        applicationInfoManager50.config = myDataCenterInstanceConfig53;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig59 = applicationInfoManager50.config;
        com.netflix.appinfo.InstanceInfo instanceInfo60 = applicationInfoManager50.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo61 = applicationInfoManager50.instanceInfo;
        int int62 = instanceInfo61.getSecurePort();
        com.netflix.appinfo.InstanceInfo.PortType portType63 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean64 = instanceInfo61.isPortEnabled(portType63);
        com.netflix.appinfo.InstanceInfo.Builder builder66 = builder41.enablePort(portType63, true);
        com.netflix.appinfo.InstanceInfo.Builder builder68 = builder22.enablePort(portType63, true);
        com.netflix.appinfo.InstanceInfo.Builder builder70 = builder7.enablePort(portType63, false);
        com.netflix.appinfo.InstanceInfo.Builder builder72 = builder7.setPort((int) (short) 0);
        boolean boolean73 = builder72.isInitialized();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(instanceInfo5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(dataCenterInfo16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(applicationInfoManager23);
        org.junit.Assert.assertNotNull(instanceInfo24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 30 + "'", int27 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertTrue("'" + actionType35 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType35.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str40, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(applicationInfoManager50);
        org.junit.Assert.assertNotNull(instanceInfo51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 30 + "'", int54 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig59);
        org.junit.Assert.assertNotNull(instanceInfo60);
        org.junit.Assert.assertNotNull(instanceInfo61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 443 + "'", int62 == 443);
        org.junit.Assert.assertTrue("'" + portType63 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType63.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test04203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04203");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        int int6 = myDataCenterInstanceConfig3.getLeaseExpirationDurationInSeconds();
        java.lang.String str7 = myDataCenterInstanceConfig3.getHomePageUrlPath();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        java.lang.String str9 = myDataCenterInstanceConfig3.getStatusPageUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo10 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str11 = myDataCenterInstanceConfig3.getIpAddress();
        java.lang.String str12 = myDataCenterInstanceConfig3.getStatusPageUrlPath();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager13 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager13.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig16 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int17 = myDataCenterInstanceConfig16.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig16.getDataCenterInfo();
        java.lang.String str19 = myDataCenterInstanceConfig16.getNamespace();
        boolean boolean20 = myDataCenterInstanceConfig16.isNonSecurePortEnabled();
        applicationInfoManager13.config = myDataCenterInstanceConfig16;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig22 = applicationInfoManager13.config;
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager13.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo24 = applicationInfoManager13.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType25 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo24.setActionType(actionType25);
        java.lang.String str27 = instanceInfo24.getAppGroupName();
        int int28 = instanceInfo24.getPort();
        java.lang.String str29 = instanceInfo24.getAppName();
        java.lang.String str30 = instanceInfo24.getId();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager31 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig3, instanceInfo24);
        java.lang.String str33 = myDataCenterInstanceConfig3.getHostName(false);
        java.lang.String str34 = myDataCenterInstanceConfig3.getNamespace();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 90 + "'", int6 == 90);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/" + "'", str7, "/");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(dataCenterInfo10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "172.20.26.3" + "'", str11, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/Status" + "'", str12, "/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager13);
        org.junit.Assert.assertNotNull(instanceInfo14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig22);
        org.junit.Assert.assertNotNull(instanceInfo23);
        org.junit.Assert.assertNotNull(instanceInfo24);
        org.junit.Assert.assertTrue("'" + actionType25 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType25.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "HTTP:///HEALTHCHECK:80/STATUS" + "'", str27, "HTTP:///HEALTHCHECK:80/STATUS");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 80 + "'", int28 == 80);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UNKNOWN" + "'", str29, "UNKNOWN");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str30, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str33, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
    }

    @Test
    public void test04204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04204");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str2 = myDataCenterInstanceConfig1.getIpAddress();
        java.lang.String str3 = myDataCenterInstanceConfig1.getASGName();
        java.lang.String str4 = myDataCenterInstanceConfig1.getAppname();
        java.lang.String str5 = myDataCenterInstanceConfig1.getVirtualHostName();
        java.lang.String str6 = myDataCenterInstanceConfig1.getSecureHealthCheckUrl();
        java.lang.String str7 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        boolean boolean8 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        java.lang.String str9 = myDataCenterInstanceConfig1.getStatusPageUrl();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "172.20.26.3" + "'", str2, "172.20.26.3");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "unknown" + "'", str4, "unknown");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str5, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/healthcheck" + "'", str7, "/healthcheck");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test04205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04205");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str4 = myDataCenterInstanceConfig1.getHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig1.getSecureVirtualHostName();
        java.lang.String str8 = myDataCenterInstanceConfig1.getHostName(false);
        java.lang.String str9 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str8, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/Status" + "'", str9, "/Status");
    }

    @Test
    public void test04206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04206");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo instanceInfo5 = builder0.build();
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder0.setIPAddr("http://hi!:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo8 = builder0.build();
        java.lang.String str9 = instanceInfo8.getHostName();
        com.netflix.appinfo.LeaseInfo leaseInfo10 = instanceInfo8.getLeaseInfo();
        instanceInfo8.setLastDirtyTimestamp((java.lang.Long) 1636105976220L);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig15 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int16 = myDataCenterInstanceConfig15.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo17 = myDataCenterInstanceConfig15.getDataCenterInfo();
        java.lang.String str19 = myDataCenterInstanceConfig15.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo20 = myDataCenterInstanceConfig15.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo20);
        boolean boolean22 = myDataCenterInstanceConfig21.isInstanceEnabledOnit();
        java.lang.String str23 = myDataCenterInstanceConfig21.getHealthCheckUrlPath();
        java.lang.String str24 = myDataCenterInstanceConfig21.getAppname();
        java.lang.String str25 = myDataCenterInstanceConfig21.getHealthCheckUrlPath();
        java.lang.String str26 = myDataCenterInstanceConfig21.getAppname();
        boolean boolean27 = instanceInfo8.equals((java.lang.Object) myDataCenterInstanceConfig21);
        int int28 = instanceInfo8.getSecurePort();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(instanceInfo5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(instanceInfo8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(leaseInfo10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 30 + "'", int16 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str19, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "/healthcheck" + "'", str23, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "unknown" + "'", str24, "unknown");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/healthcheck" + "'", str25, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "unknown" + "'", str26, "unknown");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 7002 + "'", int28 == 7002);
    }

    @Test
    public void test04207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04207");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.getInfo();
        applicationInfoManager0.refreshDataCenterInfoIfRequired();
        applicationInfoManager0.refreshDataCenterInfoIfRequired();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
    }

    @Test
    public void test04208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04208");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        java.lang.String str13 = instanceInfo11.getSID();
        java.util.Set<java.lang.String> strSet14 = instanceInfo11.getHealthCheckUrls();
        java.util.Set<java.lang.String> strSet15 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str16 = instanceInfo11.getASGName();
        instanceInfo11.setLastUpdatedTimestamp();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = instanceInfo11.getDataCenterInfo();
        java.lang.String str19 = instanceInfo11.getId();
        instanceInfo11.setIsDirty(true);
        com.netflix.appinfo.InstanceInfo.Builder builder22 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = instanceInfo11.getMetadata();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "na" + "'", str13, "na");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
// flaky:         org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str19, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(strMap23);
    }

    @Test
    public void test04209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04209");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        int int6 = myDataCenterInstanceConfig3.getLeaseExpirationDurationInSeconds();
        java.lang.String str7 = myDataCenterInstanceConfig3.getHomePageUrlPath();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        java.lang.String str9 = myDataCenterInstanceConfig3.getStatusPageUrl();
        java.lang.String str10 = myDataCenterInstanceConfig3.getStatusPageUrl();
        int int11 = myDataCenterInstanceConfig3.getNonSecurePort();
        java.lang.String str12 = myDataCenterInstanceConfig3.getHealthCheckUrlPath();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 90 + "'", int6 == 90);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/" + "'", str7, "/");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 80 + "'", int11 == 80);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/healthcheck" + "'", str12, "/healthcheck");
    }

    @Test
    public void test04210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04210");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.PortType portType21 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder18.enablePort(portType21, true);
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setCountryId(0);
        boolean boolean26 = builder25.isInitialized();
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder25.setAppGroupName("http://hi!:35/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder25.setHomePageUrlForDeser("inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + portType21 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType21.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
    }

    @Test
    public void test04211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04211");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig1.getDataCenterInfo();
        int int4 = myDataCenterInstanceConfig1.getSecurePort();
        java.lang.String str6 = myDataCenterInstanceConfig1.getHostName(true);
        int int7 = myDataCenterInstanceConfig1.getNonSecurePort();
        java.lang.String str8 = myDataCenterInstanceConfig1.getHomePageUrlPath();
        java.lang.String str9 = myDataCenterInstanceConfig1.getHomePageUrlPath();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 443 + "'", int4 == 443);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str6, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 80 + "'", int7 == 80);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/" + "'", str8, "/");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/" + "'", str9, "/");
    }

    @Test
    public void test04212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04212");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = instanceInfo11.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.Builder builder15 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig17 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int18 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig17.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder15.setDataCenterInfo(dataCenterInfo19);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder15.add("hi!", "");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setHostName("inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "HTTP://HI!:35/STATUS" + "'", str14, "HTTP://HI!:35/STATUS");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 30 + "'", int18 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
    }

    @Test
    public void test04213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04213");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo4 = myDataCenterInstanceConfig2.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig2.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo7 = myDataCenterInstanceConfig2.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo7);
        java.lang.String str9 = myDataCenterInstanceConfig8.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = myDataCenterInstanceConfig8.getMetadataMap();
        boolean boolean11 = myDataCenterInstanceConfig8.isInstanceEnabledOnit();
        java.lang.String str12 = myDataCenterInstanceConfig8.getIpAddress();
        java.lang.String str13 = myDataCenterInstanceConfig8.getHomePageUrl();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str6, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "172.20.26.3" + "'", str12, "172.20.26.3");
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test04214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04214");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "/Status", "default", "inesserver2.windows.cin.ufpe.br:80", "default", "default" };
        com.netflix.appinfo.InstanceInfo instanceInfo7 = null;
        java.lang.String str8 = com.netflix.appinfo.InstanceInfo.getZone(strArray6, instanceInfo7);
        com.netflix.appinfo.InstanceInfo instanceInfo9 = null;
        java.lang.String str10 = com.netflix.appinfo.InstanceInfo.getZone(strArray6, instanceInfo9);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder11.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder11.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder11.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig18 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig18.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder17.setDataCenterInfo(dataCenterInfo19);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = myDataCenterInstanceConfig21.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder17.setDataCenterInfo(dataCenterInfo22);
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder17.setNamespace("na");
        com.netflix.appinfo.InstanceInfo instanceInfo26 = builder17.build();
        int int27 = instanceInfo26.getSecurePort();
        instanceInfo26.setSID("http://inesserver2.windows.cin.ufpe.br:80/Status");
        int int30 = instanceInfo26.getPort();
        java.lang.String str31 = com.netflix.appinfo.InstanceInfo.getZone(strArray6, instanceInfo26);
        java.lang.String str32 = instanceInfo26.getAppName();
        instanceInfo26.setSID("/");
        int int35 = instanceInfo26.getSecurePort();
        java.lang.String str36 = instanceInfo26.getVersion();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus37 = instanceInfo26.getStatus();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 7002 + "'", int27 == 7002);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 7001 + "'", int30 == 7001);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "DEFAULT" + "'", str32, "DEFAULT");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 7002 + "'", int35 == 7002);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "unknown" + "'", str36, "unknown");
        org.junit.Assert.assertTrue("'" + instanceStatus37 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UP + "'", instanceStatus37.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UP));
    }

    @Test
    public void test04215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04215");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        com.netflix.appinfo.InstanceInfo instanceInfo1 = null;
        java.lang.String str2 = com.netflix.appinfo.InstanceInfo.getZone(strArray0, instanceInfo1);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager3 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo4 = applicationInfoManager3.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig6 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int7 = myDataCenterInstanceConfig6.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig6.getDataCenterInfo();
        java.lang.String str9 = myDataCenterInstanceConfig6.getNamespace();
        boolean boolean10 = myDataCenterInstanceConfig6.isNonSecurePortEnabled();
        applicationInfoManager3.config = myDataCenterInstanceConfig6;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig12 = applicationInfoManager3.config;
        com.netflix.appinfo.InstanceInfo instanceInfo13 = applicationInfoManager3.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig16 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int17 = myDataCenterInstanceConfig16.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig16.getDataCenterInfo();
        java.lang.String str20 = myDataCenterInstanceConfig16.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo21 = myDataCenterInstanceConfig16.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig22 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo21);
        java.lang.String str23 = myDataCenterInstanceConfig22.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = myDataCenterInstanceConfig22.getMetadataMap();
        applicationInfoManager3.registerAppMetadata(strMap24);
        com.netflix.appinfo.InstanceInfo instanceInfo26 = applicationInfoManager3.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager3.getInfo();
        java.util.Set<java.lang.String> strSet28 = instanceInfo27.getHealthCheckUrls();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager29 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager29.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig32 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int33 = myDataCenterInstanceConfig32.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo34 = myDataCenterInstanceConfig32.getDataCenterInfo();
        java.lang.String str35 = myDataCenterInstanceConfig32.getNamespace();
        boolean boolean36 = myDataCenterInstanceConfig32.isNonSecurePortEnabled();
        applicationInfoManager29.config = myDataCenterInstanceConfig32;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig38 = applicationInfoManager29.config;
        com.netflix.appinfo.InstanceInfo instanceInfo39 = applicationInfoManager29.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo40 = applicationInfoManager29.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType41 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo40.setActionType(actionType41);
        com.netflix.appinfo.LeaseInfo leaseInfo43 = null;
        instanceInfo40.setLeaseInfo(leaseInfo43);
        java.util.Set<java.lang.String> strSet45 = instanceInfo40.getHealthCheckUrls();
        java.lang.String str46 = instanceInfo40.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder47 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo40);
        com.netflix.appinfo.InstanceInfo.Builder builder50 = builder47.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder52 = builder47.setVIPAddressDeser("hi!");
        com.netflix.appinfo.InstanceInfo.PortType portType53 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder55 = builder52.enablePort(portType53, false);
        boolean boolean56 = instanceInfo27.isPortEnabled(portType53);
        instanceInfo27.setIsCoordinatingDiscoveryServer();
        com.netflix.appinfo.LeaseInfo leaseInfo58 = instanceInfo27.getLeaseInfo();
        java.lang.String str59 = instanceInfo27.getId();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager60 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo61 = applicationInfoManager60.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig63 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int64 = myDataCenterInstanceConfig63.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo65 = myDataCenterInstanceConfig63.getDataCenterInfo();
        java.lang.String str66 = myDataCenterInstanceConfig63.getNamespace();
        boolean boolean67 = myDataCenterInstanceConfig63.isNonSecurePortEnabled();
        applicationInfoManager60.config = myDataCenterInstanceConfig63;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig69 = applicationInfoManager60.config;
        com.netflix.appinfo.InstanceInfo instanceInfo70 = applicationInfoManager60.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo71 = applicationInfoManager60.instanceInfo;
        int int72 = instanceInfo71.getSecurePort();
        boolean boolean73 = instanceInfo71.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo74 = new com.netflix.appinfo.InstanceInfo(instanceInfo71);
        com.netflix.appinfo.InstanceInfo instanceInfo75 = new com.netflix.appinfo.InstanceInfo(instanceInfo71);
        com.netflix.appinfo.InstanceInfo.ActionType actionType76 = instanceInfo71.getActionType();
        instanceInfo27.setActionType(actionType76);
        java.lang.String str78 = com.netflix.appinfo.InstanceInfo.getZone(strArray0, instanceInfo27);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "default" + "'", str2, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager3);
        org.junit.Assert.assertNotNull(instanceInfo4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 30 + "'", int7 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig12);
        org.junit.Assert.assertNotNull(instanceInfo13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str20, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(applicationInfoManager29);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 30 + "'", int33 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig38);
        org.junit.Assert.assertNotNull(instanceInfo39);
        org.junit.Assert.assertNotNull(instanceInfo40);
        org.junit.Assert.assertTrue("'" + actionType41 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType41.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet45);
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str46, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + portType53 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType53.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(leaseInfo58);
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str59, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager60);
        org.junit.Assert.assertNotNull(instanceInfo61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 30 + "'", int64 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig69);
        org.junit.Assert.assertNotNull(instanceInfo70);
        org.junit.Assert.assertNotNull(instanceInfo71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 443 + "'", int72 == 443);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + actionType76 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType76.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "default" + "'", str78, "default");
    }

    @Test
    public void test04216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04216");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setSecureVIPAddressDeser("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder14.setVIPAddressDeser("inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test04217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04217");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.lang.String str16 = instanceInfo11.getSID();
        com.netflix.appinfo.LeaseInfo leaseInfo17 = instanceInfo11.getLeaseInfo();
        java.lang.String str18 = instanceInfo11.getStatusPageUrl();
        java.lang.String str19 = instanceInfo11.getAppName();
        java.lang.String str20 = instanceInfo11.getVersion();
        java.lang.String str21 = instanceInfo11.getSID();
        instanceInfo11.setLastUpdatedTimestamp();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "na" + "'", str16, "na");
        org.junit.Assert.assertNull(leaseInfo17);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str18, "http://inesserver2.windows.cin.ufpe.br:80/Status");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UNKNOWN" + "'", str19, "UNKNOWN");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "unknown" + "'", str20, "unknown");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "na" + "'", str21, "na");
    }

    @Test
    public void test04218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04218");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        int int3 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        boolean boolean5 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        com.netflix.appinfo.InstanceInfo instanceInfo6 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager7 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo6);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig9.getDataCenterInfo();
        java.lang.String str12 = myDataCenterInstanceConfig9.getNamespace();
        applicationInfoManager7.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig9);
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager7;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig17 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int18 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        int int19 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager15.config = myDataCenterInstanceConfig17;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig21 = applicationInfoManager15.config;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig22 = applicationInfoManager15.config;
        applicationInfoManager15.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager24 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager24.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig27 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int28 = myDataCenterInstanceConfig27.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig27.getDataCenterInfo();
        java.lang.String str30 = myDataCenterInstanceConfig27.getNamespace();
        boolean boolean31 = myDataCenterInstanceConfig27.isNonSecurePortEnabled();
        applicationInfoManager24.config = myDataCenterInstanceConfig27;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig33 = applicationInfoManager24.config;
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager24.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager24.instanceInfo;
        int int36 = instanceInfo35.getSecurePort();
        boolean boolean37 = instanceInfo35.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo38 = new com.netflix.appinfo.InstanceInfo(instanceInfo35);
        com.netflix.appinfo.InstanceInfo instanceInfo39 = new com.netflix.appinfo.InstanceInfo(instanceInfo35);
        java.lang.String str40 = instanceInfo35.getAppGroupName();
        int int41 = instanceInfo35.getCountryId();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus42 = instanceInfo35.getStatus();
        applicationInfoManager15.setInstanceStatus(instanceStatus42);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig45 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str46 = myDataCenterInstanceConfig45.getIpAddress();
        java.lang.String str47 = myDataCenterInstanceConfig45.getASGName();
        boolean boolean48 = myDataCenterInstanceConfig45.getSecurePortEnabled();
        int int49 = myDataCenterInstanceConfig45.getLeaseExpirationDurationInSeconds();
        int int50 = myDataCenterInstanceConfig45.getNonSecurePort();
        java.lang.String str51 = myDataCenterInstanceConfig45.getStatusPageUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo52 = myDataCenterInstanceConfig45.getDataCenterInfo();
        java.lang.String str53 = myDataCenterInstanceConfig45.getIpAddress();
        applicationInfoManager15.config = myDataCenterInstanceConfig45;
        applicationInfoManager7.config = myDataCenterInstanceConfig45;
        com.netflix.appinfo.InstanceInfo instanceInfo56 = applicationInfoManager7.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager57 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo58 = applicationInfoManager57.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig60 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int61 = myDataCenterInstanceConfig60.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo62 = myDataCenterInstanceConfig60.getDataCenterInfo();
        java.lang.String str63 = myDataCenterInstanceConfig60.getNamespace();
        boolean boolean64 = myDataCenterInstanceConfig60.isNonSecurePortEnabled();
        applicationInfoManager57.config = myDataCenterInstanceConfig60;
        int int66 = myDataCenterInstanceConfig60.getLeaseExpirationDurationInSeconds();
        java.util.Map<java.lang.String, java.lang.String> strMap67 = myDataCenterInstanceConfig60.getMetadataMap();
        int int68 = myDataCenterInstanceConfig60.getLeaseExpirationDurationInSeconds();
        applicationInfoManager7.config = myDataCenterInstanceConfig60;
        int int70 = myDataCenterInstanceConfig60.getNonSecurePort();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/Status" + "'", str4, "/Status");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(applicationInfoManager15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 30 + "'", int18 == 30);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 30 + "'", int19 == 30);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig21);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig22);
        org.junit.Assert.assertNotNull(applicationInfoManager24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 30 + "'", int28 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 443 + "'", int36 == 443);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "UNKNOWN" + "'", str40, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + instanceStatus42 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING + "'", instanceStatus42.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "172.20.26.3" + "'", str46, "172.20.26.3");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 90 + "'", int49 == 90);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 80 + "'", int50 == 80);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(dataCenterInfo52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "172.20.26.3" + "'", str53, "172.20.26.3");
        org.junit.Assert.assertNotNull(instanceInfo56);
        org.junit.Assert.assertNotNull(applicationInfoManager57);
        org.junit.Assert.assertNotNull(instanceInfo58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 90 + "'", int66 == 90);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 90 + "'", int68 == 90);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 80 + "'", int70 == 80);
    }

    @Test
    public void test04219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04219");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setVIPAddressDeser("/Status");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo16 = applicationInfoManager15.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig18 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int19 = myDataCenterInstanceConfig18.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo20 = myDataCenterInstanceConfig18.getDataCenterInfo();
        java.lang.String str21 = myDataCenterInstanceConfig18.getNamespace();
        boolean boolean22 = myDataCenterInstanceConfig18.isNonSecurePortEnabled();
        applicationInfoManager15.config = myDataCenterInstanceConfig18;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig24 = applicationInfoManager15.config;
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager15.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo26 = applicationInfoManager15.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType27 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo26.setActionType(actionType27);
        com.netflix.appinfo.LeaseInfo leaseInfo29 = null;
        instanceInfo26.setLeaseInfo(leaseInfo29);
        java.util.Set<java.lang.String> strSet31 = instanceInfo26.getHealthCheckUrls();
        java.lang.String str32 = instanceInfo26.getId();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager33 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager33.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig36 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int37 = myDataCenterInstanceConfig36.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo38 = myDataCenterInstanceConfig36.getDataCenterInfo();
        java.lang.String str39 = myDataCenterInstanceConfig36.getNamespace();
        boolean boolean40 = myDataCenterInstanceConfig36.isNonSecurePortEnabled();
        applicationInfoManager33.config = myDataCenterInstanceConfig36;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig42 = applicationInfoManager33.config;
        com.netflix.appinfo.InstanceInfo instanceInfo43 = applicationInfoManager33.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo44 = applicationInfoManager33.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType45 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo44.setActionType(actionType45);
        instanceInfo26.setActionType(actionType45);
        java.lang.String str48 = instanceInfo26.getSID();
        java.lang.String str49 = instanceInfo26.getId();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = instanceInfo26.getMetadata();
        com.netflix.appinfo.InstanceInfo.Builder builder51 = builder14.setMetadata(strMap50);
        com.netflix.appinfo.InstanceInfo.Builder builder53 = builder14.setSID("HTTP://HI!:80/STATUS");
        com.netflix.appinfo.InstanceInfo.Builder builder55 = builder53.setLastDirtyTimestamp(1636105976005L);
        java.util.Map<java.lang.String, java.lang.String> strMap56 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder57 = builder55.setMetadata(strMap56);
        com.netflix.appinfo.InstanceInfo.Builder builder59 = builder57.setSecureVIPAddressDeser("/Status");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(applicationInfoManager15);
        org.junit.Assert.assertNotNull(instanceInfo16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 30 + "'", int19 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertTrue("'" + actionType27 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType27.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str32, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 30 + "'", int37 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig42);
        org.junit.Assert.assertNotNull(instanceInfo43);
        org.junit.Assert.assertNotNull(instanceInfo44);
        org.junit.Assert.assertTrue("'" + actionType45 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType45.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "na" + "'", str48, "na");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str49, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
    }

    @Test
    public void test04220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04220");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder3 = builder0.setHealthCheckUrlsForDeser("/healthcheck", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder0.setNamespace("/Status");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int8 = myDataCenterInstanceConfig7.getLeaseRenewalIntervalInSeconds();
        boolean boolean9 = myDataCenterInstanceConfig7.isInstanceEnabledOnit();
        java.lang.String str10 = myDataCenterInstanceConfig7.getStatusPageUrlPath();
        java.lang.String str11 = myDataCenterInstanceConfig7.getAppGroupName();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo12 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder5.setDataCenterInfo(dataCenterInfo12);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder14.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder14.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder14.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = myDataCenterInstanceConfig21.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder20.setDataCenterInfo(dataCenterInfo22);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = myDataCenterInstanceConfig24.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder20.setDataCenterInfo(dataCenterInfo25);
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder20.setNamespace("na");
        com.netflix.appinfo.InstanceInfo instanceInfo29 = builder20.build();
        int int30 = instanceInfo29.getSecurePort();
        boolean boolean31 = instanceInfo29.isDirty();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus32 = instanceInfo29.getOverriddenStatus();
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder13.setOverriddenStatus(instanceStatus32);
        com.netflix.appinfo.InstanceInfo.Builder builder35 = builder13.setNamespace("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS");
        com.netflix.appinfo.InstanceInfo.Builder builder37 = builder35.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/Status" + "'", str10, "/Status");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "unknown" + "'", str11, "unknown");
        org.junit.Assert.assertNotNull(dataCenterInfo12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 7002 + "'", int30 == 7002);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + instanceStatus32 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus32.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
    }

    @Test
    public void test04221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04221");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("hi!");
        java.lang.String str2 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        int int3 = myDataCenterInstanceConfig1.getLeaseExpirationDurationInSeconds();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/healthcheck" + "'", str2, "/healthcheck");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 90 + "'", int3 == 90);
    }

    @Test
    public void test04222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04222");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = instanceInfo11.getStatusPageUrl();
        com.netflix.appinfo.InstanceInfo instanceInfo15 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        int int16 = instanceInfo15.getSecurePort();
        java.lang.String str17 = instanceInfo15.getAppGroupName();
        java.lang.String str18 = instanceInfo15.getIPAddr();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str14, "http://inesserver2.windows.cin.ufpe.br:80/Status");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 443 + "'", int16 == 443);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UNKNOWN" + "'", str17, "UNKNOWN");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "172.20.26.3" + "'", str18, "172.20.26.3");
    }

    @Test
    public void test04223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04223");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        com.netflix.appinfo.InstanceInfo instanceInfo1 = null;
        java.lang.String str2 = com.netflix.appinfo.InstanceInfo.getZone(strArray0, instanceInfo1);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager3 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo4 = applicationInfoManager3.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig6 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int7 = myDataCenterInstanceConfig6.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig6.getDataCenterInfo();
        java.lang.String str9 = myDataCenterInstanceConfig6.getNamespace();
        boolean boolean10 = myDataCenterInstanceConfig6.isNonSecurePortEnabled();
        applicationInfoManager3.config = myDataCenterInstanceConfig6;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig12 = applicationInfoManager3.config;
        com.netflix.appinfo.InstanceInfo instanceInfo13 = applicationInfoManager3.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager3.instanceInfo;
        java.lang.Boolean boolean15 = instanceInfo14.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus16 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo14.setOverriddenStatus(instanceStatus16);
        int int18 = instanceInfo14.getSecurePort();
        java.lang.String str19 = instanceInfo14.getHostName();
        java.lang.String str20 = instanceInfo14.getAppGroupName();
        java.lang.String str21 = instanceInfo14.getASGName();
        java.lang.String str22 = com.netflix.appinfo.InstanceInfo.getZone(strArray0, instanceInfo14);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo14);
        int int24 = instanceInfo14.getCountryId();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "default" + "'", str2, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager3);
        org.junit.Assert.assertNotNull(instanceInfo4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 30 + "'", int7 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig12);
        org.junit.Assert.assertNotNull(instanceInfo13);
        org.junit.Assert.assertNotNull(instanceInfo14);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertTrue("'" + instanceStatus16 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus16.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 443 + "'", int18 == 443);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str19, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UNKNOWN" + "'", str20, "UNKNOWN");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "default" + "'", str22, "default");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
    }

    @Test
    public void test04224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04224");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        int int3 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        boolean boolean5 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager6 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo7 = applicationInfoManager6.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig9.getDataCenterInfo();
        java.lang.String str12 = myDataCenterInstanceConfig9.getNamespace();
        boolean boolean13 = myDataCenterInstanceConfig9.isNonSecurePortEnabled();
        applicationInfoManager6.config = myDataCenterInstanceConfig9;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig15 = applicationInfoManager6.config;
        com.netflix.appinfo.InstanceInfo instanceInfo16 = applicationInfoManager6.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo17 = applicationInfoManager6.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType18 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo17.setActionType(actionType18);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager20 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager20.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig23 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int24 = myDataCenterInstanceConfig23.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = myDataCenterInstanceConfig23.getDataCenterInfo();
        java.lang.String str26 = myDataCenterInstanceConfig23.getNamespace();
        boolean boolean27 = myDataCenterInstanceConfig23.isNonSecurePortEnabled();
        applicationInfoManager20.config = myDataCenterInstanceConfig23;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig29 = applicationInfoManager20.config;
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager20.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager20.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType32 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo31.setActionType(actionType32);
        instanceInfo17.setActionType(actionType32);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager35 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo17);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus37 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("inesserver2.windows.cin.ufpe.br:80");
        instanceInfo17.setOverriddenStatus(instanceStatus37);
        com.netflix.appinfo.InstanceInfo instanceInfo39 = new com.netflix.appinfo.InstanceInfo(instanceInfo17);
        java.lang.String str40 = instanceInfo17.getVersion();
        instanceInfo17.setSID("http://inesserver2.windows.cin.ufpe.br:80/Status");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/Status" + "'", str4, "/Status");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager6);
        org.junit.Assert.assertNotNull(instanceInfo7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig15);
        org.junit.Assert.assertNotNull(instanceInfo16);
        org.junit.Assert.assertNotNull(instanceInfo17);
        org.junit.Assert.assertTrue("'" + actionType18 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType18.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager20);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 30 + "'", int24 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig29);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertTrue("'" + actionType32 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType32.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + instanceStatus37 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus37.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "unknown" + "'", str40, "unknown");
    }

    @Test
    public void test04225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04225");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        java.lang.String str6 = myDataCenterInstanceConfig2.getIpAddress();
        java.lang.String str7 = myDataCenterInstanceConfig2.getHealthCheckUrl();
        java.lang.String str8 = myDataCenterInstanceConfig2.getStatusPageUrl();
        java.lang.String str9 = myDataCenterInstanceConfig2.getIpAddress();
        int int10 = myDataCenterInstanceConfig2.getSecurePort();
        java.lang.String str11 = myDataCenterInstanceConfig2.getSecureHealthCheckUrl();
        java.lang.String str12 = myDataCenterInstanceConfig2.getStatusPageUrl();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "172.20.26.3" + "'", str6, "172.20.26.3");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "172.20.26.3" + "'", str9, "172.20.26.3");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 443 + "'", int10 == 443);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test04226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04226");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        int int6 = myDataCenterInstanceConfig3.getLeaseExpirationDurationInSeconds();
        java.lang.String str7 = myDataCenterInstanceConfig3.getHomePageUrlPath();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig11 = new com.netflix.appinfo.MyDataCenterInstanceConfig("hi!");
        java.lang.String str12 = myDataCenterInstanceConfig11.getStatusPageUrl();
        boolean boolean13 = myDataCenterInstanceConfig11.isNonSecurePortEnabled();
        java.lang.String str14 = myDataCenterInstanceConfig11.getHealthCheckUrl();
        java.lang.String str15 = myDataCenterInstanceConfig11.getSecureHealthCheckUrl();
        boolean boolean16 = myDataCenterInstanceConfig11.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig11;
        java.lang.String str18 = myDataCenterInstanceConfig11.getAppGroupName();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = myDataCenterInstanceConfig11.getMetadataMap();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 90 + "'", int6 == 90);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/" + "'", str7, "/");
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "unknown" + "'", str18, "unknown");
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test04227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04227");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = instanceInfo11.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.Builder builder15 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig17 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int18 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig17.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder15.setDataCenterInfo(dataCenterInfo19);
        com.netflix.appinfo.InstanceInfo instanceInfo21 = builder15.build();
        com.netflix.appinfo.InstanceInfo.Builder builder22 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder22.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder22.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder22.setIPAddr("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.LeaseInfo leaseInfo29 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder28.setLeaseInfo(leaseInfo29);
        com.netflix.appinfo.InstanceInfo.ActionType actionType31 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder30.setActionType(actionType31);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager33 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager33.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig36 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int37 = myDataCenterInstanceConfig36.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo38 = myDataCenterInstanceConfig36.getDataCenterInfo();
        java.lang.String str39 = myDataCenterInstanceConfig36.getNamespace();
        boolean boolean40 = myDataCenterInstanceConfig36.isNonSecurePortEnabled();
        applicationInfoManager33.config = myDataCenterInstanceConfig36;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig42 = applicationInfoManager33.config;
        com.netflix.appinfo.InstanceInfo instanceInfo43 = applicationInfoManager33.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo44 = applicationInfoManager33.instanceInfo;
        int int45 = instanceInfo44.getSecurePort();
        boolean boolean46 = instanceInfo44.isDirty();
        java.lang.String str47 = instanceInfo44.getHostName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType48 = instanceInfo44.getActionType();
        boolean boolean49 = instanceInfo44.isDirty();
        boolean boolean50 = instanceInfo44.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager51 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo52 = applicationInfoManager51.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig54 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int55 = myDataCenterInstanceConfig54.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo56 = myDataCenterInstanceConfig54.getDataCenterInfo();
        java.lang.String str57 = myDataCenterInstanceConfig54.getNamespace();
        boolean boolean58 = myDataCenterInstanceConfig54.isNonSecurePortEnabled();
        applicationInfoManager51.config = myDataCenterInstanceConfig54;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig60 = applicationInfoManager51.config;
        com.netflix.appinfo.InstanceInfo instanceInfo61 = applicationInfoManager51.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo62 = applicationInfoManager51.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType63 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo62.setActionType(actionType63);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus65 = instanceInfo62.getStatus();
        instanceInfo44.setStatusWithoutDirty(instanceStatus65);
        com.netflix.appinfo.InstanceInfo.Builder builder67 = builder32.setStatus(instanceStatus65);
        instanceInfo21.setStatus(instanceStatus65);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UNKNOWN" + "'", str14, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 30 + "'", int18 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(applicationInfoManager33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 30 + "'", int37 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig42);
        org.junit.Assert.assertNotNull(instanceInfo43);
        org.junit.Assert.assertNotNull(instanceInfo44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 443 + "'", int45 == 443);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str47, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + actionType48 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType48.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(applicationInfoManager51);
        org.junit.Assert.assertNotNull(instanceInfo52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig60);
        org.junit.Assert.assertNotNull(instanceInfo61);
        org.junit.Assert.assertNotNull(instanceInfo62);
        org.junit.Assert.assertTrue("'" + actionType63 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType63.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus65 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus65.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder67);
    }

    @Test
    public void test04228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04228");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus24 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder21.setStatus(instanceStatus24);
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder25.setHealthCheckUrlsForDeser("http://inesserver2.windows.cin.ufpe.br:80/Status", "unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder25.setVIPAddress("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder25.setPort(0);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager34 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager34.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig37 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int38 = myDataCenterInstanceConfig37.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo39 = myDataCenterInstanceConfig37.getDataCenterInfo();
        java.lang.String str40 = myDataCenterInstanceConfig37.getNamespace();
        boolean boolean41 = myDataCenterInstanceConfig37.isNonSecurePortEnabled();
        applicationInfoManager34.config = myDataCenterInstanceConfig37;
        int int43 = myDataCenterInstanceConfig37.getLeaseExpirationDurationInSeconds();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = myDataCenterInstanceConfig37.getMetadataMap();
        java.lang.String str45 = myDataCenterInstanceConfig37.getHealthCheckUrl();
        java.lang.String str46 = myDataCenterInstanceConfig37.getHomePageUrlPath();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo47 = myDataCenterInstanceConfig37.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig48 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo47);
        com.netflix.appinfo.InstanceInfo.Builder builder49 = builder32.setDataCenterInfo(dataCenterInfo47);
        com.netflix.appinfo.InstanceInfo.Builder builder51 = builder32.setSecurePort(35);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + instanceStatus24 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus24.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(applicationInfoManager34);
        org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 30 + "'", int38 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 90 + "'", int43 == 90);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/" + "'", str46, "/");
        org.junit.Assert.assertNotNull(dataCenterInfo47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
    }

    @Test
    public void test04229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04229");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder20.add("/healthcheck", "UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setSecureVIPAddress("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder23.setCountryId(0);
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder23.setSID("/");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager30 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager30.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig33 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int34 = myDataCenterInstanceConfig33.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo35 = myDataCenterInstanceConfig33.getDataCenterInfo();
        java.lang.String str36 = myDataCenterInstanceConfig33.getNamespace();
        boolean boolean37 = myDataCenterInstanceConfig33.isNonSecurePortEnabled();
        applicationInfoManager30.config = myDataCenterInstanceConfig33;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig39 = applicationInfoManager30.config;
        com.netflix.appinfo.InstanceInfo instanceInfo40 = applicationInfoManager30.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo41 = applicationInfoManager30.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType42 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo41.setActionType(actionType42);
        java.lang.String str44 = instanceInfo41.getVersion();
        java.lang.String str45 = instanceInfo41.getIPAddr();
        instanceInfo41.setLastUpdatedTimestamp();
        java.lang.String str47 = instanceInfo41.getVersion();
        java.lang.String str48 = instanceInfo41.getHomePageUrl();
        int int49 = instanceInfo41.getCountryId();
        java.lang.String str50 = instanceInfo41.getVIPAddress();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager51 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo52 = applicationInfoManager51.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig54 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int55 = myDataCenterInstanceConfig54.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo56 = myDataCenterInstanceConfig54.getDataCenterInfo();
        java.lang.String str57 = myDataCenterInstanceConfig54.getNamespace();
        boolean boolean58 = myDataCenterInstanceConfig54.isNonSecurePortEnabled();
        applicationInfoManager51.config = myDataCenterInstanceConfig54;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig60 = applicationInfoManager51.config;
        com.netflix.appinfo.InstanceInfo instanceInfo61 = applicationInfoManager51.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo62 = applicationInfoManager51.instanceInfo;
        int int63 = instanceInfo62.getSecurePort();
        boolean boolean64 = instanceInfo62.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo65 = new com.netflix.appinfo.InstanceInfo(instanceInfo62);
        java.lang.String str66 = instanceInfo65.getHostName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus67 = instanceInfo65.getStatus();
        instanceInfo41.setOverriddenStatus(instanceStatus67);
        com.netflix.appinfo.InstanceInfo.Builder builder69 = builder29.setStatus(instanceStatus67);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager70 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo71 = applicationInfoManager70.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig73 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int74 = myDataCenterInstanceConfig73.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo75 = myDataCenterInstanceConfig73.getDataCenterInfo();
        java.lang.String str76 = myDataCenterInstanceConfig73.getNamespace();
        boolean boolean77 = myDataCenterInstanceConfig73.isNonSecurePortEnabled();
        applicationInfoManager70.config = myDataCenterInstanceConfig73;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig79 = applicationInfoManager70.config;
        com.netflix.appinfo.InstanceInfo instanceInfo80 = applicationInfoManager70.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo81 = applicationInfoManager70.instanceInfo;
        java.lang.Boolean boolean82 = instanceInfo81.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus83 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo81.setOverriddenStatus(instanceStatus83);
        com.netflix.appinfo.InstanceInfo.Builder builder85 = builder29.setStatus(instanceStatus83);
        com.netflix.appinfo.InstanceInfo.Builder builder88 = builder29.add("DEFAULT", "HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(applicationInfoManager30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig39);
        org.junit.Assert.assertNotNull(instanceInfo40);
        org.junit.Assert.assertNotNull(instanceInfo41);
        org.junit.Assert.assertTrue("'" + actionType42 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType42.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "unknown" + "'", str44, "unknown");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "172.20.26.3" + "'", str45, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "unknown" + "'", str47, "unknown");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "http://default:80/Status" + "'", str48, "http://default:80/Status");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "unknown" + "'", str50, "unknown");
        org.junit.Assert.assertNotNull(applicationInfoManager51);
        org.junit.Assert.assertNotNull(instanceInfo52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig60);
        org.junit.Assert.assertNotNull(instanceInfo61);
        org.junit.Assert.assertNotNull(instanceInfo62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 35 + "'", int63 == 35);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str66, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + instanceStatus67 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus67.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(applicationInfoManager70);
        org.junit.Assert.assertNotNull(instanceInfo71);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 30 + "'", int74 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig79);
        org.junit.Assert.assertNotNull(instanceInfo80);
        org.junit.Assert.assertNotNull(instanceInfo81);
// flaky:         org.junit.Assert.assertEquals("'" + boolean82 + "' != '" + true + "'", boolean82, true);
        org.junit.Assert.assertTrue("'" + instanceStatus83 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus83.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder88);
    }

    @Test
    public void test04230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04230");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager1 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig4.getDataCenterInfo();
        java.lang.String str7 = myDataCenterInstanceConfig4.getNamespace();
        boolean boolean8 = myDataCenterInstanceConfig4.isNonSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo9 = myDataCenterInstanceConfig4.getDataCenterInfo();
        applicationInfoManager1.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig4);
        java.lang.String str11 = myDataCenterInstanceConfig4.getAppname();
        int int12 = myDataCenterInstanceConfig4.getNonSecurePort();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo13 = myDataCenterInstanceConfig4.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig14 = new com.netflix.appinfo.MyDataCenterInstanceConfig("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/", dataCenterInfo13);
        org.junit.Assert.assertNotNull(applicationInfoManager1);
        org.junit.Assert.assertNotNull(instanceInfo2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "unknown" + "'", str11, "unknown");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 80 + "'", int12 == 80);
        org.junit.Assert.assertNotNull(dataCenterInfo13);
    }

    @Test
    public void test04231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04231");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.getInfo();
        instanceInfo11.setLastUpdatedTimestamp();
        java.lang.String str13 = instanceInfo11.getStatusPageUrl();
        instanceInfo11.setLastDirtyTimestamp((java.lang.Long) 1636106088201L);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str13, "http://inesserver2.windows.cin.ufpe.br:80/Status");
    }

    @Test
    public void test04232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04232");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder6.setLastDirtyTimestamp((long) (short) 10);
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder13.setSecurePort((int) (short) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder15.setSecureVIPAddressDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder15.setPort(10);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder19.setSecureVIPAddressDeser("UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder19.setLastDirtyTimestamp((long) 52);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus24 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setStatus(instanceStatus24);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
    }

    @Test
    public void test04233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04233");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder7.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder9.add("http://inesserver2.windows.cin.ufpe.br:80/Status", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setSecureVIPAddressDeser("172.20.26.3");
        boolean boolean15 = builder14.isInitialized();
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder14.setNamespace("http://hi!:35/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder17.setAppGroupName("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:10/STATUS");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
    }

    @Test
    public void test04234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04234");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setSecureVIPAddress("hi!");
        boolean boolean26 = builder25.isInitialized();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager27 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager27.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig30 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int31 = myDataCenterInstanceConfig30.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo32 = myDataCenterInstanceConfig30.getDataCenterInfo();
        java.lang.String str33 = myDataCenterInstanceConfig30.getNamespace();
        boolean boolean34 = myDataCenterInstanceConfig30.isNonSecurePortEnabled();
        applicationInfoManager27.config = myDataCenterInstanceConfig30;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig36 = applicationInfoManager27.config;
        com.netflix.appinfo.InstanceInfo instanceInfo37 = applicationInfoManager27.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo38 = applicationInfoManager27.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType39 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo38.setActionType(actionType39);
        com.netflix.appinfo.LeaseInfo leaseInfo41 = null;
        instanceInfo38.setLeaseInfo(leaseInfo41);
        java.lang.String str43 = instanceInfo38.getSID();
        instanceInfo38.setSID("unknown");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager46 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo47 = applicationInfoManager46.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig49 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int50 = myDataCenterInstanceConfig49.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo51 = myDataCenterInstanceConfig49.getDataCenterInfo();
        java.lang.String str52 = myDataCenterInstanceConfig49.getNamespace();
        boolean boolean53 = myDataCenterInstanceConfig49.isNonSecurePortEnabled();
        applicationInfoManager46.config = myDataCenterInstanceConfig49;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig55 = applicationInfoManager46.config;
        com.netflix.appinfo.InstanceInfo instanceInfo56 = applicationInfoManager46.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo57 = applicationInfoManager46.instanceInfo;
        java.lang.Boolean boolean58 = instanceInfo57.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus59 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo57.setOverriddenStatus(instanceStatus59);
        instanceInfo38.setStatusWithoutDirty(instanceStatus59);
        com.netflix.appinfo.InstanceInfo.Builder builder62 = builder25.setOverriddenStatus(instanceStatus59);
        com.netflix.appinfo.InstanceInfo.Builder builder64 = builder25.setIPAddr("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo.Builder builder67 = builder64.add("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:10/STATUS", "HTTP://HI!:80/STATUS");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(applicationInfoManager27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 30 + "'", int31 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig36);
        org.junit.Assert.assertNotNull(instanceInfo37);
        org.junit.Assert.assertNotNull(instanceInfo38);
        org.junit.Assert.assertTrue("'" + actionType39 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType39.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "na" + "'", str43, "na");
        org.junit.Assert.assertNotNull(applicationInfoManager46);
        org.junit.Assert.assertNotNull(instanceInfo47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 30 + "'", int50 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig55);
        org.junit.Assert.assertNotNull(instanceInfo56);
        org.junit.Assert.assertNotNull(instanceInfo57);
        org.junit.Assert.assertEquals("'" + boolean58 + "' != '" + false + "'", boolean58, false);
        org.junit.Assert.assertTrue("'" + instanceStatus59 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus59.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder67);
    }

    @Test
    public void test04235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04235");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder21.add("", "na");
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder26.setVIPAddress("na");
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder28.setASGName("HTTP://HI!:80/STATUS");
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder30.setLastDirtyTimestamp(1636105989610L);
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder30.setNamespace("inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
    }

    @Test
    public void test04236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04236");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setIPAddr("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.LeaseInfo leaseInfo7 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setLeaseInfo(leaseInfo7);
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder6.setSecurePort((int) (short) 0);
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder10.setNamespace("UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setVIPAddress("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder12.setVIPAddressDeser("UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder12.setVIPAddress("");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test04237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04237");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder6.setAppName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setLastDirtyTimestamp((long) 7001);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setCountryId((int) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder15 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder15.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder17.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo21 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder17.setLeaseInfo(leaseInfo21);
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder22.setIPAddr("");
        com.netflix.appinfo.InstanceInfo instanceInfo25 = builder22.getRawInstance();
        int int26 = instanceInfo25.getSecurePort();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = instanceInfo25.getMetadata();
        instanceInfo25.setLastDirtyTimestamp((java.lang.Long) 1636105974859L);
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig30 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager31 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager31.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig34 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int35 = myDataCenterInstanceConfig34.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo36 = myDataCenterInstanceConfig34.getDataCenterInfo();
        java.lang.String str37 = myDataCenterInstanceConfig34.getNamespace();
        boolean boolean38 = myDataCenterInstanceConfig34.isNonSecurePortEnabled();
        applicationInfoManager31.config = myDataCenterInstanceConfig34;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig40 = applicationInfoManager31.config;
        com.netflix.appinfo.InstanceInfo instanceInfo41 = applicationInfoManager31.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo42 = applicationInfoManager31.instanceInfo;
        int int43 = instanceInfo42.getSecurePort();
        boolean boolean44 = instanceInfo42.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager45 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig30, instanceInfo42);
        instanceInfo42.setSID("unknown");
        java.lang.String str48 = instanceInfo42.getId();
        int int49 = instanceInfo42.getPort();
        java.lang.String str50 = instanceInfo42.getVIPAddress();
        com.netflix.appinfo.LeaseInfo leaseInfo51 = instanceInfo42.getLeaseInfo();
        instanceInfo25.setLeaseInfo(leaseInfo51);
        com.netflix.appinfo.InstanceInfo.Builder builder53 = builder6.setLeaseInfo(leaseInfo51);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 7002 + "'", int26 == 7002);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(applicationInfoManager31);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 30 + "'", int35 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig40);
        org.junit.Assert.assertNotNull(instanceInfo41);
        org.junit.Assert.assertNotNull(instanceInfo42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 443 + "'", int43 == 443);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str48, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 80 + "'", int49 == 80);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "na" + "'", str50, "na");
        org.junit.Assert.assertNull(leaseInfo51);
        org.junit.Assert.assertNotNull(builder53);
    }

    @Test
    public void test04238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04238");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str3 = myDataCenterInstanceConfig1.getNamespace();
        int int4 = myDataCenterInstanceConfig1.getSecurePort();
        java.lang.String str5 = myDataCenterInstanceConfig1.getNamespace();
        java.lang.String str6 = myDataCenterInstanceConfig1.getIpAddress();
        java.lang.String str7 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 443 + "'", int4 == 443);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "172.20.26.3" + "'", str6, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/healthcheck" + "'", str7, "/healthcheck");
    }

    @Test
    public void test04239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04239");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str2 = myDataCenterInstanceConfig1.getIpAddress();
        java.lang.String str3 = myDataCenterInstanceConfig1.getASGName();
        boolean boolean4 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        java.lang.String str5 = myDataCenterInstanceConfig1.getStatusPageUrl();
        java.lang.String str6 = myDataCenterInstanceConfig1.getHealthCheckUrl();
        java.lang.String str7 = myDataCenterInstanceConfig1.getAppname();
        java.lang.String str8 = myDataCenterInstanceConfig1.getAppname();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager9 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager9.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int13 = myDataCenterInstanceConfig12.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo14 = myDataCenterInstanceConfig12.getDataCenterInfo();
        java.lang.String str15 = myDataCenterInstanceConfig12.getNamespace();
        boolean boolean16 = myDataCenterInstanceConfig12.isNonSecurePortEnabled();
        applicationInfoManager9.config = myDataCenterInstanceConfig12;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig18 = applicationInfoManager9.config;
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager9.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager9.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType21 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo20.setActionType(actionType21);
        java.lang.String str23 = instanceInfo20.getVersion();
        java.lang.String str24 = instanceInfo20.getIPAddr();
        com.netflix.appinfo.InstanceInfo.ActionType actionType25 = instanceInfo20.getActionType();
        com.netflix.appinfo.InstanceInfo.ActionType actionType26 = instanceInfo20.getActionType();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager27 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo20);
        java.lang.String str28 = instanceInfo20.getAppGroupName();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "172.20.26.3" + "'", str2, "172.20.26.3");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "unknown" + "'", str7, "unknown");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "unknown" + "'", str8, "unknown");
        org.junit.Assert.assertNotNull(applicationInfoManager9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 30 + "'", int13 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertTrue("'" + actionType21 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType21.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "unknown" + "'", str23, "unknown");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str24, "http://inesserver2.windows.cin.ufpe.br:80/");
        org.junit.Assert.assertTrue("'" + actionType25 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType25.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + actionType26 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType26.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "UNKNOWN" + "'", str28, "UNKNOWN");
    }

    @Test
    public void test04240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04240");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager1 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo3 = applicationInfoManager1.getInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig5 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str6 = myDataCenterInstanceConfig5.getIpAddress();
        java.lang.String str7 = myDataCenterInstanceConfig5.getASGName();
        boolean boolean8 = myDataCenterInstanceConfig5.getSecurePortEnabled();
        java.lang.String str9 = myDataCenterInstanceConfig5.getStatusPageUrl();
        applicationInfoManager1.config = myDataCenterInstanceConfig5;
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig5.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("http://inesserver2.windows.cin.ufpe.br:10/Status", dataCenterInfo11);
        int int13 = myDataCenterInstanceConfig12.getNonSecurePort();
        java.lang.String str14 = myDataCenterInstanceConfig12.getIpAddress();
        org.junit.Assert.assertNotNull(applicationInfoManager1);
        org.junit.Assert.assertNotNull(instanceInfo2);
        org.junit.Assert.assertNotNull(instanceInfo3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "172.20.26.3" + "'", str6, "172.20.26.3");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 80 + "'", int13 == 80);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "172.20.26.3" + "'", str14, "172.20.26.3");
    }

    @Test
    public void test04241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04241");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str4 = myDataCenterInstanceConfig1.getASGName();
        java.lang.String str5 = myDataCenterInstanceConfig1.getSecureHealthCheckUrl();
        java.lang.String str6 = myDataCenterInstanceConfig1.getVirtualHostName();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str6, "inesserver2.windows.cin.ufpe.br:80");
    }

    @Test
    public void test04242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04242");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        boolean boolean13 = instanceInfo11.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        com.netflix.appinfo.InstanceInfo instanceInfo15 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        java.lang.String str16 = instanceInfo11.getAppGroupName();
        instanceInfo11.setIsDirty(true);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UNKNOWN" + "'", str16, "UNKNOWN");
    }

    @Test
    public void test04243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04243");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        int int9 = myDataCenterInstanceConfig3.getLeaseExpirationDurationInSeconds();
        java.lang.String str10 = myDataCenterInstanceConfig3.getHomePageUrl();
        java.lang.String str11 = myDataCenterInstanceConfig3.getSecureVirtualHostName();
        java.lang.String str13 = myDataCenterInstanceConfig3.getHostName(false);
        java.lang.String str14 = myDataCenterInstanceConfig3.getASGName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 90 + "'", int9 == 90);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str13, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test04244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04244");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = instanceInfo11.getVersion();
        java.lang.String str15 = instanceInfo11.getIPAddr();
        instanceInfo11.setLastUpdatedTimestamp();
        java.lang.String str17 = instanceInfo11.getVersion();
        java.lang.String str18 = instanceInfo11.getHomePageUrl();
        int int19 = instanceInfo11.getCountryId();
        java.lang.String str20 = instanceInfo11.getVIPAddress();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager21 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo22 = applicationInfoManager21.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int25 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig24.getDataCenterInfo();
        java.lang.String str27 = myDataCenterInstanceConfig24.getNamespace();
        boolean boolean28 = myDataCenterInstanceConfig24.isNonSecurePortEnabled();
        applicationInfoManager21.config = myDataCenterInstanceConfig24;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig30 = applicationInfoManager21.config;
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager21.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager21.instanceInfo;
        int int33 = instanceInfo32.getSecurePort();
        boolean boolean34 = instanceInfo32.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = new com.netflix.appinfo.InstanceInfo(instanceInfo32);
        java.lang.String str36 = instanceInfo35.getHostName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus37 = instanceInfo35.getStatus();
        instanceInfo11.setOverriddenStatus(instanceStatus37);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo39 = instanceInfo11.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.ActionType actionType40 = instanceInfo11.getActionType();
        java.lang.String str41 = instanceInfo11.getVIPAddress();
        com.netflix.appinfo.InstanceInfo.Builder builder42 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder44 = builder42.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder46 = builder42.setCountryId(7002);
        com.netflix.appinfo.InstanceInfo.Builder builder49 = builder46.setHealthCheckUrlsForDeser("http://hi!:80/Status", "inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager50 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig52 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int53 = myDataCenterInstanceConfig52.getLeaseRenewalIntervalInSeconds();
        int int54 = myDataCenterInstanceConfig52.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager50.config = myDataCenterInstanceConfig52;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig56 = applicationInfoManager50.config;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig57 = applicationInfoManager50.config;
        applicationInfoManager50.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager59 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo60 = applicationInfoManager59.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig62 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int63 = myDataCenterInstanceConfig62.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo64 = myDataCenterInstanceConfig62.getDataCenterInfo();
        java.lang.String str65 = myDataCenterInstanceConfig62.getNamespace();
        boolean boolean66 = myDataCenterInstanceConfig62.isNonSecurePortEnabled();
        applicationInfoManager59.config = myDataCenterInstanceConfig62;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig68 = applicationInfoManager59.config;
        com.netflix.appinfo.InstanceInfo instanceInfo69 = applicationInfoManager59.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo70 = applicationInfoManager59.instanceInfo;
        int int71 = instanceInfo70.getSecurePort();
        boolean boolean72 = instanceInfo70.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo73 = new com.netflix.appinfo.InstanceInfo(instanceInfo70);
        com.netflix.appinfo.InstanceInfo instanceInfo74 = new com.netflix.appinfo.InstanceInfo(instanceInfo70);
        java.lang.String str75 = instanceInfo70.getAppGroupName();
        int int76 = instanceInfo70.getCountryId();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus77 = instanceInfo70.getStatus();
        applicationInfoManager50.setInstanceStatus(instanceStatus77);
        com.netflix.appinfo.InstanceInfo.Builder builder79 = builder49.setOverriddenStatus(instanceStatus77);
        instanceInfo11.setOverriddenStatus(instanceStatus77);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo81 = instanceInfo11.getDataCenterInfo();
        java.lang.String str82 = instanceInfo11.getHostName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "unknown" + "'", str14, "unknown");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str15, "http://inesserver2.windows.cin.ufpe.br:80/");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "unknown" + "'", str17, "unknown");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str18, "http://inesserver2.windows.cin.ufpe.br:80/");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "na" + "'", str20, "na");
        org.junit.Assert.assertNotNull(applicationInfoManager21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 30 + "'", int25 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 443 + "'", int33 == 443);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str36, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + instanceStatus37 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus37.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(dataCenterInfo39);
        org.junit.Assert.assertTrue("'" + actionType40 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType40.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "na" + "'", str41, "na");
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(applicationInfoManager50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 30 + "'", int53 == 30);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 30 + "'", int54 == 30);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig56);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig57);
        org.junit.Assert.assertNotNull(applicationInfoManager59);
        org.junit.Assert.assertNotNull(instanceInfo60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 30 + "'", int63 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig68);
        org.junit.Assert.assertNotNull(instanceInfo69);
        org.junit.Assert.assertNotNull(instanceInfo70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 443 + "'", int71 == 443);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "UNKNOWN" + "'", str75, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertTrue("'" + instanceStatus77 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus77.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(dataCenterInfo81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str82, "inesserver2.windows.cin.ufpe.br");
    }

    @Test
    public void test04245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04245");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder2.setHealthCheckUrlsForDeser("unknown", "172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder10.setAppName("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setSID("/");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder14.add("/HEALTHCHECK", "");
        com.netflix.appinfo.InstanceInfo.Builder builder18 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder20.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo24 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder20.setLeaseInfo(leaseInfo24);
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder20.setHealthCheckUrlsForDeser("unknown", "172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder28.setAppName("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder30.setSecureVIPAddress("172.20.26.3");
        com.netflix.appinfo.InstanceInfo instanceInfo33 = builder30.build();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager34 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager34.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig37 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int38 = myDataCenterInstanceConfig37.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo39 = myDataCenterInstanceConfig37.getDataCenterInfo();
        java.lang.String str40 = myDataCenterInstanceConfig37.getNamespace();
        boolean boolean41 = myDataCenterInstanceConfig37.isNonSecurePortEnabled();
        applicationInfoManager34.config = myDataCenterInstanceConfig37;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig43 = applicationInfoManager34.config;
        com.netflix.appinfo.InstanceInfo instanceInfo44 = applicationInfoManager34.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo45 = applicationInfoManager34.instanceInfo;
        java.lang.Boolean boolean46 = instanceInfo45.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus47 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo45.setOverriddenStatus(instanceStatus47);
        java.lang.String str49 = instanceInfo45.getSID();
        java.util.Set<java.lang.String> strSet50 = instanceInfo45.getHealthCheckUrls();
        java.lang.String str51 = instanceInfo45.getSID();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager52 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig54 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int55 = myDataCenterInstanceConfig54.getLeaseRenewalIntervalInSeconds();
        int int56 = myDataCenterInstanceConfig54.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager52.config = myDataCenterInstanceConfig54;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig58 = applicationInfoManager52.config;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig59 = applicationInfoManager52.config;
        com.netflix.appinfo.InstanceInfo instanceInfo60 = applicationInfoManager52.getInfo();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus61 = instanceInfo60.getStatus();
        instanceInfo45.setStatusWithoutDirty(instanceStatus61);
        instanceInfo33.setStatusWithoutDirty(instanceStatus61);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus64 = instanceInfo33.getStatus();
        com.netflix.appinfo.InstanceInfo.Builder builder65 = builder14.setStatus(instanceStatus64);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertNotNull(applicationInfoManager34);
        org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 30 + "'", int38 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig43);
        org.junit.Assert.assertNotNull(instanceInfo44);
        org.junit.Assert.assertNotNull(instanceInfo45);
// flaky:         org.junit.Assert.assertEquals("'" + boolean46 + "' != '" + true + "'", boolean46, true);
        org.junit.Assert.assertTrue("'" + instanceStatus47 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus47.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "na" + "'", str49, "na");
        org.junit.Assert.assertNotNull(strSet50);
// flaky:         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "na" + "'", str51, "na");
        org.junit.Assert.assertNotNull(applicationInfoManager52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 30 + "'", int56 == 30);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig58);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig59);
        org.junit.Assert.assertNotNull(instanceInfo60);
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus61 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING + "'", instanceStatus61.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING));
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus64 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING + "'", instanceStatus64.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING));
        org.junit.Assert.assertNotNull(builder65);
    }

    @Test
    public void test04246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04246");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        int int3 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        boolean boolean5 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = myDataCenterInstanceConfig1.getMetadataMap();
        boolean boolean7 = myDataCenterInstanceConfig1.isInstanceEnabledOnit();
        int int8 = myDataCenterInstanceConfig1.getSecurePort();
        int int9 = myDataCenterInstanceConfig1.getLeaseExpirationDurationInSeconds();
        boolean boolean10 = myDataCenterInstanceConfig1.isInstanceEnabledOnit();
        java.lang.String str11 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/Status" + "'", str4, "/Status");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 443 + "'", int8 == 443);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 90 + "'", int9 == 90);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/healthcheck" + "'", str11, "/healthcheck");
    }

    @Test
    public void test04247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04247");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("INESSERVER2.WINDOWS.CIN.UFPE.BR");
        int int2 = myDataCenterInstanceConfig1.getLeaseExpirationDurationInSeconds();
        java.lang.String str3 = myDataCenterInstanceConfig1.getHealthCheckUrl();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 90 + "'", int2 == 90);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test04248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04248");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str5 = myDataCenterInstanceConfig1.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig1.getDataCenterInfo();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager7 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo8 = applicationInfoManager7.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int11 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo12 = myDataCenterInstanceConfig10.getDataCenterInfo();
        java.lang.String str13 = myDataCenterInstanceConfig10.getNamespace();
        boolean boolean14 = myDataCenterInstanceConfig10.isNonSecurePortEnabled();
        applicationInfoManager7.config = myDataCenterInstanceConfig10;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig16 = applicationInfoManager7.config;
        com.netflix.appinfo.InstanceInfo instanceInfo17 = applicationInfoManager7.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig20 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int21 = myDataCenterInstanceConfig20.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = myDataCenterInstanceConfig20.getDataCenterInfo();
        java.lang.String str24 = myDataCenterInstanceConfig20.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = myDataCenterInstanceConfig20.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig26 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo25);
        java.lang.String str27 = myDataCenterInstanceConfig26.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = myDataCenterInstanceConfig26.getMetadataMap();
        applicationInfoManager7.registerAppMetadata(strMap28);
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager7.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager7.getInfo();
        java.util.Set<java.lang.String> strSet32 = instanceInfo31.getHealthCheckUrls();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager33 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager33.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig36 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int37 = myDataCenterInstanceConfig36.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo38 = myDataCenterInstanceConfig36.getDataCenterInfo();
        java.lang.String str39 = myDataCenterInstanceConfig36.getNamespace();
        boolean boolean40 = myDataCenterInstanceConfig36.isNonSecurePortEnabled();
        applicationInfoManager33.config = myDataCenterInstanceConfig36;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig42 = applicationInfoManager33.config;
        com.netflix.appinfo.InstanceInfo instanceInfo43 = applicationInfoManager33.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo44 = applicationInfoManager33.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType45 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo44.setActionType(actionType45);
        com.netflix.appinfo.LeaseInfo leaseInfo47 = null;
        instanceInfo44.setLeaseInfo(leaseInfo47);
        java.util.Set<java.lang.String> strSet49 = instanceInfo44.getHealthCheckUrls();
        java.lang.String str50 = instanceInfo44.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder51 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo44);
        com.netflix.appinfo.InstanceInfo.Builder builder54 = builder51.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder56 = builder51.setVIPAddressDeser("hi!");
        com.netflix.appinfo.InstanceInfo.PortType portType57 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder59 = builder56.enablePort(portType57, false);
        boolean boolean60 = instanceInfo31.isPortEnabled(portType57);
        instanceInfo31.setIsCoordinatingDiscoveryServer();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager62 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo31);
        int int63 = instanceInfo31.getPort();
        instanceInfo31.setIsCoordinatingDiscoveryServer();
        instanceInfo31.setIsCoordinatingDiscoveryServer();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str5, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertNotNull(applicationInfoManager7);
        org.junit.Assert.assertNotNull(instanceInfo8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig16);
        org.junit.Assert.assertNotNull(instanceInfo17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 30 + "'", int21 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str24, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(applicationInfoManager33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 30 + "'", int37 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig42);
        org.junit.Assert.assertNotNull(instanceInfo43);
        org.junit.Assert.assertNotNull(instanceInfo44);
        org.junit.Assert.assertTrue("'" + actionType45 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType45.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str50, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + portType57 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType57.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 80 + "'", int63 == 80);
    }

    @Test
    public void test04249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04249");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        int int4 = myDataCenterInstanceConfig1.getSecurePort();
        java.lang.String str5 = myDataCenterInstanceConfig1.getAppGroupName();
        java.lang.String str6 = myDataCenterInstanceConfig1.getASGName();
        java.lang.String str7 = myDataCenterInstanceConfig1.getASGName();
        int int8 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder9.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder9.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder9.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig16 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo17 = myDataCenterInstanceConfig16.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder15.setDataCenterInfo(dataCenterInfo17);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo20 = myDataCenterInstanceConfig19.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder15.setDataCenterInfo(dataCenterInfo20);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder21.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder21.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder21.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo31 = builder30.build();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager32 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo31);
        java.lang.String str33 = instanceInfo31.getIPAddr();
        instanceInfo31.setLastUpdatedTimestamp();
        java.lang.String str35 = instanceInfo31.getVersion();
        com.netflix.appinfo.InstanceInfo.Builder builder36 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo31);
        com.netflix.appinfo.InstanceInfo.ActionType actionType37 = instanceInfo31.getActionType();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 443 + "'", int4 == 443);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "unknown" + "'", str5, "unknown");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(dataCenterInfo17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(dataCenterInfo20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "unknown" + "'", str35, "unknown");
        org.junit.Assert.assertNull(actionType37);
    }

    @Test
    public void test04250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04250");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setSecureVIPAddress("hi!");
        boolean boolean26 = builder25.isInitialized();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager27 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager27.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig30 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int31 = myDataCenterInstanceConfig30.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo32 = myDataCenterInstanceConfig30.getDataCenterInfo();
        java.lang.String str33 = myDataCenterInstanceConfig30.getNamespace();
        boolean boolean34 = myDataCenterInstanceConfig30.isNonSecurePortEnabled();
        applicationInfoManager27.config = myDataCenterInstanceConfig30;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig36 = applicationInfoManager27.config;
        com.netflix.appinfo.InstanceInfo instanceInfo37 = applicationInfoManager27.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo38 = applicationInfoManager27.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType39 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo38.setActionType(actionType39);
        com.netflix.appinfo.LeaseInfo leaseInfo41 = null;
        instanceInfo38.setLeaseInfo(leaseInfo41);
        java.lang.String str43 = instanceInfo38.getSID();
        instanceInfo38.setSID("unknown");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager46 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo47 = applicationInfoManager46.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig49 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int50 = myDataCenterInstanceConfig49.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo51 = myDataCenterInstanceConfig49.getDataCenterInfo();
        java.lang.String str52 = myDataCenterInstanceConfig49.getNamespace();
        boolean boolean53 = myDataCenterInstanceConfig49.isNonSecurePortEnabled();
        applicationInfoManager46.config = myDataCenterInstanceConfig49;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig55 = applicationInfoManager46.config;
        com.netflix.appinfo.InstanceInfo instanceInfo56 = applicationInfoManager46.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo57 = applicationInfoManager46.instanceInfo;
        java.lang.Boolean boolean58 = instanceInfo57.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus59 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo57.setOverriddenStatus(instanceStatus59);
        instanceInfo38.setStatusWithoutDirty(instanceStatus59);
        com.netflix.appinfo.InstanceInfo.Builder builder62 = builder25.setOverriddenStatus(instanceStatus59);
        com.netflix.appinfo.InstanceInfo instanceInfo63 = builder62.build();
        java.lang.String str64 = instanceInfo63.getVersion();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(applicationInfoManager27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 30 + "'", int31 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig36);
        org.junit.Assert.assertNotNull(instanceInfo37);
        org.junit.Assert.assertNotNull(instanceInfo38);
        org.junit.Assert.assertTrue("'" + actionType39 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType39.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "na" + "'", str43, "na");
        org.junit.Assert.assertNotNull(applicationInfoManager46);
        org.junit.Assert.assertNotNull(instanceInfo47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 30 + "'", int50 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig55);
        org.junit.Assert.assertNotNull(instanceInfo56);
        org.junit.Assert.assertNotNull(instanceInfo57);
        org.junit.Assert.assertEquals("'" + boolean58 + "' != '" + false + "'", boolean58, false);
        org.junit.Assert.assertTrue("'" + instanceStatus59 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus59.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(instanceInfo63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "unknown" + "'", str64, "unknown");
    }

    @Test
    public void test04251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04251");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        java.lang.Boolean boolean12 = instanceInfo11.isCoordinatingDiscoveryServer();
        java.lang.String str13 = instanceInfo11.getVIPAddress();
        java.lang.String str14 = instanceInfo11.getSID();
        java.lang.String str15 = instanceInfo11.getId();
        int int16 = instanceInfo11.getCountryId();
        long long17 = instanceInfo11.getLastUpdatedTimestamp();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager18 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager18.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int22 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo23 = myDataCenterInstanceConfig21.getDataCenterInfo();
        java.lang.String str24 = myDataCenterInstanceConfig21.getNamespace();
        boolean boolean25 = myDataCenterInstanceConfig21.isNonSecurePortEnabled();
        applicationInfoManager18.config = myDataCenterInstanceConfig21;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig27 = applicationInfoManager18.config;
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager18.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager18.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType30 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo29.setActionType(actionType30);
        com.netflix.appinfo.LeaseInfo leaseInfo32 = null;
        instanceInfo29.setLeaseInfo(leaseInfo32);
        java.util.Set<java.lang.String> strSet34 = instanceInfo29.getHealthCheckUrls();
        java.lang.String str35 = instanceInfo29.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder36 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo29);
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder36.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder41 = builder36.setHealthCheckUrlsForDeser("", "hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder43 = builder41.setLastDirtyTimestamp((long) 443);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus44 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        com.netflix.appinfo.InstanceInfo.Builder builder45 = builder41.setStatus(instanceStatus44);
        com.netflix.appinfo.InstanceInfo.Builder builder47 = builder45.setVIPAddressDeser("");
        boolean boolean48 = instanceInfo11.equals((java.lang.Object) "");
        java.lang.String str49 = instanceInfo11.getHostName();
        java.lang.String str50 = instanceInfo11.getHomePageUrl();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/Status" + "'", str13, "/Status");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "http://hi!:80/Status" + "'", str14, "http://hi!:80/Status");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
// flaky:         org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1636106124641L + "'", long17 == 1636106124641L);
        org.junit.Assert.assertNotNull(applicationInfoManager18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 30 + "'", int22 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertTrue("'" + actionType30 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType30.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + instanceStatus44 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus44.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
    }

    @Test
    public void test04252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04252");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = instanceInfo11.getAppGroupName();
        java.lang.String str15 = instanceInfo11.getAppName();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = instanceInfo11.getMetadata();
        java.lang.String str17 = instanceInfo11.getASGName();
        int int18 = instanceInfo11.getSecurePort();
        java.lang.String str19 = instanceInfo11.getAppName();
        java.lang.String str20 = instanceInfo11.getHostName();
        int int21 = instanceInfo11.getCountryId();
        java.lang.String str22 = instanceInfo11.getStatusPageUrl();
        java.lang.Boolean boolean23 = instanceInfo11.isCoordinatingDiscoveryServer();
        java.lang.String str24 = instanceInfo11.getASGName();
        java.lang.String str25 = instanceInfo11.getHomePageUrl();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "/" + "'", str14, "/");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS" + "'", str15, "HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS");
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/healthcheck" + "'", str17, "/healthcheck");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 7002 + "'", int18 == 7002);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS" + "'", str19, "HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + false + "'", boolean23, false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/healthcheck" + "'", str24, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test04253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04253");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager1 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig4.getDataCenterInfo();
        java.lang.String str7 = myDataCenterInstanceConfig4.getNamespace();
        boolean boolean8 = myDataCenterInstanceConfig4.isNonSecurePortEnabled();
        applicationInfoManager1.config = myDataCenterInstanceConfig4;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig10 = applicationInfoManager1.config;
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager1.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType13 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo12.setActionType(actionType13);
        com.netflix.appinfo.LeaseInfo leaseInfo15 = null;
        instanceInfo12.setLeaseInfo(leaseInfo15);
        java.util.Set<java.lang.String> strSet17 = instanceInfo12.getHealthCheckUrls();
        java.lang.String str18 = instanceInfo12.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder19 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo12);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder19.setSecurePort(30);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setAppGroupName("");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig28 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int29 = myDataCenterInstanceConfig28.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo30 = myDataCenterInstanceConfig28.getDataCenterInfo();
        java.lang.String str32 = myDataCenterInstanceConfig28.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo33 = myDataCenterInstanceConfig28.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig34 = new com.netflix.appinfo.MyDataCenterInstanceConfig("UNKNOWN", dataCenterInfo33);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig35 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo33);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig36 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo33);
        java.lang.String str37 = myDataCenterInstanceConfig36.getHomePageUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo38 = myDataCenterInstanceConfig36.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder39 = builder23.setDataCenterInfo(dataCenterInfo38);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig40 = new com.netflix.appinfo.MyDataCenterInstanceConfig("na", dataCenterInfo38);
        int int41 = myDataCenterInstanceConfig40.getNonSecurePort();
        org.junit.Assert.assertNotNull(applicationInfoManager1);
        org.junit.Assert.assertNotNull(instanceInfo2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertTrue("'" + actionType13 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType13.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 30 + "'", int29 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str32, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo33);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(dataCenterInfo38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 80 + "'", int41 == 80);
    }

    @Test
    public void test04254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04254");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        java.lang.Boolean boolean12 = instanceInfo11.isCoordinatingDiscoveryServer();
        java.lang.String str13 = instanceInfo11.getVIPAddress();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = instanceInfo11.getMetadata();
        com.netflix.appinfo.LeaseInfo leaseInfo15 = instanceInfo11.getLeaseInfo();
        java.lang.String str16 = instanceInfo11.getAppName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(leaseInfo15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS" + "'", str16, "HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS");
    }

    @Test
    public void test04255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04255");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setSecureVIPAddressDeser("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo15 = builder6.build();
        java.lang.String str16 = instanceInfo15.getHostName();
        instanceInfo15.setIsDirty(true);
        java.lang.String str19 = instanceInfo15.getVersion();
        com.netflix.appinfo.InstanceInfo.Builder builder20 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder20.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder22.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo26 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder22.setLeaseInfo(leaseInfo26);
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder22.setHealthCheckUrlsForDeser("unknown", "172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder22.setAppName("/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo33 = builder22.getRawInstance();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig35 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int36 = myDataCenterInstanceConfig35.getLeaseRenewalIntervalInSeconds();
        boolean boolean37 = myDataCenterInstanceConfig35.isNonSecurePortEnabled();
        int int38 = myDataCenterInstanceConfig35.getSecurePort();
        java.lang.String str39 = myDataCenterInstanceConfig35.getAppGroupName();
        java.lang.String str40 = myDataCenterInstanceConfig35.getASGName();
        java.lang.String str41 = myDataCenterInstanceConfig35.getASGName();
        int int42 = myDataCenterInstanceConfig35.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.InstanceInfo.Builder builder43 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder45 = builder43.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder47 = builder43.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder49 = builder43.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig50 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo51 = myDataCenterInstanceConfig50.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder52 = builder49.setDataCenterInfo(dataCenterInfo51);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig53 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo54 = myDataCenterInstanceConfig53.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder55 = builder49.setDataCenterInfo(dataCenterInfo54);
        com.netflix.appinfo.InstanceInfo.Builder builder57 = builder55.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder60 = builder55.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder62 = builder55.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder64 = builder55.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo65 = builder64.build();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager66 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig35, instanceInfo65);
        java.lang.String str67 = instanceInfo65.getIPAddr();
        instanceInfo65.setLastUpdatedTimestamp();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus69 = instanceInfo65.getOverriddenStatus();
        instanceInfo33.setOverriddenStatus(instanceStatus69);
        instanceInfo15.setStatusWithoutDirty(instanceStatus69);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager72 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig74 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int75 = myDataCenterInstanceConfig74.getLeaseRenewalIntervalInSeconds();
        int int76 = myDataCenterInstanceConfig74.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager72.config = myDataCenterInstanceConfig74;
        java.lang.String str78 = myDataCenterInstanceConfig74.getIpAddress();
        java.lang.String str79 = myDataCenterInstanceConfig74.getHealthCheckUrl();
        java.lang.String str80 = myDataCenterInstanceConfig74.getStatusPageUrl();
        boolean boolean81 = instanceInfo15.equals((java.lang.Object) myDataCenterInstanceConfig74);
        int int82 = instanceInfo15.getPort();
        java.lang.String str83 = instanceInfo15.getHomePageUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "unknown" + "'", str19, "unknown");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 30 + "'", int36 == 30);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 443 + "'", int38 == 443);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "unknown" + "'", str39, "unknown");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(dataCenterInfo51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(dataCenterInfo54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(instanceInfo65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + instanceStatus69 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus69.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(applicationInfoManager72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 30 + "'", int75 == 30);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 30 + "'", int76 == 30);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "172.20.26.3" + "'", str78, "172.20.26.3");
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 7001 + "'", int82 == 7001);
        org.junit.Assert.assertNull(str83);
    }

    @Test
    public void test04256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04256");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        boolean boolean13 = instanceInfo11.isDirty();
        java.lang.String str14 = instanceInfo11.getHostName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType15 = instanceInfo11.getActionType();
        java.lang.String str16 = instanceInfo11.getHostName();
        java.lang.String str17 = instanceInfo11.getASGName();
        int int18 = instanceInfo11.getCountryId();
        instanceInfo11.setIsCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.Builder builder20 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder20.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder22.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo26 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder22.setLeaseInfo(leaseInfo26);
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder27.setIPAddr("");
        com.netflix.appinfo.InstanceInfo instanceInfo30 = builder27.getRawInstance();
        int int31 = instanceInfo30.getSecurePort();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus32 = instanceInfo30.getStatus();
        instanceInfo11.setStatus(instanceStatus32);
        instanceInfo11.setIsCoordinatingDiscoveryServer();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str14, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNull(actionType15);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str16, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 7002 + "'", int31 == 7002);
        org.junit.Assert.assertTrue("'" + instanceStatus32 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UP + "'", instanceStatus32.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UP));
    }

    @Test
    public void test04257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04257");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder2.setHealthCheckUrlsForDeser("unknown", "172.20.26.3");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        boolean boolean13 = myDataCenterInstanceConfig12.getSecurePortEnabled();
        java.lang.String str14 = myDataCenterInstanceConfig12.getHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo15 = myDataCenterInstanceConfig12.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder10.setDataCenterInfo(dataCenterInfo15);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager17 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager17.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager19 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager19;
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager19.getInfo();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager22 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager22.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig25 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int26 = myDataCenterInstanceConfig25.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo27 = myDataCenterInstanceConfig25.getDataCenterInfo();
        java.lang.String str28 = myDataCenterInstanceConfig25.getNamespace();
        boolean boolean29 = myDataCenterInstanceConfig25.isNonSecurePortEnabled();
        applicationInfoManager22.config = myDataCenterInstanceConfig25;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig31 = applicationInfoManager22.config;
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager22.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo33 = applicationInfoManager22.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType34 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo33.setActionType(actionType34);
        com.netflix.appinfo.LeaseInfo leaseInfo36 = null;
        instanceInfo33.setLeaseInfo(leaseInfo36);
        java.util.Set<java.lang.String> strSet38 = instanceInfo33.getHealthCheckUrls();
        java.lang.String str39 = instanceInfo33.getIPAddr();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager40 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo41 = applicationInfoManager40.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig43 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int44 = myDataCenterInstanceConfig43.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo45 = myDataCenterInstanceConfig43.getDataCenterInfo();
        java.lang.String str46 = myDataCenterInstanceConfig43.getNamespace();
        boolean boolean47 = myDataCenterInstanceConfig43.isNonSecurePortEnabled();
        applicationInfoManager40.config = myDataCenterInstanceConfig43;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig49 = applicationInfoManager40.config;
        com.netflix.appinfo.InstanceInfo instanceInfo50 = applicationInfoManager40.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo51 = applicationInfoManager40.instanceInfo;
        int int52 = instanceInfo51.getSecurePort();
        boolean boolean53 = instanceInfo51.isDirty();
        java.lang.String str54 = instanceInfo51.getHostName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType55 = instanceInfo51.getActionType();
        boolean boolean56 = instanceInfo51.isDirty();
        boolean boolean57 = instanceInfo51.isDirty();
        int int58 = instanceInfo51.getPort();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus60 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("/Status");
        instanceInfo51.setStatusWithoutDirty(instanceStatus60);
        instanceInfo33.setStatusWithoutDirty(instanceStatus60);
        instanceInfo21.setStatusWithoutDirty(instanceStatus60);
        applicationInfoManager17.setInstanceStatus(instanceStatus60);
        com.netflix.appinfo.InstanceInfo.Builder builder65 = builder10.setStatus(instanceStatus60);
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder68 = builder65.setStatusPageUrl("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/", "http://inesserver2.windows.cin.ufpe.br:80:80/Status");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(dataCenterInfo15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(applicationInfoManager17);
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertNotNull(applicationInfoManager19);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertNotNull(applicationInfoManager22);
        org.junit.Assert.assertNotNull(instanceInfo23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 30 + "'", int26 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig31);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertTrue("'" + actionType34 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType34.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet38);
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "172.20.26.3" + "'", str39, "172.20.26.3");
        org.junit.Assert.assertNotNull(applicationInfoManager40);
        org.junit.Assert.assertNotNull(instanceInfo41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 30 + "'", int44 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig49);
        org.junit.Assert.assertNotNull(instanceInfo50);
        org.junit.Assert.assertNotNull(instanceInfo51);
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 443 + "'", int52 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str54 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str54, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + actionType55 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType55.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 80 + "'", int58 == 80);
        org.junit.Assert.assertTrue("'" + instanceStatus60 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus60.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder65);
    }

    @Test
    public void test04258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04258");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/healthcheck");
        int int2 = myDataCenterInstanceConfig1.getLeaseExpirationDurationInSeconds();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 90 + "'", int2 == 90);
    }

    @Test
    public void test04259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04259");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setNamespace("na");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder6.setHealthCheckUrlsForDeser("http://inesserver2.windows.cin.ufpe.br:80/", "/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder6.setVIPAddressDeser("HTTP://HI!:35/STATUS");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
    }

    @Test
    public void test04260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04260");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setSecureVIPAddressDeser("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo15 = builder6.build();
        instanceInfo15.setSID("na");
        long long18 = instanceInfo15.getLastUpdatedTimestamp();
        com.netflix.appinfo.InstanceInfo instanceInfo19 = new com.netflix.appinfo.InstanceInfo(instanceInfo15);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo19);
        java.lang.String str21 = instanceInfo19.getId();
        com.netflix.appinfo.InstanceInfo.ActionType actionType22 = instanceInfo19.getActionType();
        int int23 = instanceInfo19.getPort();
        instanceInfo19.setLastDirtyTimestamp((java.lang.Long) 0L);
        instanceInfo19.setSID("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo.Builder builder28 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo19);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(instanceInfo15);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1636106124822L + "'", long18 == 1636106124822L);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(actionType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 7001 + "'", int23 == 7001);
    }

    @Test
    public void test04261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04261");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder0.setIPAddr("inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder0.setLastDirtyTimestamp(1636106003344L);
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder10.setNamespace("INESSERVER2.WINDOWS.CIN.UFPE.BR");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setVIPAddressDeser("http:///:80/Status");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test04262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04262");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        com.netflix.appinfo.InstanceInfo instanceInfo1 = null;
        java.lang.String str2 = com.netflix.appinfo.InstanceInfo.getZone(strArray0, instanceInfo1);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager3 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo4 = applicationInfoManager3.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig6 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int7 = myDataCenterInstanceConfig6.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig6.getDataCenterInfo();
        java.lang.String str9 = myDataCenterInstanceConfig6.getNamespace();
        boolean boolean10 = myDataCenterInstanceConfig6.isNonSecurePortEnabled();
        applicationInfoManager3.config = myDataCenterInstanceConfig6;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig12 = applicationInfoManager3.config;
        com.netflix.appinfo.InstanceInfo instanceInfo13 = applicationInfoManager3.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager3.instanceInfo;
        java.lang.Boolean boolean15 = instanceInfo14.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus16 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo14.setOverriddenStatus(instanceStatus16);
        int int18 = instanceInfo14.getSecurePort();
        java.lang.String str19 = instanceInfo14.getHostName();
        java.lang.String str20 = instanceInfo14.getAppGroupName();
        java.lang.String str21 = instanceInfo14.getASGName();
        java.lang.String str22 = com.netflix.appinfo.InstanceInfo.getZone(strArray0, instanceInfo14);
        long long23 = instanceInfo14.getLastUpdatedTimestamp();
        java.lang.String str24 = instanceInfo14.getHostName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager25 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo26 = applicationInfoManager25.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig28 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int29 = myDataCenterInstanceConfig28.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo30 = myDataCenterInstanceConfig28.getDataCenterInfo();
        java.lang.String str31 = myDataCenterInstanceConfig28.getNamespace();
        boolean boolean32 = myDataCenterInstanceConfig28.isNonSecurePortEnabled();
        applicationInfoManager25.config = myDataCenterInstanceConfig28;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig34 = applicationInfoManager25.config;
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager25.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo36 = applicationInfoManager25.instanceInfo;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig37 = applicationInfoManager25.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager38 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo39 = applicationInfoManager38.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig41 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int42 = myDataCenterInstanceConfig41.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo43 = myDataCenterInstanceConfig41.getDataCenterInfo();
        java.lang.String str44 = myDataCenterInstanceConfig41.getNamespace();
        boolean boolean45 = myDataCenterInstanceConfig41.isNonSecurePortEnabled();
        applicationInfoManager38.config = myDataCenterInstanceConfig41;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig47 = applicationInfoManager38.config;
        com.netflix.appinfo.InstanceInfo instanceInfo48 = applicationInfoManager38.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo49 = applicationInfoManager38.instanceInfo;
        java.lang.Boolean boolean50 = instanceInfo49.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus51 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo49.setOverriddenStatus(instanceStatus51);
        applicationInfoManager25.instanceInfo = instanceInfo49;
        java.lang.String str54 = instanceInfo49.getHostName();
        instanceInfo49.setSID("");
        com.netflix.appinfo.LeaseInfo leaseInfo57 = null;
        instanceInfo49.setLeaseInfo(leaseInfo57);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus59 = instanceInfo49.getOverriddenStatus();
        instanceInfo14.setStatus(instanceStatus59);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "default" + "'", str2, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager3);
        org.junit.Assert.assertNotNull(instanceInfo4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 30 + "'", int7 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig12);
        org.junit.Assert.assertNotNull(instanceInfo13);
        org.junit.Assert.assertNotNull(instanceInfo14);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertTrue("'" + instanceStatus16 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus16.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 443 + "'", int18 == 443);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str19, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UNKNOWN" + "'", str20, "UNKNOWN");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "default" + "'", str22, "default");
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1636106124867L + "'", long23 == 1636106124867L);
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str24, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 30 + "'", int29 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig34);
        org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertNotNull(instanceInfo36);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig37);
        org.junit.Assert.assertNotNull(applicationInfoManager38);
        org.junit.Assert.assertNotNull(instanceInfo39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig47);
        org.junit.Assert.assertNotNull(instanceInfo48);
        org.junit.Assert.assertNotNull(instanceInfo49);
        org.junit.Assert.assertEquals("'" + boolean50 + "' != '" + false + "'", boolean50, false);
        org.junit.Assert.assertTrue("'" + instanceStatus51 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus51.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
// flaky:         org.junit.Assert.assertEquals("'" + str54 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str54, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + instanceStatus59 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus59.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
    }

    @Test
    public void test04263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04263");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str4 = myDataCenterInstanceConfig1.getNamespace();
        boolean boolean5 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig1.getDataCenterInfo();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo7 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str8 = myDataCenterInstanceConfig1.getAppname();
        java.lang.String str9 = myDataCenterInstanceConfig1.getStatusPageUrl();
        java.lang.String str10 = myDataCenterInstanceConfig1.getAppGroupName();
        java.lang.String str11 = myDataCenterInstanceConfig1.getSecureHealthCheckUrl();
        int int12 = myDataCenterInstanceConfig1.getLeaseExpirationDurationInSeconds();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertNotNull(dataCenterInfo7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "unknown" + "'", str8, "unknown");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "unknown" + "'", str10, "unknown");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 90 + "'", int12 == 90);
    }

    @Test
    public void test04264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04264");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setNamespace("na");
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder6.setLastDirtyTimestamp(1636105969900L);
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder16.setSecureVIPAddress("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder16.setSecureVIPAddressDeser("na");
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder16.setPort((int) '#');
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder22.setNamespace("http:///HEALTHCHECK:80/Status");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test04265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04265");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig3.getDataCenterInfo();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig3);
        boolean boolean10 = myDataCenterInstanceConfig3.getSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager11 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager11.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig14 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int15 = myDataCenterInstanceConfig14.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo16 = myDataCenterInstanceConfig14.getDataCenterInfo();
        java.lang.String str17 = myDataCenterInstanceConfig14.getNamespace();
        boolean boolean18 = myDataCenterInstanceConfig14.isNonSecurePortEnabled();
        applicationInfoManager11.config = myDataCenterInstanceConfig14;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig20 = applicationInfoManager11.config;
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager11.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo22 = applicationInfoManager11.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType23 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo22.setActionType(actionType23);
        java.lang.String str25 = instanceInfo22.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType26 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo22.setActionType(actionType26);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager28 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig3, instanceInfo22);
        java.lang.String str29 = instanceInfo22.getAppGroupName();
        int int30 = instanceInfo22.getCountryId();
        com.netflix.appinfo.InstanceInfo.PortType portType31 = null;
        boolean boolean32 = instanceInfo22.isPortEnabled(portType31);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 30 + "'", int15 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig20);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertTrue("'" + actionType23 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType23.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UNKNOWN" + "'", str25, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + actionType26 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType26.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UNKNOWN" + "'", str29, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test04266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04266");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        java.lang.String str4 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        java.lang.String str5 = myDataCenterInstanceConfig1.getAppname();
        java.lang.String str6 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/healthcheck" + "'", str4, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "unknown" + "'", str5, "unknown");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "/Status" + "'", str6, "/Status");
    }

    @Test
    public void test04267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04267");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setNamespace("na");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder6.add("unknown", "UNKNOWN");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager18 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager18.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int22 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo23 = myDataCenterInstanceConfig21.getDataCenterInfo();
        java.lang.String str24 = myDataCenterInstanceConfig21.getNamespace();
        boolean boolean25 = myDataCenterInstanceConfig21.isNonSecurePortEnabled();
        applicationInfoManager18.config = myDataCenterInstanceConfig21;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig27 = applicationInfoManager18.config;
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager18.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager18.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType30 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo29.setActionType(actionType30);
        com.netflix.appinfo.LeaseInfo leaseInfo32 = null;
        instanceInfo29.setLeaseInfo(leaseInfo32);
        java.lang.String str34 = instanceInfo29.getSID();
        instanceInfo29.setSID("unknown");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager37 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo38 = applicationInfoManager37.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig40 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int41 = myDataCenterInstanceConfig40.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo42 = myDataCenterInstanceConfig40.getDataCenterInfo();
        java.lang.String str43 = myDataCenterInstanceConfig40.getNamespace();
        boolean boolean44 = myDataCenterInstanceConfig40.isNonSecurePortEnabled();
        applicationInfoManager37.config = myDataCenterInstanceConfig40;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig46 = applicationInfoManager37.config;
        com.netflix.appinfo.InstanceInfo instanceInfo47 = applicationInfoManager37.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo48 = applicationInfoManager37.instanceInfo;
        java.lang.Boolean boolean49 = instanceInfo48.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus50 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo48.setOverriddenStatus(instanceStatus50);
        instanceInfo29.setStatusWithoutDirty(instanceStatus50);
        com.netflix.appinfo.InstanceInfo.Builder builder53 = builder6.setOverriddenStatus(instanceStatus50);
        com.netflix.appinfo.InstanceInfo.Builder builder55 = builder53.setStatusPageUrlForDeser("http://hi!:35/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder57 = builder53.setSecurePort(97);
        com.netflix.appinfo.InstanceInfo.Builder builder59 = builder53.setHostName("unknown");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(applicationInfoManager18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 30 + "'", int22 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertTrue("'" + actionType30 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType30.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "na" + "'", str34, "na");
        org.junit.Assert.assertNotNull(applicationInfoManager37);
        org.junit.Assert.assertNotNull(instanceInfo38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 30 + "'", int41 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig46);
        org.junit.Assert.assertNotNull(instanceInfo47);
        org.junit.Assert.assertNotNull(instanceInfo48);
        org.junit.Assert.assertEquals("'" + boolean49 + "' != '" + false + "'", boolean49, false);
        org.junit.Assert.assertTrue("'" + instanceStatus50 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus50.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
    }

    @Test
    public void test04268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04268");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo instanceInfo5 = builder0.build();
        boolean boolean6 = builder0.isInitialized();
        com.netflix.appinfo.InstanceInfo instanceInfo7 = builder0.getRawInstance();
        com.netflix.appinfo.LeaseInfo leaseInfo8 = instanceInfo7.getLeaseInfo();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager9 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager9.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int13 = myDataCenterInstanceConfig12.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo14 = myDataCenterInstanceConfig12.getDataCenterInfo();
        java.lang.String str15 = myDataCenterInstanceConfig12.getNamespace();
        boolean boolean16 = myDataCenterInstanceConfig12.isNonSecurePortEnabled();
        applicationInfoManager9.config = myDataCenterInstanceConfig12;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig18 = applicationInfoManager9.config;
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager9.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager9.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType21 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo20.setActionType(actionType21);
        com.netflix.appinfo.LeaseInfo leaseInfo23 = null;
        instanceInfo20.setLeaseInfo(leaseInfo23);
        java.lang.String str25 = instanceInfo20.getSID();
        com.netflix.appinfo.InstanceInfo instanceInfo26 = new com.netflix.appinfo.InstanceInfo(instanceInfo20);
        long long27 = instanceInfo26.getLastUpdatedTimestamp();
        java.lang.String str28 = instanceInfo26.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder29 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder29.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder29.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder35 = builder29.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig36 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo37 = myDataCenterInstanceConfig36.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder35.setDataCenterInfo(dataCenterInfo37);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig39 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo40 = myDataCenterInstanceConfig39.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder41 = builder35.setDataCenterInfo(dataCenterInfo40);
        com.netflix.appinfo.InstanceInfo.Builder builder43 = builder41.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder46 = builder41.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder48 = builder41.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo instanceInfo49 = builder41.build();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager50 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo51 = applicationInfoManager50.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig53 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int54 = myDataCenterInstanceConfig53.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo55 = myDataCenterInstanceConfig53.getDataCenterInfo();
        java.lang.String str56 = myDataCenterInstanceConfig53.getNamespace();
        boolean boolean57 = myDataCenterInstanceConfig53.isNonSecurePortEnabled();
        applicationInfoManager50.config = myDataCenterInstanceConfig53;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig59 = applicationInfoManager50.config;
        com.netflix.appinfo.InstanceInfo instanceInfo60 = applicationInfoManager50.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo61 = applicationInfoManager50.instanceInfo;
        java.lang.Boolean boolean62 = instanceInfo61.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus63 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo61.setOverriddenStatus(instanceStatus63);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager65 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo66 = applicationInfoManager65.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig68 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int69 = myDataCenterInstanceConfig68.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo70 = myDataCenterInstanceConfig68.getDataCenterInfo();
        java.lang.String str71 = myDataCenterInstanceConfig68.getNamespace();
        boolean boolean72 = myDataCenterInstanceConfig68.isNonSecurePortEnabled();
        applicationInfoManager65.config = myDataCenterInstanceConfig68;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig74 = applicationInfoManager65.config;
        com.netflix.appinfo.InstanceInfo instanceInfo75 = applicationInfoManager65.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo76 = applicationInfoManager65.instanceInfo;
        java.lang.Boolean boolean77 = instanceInfo76.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus78 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo76.setOverriddenStatus(instanceStatus78);
        instanceInfo76.setLastDirtyTimestamp((java.lang.Long) (-1L));
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus82 = instanceInfo76.getOverriddenStatus();
        instanceInfo61.setOverriddenStatus(instanceStatus82);
        instanceInfo49.setStatus(instanceStatus82);
        instanceInfo26.setStatusWithoutDirty(instanceStatus82);
        instanceInfo7.setStatus(instanceStatus82);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(instanceInfo5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(instanceInfo7);
        org.junit.Assert.assertNull(leaseInfo8);
        org.junit.Assert.assertNotNull(applicationInfoManager9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 30 + "'", int13 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertTrue("'" + actionType21 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType21.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "unknown" + "'", str25, "unknown");
// flaky:         org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1636106124923L + "'", long27 == 1636106124923L);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str28, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(dataCenterInfo37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(dataCenterInfo40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(instanceInfo49);
        org.junit.Assert.assertNotNull(applicationInfoManager50);
        org.junit.Assert.assertNotNull(instanceInfo51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 30 + "'", int54 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig59);
        org.junit.Assert.assertNotNull(instanceInfo60);
        org.junit.Assert.assertNotNull(instanceInfo61);
        org.junit.Assert.assertEquals("'" + boolean62 + "' != '" + false + "'", boolean62, false);
        org.junit.Assert.assertTrue("'" + instanceStatus63 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus63.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(applicationInfoManager65);
        org.junit.Assert.assertNotNull(instanceInfo66);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 30 + "'", int69 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig74);
        org.junit.Assert.assertNotNull(instanceInfo75);
        org.junit.Assert.assertNotNull(instanceInfo76);
        org.junit.Assert.assertEquals("'" + boolean77 + "' != '" + false + "'", boolean77, false);
        org.junit.Assert.assertTrue("'" + instanceStatus78 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus78.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + instanceStatus82 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus82.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
    }

    @Test
    public void test04269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04269");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder2.setHealthCheckUrlsForDeser("unknown", "172.20.26.3");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        boolean boolean13 = myDataCenterInstanceConfig12.getSecurePortEnabled();
        java.lang.String str14 = myDataCenterInstanceConfig12.getHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo15 = myDataCenterInstanceConfig12.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder10.setDataCenterInfo(dataCenterInfo15);
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder10.setIPAddr("UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.setHealthCheckUrlsForDeser("/Status", "na");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder18.setSecurePort(0);
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder23.add("http://inesserver2.windows.cin.ufpe.br:80/", "HTTP://HI!:35/STATUS");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(dataCenterInfo15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
    }

    @Test
    public void test04270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04270");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo instanceInfo5 = builder0.build();
        instanceInfo5.setLastUpdatedTimestamp();
        java.util.Set<java.lang.String> strSet7 = instanceInfo5.getHealthCheckUrls();
        com.netflix.appinfo.LeaseInfo leaseInfo8 = null;
        instanceInfo5.setLeaseInfo(leaseInfo8);
        java.lang.Object obj10 = null;
        boolean boolean11 = instanceInfo5.equals(obj10);
        java.lang.String str12 = instanceInfo5.getAppName();
        java.lang.String str13 = instanceInfo5.getAppName();
        java.lang.String str14 = instanceInfo5.getSID();
        java.lang.String str15 = instanceInfo5.getHostName();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(instanceInfo5);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DEFAULT" + "'", str12, "DEFAULT");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "DEFAULT" + "'", str13, "DEFAULT");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "na" + "'", str14, "na");
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test04271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04271");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setCountryId(7002);
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder4.setSecurePort((int) (byte) 10);
        com.netflix.appinfo.InstanceInfo.PortType portType7 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder4.enablePort(portType7, false);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder9.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder11.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder11.setHostName("/");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + portType7 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType7.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
    }

    @Test
    public void test04272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04272");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        java.lang.Boolean boolean12 = instanceInfo11.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus13 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo11.setOverriddenStatus(instanceStatus13);
        int int15 = instanceInfo11.getSecurePort();
        java.lang.String str16 = instanceInfo11.getHostName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager17 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager17.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig20 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int21 = myDataCenterInstanceConfig20.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = myDataCenterInstanceConfig20.getDataCenterInfo();
        java.lang.String str23 = myDataCenterInstanceConfig20.getNamespace();
        boolean boolean24 = myDataCenterInstanceConfig20.isNonSecurePortEnabled();
        applicationInfoManager17.config = myDataCenterInstanceConfig20;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig26 = applicationInfoManager17.config;
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager17.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager17.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType29 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo28.setActionType(actionType29);
        com.netflix.appinfo.LeaseInfo leaseInfo31 = null;
        instanceInfo28.setLeaseInfo(leaseInfo31);
        java.lang.String str33 = instanceInfo28.getSID();
        com.netflix.appinfo.LeaseInfo leaseInfo34 = instanceInfo28.getLeaseInfo();
        boolean boolean35 = instanceInfo11.equals((java.lang.Object) instanceInfo28);
        java.lang.String str36 = instanceInfo28.getAppGroupName();
        com.netflix.appinfo.LeaseInfo leaseInfo37 = instanceInfo28.getLeaseInfo();
        instanceInfo28.setIsDirty(true);
        com.netflix.appinfo.InstanceInfo.ActionType actionType40 = instanceInfo28.getActionType();
        instanceInfo28.setLastDirtyTimestamp((java.lang.Long) 1636105969882L);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager43 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo44 = applicationInfoManager43.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig46 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int47 = myDataCenterInstanceConfig46.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo48 = myDataCenterInstanceConfig46.getDataCenterInfo();
        java.lang.String str49 = myDataCenterInstanceConfig46.getNamespace();
        boolean boolean50 = myDataCenterInstanceConfig46.isNonSecurePortEnabled();
        applicationInfoManager43.config = myDataCenterInstanceConfig46;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig52 = applicationInfoManager43.config;
        com.netflix.appinfo.InstanceInfo instanceInfo53 = applicationInfoManager43.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo54 = applicationInfoManager43.instanceInfo;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig55 = applicationInfoManager43.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager56 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo57 = applicationInfoManager56.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig59 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int60 = myDataCenterInstanceConfig59.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo61 = myDataCenterInstanceConfig59.getDataCenterInfo();
        java.lang.String str62 = myDataCenterInstanceConfig59.getNamespace();
        boolean boolean63 = myDataCenterInstanceConfig59.isNonSecurePortEnabled();
        applicationInfoManager56.config = myDataCenterInstanceConfig59;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig65 = applicationInfoManager56.config;
        com.netflix.appinfo.InstanceInfo instanceInfo66 = applicationInfoManager56.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo67 = applicationInfoManager56.instanceInfo;
        java.lang.Boolean boolean68 = instanceInfo67.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus69 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo67.setOverriddenStatus(instanceStatus69);
        applicationInfoManager43.instanceInfo = instanceInfo67;
        com.netflix.appinfo.LeaseInfo leaseInfo72 = instanceInfo67.getLeaseInfo();
        instanceInfo28.setLeaseInfo(leaseInfo72);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertTrue("'" + instanceStatus13 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus13.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 7002 + "'", int15 == 7002);
// flaky:         org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(applicationInfoManager17);
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 30 + "'", int21 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertTrue("'" + actionType29 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType29.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str33, "http://inesserver2.windows.cin.ufpe.br:80/Status");
        org.junit.Assert.assertNull(leaseInfo34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "/" + "'", str36, "/");
        org.junit.Assert.assertNull(leaseInfo37);
        org.junit.Assert.assertTrue("'" + actionType40 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType40.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager43);
        org.junit.Assert.assertNotNull(instanceInfo44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 30 + "'", int47 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig52);
        org.junit.Assert.assertNotNull(instanceInfo53);
        org.junit.Assert.assertNotNull(instanceInfo54);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig55);
        org.junit.Assert.assertNotNull(applicationInfoManager56);
        org.junit.Assert.assertNotNull(instanceInfo57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 30 + "'", int60 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig65);
        org.junit.Assert.assertNotNull(instanceInfo66);
        org.junit.Assert.assertNotNull(instanceInfo67);
        org.junit.Assert.assertEquals("'" + boolean68 + "' != '" + false + "'", boolean68, false);
        org.junit.Assert.assertTrue("'" + instanceStatus69 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus69.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNull(leaseInfo72);
    }

    @Test
    public void test04273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04273");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        int int9 = myDataCenterInstanceConfig3.getLeaseExpirationDurationInSeconds();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = myDataCenterInstanceConfig3.getMetadataMap();
        java.lang.String str11 = myDataCenterInstanceConfig3.getHealthCheckUrl();
        boolean boolean12 = myDataCenterInstanceConfig3.getSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager13 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager13.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig16 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int17 = myDataCenterInstanceConfig16.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig16.getDataCenterInfo();
        java.lang.String str19 = myDataCenterInstanceConfig16.getNamespace();
        boolean boolean20 = myDataCenterInstanceConfig16.isNonSecurePortEnabled();
        applicationInfoManager13.config = myDataCenterInstanceConfig16;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig22 = applicationInfoManager13.config;
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager13.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo24 = applicationInfoManager13.instanceInfo;
        int int25 = instanceInfo24.getSecurePort();
        int int26 = instanceInfo24.getPort();
        int int27 = instanceInfo24.getCountryId();
        boolean boolean28 = instanceInfo24.isDirty();
        int int29 = instanceInfo24.getPort();
        java.lang.String str30 = instanceInfo24.getASGName();
        java.lang.String str31 = instanceInfo24.getHomePageUrl();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager32 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig3, instanceInfo24);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus33 = instanceInfo24.getStatus();
        java.lang.String str34 = instanceInfo24.getIPAddr();
        int int35 = instanceInfo24.getCountryId();
        instanceInfo24.setIsCoordinatingDiscoveryServer();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 90 + "'", int9 == 90);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager13);
        org.junit.Assert.assertNotNull(instanceInfo14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig22);
        org.junit.Assert.assertNotNull(instanceInfo23);
        org.junit.Assert.assertNotNull(instanceInfo24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 443 + "'", int25 == 443);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 80 + "'", int26 == 80);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
// flaky:         org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 80 + "'", int29 == 80);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str31, "http://inesserver2.windows.cin.ufpe.br:80/");
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus33 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING + "'", instanceStatus33.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "172.20.26.3" + "'", str34, "172.20.26.3");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
    }

    @Test
    public void test04274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04274");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("http://inesserver2.windows.cin.ufpe.br:80/");
        java.lang.String str2 = myDataCenterInstanceConfig1.getNamespace();
        int int3 = myDataCenterInstanceConfig1.getLeaseExpirationDurationInSeconds();
        int int4 = myDataCenterInstanceConfig1.getSecurePort();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str2, "http://inesserver2.windows.cin.ufpe.br:80/");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 90 + "'", int3 == 90);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 443 + "'", int4 == 443);
    }

    @Test
    public void test04275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04275");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        com.netflix.appinfo.InstanceInfo instanceInfo6 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager7 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        int int11 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager7.config = myDataCenterInstanceConfig9;
        java.lang.String str13 = myDataCenterInstanceConfig9.getIpAddress();
        java.lang.String str14 = myDataCenterInstanceConfig9.getVirtualHostName();
        java.lang.String str16 = myDataCenterInstanceConfig9.getHostName(true);
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig9);
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder19 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo18);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager20 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager20.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig23 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int24 = myDataCenterInstanceConfig23.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = myDataCenterInstanceConfig23.getDataCenterInfo();
        java.lang.String str26 = myDataCenterInstanceConfig23.getNamespace();
        boolean boolean27 = myDataCenterInstanceConfig23.isNonSecurePortEnabled();
        applicationInfoManager20.config = myDataCenterInstanceConfig23;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig29 = applicationInfoManager20.config;
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager20.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager20.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType32 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo31.setActionType(actionType32);
        com.netflix.appinfo.LeaseInfo leaseInfo34 = null;
        instanceInfo31.setLeaseInfo(leaseInfo34);
        java.util.Set<java.lang.String> strSet36 = instanceInfo31.getHealthCheckUrls();
        java.lang.String str37 = instanceInfo31.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder38 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo31);
        com.netflix.appinfo.InstanceInfo.Builder builder41 = builder38.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder43 = builder38.setVIPAddressDeser("hi!");
        com.netflix.appinfo.LeaseInfo leaseInfo44 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder45 = builder38.setLeaseInfo(leaseInfo44);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus47 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("na");
        com.netflix.appinfo.InstanceInfo.Builder builder48 = builder45.setStatus(instanceStatus47);
        com.netflix.appinfo.InstanceInfo.Builder builder50 = builder48.setSID("172.20.26.3");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager51 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo52 = applicationInfoManager51.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig54 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int55 = myDataCenterInstanceConfig54.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo56 = myDataCenterInstanceConfig54.getDataCenterInfo();
        java.lang.String str57 = myDataCenterInstanceConfig54.getNamespace();
        boolean boolean58 = myDataCenterInstanceConfig54.isNonSecurePortEnabled();
        applicationInfoManager51.config = myDataCenterInstanceConfig54;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig60 = applicationInfoManager51.config;
        com.netflix.appinfo.InstanceInfo instanceInfo61 = applicationInfoManager51.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo62 = applicationInfoManager51.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType63 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo62.setActionType(actionType63);
        com.netflix.appinfo.LeaseInfo leaseInfo65 = null;
        instanceInfo62.setLeaseInfo(leaseInfo65);
        java.util.Set<java.lang.String> strSet67 = instanceInfo62.getHealthCheckUrls();
        java.lang.String str68 = instanceInfo62.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder69 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo62);
        com.netflix.appinfo.InstanceInfo.Builder builder72 = builder69.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder74 = builder69.setVIPAddressDeser("hi!");
        com.netflix.appinfo.InstanceInfo.PortType portType75 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder77 = builder74.enablePort(portType75, false);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager78 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo79 = applicationInfoManager78.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig81 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int82 = myDataCenterInstanceConfig81.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo83 = myDataCenterInstanceConfig81.getDataCenterInfo();
        java.lang.String str84 = myDataCenterInstanceConfig81.getNamespace();
        boolean boolean85 = myDataCenterInstanceConfig81.isNonSecurePortEnabled();
        applicationInfoManager78.config = myDataCenterInstanceConfig81;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig87 = applicationInfoManager78.config;
        com.netflix.appinfo.InstanceInfo instanceInfo88 = applicationInfoManager78.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo89 = applicationInfoManager78.instanceInfo;
        java.lang.Boolean boolean90 = instanceInfo89.isCoordinatingDiscoveryServer();
        java.lang.String str91 = instanceInfo89.getVIPAddress();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus92 = instanceInfo89.getOverriddenStatus();
        com.netflix.appinfo.InstanceInfo.Builder builder93 = builder77.setOverriddenStatus(instanceStatus92);
        com.netflix.appinfo.InstanceInfo.Builder builder94 = builder50.setStatus(instanceStatus92);
        boolean boolean95 = instanceInfo18.equals((java.lang.Object) builder94);
        java.lang.String str96 = instanceInfo18.getSecureVipAddress();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(instanceInfo6);
        org.junit.Assert.assertNotNull(applicationInfoManager7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "172.20.26.3" + "'", str13, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str14, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str16, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertNotNull(applicationInfoManager20);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 30 + "'", int24 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig29);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertTrue("'" + actionType32 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType32.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str37, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + instanceStatus47 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus47.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(applicationInfoManager51);
        org.junit.Assert.assertNotNull(instanceInfo52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig60);
        org.junit.Assert.assertNotNull(instanceInfo61);
        org.junit.Assert.assertNotNull(instanceInfo62);
        org.junit.Assert.assertTrue("'" + actionType63 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType63.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str68, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + portType75 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType75.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(applicationInfoManager78);
        org.junit.Assert.assertNotNull(instanceInfo79);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 30 + "'", int82 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig87);
        org.junit.Assert.assertNotNull(instanceInfo88);
        org.junit.Assert.assertNotNull(instanceInfo89);
        org.junit.Assert.assertEquals("'" + boolean90 + "' != '" + false + "'", boolean90, false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!" + "'", str91, "hi!");
        org.junit.Assert.assertTrue("'" + instanceStatus92 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus92.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertNotNull(builder94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNull(str96);
    }

    @Test
    public void test04276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04276");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig13 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int14 = myDataCenterInstanceConfig13.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo15 = myDataCenterInstanceConfig13.getDataCenterInfo();
        java.lang.String str17 = myDataCenterInstanceConfig13.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig13.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo18);
        java.lang.String str20 = myDataCenterInstanceConfig19.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = myDataCenterInstanceConfig19.getMetadataMap();
        applicationInfoManager0.registerAppMetadata(strMap21);
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.Builder builder24 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo23);
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder24.setNamespace("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder24.setNamespace("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS");
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder28.setAppName("/");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager31 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager31.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig34 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int35 = myDataCenterInstanceConfig34.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo36 = myDataCenterInstanceConfig34.getDataCenterInfo();
        java.lang.String str37 = myDataCenterInstanceConfig34.getNamespace();
        boolean boolean38 = myDataCenterInstanceConfig34.isNonSecurePortEnabled();
        applicationInfoManager31.config = myDataCenterInstanceConfig34;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig40 = applicationInfoManager31.config;
        com.netflix.appinfo.InstanceInfo instanceInfo41 = applicationInfoManager31.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo42 = applicationInfoManager31.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType43 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo42.setActionType(actionType43);
        java.lang.String str45 = instanceInfo42.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.Builder builder46 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo42);
        com.netflix.appinfo.InstanceInfo instanceInfo47 = builder46.build();
        java.lang.String str48 = instanceInfo47.getIPAddr();
        instanceInfo47.setLastDirtyTimestamp((java.lang.Long) 1636105970883L);
        instanceInfo47.setLastUpdatedTimestamp();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig53 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int54 = myDataCenterInstanceConfig53.getLeaseRenewalIntervalInSeconds();
        int int55 = myDataCenterInstanceConfig53.getLeaseRenewalIntervalInSeconds();
        java.lang.String str56 = myDataCenterInstanceConfig53.getStatusPageUrlPath();
        boolean boolean57 = myDataCenterInstanceConfig53.getSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager58 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo59 = applicationInfoManager58.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig61 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int62 = myDataCenterInstanceConfig61.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo63 = myDataCenterInstanceConfig61.getDataCenterInfo();
        java.lang.String str64 = myDataCenterInstanceConfig61.getNamespace();
        boolean boolean65 = myDataCenterInstanceConfig61.isNonSecurePortEnabled();
        applicationInfoManager58.config = myDataCenterInstanceConfig61;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig67 = applicationInfoManager58.config;
        com.netflix.appinfo.InstanceInfo instanceInfo68 = applicationInfoManager58.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo69 = applicationInfoManager58.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType70 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo69.setActionType(actionType70);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager72 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo73 = applicationInfoManager72.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig75 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int76 = myDataCenterInstanceConfig75.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo77 = myDataCenterInstanceConfig75.getDataCenterInfo();
        java.lang.String str78 = myDataCenterInstanceConfig75.getNamespace();
        boolean boolean79 = myDataCenterInstanceConfig75.isNonSecurePortEnabled();
        applicationInfoManager72.config = myDataCenterInstanceConfig75;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig81 = applicationInfoManager72.config;
        com.netflix.appinfo.InstanceInfo instanceInfo82 = applicationInfoManager72.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo83 = applicationInfoManager72.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType84 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo83.setActionType(actionType84);
        instanceInfo69.setActionType(actionType84);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager87 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig53, instanceInfo69);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus89 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("inesserver2.windows.cin.ufpe.br:80");
        instanceInfo69.setOverriddenStatus(instanceStatus89);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus92 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("/Status");
        instanceInfo69.setOverriddenStatus(instanceStatus92);
        com.netflix.appinfo.InstanceInfo instanceInfo94 = new com.netflix.appinfo.InstanceInfo(instanceInfo69);
        java.lang.String str95 = instanceInfo94.getStatusPageUrl();
        java.lang.String str96 = instanceInfo94.getSID();
        com.netflix.appinfo.InstanceInfo.ActionType actionType97 = instanceInfo94.getActionType();
        instanceInfo47.setActionType(actionType97);
        com.netflix.appinfo.InstanceInfo.Builder builder99 = builder30.setActionType(actionType97);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 30 + "'", int14 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(instanceInfo23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(applicationInfoManager31);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 30 + "'", int35 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig40);
        org.junit.Assert.assertNotNull(instanceInfo41);
        org.junit.Assert.assertNotNull(instanceInfo42);
        org.junit.Assert.assertTrue("'" + actionType43 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType43.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "UNKNOWN" + "'", str45, "UNKNOWN");
        org.junit.Assert.assertNotNull(instanceInfo47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "172.20.26.3" + "'", str48, "172.20.26.3");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 30 + "'", int54 == 30);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "/Status" + "'", str56, "/Status");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager58);
        org.junit.Assert.assertNotNull(instanceInfo59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 30 + "'", int62 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig67);
        org.junit.Assert.assertNotNull(instanceInfo68);
        org.junit.Assert.assertNotNull(instanceInfo69);
        org.junit.Assert.assertTrue("'" + actionType70 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType70.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager72);
        org.junit.Assert.assertNotNull(instanceInfo73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 30 + "'", int76 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig81);
        org.junit.Assert.assertNotNull(instanceInfo82);
        org.junit.Assert.assertNotNull(instanceInfo83);
        org.junit.Assert.assertTrue("'" + actionType84 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType84.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + instanceStatus89 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus89.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertTrue("'" + instanceStatus92 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus92.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str95, "http://inesserver2.windows.cin.ufpe.br:80/Status");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "172.20.26.3" + "'", str96, "172.20.26.3");
        org.junit.Assert.assertTrue("'" + actionType97 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType97.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(builder99);
    }

    @Test
    public void test04277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04277");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        java.lang.Boolean boolean12 = instanceInfo11.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus13 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo11.setOverriddenStatus(instanceStatus13);
        instanceInfo11.setLastDirtyTimestamp((java.lang.Long) (-1L));
        com.netflix.appinfo.DataCenterInfo dataCenterInfo17 = instanceInfo11.getDataCenterInfo();
        java.lang.String str18 = instanceInfo11.getStatusPageUrl();
        java.lang.String str19 = instanceInfo11.getVIPAddress();
        instanceInfo11.setIsCoordinatingDiscoveryServer();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertTrue("'" + instanceStatus13 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus13.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(dataCenterInfo17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str18, "http://inesserver2.windows.cin.ufpe.br:80/Status");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test04278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04278");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder8.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder8.setCountryId((-1));
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder14.setSID("UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder16.setVIPAddressDeser("DEFAULT");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager19 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager19.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig22 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int23 = myDataCenterInstanceConfig22.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo24 = myDataCenterInstanceConfig22.getDataCenterInfo();
        java.lang.String str25 = myDataCenterInstanceConfig22.getNamespace();
        boolean boolean26 = myDataCenterInstanceConfig22.isNonSecurePortEnabled();
        applicationInfoManager19.config = myDataCenterInstanceConfig22;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig28 = applicationInfoManager19.config;
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager19.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager19.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType31 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo30.setActionType(actionType31);
        com.netflix.appinfo.LeaseInfo leaseInfo33 = null;
        instanceInfo30.setLeaseInfo(leaseInfo33);
        java.util.Set<java.lang.String> strSet35 = instanceInfo30.getHealthCheckUrls();
        java.lang.String str36 = instanceInfo30.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder37 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo30);
        com.netflix.appinfo.InstanceInfo.Builder builder39 = builder37.setSecurePort(30);
        com.netflix.appinfo.InstanceInfo.Builder builder41 = builder39.setAppGroupName("");
        com.netflix.appinfo.InstanceInfo.Builder builder43 = builder39.setIPAddr("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder45 = builder43.setSecureVIPAddressDeser("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager46 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo47 = applicationInfoManager46.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig49 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int50 = myDataCenterInstanceConfig49.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo51 = myDataCenterInstanceConfig49.getDataCenterInfo();
        java.lang.String str52 = myDataCenterInstanceConfig49.getNamespace();
        boolean boolean53 = myDataCenterInstanceConfig49.isNonSecurePortEnabled();
        applicationInfoManager46.config = myDataCenterInstanceConfig49;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig55 = applicationInfoManager46.config;
        com.netflix.appinfo.InstanceInfo instanceInfo56 = applicationInfoManager46.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo57 = applicationInfoManager46.instanceInfo;
        java.lang.Boolean boolean58 = instanceInfo57.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus59 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo57.setOverriddenStatus(instanceStatus59);
        int int61 = instanceInfo57.getSecurePort();
        java.lang.String str62 = instanceInfo57.getHostName();
        java.util.Map<java.lang.String, java.lang.String> strMap63 = instanceInfo57.getMetadata();
        instanceInfo57.setIsDirty(false);
        com.netflix.appinfo.LeaseInfo leaseInfo66 = instanceInfo57.getLeaseInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder67 = builder45.setLeaseInfo(leaseInfo66);
        com.netflix.appinfo.InstanceInfo.Builder builder68 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder70 = builder68.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder72 = builder68.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder74 = builder68.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig75 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo76 = myDataCenterInstanceConfig75.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder77 = builder74.setDataCenterInfo(dataCenterInfo76);
        com.netflix.appinfo.InstanceInfo.Builder builder79 = builder74.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder81 = builder74.setLastDirtyTimestamp((long) (short) 10);
        com.netflix.appinfo.InstanceInfo.Builder builder83 = builder74.setSecureVIPAddressDeser("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo.ActionType actionType84 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        com.netflix.appinfo.InstanceInfo.Builder builder85 = builder83.setActionType(actionType84);
        com.netflix.appinfo.InstanceInfo.Builder builder86 = builder45.setActionType(actionType84);
        com.netflix.appinfo.InstanceInfo.Builder builder87 = builder16.setActionType(actionType84);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(applicationInfoManager19);
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 30 + "'", int23 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig28);
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertTrue("'" + actionType31 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType31.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str36, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(applicationInfoManager46);
        org.junit.Assert.assertNotNull(instanceInfo47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 30 + "'", int50 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig55);
        org.junit.Assert.assertNotNull(instanceInfo56);
        org.junit.Assert.assertNotNull(instanceInfo57);
        org.junit.Assert.assertEquals("'" + boolean58 + "' != '" + true + "'", boolean58, true);
        org.junit.Assert.assertTrue("'" + instanceStatus59 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus59.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str62, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNull(leaseInfo66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(dataCenterInfo76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertTrue("'" + actionType84 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType84.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
    }

    @Test
    public void test04279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04279");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        java.lang.String str6 = myDataCenterInstanceConfig2.getIpAddress();
        java.lang.String str7 = myDataCenterInstanceConfig2.getVirtualHostName();
        java.lang.String str8 = myDataCenterInstanceConfig2.getHomePageUrl();
        java.lang.String str9 = myDataCenterInstanceConfig2.getSecureHealthCheckUrl();
        boolean boolean10 = myDataCenterInstanceConfig2.isNonSecurePortEnabled();
        java.lang.String str11 = myDataCenterInstanceConfig2.getStatusPageUrlPath();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "172.20.26.3" + "'", str6, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str7, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/Status" + "'", str11, "/Status");
    }

    @Test
    public void test04280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04280");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        java.lang.Boolean boolean12 = instanceInfo11.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus13 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo11.setOverriddenStatus(instanceStatus13);
        java.lang.String str15 = instanceInfo11.getSID();
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        instanceInfo11.setIsCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        int int19 = instanceInfo11.getSecurePort();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + true + "'", boolean12, true);
        org.junit.Assert.assertTrue("'" + instanceStatus13 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus13.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "172.20.26.3" + "'", str15, "172.20.26.3");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 30 + "'", int19 == 30);
    }

    @Test
    public void test04281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04281");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        java.lang.String str12 = instanceInfo11.getHomePageUrl();
        com.netflix.appinfo.InstanceInfo.Builder builder13 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str12, "http://inesserver2.windows.cin.ufpe.br:80/");
    }

    @Test
    public void test04282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04282");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        com.netflix.appinfo.InstanceInfo instanceInfo6 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int9 = myDataCenterInstanceConfig8.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo10 = myDataCenterInstanceConfig8.getDataCenterInfo();
        java.lang.String str11 = myDataCenterInstanceConfig8.getHealthCheckUrl();
        int int12 = myDataCenterInstanceConfig8.getLeaseExpirationDurationInSeconds();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig15 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int16 = myDataCenterInstanceConfig15.getLeaseRenewalIntervalInSeconds();
        int int17 = myDataCenterInstanceConfig15.getLeaseRenewalIntervalInSeconds();
        java.lang.String str18 = myDataCenterInstanceConfig15.getStatusPageUrlPath();
        boolean boolean19 = myDataCenterInstanceConfig15.getSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager20 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager20.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig23 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int24 = myDataCenterInstanceConfig23.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = myDataCenterInstanceConfig23.getDataCenterInfo();
        java.lang.String str26 = myDataCenterInstanceConfig23.getNamespace();
        boolean boolean27 = myDataCenterInstanceConfig23.isNonSecurePortEnabled();
        applicationInfoManager20.config = myDataCenterInstanceConfig23;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig29 = applicationInfoManager20.config;
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager20.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager20.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType32 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo31.setActionType(actionType32);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager34 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager34.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig37 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int38 = myDataCenterInstanceConfig37.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo39 = myDataCenterInstanceConfig37.getDataCenterInfo();
        java.lang.String str40 = myDataCenterInstanceConfig37.getNamespace();
        boolean boolean41 = myDataCenterInstanceConfig37.isNonSecurePortEnabled();
        applicationInfoManager34.config = myDataCenterInstanceConfig37;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig43 = applicationInfoManager34.config;
        com.netflix.appinfo.InstanceInfo instanceInfo44 = applicationInfoManager34.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo45 = applicationInfoManager34.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType46 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo45.setActionType(actionType46);
        instanceInfo31.setActionType(actionType46);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager49 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig15, instanceInfo31);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus51 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("inesserver2.windows.cin.ufpe.br:80");
        instanceInfo31.setOverriddenStatus(instanceStatus51);
        applicationInfoManager0.setInstanceStatus(instanceStatus51);
        com.netflix.appinfo.InstanceInfo instanceInfo54 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig55 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo56 = applicationInfoManager0.instanceInfo;
        instanceInfo56.setIsCoordinatingDiscoveryServer();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(instanceInfo6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 30 + "'", int9 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 90 + "'", int12 == 90);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 30 + "'", int16 == 30);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/Status" + "'", str18, "/Status");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager20);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 30 + "'", int24 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig29);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertTrue("'" + actionType32 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType32.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager34);
        org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 30 + "'", int38 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig43);
        org.junit.Assert.assertNotNull(instanceInfo44);
        org.junit.Assert.assertNotNull(instanceInfo45);
        org.junit.Assert.assertTrue("'" + actionType46 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType46.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + instanceStatus51 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus51.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(instanceInfo54);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig55);
        org.junit.Assert.assertNotNull(instanceInfo56);
    }

    @Test
    public void test04283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04283");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus14 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("na");
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder6.setStatus(instanceStatus14);
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder6.setHomePageUrlForDeser("na");
        java.lang.Class<?> wildcardClass18 = builder17.getClass();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + instanceStatus14 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus14.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test04284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04284");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager8 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int11 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        int int12 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager8.config = myDataCenterInstanceConfig10;
        java.lang.String str14 = myDataCenterInstanceConfig10.getIpAddress();
        java.lang.String str15 = myDataCenterInstanceConfig10.getHealthCheckUrl();
        java.lang.String str16 = myDataCenterInstanceConfig10.getStatusPageUrl();
        java.lang.String str17 = myDataCenterInstanceConfig10.getNamespace();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder2.setDataCenterInfo(dataCenterInfo18);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder2.setVIPAddressDeser("na");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setVIPAddress("http://inesserver2.windows.cin.ufpe.br:80/Status");
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder26 = builder23.setStatusPageUrl("http:///HEALTHCHECK:80/Status", "na");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(applicationInfoManager8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 30 + "'", int12 == 30);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "172.20.26.3" + "'", str14, "172.20.26.3");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
    }

    @Test
    public void test04285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04285");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = instanceInfo11.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType15 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType15);
        java.lang.String str17 = instanceInfo11.getHostName();
        int int18 = instanceInfo11.getPort();
        java.lang.String str19 = instanceInfo11.getId();
        instanceInfo11.setIsCoordinatingDiscoveryServer();
        boolean boolean21 = instanceInfo11.isDirty();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UNKNOWN" + "'", str14, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + actionType15 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType15.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 80 + "'", int18 == 80);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str19, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test04286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04286");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder8.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder8.setCountryId((-1));
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo16 = applicationInfoManager15.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig18 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int19 = myDataCenterInstanceConfig18.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo20 = myDataCenterInstanceConfig18.getDataCenterInfo();
        java.lang.String str21 = myDataCenterInstanceConfig18.getNamespace();
        boolean boolean22 = myDataCenterInstanceConfig18.isNonSecurePortEnabled();
        applicationInfoManager15.config = myDataCenterInstanceConfig18;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig24 = applicationInfoManager15.config;
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager15.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo26 = applicationInfoManager15.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType27 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo26.setActionType(actionType27);
        com.netflix.appinfo.LeaseInfo leaseInfo29 = null;
        instanceInfo26.setLeaseInfo(leaseInfo29);
        java.util.Set<java.lang.String> strSet31 = instanceInfo26.getHealthCheckUrls();
        java.lang.String str32 = instanceInfo26.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder33 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo26);
        com.netflix.appinfo.InstanceInfo.Builder builder36 = builder33.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder39 = builder33.add("na", "/");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager40 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo41 = applicationInfoManager40.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig43 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int44 = myDataCenterInstanceConfig43.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo45 = myDataCenterInstanceConfig43.getDataCenterInfo();
        java.lang.String str46 = myDataCenterInstanceConfig43.getNamespace();
        boolean boolean47 = myDataCenterInstanceConfig43.isNonSecurePortEnabled();
        applicationInfoManager40.config = myDataCenterInstanceConfig43;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig49 = applicationInfoManager40.config;
        com.netflix.appinfo.InstanceInfo instanceInfo50 = applicationInfoManager40.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo51 = applicationInfoManager40.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType52 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo51.setActionType(actionType52);
        com.netflix.appinfo.LeaseInfo leaseInfo54 = null;
        instanceInfo51.setLeaseInfo(leaseInfo54);
        java.util.Set<java.lang.String> strSet56 = instanceInfo51.getHealthCheckUrls();
        java.lang.String str57 = instanceInfo51.getId();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager58 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo59 = applicationInfoManager58.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig61 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int62 = myDataCenterInstanceConfig61.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo63 = myDataCenterInstanceConfig61.getDataCenterInfo();
        java.lang.String str64 = myDataCenterInstanceConfig61.getNamespace();
        boolean boolean65 = myDataCenterInstanceConfig61.isNonSecurePortEnabled();
        applicationInfoManager58.config = myDataCenterInstanceConfig61;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig67 = applicationInfoManager58.config;
        com.netflix.appinfo.InstanceInfo instanceInfo68 = applicationInfoManager58.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo69 = applicationInfoManager58.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType70 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo69.setActionType(actionType70);
        instanceInfo51.setActionType(actionType70);
        com.netflix.appinfo.InstanceInfo.Builder builder73 = builder33.setActionType(actionType70);
        com.netflix.appinfo.InstanceInfo.Builder builder74 = builder14.setActionType(actionType70);
        com.netflix.appinfo.InstanceInfo.Builder builder76 = builder74.setSecureVIPAddress("http:///:80/Status");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(applicationInfoManager15);
        org.junit.Assert.assertNotNull(instanceInfo16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 30 + "'", int19 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertTrue("'" + actionType27 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType27.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str32, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(applicationInfoManager40);
        org.junit.Assert.assertNotNull(instanceInfo41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 30 + "'", int44 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig49);
        org.junit.Assert.assertNotNull(instanceInfo50);
        org.junit.Assert.assertNotNull(instanceInfo51);
        org.junit.Assert.assertTrue("'" + actionType52 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType52.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str57, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager58);
        org.junit.Assert.assertNotNull(instanceInfo59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 30 + "'", int62 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig67);
        org.junit.Assert.assertNotNull(instanceInfo68);
        org.junit.Assert.assertNotNull(instanceInfo69);
        org.junit.Assert.assertTrue("'" + actionType70 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType70.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
    }

    @Test
    public void test04287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04287");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        java.lang.String str9 = myDataCenterInstanceConfig3.getSecureVirtualHostName();
        int int10 = myDataCenterInstanceConfig3.getLeaseExpirationDurationInSeconds();
        int int11 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        int int12 = myDataCenterInstanceConfig3.getNonSecurePort();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 90 + "'", int10 == 90);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 80 + "'", int12 == 80);
    }

    @Test
    public void test04288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04288");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("172.20.26.3");
        java.lang.String str5 = myDataCenterInstanceConfig4.getSecureHealthCheckUrl();
        int int6 = myDataCenterInstanceConfig4.getNonSecurePort();
        java.lang.String str7 = myDataCenterInstanceConfig4.getIpAddress();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = myDataCenterInstanceConfig4.getMetadataMap();
        applicationInfoManager0.registerAppMetadata(strMap8);
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("unknown");
        boolean boolean13 = myDataCenterInstanceConfig12.getSecurePortEnabled();
        boolean boolean14 = myDataCenterInstanceConfig12.getSecurePortEnabled();
        java.lang.String str15 = myDataCenterInstanceConfig12.getHealthCheckUrl();
        java.lang.String str16 = myDataCenterInstanceConfig12.getHealthCheckUrl();
        java.lang.String str17 = myDataCenterInstanceConfig12.getHomePageUrlPath();
        applicationInfoManager0.config = myDataCenterInstanceConfig12;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager19 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int22 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        int int23 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager19.config = myDataCenterInstanceConfig21;
        java.lang.String str25 = myDataCenterInstanceConfig21.getIpAddress();
        java.lang.String str26 = myDataCenterInstanceConfig21.getVirtualHostName();
        java.lang.String str28 = myDataCenterInstanceConfig21.getHostName(true);
        java.lang.String str29 = myDataCenterInstanceConfig21.getHealthCheckUrlPath();
        applicationInfoManager0.config = myDataCenterInstanceConfig21;
        java.lang.String str31 = myDataCenterInstanceConfig21.getHealthCheckUrlPath();
        int int32 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        java.lang.String str33 = myDataCenterInstanceConfig21.getVirtualHostName();
        java.lang.String str34 = myDataCenterInstanceConfig21.getStatusPageUrl();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertNotNull(instanceInfo2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 80 + "'", int6 == 80);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "172.20.26.3" + "'", str7, "172.20.26.3");
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/" + "'", str17, "/");
        org.junit.Assert.assertNotNull(applicationInfoManager19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 30 + "'", int22 == 30);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 30 + "'", int23 == 30);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "172.20.26.3" + "'", str25, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str26, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str28, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "/healthcheck" + "'", str29, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/healthcheck" + "'", str31, "/healthcheck");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 30 + "'", int32 == 30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str33, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test04289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04289");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = myDataCenterInstanceConfig1.getMetadataMap();
        java.lang.String str3 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        java.lang.String str5 = myDataCenterInstanceConfig1.getVirtualHostName();
        int int6 = myDataCenterInstanceConfig1.getNonSecurePort();
        boolean boolean7 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        boolean boolean8 = myDataCenterInstanceConfig1.isInstanceEnabledOnit();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "/healthcheck" + "'", str3, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/Status" + "'", str4, "/Status");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str5, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 80 + "'", int6 == 80);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test04290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04290");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        boolean boolean13 = instanceInfo11.isDirty();
        java.lang.String str14 = instanceInfo11.getHostName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType15 = instanceInfo11.getActionType();
        boolean boolean16 = instanceInfo11.isDirty();
        instanceInfo11.setSID("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus19 = null;
        instanceInfo11.setOverriddenStatus(instanceStatus19);
        com.netflix.appinfo.InstanceInfo instanceInfo21 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str14, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + actionType15 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType15.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test04291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04291");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("HTTP:///HEALTHCHECK:80/STATUS");
    }

    @Test
    public void test04292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04292");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        java.lang.Boolean boolean12 = instanceInfo11.isCoordinatingDiscoveryServer();
        java.lang.String str13 = instanceInfo11.getVIPAddress();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus14 = instanceInfo11.getOverriddenStatus();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo15 = instanceInfo11.getDataCenterInfo();
        java.lang.String str16 = instanceInfo11.getAppName();
        java.lang.String str17 = instanceInfo11.getAppGroupName();
        java.lang.String str18 = instanceInfo11.getHostName();
        instanceInfo11.setSID("inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + true + "'", boolean12, true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str13, "inesserver2.windows.cin.ufpe.br:80");
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus14 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus14.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(dataCenterInfo15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UNKNOWN" + "'", str16, "UNKNOWN");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UNKNOWN" + "'", str17, "UNKNOWN");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str18, "inesserver2.windows.cin.ufpe.br");
    }

    @Test
    public void test04293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04293");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        int int9 = myDataCenterInstanceConfig3.getLeaseExpirationDurationInSeconds();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = myDataCenterInstanceConfig3.getMetadataMap();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager11 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager11.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig14 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int15 = myDataCenterInstanceConfig14.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo16 = myDataCenterInstanceConfig14.getDataCenterInfo();
        java.lang.String str17 = myDataCenterInstanceConfig14.getNamespace();
        boolean boolean18 = myDataCenterInstanceConfig14.isNonSecurePortEnabled();
        applicationInfoManager11.config = myDataCenterInstanceConfig14;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig20 = applicationInfoManager11.config;
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager11.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int25 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig24.getDataCenterInfo();
        java.lang.String str28 = myDataCenterInstanceConfig24.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig24.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig30 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo29);
        java.lang.String str31 = myDataCenterInstanceConfig30.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = myDataCenterInstanceConfig30.getMetadataMap();
        applicationInfoManager11.registerAppMetadata(strMap32);
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager11.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager11.getInfo();
        java.util.Set<java.lang.String> strSet36 = instanceInfo35.getHealthCheckUrls();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager37 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo38 = applicationInfoManager37.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig40 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int41 = myDataCenterInstanceConfig40.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo42 = myDataCenterInstanceConfig40.getDataCenterInfo();
        java.lang.String str43 = myDataCenterInstanceConfig40.getNamespace();
        boolean boolean44 = myDataCenterInstanceConfig40.isNonSecurePortEnabled();
        applicationInfoManager37.config = myDataCenterInstanceConfig40;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig46 = applicationInfoManager37.config;
        com.netflix.appinfo.InstanceInfo instanceInfo47 = applicationInfoManager37.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo48 = applicationInfoManager37.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType49 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo48.setActionType(actionType49);
        com.netflix.appinfo.LeaseInfo leaseInfo51 = null;
        instanceInfo48.setLeaseInfo(leaseInfo51);
        java.util.Set<java.lang.String> strSet53 = instanceInfo48.getHealthCheckUrls();
        java.lang.String str54 = instanceInfo48.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder55 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo48);
        com.netflix.appinfo.InstanceInfo.Builder builder58 = builder55.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder60 = builder55.setVIPAddressDeser("hi!");
        com.netflix.appinfo.InstanceInfo.PortType portType61 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder63 = builder60.enablePort(portType61, false);
        boolean boolean64 = instanceInfo35.isPortEnabled(portType61);
        java.lang.String str65 = instanceInfo35.getHomePageUrl();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager66 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig3, instanceInfo35);
        com.netflix.appinfo.InstanceInfo instanceInfo67 = applicationInfoManager66.instanceInfo;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig68 = applicationInfoManager66.config;
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 90 + "'", int9 == 90);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(applicationInfoManager11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 30 + "'", int15 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig20);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 30 + "'", int25 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str28, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(applicationInfoManager37);
        org.junit.Assert.assertNotNull(instanceInfo38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 30 + "'", int41 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig46);
        org.junit.Assert.assertNotNull(instanceInfo47);
        org.junit.Assert.assertNotNull(instanceInfo48);
        org.junit.Assert.assertTrue("'" + actionType49 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType49.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str54, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + portType61 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType61.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str65, "http://inesserver2.windows.cin.ufpe.br:80/");
        org.junit.Assert.assertNotNull(instanceInfo67);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig68);
    }

    @Test
    public void test04294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04294");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str3 = myDataCenterInstanceConfig1.getVirtualHostName();
        java.lang.String str4 = myDataCenterInstanceConfig1.getSecureHealthCheckUrl();
        java.lang.String str5 = myDataCenterInstanceConfig1.getHomePageUrlPath();
        java.lang.String str7 = myDataCenterInstanceConfig1.getHostName(false);
        java.lang.String str8 = myDataCenterInstanceConfig1.getIpAddress();
        java.lang.String str9 = myDataCenterInstanceConfig1.getStatusPageUrl();
        java.lang.String str10 = myDataCenterInstanceConfig1.getStatusPageUrl();
        java.lang.String str11 = myDataCenterInstanceConfig1.getVirtualHostName();
        java.lang.String str12 = myDataCenterInstanceConfig1.getVirtualHostName();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str3, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/" + "'", str5, "/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str7, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "172.20.26.3" + "'", str8, "172.20.26.3");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str11, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str12, "inesserver2.windows.cin.ufpe.br:80");
    }

    @Test
    public void test04295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04295");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager18 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager18.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int22 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo23 = myDataCenterInstanceConfig21.getDataCenterInfo();
        java.lang.String str24 = myDataCenterInstanceConfig21.getNamespace();
        boolean boolean25 = myDataCenterInstanceConfig21.isNonSecurePortEnabled();
        applicationInfoManager18.config = myDataCenterInstanceConfig21;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig27 = applicationInfoManager18.config;
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager18.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager18.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType30 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo29.setActionType(actionType30);
        instanceInfo11.setActionType(actionType30);
        com.netflix.appinfo.InstanceInfo.PortType portType33 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        boolean boolean34 = instanceInfo11.isPortEnabled(portType33);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager35 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        boolean boolean36 = instanceInfo11.equals((java.lang.Object) applicationInfoManager35);
        java.lang.String str37 = instanceInfo11.getStatusPageUrl();
        instanceInfo11.setIsDirty(false);
        com.netflix.appinfo.LeaseInfo leaseInfo40 = instanceInfo11.getLeaseInfo();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager41 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo42 = applicationInfoManager41.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig44 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int45 = myDataCenterInstanceConfig44.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo46 = myDataCenterInstanceConfig44.getDataCenterInfo();
        java.lang.String str47 = myDataCenterInstanceConfig44.getNamespace();
        boolean boolean48 = myDataCenterInstanceConfig44.isNonSecurePortEnabled();
        applicationInfoManager41.config = myDataCenterInstanceConfig44;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig50 = applicationInfoManager41.config;
        com.netflix.appinfo.InstanceInfo instanceInfo51 = applicationInfoManager41.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig54 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int55 = myDataCenterInstanceConfig54.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo56 = myDataCenterInstanceConfig54.getDataCenterInfo();
        java.lang.String str58 = myDataCenterInstanceConfig54.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo59 = myDataCenterInstanceConfig54.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig60 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo59);
        java.lang.String str61 = myDataCenterInstanceConfig60.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap62 = myDataCenterInstanceConfig60.getMetadataMap();
        applicationInfoManager41.registerAppMetadata(strMap62);
        com.netflix.appinfo.InstanceInfo instanceInfo64 = applicationInfoManager41.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo65 = applicationInfoManager41.getInfo();
        java.util.Set<java.lang.String> strSet66 = instanceInfo65.getHealthCheckUrls();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager67 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo68 = applicationInfoManager67.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig70 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int71 = myDataCenterInstanceConfig70.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo72 = myDataCenterInstanceConfig70.getDataCenterInfo();
        java.lang.String str73 = myDataCenterInstanceConfig70.getNamespace();
        boolean boolean74 = myDataCenterInstanceConfig70.isNonSecurePortEnabled();
        applicationInfoManager67.config = myDataCenterInstanceConfig70;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig76 = applicationInfoManager67.config;
        com.netflix.appinfo.InstanceInfo instanceInfo77 = applicationInfoManager67.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo78 = applicationInfoManager67.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType79 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo78.setActionType(actionType79);
        com.netflix.appinfo.LeaseInfo leaseInfo81 = null;
        instanceInfo78.setLeaseInfo(leaseInfo81);
        java.util.Set<java.lang.String> strSet83 = instanceInfo78.getHealthCheckUrls();
        java.lang.String str84 = instanceInfo78.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder85 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo78);
        com.netflix.appinfo.InstanceInfo.Builder builder88 = builder85.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder90 = builder85.setVIPAddressDeser("hi!");
        com.netflix.appinfo.InstanceInfo.PortType portType91 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder93 = builder90.enablePort(portType91, false);
        boolean boolean94 = instanceInfo65.isPortEnabled(portType91);
        boolean boolean95 = instanceInfo11.isPortEnabled(portType91);
        com.netflix.appinfo.LeaseInfo leaseInfo96 = instanceInfo11.getLeaseInfo();
        java.lang.String str97 = instanceInfo11.getAppGroupName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 30 + "'", int22 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertTrue("'" + actionType30 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType30.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + portType33 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType33.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str37, "http://inesserver2.windows.cin.ufpe.br:80/Status");
        org.junit.Assert.assertNull(leaseInfo40);
        org.junit.Assert.assertNotNull(applicationInfoManager41);
        org.junit.Assert.assertNotNull(instanceInfo42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig50);
        org.junit.Assert.assertNotNull(instanceInfo51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str58, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(instanceInfo64);
        org.junit.Assert.assertNotNull(instanceInfo65);
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertNotNull(applicationInfoManager67);
        org.junit.Assert.assertNotNull(instanceInfo68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 30 + "'", int71 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig76);
        org.junit.Assert.assertNotNull(instanceInfo77);
        org.junit.Assert.assertNotNull(instanceInfo78);
        org.junit.Assert.assertTrue("'" + actionType79 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType79.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str84, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertTrue("'" + portType91 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType91.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNull(leaseInfo96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "UNKNOWN" + "'", str97, "UNKNOWN");
    }

    @Test
    public void test04296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04296");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        boolean boolean13 = instanceInfo11.isDirty();
        java.lang.String str14 = instanceInfo11.getHostName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType15 = instanceInfo11.getActionType();
        boolean boolean16 = instanceInfo11.isDirty();
        instanceInfo11.setSID("http://inesserver2.windows.cin.ufpe.br:80/Status");
        int int19 = instanceInfo11.getCountryId();
        java.lang.String str20 = instanceInfo11.getId();
        java.lang.String str21 = instanceInfo11.getAppGroupName();
        java.lang.String str22 = instanceInfo11.getVIPAddress();
        com.netflix.appinfo.LeaseInfo leaseInfo23 = instanceInfo11.getLeaseInfo();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str14, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + actionType15 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType15.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str20, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UNKNOWN" + "'", str21, "UNKNOWN");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNull(leaseInfo23);
    }

    @Test
    public void test04297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04297");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder18.setVIPAddressDeser("hi!");
        com.netflix.appinfo.LeaseInfo leaseInfo24 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder18.setLeaseInfo(leaseInfo24);
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder25.setHomePageUrlForDeser("/");
        com.netflix.appinfo.InstanceInfo.Builder builder28 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder28.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder28.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder28.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig35 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo36 = myDataCenterInstanceConfig35.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder37 = builder34.setDataCenterInfo(dataCenterInfo36);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig38 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo39 = myDataCenterInstanceConfig38.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder34.setDataCenterInfo(dataCenterInfo39);
        com.netflix.appinfo.InstanceInfo.Builder builder42 = builder34.setSecureVIPAddressDeser("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo43 = builder34.build();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager44 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo45 = applicationInfoManager44.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig47 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int48 = myDataCenterInstanceConfig47.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo49 = myDataCenterInstanceConfig47.getDataCenterInfo();
        java.lang.String str50 = myDataCenterInstanceConfig47.getNamespace();
        boolean boolean51 = myDataCenterInstanceConfig47.isNonSecurePortEnabled();
        applicationInfoManager44.config = myDataCenterInstanceConfig47;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig53 = applicationInfoManager44.config;
        com.netflix.appinfo.InstanceInfo instanceInfo54 = applicationInfoManager44.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo55 = applicationInfoManager44.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType56 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo55.setActionType(actionType56);
        com.netflix.appinfo.LeaseInfo leaseInfo58 = null;
        instanceInfo55.setLeaseInfo(leaseInfo58);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager60 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo61 = applicationInfoManager60.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig63 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int64 = myDataCenterInstanceConfig63.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo65 = myDataCenterInstanceConfig63.getDataCenterInfo();
        java.lang.String str66 = myDataCenterInstanceConfig63.getNamespace();
        boolean boolean67 = myDataCenterInstanceConfig63.isNonSecurePortEnabled();
        applicationInfoManager60.config = myDataCenterInstanceConfig63;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig69 = applicationInfoManager60.config;
        com.netflix.appinfo.InstanceInfo instanceInfo70 = applicationInfoManager60.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo71 = applicationInfoManager60.instanceInfo;
        int int72 = instanceInfo71.getSecurePort();
        boolean boolean73 = instanceInfo71.isDirty();
        java.lang.String str74 = instanceInfo71.getHostName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus75 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        instanceInfo71.setStatus(instanceStatus75);
        com.netflix.appinfo.InstanceInfo.PortType portType77 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean78 = instanceInfo71.isPortEnabled(portType77);
        boolean boolean79 = instanceInfo55.isPortEnabled(portType77);
        com.netflix.appinfo.InstanceInfo.Builder builder81 = builder34.enablePort(portType77, false);
        com.netflix.appinfo.InstanceInfo.Builder builder83 = builder25.enablePort(portType77, false);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig87 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int88 = myDataCenterInstanceConfig87.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo89 = myDataCenterInstanceConfig87.getDataCenterInfo();
        java.lang.String str91 = myDataCenterInstanceConfig87.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo92 = myDataCenterInstanceConfig87.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig93 = new com.netflix.appinfo.MyDataCenterInstanceConfig("UNKNOWN", dataCenterInfo92);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig94 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo92);
        com.netflix.appinfo.InstanceInfo.Builder builder95 = builder83.setDataCenterInfo(dataCenterInfo92);
        com.netflix.appinfo.InstanceInfo.Builder builder97 = builder95.setIPAddr("http://hi!:97/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(dataCenterInfo36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(dataCenterInfo39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(instanceInfo43);
        org.junit.Assert.assertNotNull(applicationInfoManager44);
        org.junit.Assert.assertNotNull(instanceInfo45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 30 + "'", int48 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig53);
        org.junit.Assert.assertNotNull(instanceInfo54);
        org.junit.Assert.assertNotNull(instanceInfo55);
        org.junit.Assert.assertTrue("'" + actionType56 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType56.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager60);
        org.junit.Assert.assertNotNull(instanceInfo61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 30 + "'", int64 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig69);
        org.junit.Assert.assertNotNull(instanceInfo70);
        org.junit.Assert.assertNotNull(instanceInfo71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 443 + "'", int72 == 443);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str74, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + instanceStatus75 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus75.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertTrue("'" + portType77 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType77.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 30 + "'", int88 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo89);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str91, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo92);
        org.junit.Assert.assertNotNull(builder95);
        org.junit.Assert.assertNotNull(builder97);
    }

    @Test
    public void test04298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04298");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder6.setLastDirtyTimestamp((long) (short) 10);
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder13.setSecurePort((int) (short) -1);
        com.netflix.appinfo.InstanceInfo.ActionType actionType16 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder13.setActionType(actionType16);
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder17.setNamespace("http://default:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder17.setHealthCheckUrls("default", "", "http://default:80/Status");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager24 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager24.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig27 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int28 = myDataCenterInstanceConfig27.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig27.getDataCenterInfo();
        java.lang.String str30 = myDataCenterInstanceConfig27.getNamespace();
        boolean boolean31 = myDataCenterInstanceConfig27.isNonSecurePortEnabled();
        applicationInfoManager24.config = myDataCenterInstanceConfig27;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig33 = applicationInfoManager24.config;
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager24.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager24.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType36 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo35.setActionType(actionType36);
        java.lang.String str38 = instanceInfo35.getVersion();
        java.lang.String str39 = instanceInfo35.getIPAddr();
        instanceInfo35.setLastUpdatedTimestamp();
        java.lang.String str41 = instanceInfo35.getVersion();
        boolean boolean42 = instanceInfo35.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager43 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo44 = applicationInfoManager43.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig46 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int47 = myDataCenterInstanceConfig46.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo48 = myDataCenterInstanceConfig46.getDataCenterInfo();
        java.lang.String str49 = myDataCenterInstanceConfig46.getNamespace();
        boolean boolean50 = myDataCenterInstanceConfig46.isNonSecurePortEnabled();
        applicationInfoManager43.config = myDataCenterInstanceConfig46;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig52 = applicationInfoManager43.config;
        com.netflix.appinfo.InstanceInfo instanceInfo53 = applicationInfoManager43.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo54 = applicationInfoManager43.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType55 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo54.setActionType(actionType55);
        java.lang.String str57 = instanceInfo54.getVersion();
        java.lang.String str58 = instanceInfo54.getIPAddr();
        instanceInfo54.setLastUpdatedTimestamp();
        java.lang.String str60 = instanceInfo54.getVersion();
        java.lang.String str61 = instanceInfo54.getHomePageUrl();
        int int62 = instanceInfo54.getCountryId();
        java.lang.String str63 = instanceInfo54.getVIPAddress();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager64 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo65 = applicationInfoManager64.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig67 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int68 = myDataCenterInstanceConfig67.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo69 = myDataCenterInstanceConfig67.getDataCenterInfo();
        java.lang.String str70 = myDataCenterInstanceConfig67.getNamespace();
        boolean boolean71 = myDataCenterInstanceConfig67.isNonSecurePortEnabled();
        applicationInfoManager64.config = myDataCenterInstanceConfig67;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig73 = applicationInfoManager64.config;
        com.netflix.appinfo.InstanceInfo instanceInfo74 = applicationInfoManager64.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo75 = applicationInfoManager64.instanceInfo;
        int int76 = instanceInfo75.getSecurePort();
        boolean boolean77 = instanceInfo75.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo78 = new com.netflix.appinfo.InstanceInfo(instanceInfo75);
        java.lang.String str79 = instanceInfo78.getHostName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus80 = instanceInfo78.getStatus();
        instanceInfo54.setOverriddenStatus(instanceStatus80);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo82 = instanceInfo54.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.ActionType actionType83 = instanceInfo54.getActionType();
        instanceInfo35.setActionType(actionType83);
        com.netflix.appinfo.InstanceInfo.Builder builder85 = builder17.setActionType(actionType83);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + actionType16 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType16.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(applicationInfoManager24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 30 + "'", int28 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertTrue("'" + actionType36 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType36.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "unknown" + "'", str38, "unknown");
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "172.20.26.3" + "'", str39, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "unknown" + "'", str41, "unknown");
// flaky:         org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager43);
        org.junit.Assert.assertNotNull(instanceInfo44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 30 + "'", int47 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig52);
        org.junit.Assert.assertNotNull(instanceInfo53);
        org.junit.Assert.assertNotNull(instanceInfo54);
        org.junit.Assert.assertTrue("'" + actionType55 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType55.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "unknown" + "'", str57, "unknown");
// flaky:         org.junit.Assert.assertEquals("'" + str58 + "' != '" + "172.20.26.3" + "'", str58, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "unknown" + "'", str60, "unknown");
// flaky:         org.junit.Assert.assertEquals("'" + str61 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str61, "http://inesserver2.windows.cin.ufpe.br:80/");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
// flaky:         org.junit.Assert.assertEquals("'" + str63 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str63, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNotNull(applicationInfoManager64);
        org.junit.Assert.assertNotNull(instanceInfo65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 30 + "'", int68 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig73);
        org.junit.Assert.assertNotNull(instanceInfo74);
        org.junit.Assert.assertNotNull(instanceInfo75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 443 + "'", int76 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str79, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus80 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING + "'", instanceStatus80.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING));
        org.junit.Assert.assertNotNull(dataCenterInfo82);
        org.junit.Assert.assertTrue("'" + actionType83 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType83.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(builder85);
    }

    @Test
    public void test04299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04299");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        int int3 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        boolean boolean5 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        com.netflix.appinfo.InstanceInfo instanceInfo6 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager7 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo6);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = myDataCenterInstanceConfig1.getMetadataMap();
        java.lang.String str10 = myDataCenterInstanceConfig1.getHostName(false);
        java.lang.String str11 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        java.lang.String str12 = myDataCenterInstanceConfig1.getAppname();
        java.lang.String str13 = myDataCenterInstanceConfig1.getHomePageUrl();
        java.lang.String str14 = myDataCenterInstanceConfig1.getASGName();
        boolean boolean15 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        int int16 = myDataCenterInstanceConfig1.getNonSecurePort();
        java.lang.String str17 = myDataCenterInstanceConfig1.getHomePageUrl();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/Status" + "'", str4, "/Status");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str10, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/healthcheck" + "'", str11, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "unknown" + "'", str12, "unknown");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 80 + "'", int16 == 80);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test04300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04300");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        int int3 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        boolean boolean5 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        com.netflix.appinfo.InstanceInfo instanceInfo6 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager7 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo6);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig9.getDataCenterInfo();
        java.lang.String str12 = myDataCenterInstanceConfig9.getNamespace();
        applicationInfoManager7.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig9);
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager7;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo16 = applicationInfoManager15.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig18 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int19 = myDataCenterInstanceConfig18.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo20 = myDataCenterInstanceConfig18.getDataCenterInfo();
        java.lang.String str21 = myDataCenterInstanceConfig18.getNamespace();
        boolean boolean22 = myDataCenterInstanceConfig18.isNonSecurePortEnabled();
        applicationInfoManager15.config = myDataCenterInstanceConfig18;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig24 = applicationInfoManager15.config;
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager15.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo26 = applicationInfoManager15.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType27 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo26.setActionType(actionType27);
        java.lang.String str29 = instanceInfo26.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.Builder builder30 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo26);
        com.netflix.appinfo.InstanceInfo instanceInfo31 = builder30.build();
        java.lang.String str32 = instanceInfo31.getIPAddr();
        java.lang.String str33 = instanceInfo31.getHostName();
        applicationInfoManager7.instanceInfo = instanceInfo31;
        com.netflix.appinfo.InstanceInfo.Builder builder35 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder37 = builder35.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder37.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo41 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder42 = builder37.setLeaseInfo(leaseInfo41);
        com.netflix.appinfo.InstanceInfo.Builder builder45 = builder37.setHealthCheckUrlsForDeser("unknown", "172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder47 = builder45.setAppName("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder49 = builder47.setSecureVIPAddress("172.20.26.3");
        com.netflix.appinfo.InstanceInfo instanceInfo50 = builder47.build();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus51 = instanceInfo50.getStatus();
        applicationInfoManager7.setInstanceStatus(instanceStatus51);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager53 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig55 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int56 = myDataCenterInstanceConfig55.getLeaseRenewalIntervalInSeconds();
        int int57 = myDataCenterInstanceConfig55.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager53.config = myDataCenterInstanceConfig55;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig59 = applicationInfoManager53.config;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig61 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.util.Map<java.lang.String, java.lang.String> strMap62 = myDataCenterInstanceConfig61.getMetadataMap();
        applicationInfoManager53.config = myDataCenterInstanceConfig61;
        java.lang.String str64 = myDataCenterInstanceConfig61.getAppGroupName();
        java.util.Map<java.lang.String, java.lang.String> strMap65 = myDataCenterInstanceConfig61.getMetadataMap();
        java.lang.String str66 = myDataCenterInstanceConfig61.getHealthCheckUrlPath();
        boolean boolean67 = myDataCenterInstanceConfig61.getSecurePortEnabled();
        java.util.Map<java.lang.String, java.lang.String> strMap68 = myDataCenterInstanceConfig61.getMetadataMap();
        applicationInfoManager7.registerAppMetadata(strMap68);
        com.netflix.appinfo.InstanceInfo instanceInfo70 = applicationInfoManager7.getInfo();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/Status" + "'", str4, "/Status");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(applicationInfoManager15);
        org.junit.Assert.assertNotNull(instanceInfo16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 30 + "'", int19 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertTrue("'" + actionType27 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType27.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UNKNOWN" + "'", str29, "UNKNOWN");
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "172.20.26.3" + "'", str32, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str33, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(instanceInfo50);
        org.junit.Assert.assertTrue("'" + instanceStatus51 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UP + "'", instanceStatus51.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UP));
        org.junit.Assert.assertNotNull(applicationInfoManager53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 30 + "'", int56 == 30);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 30 + "'", int57 == 30);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig59);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "unknown" + "'", str64, "unknown");
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "/healthcheck" + "'", str66, "/healthcheck");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(instanceInfo70);
    }

    @Test
    public void test04301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04301");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder0.setHostName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder0.setStatusPageUrl("http://inesserver2.windows.cin.ufpe.br:80/", "unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder0.setHealthCheckUrls("UNKNOWN", "/Status", "default");
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder15.add("unknown", "http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.setHomePageUrl("http://inesserver2.windows.cin.ufpe.br:10/Status", "HTTP:///HEALTHCHECK:80/STATUS");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder21);
    }

    @Test
    public void test04302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04302");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.PortType portType21 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder18.enablePort(portType21, true);
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder23.setHomePageUrl("UNKNOWN", "hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder26.setLastDirtyTimestamp(1636106011344L);
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder26.setCountryId(35);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + portType21 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType21.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
    }

    @Test
    public void test04303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04303");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str2 = myDataCenterInstanceConfig1.getIpAddress();
        java.lang.String str3 = myDataCenterInstanceConfig1.getASGName();
        boolean boolean4 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        int int5 = myDataCenterInstanceConfig1.getLeaseExpirationDurationInSeconds();
        boolean boolean6 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        int int7 = myDataCenterInstanceConfig1.getNonSecurePort();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig1.getDataCenterInfo();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "172.20.26.3" + "'", str2, "172.20.26.3");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 90 + "'", int5 == 90);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 80 + "'", int7 == 80);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
    }

    @Test
    public void test04304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04304");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder2.setHealthCheckUrlsForDeser("unknown", "172.20.26.3");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        boolean boolean13 = myDataCenterInstanceConfig12.getSecurePortEnabled();
        java.lang.String str14 = myDataCenterInstanceConfig12.getHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo15 = myDataCenterInstanceConfig12.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder10.setDataCenterInfo(dataCenterInfo15);
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder16.setAppGroupName("INESSERVER2.WINDOWS.CIN.UFPE.BR");
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder16.setSecureVIPAddress("172.20.26.3");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager21 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo22 = applicationInfoManager21.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int25 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig24.getDataCenterInfo();
        java.lang.String str27 = myDataCenterInstanceConfig24.getNamespace();
        boolean boolean28 = myDataCenterInstanceConfig24.isNonSecurePortEnabled();
        applicationInfoManager21.config = myDataCenterInstanceConfig24;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig30 = applicationInfoManager21.config;
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager21.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager21.instanceInfo;
        int int33 = instanceInfo32.getSecurePort();
        boolean boolean34 = instanceInfo32.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = new com.netflix.appinfo.InstanceInfo(instanceInfo32);
        long long36 = instanceInfo35.getLastUpdatedTimestamp();
        java.lang.Boolean boolean37 = instanceInfo35.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.ActionType actionType38 = instanceInfo35.getActionType();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo39 = instanceInfo35.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder16.setDataCenterInfo(dataCenterInfo39);
        com.netflix.appinfo.InstanceInfo.Builder builder42 = builder16.setSecureVIPAddressDeser("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(dataCenterInfo15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(applicationInfoManager21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 30 + "'", int25 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 443 + "'", int33 == 443);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1636106125662L + "'", long36 == 1636106125662L);
        org.junit.Assert.assertEquals("'" + boolean37 + "' != '" + false + "'", boolean37, false);
        org.junit.Assert.assertTrue("'" + actionType38 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType38.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(dataCenterInfo39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
    }

    @Test
    public void test04305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04305");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        java.lang.String str6 = myDataCenterInstanceConfig2.getIpAddress();
        java.lang.String str7 = myDataCenterInstanceConfig2.getHealthCheckUrl();
        java.lang.String str8 = myDataCenterInstanceConfig2.getNamespace();
        int int9 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        java.lang.String str11 = myDataCenterInstanceConfig2.getHostName(true);
        java.lang.String str12 = myDataCenterInstanceConfig2.getIpAddress();
        int int13 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        java.lang.String str14 = myDataCenterInstanceConfig2.getHealthCheckUrl();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "172.20.26.3" + "'", str6, "172.20.26.3");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 30 + "'", int9 == 30);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str11, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "172.20.26.3" + "'", str12, "172.20.26.3");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 30 + "'", int13 == 30);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test04306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04306");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        boolean boolean13 = instanceInfo11.isDirty();
        boolean boolean14 = instanceInfo11.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo15 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        java.lang.Boolean boolean16 = instanceInfo11.isCoordinatingDiscoveryServer();
        java.lang.String str17 = instanceInfo11.getVIPAddress();
        instanceInfo11.setIsCoordinatingDiscoveryServer();
        java.lang.String str19 = instanceInfo11.getSecureVipAddress();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + false + "'", boolean16, false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str17, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test04307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04307");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager3 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo4 = applicationInfoManager3.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig6 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int7 = myDataCenterInstanceConfig6.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig6.getDataCenterInfo();
        java.lang.String str9 = myDataCenterInstanceConfig6.getNamespace();
        boolean boolean10 = myDataCenterInstanceConfig6.isNonSecurePortEnabled();
        applicationInfoManager3.config = myDataCenterInstanceConfig6;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig12 = applicationInfoManager3.config;
        com.netflix.appinfo.InstanceInfo instanceInfo13 = applicationInfoManager3.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager3.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType15 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo14.setActionType(actionType15);
        com.netflix.appinfo.LeaseInfo leaseInfo17 = null;
        instanceInfo14.setLeaseInfo(leaseInfo17);
        java.util.Set<java.lang.String> strSet19 = instanceInfo14.getHealthCheckUrls();
        java.lang.String str20 = instanceInfo14.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder21 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo14);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder21.setHomePageUrlForDeser("");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager26 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager26.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig29 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int30 = myDataCenterInstanceConfig29.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo31 = myDataCenterInstanceConfig29.getDataCenterInfo();
        java.lang.String str32 = myDataCenterInstanceConfig29.getNamespace();
        boolean boolean33 = myDataCenterInstanceConfig29.isNonSecurePortEnabled();
        applicationInfoManager26.config = myDataCenterInstanceConfig29;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig35 = applicationInfoManager26.config;
        com.netflix.appinfo.InstanceInfo instanceInfo36 = applicationInfoManager26.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo37 = applicationInfoManager26.instanceInfo;
        int int38 = instanceInfo37.getSecurePort();
        boolean boolean39 = instanceInfo37.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager40 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo41 = applicationInfoManager40.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig43 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int44 = myDataCenterInstanceConfig43.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo45 = myDataCenterInstanceConfig43.getDataCenterInfo();
        java.lang.String str46 = myDataCenterInstanceConfig43.getNamespace();
        boolean boolean47 = myDataCenterInstanceConfig43.isNonSecurePortEnabled();
        applicationInfoManager40.config = myDataCenterInstanceConfig43;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig49 = applicationInfoManager40.config;
        com.netflix.appinfo.InstanceInfo instanceInfo50 = applicationInfoManager40.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo51 = applicationInfoManager40.instanceInfo;
        int int52 = instanceInfo51.getSecurePort();
        com.netflix.appinfo.InstanceInfo.PortType portType53 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean54 = instanceInfo51.isPortEnabled(portType53);
        boolean boolean55 = instanceInfo37.isPortEnabled(portType53);
        com.netflix.appinfo.InstanceInfo.Builder builder57 = builder21.enablePort(portType53, true);
        com.netflix.appinfo.InstanceInfo.Builder builder59 = builder2.enablePort(portType53, false);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus61 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo.Builder builder62 = builder2.setStatus(instanceStatus61);
        com.netflix.appinfo.InstanceInfo.Builder builder64 = builder2.setIPAddr("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder66 = builder64.setLastDirtyTimestamp(0L);
        com.netflix.appinfo.InstanceInfo.Builder builder68 = builder66.setSecurePort((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder72 = builder66.setHealthCheckUrls("HTTP:///HEALTHCHECK:80/STATUS", "http://hi!:97/Status", "HTTP://HI!:35/STATUS");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(applicationInfoManager3);
        org.junit.Assert.assertNotNull(instanceInfo4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 30 + "'", int7 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig12);
        org.junit.Assert.assertNotNull(instanceInfo13);
        org.junit.Assert.assertNotNull(instanceInfo14);
        org.junit.Assert.assertTrue("'" + actionType15 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType15.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str20, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(applicationInfoManager26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 30 + "'", int30 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig35);
        org.junit.Assert.assertNotNull(instanceInfo36);
        org.junit.Assert.assertNotNull(instanceInfo37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 443 + "'", int38 == 443);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(applicationInfoManager40);
        org.junit.Assert.assertNotNull(instanceInfo41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 30 + "'", int44 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig49);
        org.junit.Assert.assertNotNull(instanceInfo50);
        org.junit.Assert.assertNotNull(instanceInfo51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 443 + "'", int52 == 443);
        org.junit.Assert.assertTrue("'" + portType53 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType53.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + instanceStatus61 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus61.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder68);
    }

    @Test
    public void test04308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04308");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder2.setHealthCheckUrlsForDeser("unknown", "172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder10.setAppName("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo instanceInfo13 = builder12.build();
        java.lang.String str14 = instanceInfo13.getId();
        instanceInfo13.setIsDirty(true);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig18 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int19 = myDataCenterInstanceConfig18.getLeaseRenewalIntervalInSeconds();
        int int20 = myDataCenterInstanceConfig18.getLeaseRenewalIntervalInSeconds();
        java.lang.String str21 = myDataCenterInstanceConfig18.getStatusPageUrlPath();
        boolean boolean22 = myDataCenterInstanceConfig18.getSecurePortEnabled();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = myDataCenterInstanceConfig18.getMetadataMap();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = myDataCenterInstanceConfig18.getMetadataMap();
        java.lang.String str25 = myDataCenterInstanceConfig18.getHomePageUrlPath();
        boolean boolean26 = instanceInfo13.equals((java.lang.Object) str25);
        long long27 = instanceInfo13.getLastUpdatedTimestamp();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(instanceInfo13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 30 + "'", int19 == 30);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 30 + "'", int20 == 30);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "/Status" + "'", str21, "/Status");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/" + "'", str25, "/");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1636106125788L + "'", long27 == 1636106125788L);
    }

    @Test
    public void test04309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04309");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        int int6 = myDataCenterInstanceConfig3.getLeaseExpirationDurationInSeconds();
        java.lang.String str7 = myDataCenterInstanceConfig3.getHomePageUrlPath();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager10 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager10.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig13 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int14 = myDataCenterInstanceConfig13.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo15 = myDataCenterInstanceConfig13.getDataCenterInfo();
        java.lang.String str16 = myDataCenterInstanceConfig13.getNamespace();
        boolean boolean17 = myDataCenterInstanceConfig13.isNonSecurePortEnabled();
        applicationInfoManager10.config = myDataCenterInstanceConfig13;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig19 = applicationInfoManager10.config;
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager10.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager10.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType22 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo21.setActionType(actionType22);
        applicationInfoManager0.instanceInfo = instanceInfo21;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager25 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo26 = applicationInfoManager25.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig28 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int29 = myDataCenterInstanceConfig28.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo30 = myDataCenterInstanceConfig28.getDataCenterInfo();
        java.lang.String str31 = myDataCenterInstanceConfig28.getNamespace();
        boolean boolean32 = myDataCenterInstanceConfig28.isNonSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo33 = myDataCenterInstanceConfig28.getDataCenterInfo();
        applicationInfoManager25.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig28);
        boolean boolean35 = myDataCenterInstanceConfig28.isInstanceEnabledOnit();
        boolean boolean36 = myDataCenterInstanceConfig28.isInstanceEnabledOnit();
        int int37 = myDataCenterInstanceConfig28.getSecurePort();
        java.lang.String str38 = myDataCenterInstanceConfig28.getASGName();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo39 = myDataCenterInstanceConfig28.getDataCenterInfo();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig28);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager41 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo42 = applicationInfoManager41.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig44 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int45 = myDataCenterInstanceConfig44.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo46 = myDataCenterInstanceConfig44.getDataCenterInfo();
        java.lang.String str47 = myDataCenterInstanceConfig44.getNamespace();
        boolean boolean48 = myDataCenterInstanceConfig44.isNonSecurePortEnabled();
        applicationInfoManager41.config = myDataCenterInstanceConfig44;
        int int50 = myDataCenterInstanceConfig44.getLeaseExpirationDurationInSeconds();
        java.util.Map<java.lang.String, java.lang.String> strMap51 = myDataCenterInstanceConfig44.getMetadataMap();
        java.lang.String str52 = myDataCenterInstanceConfig44.getHealthCheckUrl();
        java.lang.String str53 = myDataCenterInstanceConfig44.getASGName();
        com.netflix.appinfo.InstanceInfo.Builder builder54 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder56 = builder54.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder58 = builder54.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder60 = builder54.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig61 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo62 = myDataCenterInstanceConfig61.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder63 = builder60.setDataCenterInfo(dataCenterInfo62);
        com.netflix.appinfo.InstanceInfo.Builder builder65 = builder60.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo instanceInfo66 = builder65.getRawInstance();
        java.lang.String str67 = instanceInfo66.getSID();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager68 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig44, instanceInfo66);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo69 = myDataCenterInstanceConfig44.getDataCenterInfo();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig44);
        java.lang.String str71 = myDataCenterInstanceConfig44.getHomePageUrlPath();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 90 + "'", int6 == 90);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/" + "'", str7, "/");
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(applicationInfoManager10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 30 + "'", int14 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig19);
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertTrue("'" + actionType22 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType22.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 30 + "'", int29 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 443 + "'", int37 == 443);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(dataCenterInfo39);
        org.junit.Assert.assertNotNull(applicationInfoManager41);
        org.junit.Assert.assertNotNull(instanceInfo42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 90 + "'", int50 == 90);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(dataCenterInfo62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(instanceInfo66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "na" + "'", str67, "na");
        org.junit.Assert.assertNotNull(dataCenterInfo69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "/" + "'", str71, "/");
    }

    @Test
    public void test04310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04310");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str4 = myDataCenterInstanceConfig1.getNamespace();
        boolean boolean5 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        java.lang.String str6 = myDataCenterInstanceConfig1.getIpAddress();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = myDataCenterInstanceConfig1.getMetadataMap();
        boolean boolean8 = myDataCenterInstanceConfig1.isInstanceEnabledOnit();
        int int9 = myDataCenterInstanceConfig1.getNonSecurePort();
        java.lang.String str10 = myDataCenterInstanceConfig1.getSecureHealthCheckUrl();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "172.20.26.3" + "'", str6, "172.20.26.3");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 80 + "'", int9 == 80);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test04311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04311");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        boolean boolean13 = instanceInfo11.isDirty();
        java.lang.String str14 = instanceInfo11.getHostName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType15 = instanceInfo11.getActionType();
        java.lang.String str16 = instanceInfo11.getHostName();
        java.lang.String str17 = instanceInfo11.getASGName();
        int int18 = instanceInfo11.getCountryId();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus19 = com.netflix.appinfo.InstanceInfo.InstanceStatus.UP;
        instanceInfo11.setStatusWithoutDirty(instanceStatus19);
        int int21 = instanceInfo11.getSecurePort();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig23 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int24 = myDataCenterInstanceConfig23.getLeaseRenewalIntervalInSeconds();
        int int25 = myDataCenterInstanceConfig23.getLeaseRenewalIntervalInSeconds();
        java.lang.String str26 = myDataCenterInstanceConfig23.getStatusPageUrlPath();
        boolean boolean27 = myDataCenterInstanceConfig23.getSecurePortEnabled();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager29 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig23, instanceInfo28);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig31 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int32 = myDataCenterInstanceConfig31.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo33 = myDataCenterInstanceConfig31.getDataCenterInfo();
        java.lang.String str34 = myDataCenterInstanceConfig31.getNamespace();
        applicationInfoManager29.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig31);
        java.lang.String str36 = myDataCenterInstanceConfig31.getNamespace();
        int int37 = myDataCenterInstanceConfig31.getSecurePort();
        java.lang.String str38 = myDataCenterInstanceConfig31.getHomePageUrl();
        boolean boolean39 = instanceInfo11.equals((java.lang.Object) str38);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7002 + "'", int12 == 7002);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "172.20.26.3" + "'", str14, "172.20.26.3");
        org.junit.Assert.assertNull(actionType15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "172.20.26.3" + "'", str16, "172.20.26.3");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + instanceStatus19 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UP + "'", instanceStatus19.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UP));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 7002 + "'", int21 == 7002);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 30 + "'", int24 == 30);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 30 + "'", int25 == 30);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/Status" + "'", str26, "/Status");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 30 + "'", int32 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 443 + "'", int37 == 443);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test04312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04312");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder2.setHealthCheckUrlsForDeser("unknown", "172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder2.setAppName("/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo13 = builder2.build();
        java.lang.String str14 = instanceInfo13.getSecureVipAddress();
        instanceInfo13.setLastDirtyTimestamp((java.lang.Long) 1636106092510L);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(instanceInfo13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "/healthcheck" + "'", str14, "/healthcheck");
    }

    @Test
    public void test04313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04313");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder18.setHealthCheckUrlsForDeser("", "hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setLastDirtyTimestamp((long) 443);
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder23.setAppGroupName("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder23.setHomePageUrlForDeser("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder23.setHealthCheckUrls("HTTP://HI!:80/STATUS", "http://inesserver2.windows.cin.ufpe.br:10/Status", "http://hi!:80/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder33);
    }

    @Test
    public void test04314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04314");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig13 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int14 = myDataCenterInstanceConfig13.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo15 = myDataCenterInstanceConfig13.getDataCenterInfo();
        java.lang.String str17 = myDataCenterInstanceConfig13.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig13.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig("UNKNOWN", dataCenterInfo18);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig20 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo18);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo18);
        java.lang.String str22 = myDataCenterInstanceConfig21.getIpAddress();
        applicationInfoManager0.config = myDataCenterInstanceConfig21;
        java.lang.String str24 = myDataCenterInstanceConfig21.getSecureHealthCheckUrl();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 30 + "'", int14 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "172.20.26.3" + "'", str22, "172.20.26.3");
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test04315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04315");
        java.lang.String[] strArray3 = new java.lang.String[] { "HTTP://HI!:80/STATUS", "na", "http://hi!:80/Status" };
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager4 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo5 = applicationInfoManager4.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int8 = myDataCenterInstanceConfig7.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo9 = myDataCenterInstanceConfig7.getDataCenterInfo();
        java.lang.String str10 = myDataCenterInstanceConfig7.getNamespace();
        boolean boolean11 = myDataCenterInstanceConfig7.isNonSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo12 = myDataCenterInstanceConfig7.getDataCenterInfo();
        applicationInfoManager4.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig7);
        boolean boolean14 = myDataCenterInstanceConfig7.getSecurePortEnabled();
        java.lang.String str15 = myDataCenterInstanceConfig7.getSecureHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo16 = myDataCenterInstanceConfig7.getDataCenterInfo();
        java.lang.String str17 = myDataCenterInstanceConfig7.getAppGroupName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager18 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager18.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int22 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo23 = myDataCenterInstanceConfig21.getDataCenterInfo();
        java.lang.String str24 = myDataCenterInstanceConfig21.getNamespace();
        boolean boolean25 = myDataCenterInstanceConfig21.isNonSecurePortEnabled();
        applicationInfoManager18.config = myDataCenterInstanceConfig21;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig27 = applicationInfoManager18.config;
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager18.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager18.instanceInfo;
        java.lang.String str30 = instanceInfo29.getHomePageUrl();
        com.netflix.appinfo.LeaseInfo leaseInfo31 = null;
        instanceInfo29.setLeaseInfo(leaseInfo31);
        com.netflix.appinfo.InstanceInfo.Builder builder33 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder35 = builder33.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder37 = builder33.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder39 = builder33.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig40 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo41 = myDataCenterInstanceConfig40.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder42 = builder39.setDataCenterInfo(dataCenterInfo41);
        com.netflix.appinfo.InstanceInfo.Builder builder44 = builder39.setHostName("172.20.26.3");
        boolean boolean45 = instanceInfo29.equals((java.lang.Object) "172.20.26.3");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager46 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig7, instanceInfo29);
        java.lang.String str47 = com.netflix.appinfo.InstanceInfo.getZone(strArray3, instanceInfo29);
        com.netflix.appinfo.InstanceInfo.ActionType actionType48 = instanceInfo29.getActionType();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(applicationInfoManager4);
        org.junit.Assert.assertNotNull(instanceInfo5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(dataCenterInfo16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "unknown" + "'", str17, "unknown");
        org.junit.Assert.assertNotNull(applicationInfoManager18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 30 + "'", int22 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str30, "http://inesserver2.windows.cin.ufpe.br:80/");
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(dataCenterInfo41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "HTTP://HI!:80/STATUS" + "'", str47, "HTTP://HI!:80/STATUS");
        org.junit.Assert.assertNull(actionType48);
    }

    @Test
    public void test04316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04316");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str3 = myDataCenterInstanceConfig1.getNamespace();
        java.lang.String str4 = myDataCenterInstanceConfig1.getNamespace();
        java.lang.String str5 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        java.lang.String str6 = myDataCenterInstanceConfig1.getASGName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager7 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo8 = applicationInfoManager7.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int11 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo12 = myDataCenterInstanceConfig10.getDataCenterInfo();
        java.lang.String str13 = myDataCenterInstanceConfig10.getNamespace();
        boolean boolean14 = myDataCenterInstanceConfig10.isNonSecurePortEnabled();
        applicationInfoManager7.config = myDataCenterInstanceConfig10;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig16 = applicationInfoManager7.config;
        com.netflix.appinfo.InstanceInfo instanceInfo17 = applicationInfoManager7.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager7.instanceInfo;
        int int19 = instanceInfo18.getSecurePort();
        boolean boolean20 = instanceInfo18.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo21 = new com.netflix.appinfo.InstanceInfo(instanceInfo18);
        com.netflix.appinfo.InstanceInfo instanceInfo22 = new com.netflix.appinfo.InstanceInfo(instanceInfo18);
        java.lang.String str23 = instanceInfo18.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus24 = instanceInfo18.getStatus();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager25 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo18);
        boolean boolean26 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/healthcheck" + "'", str5, "/healthcheck");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(applicationInfoManager7);
        org.junit.Assert.assertNotNull(instanceInfo8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig16);
        org.junit.Assert.assertNotNull(instanceInfo17);
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 443 + "'", int19 == 443);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UNKNOWN" + "'", str23, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + instanceStatus24 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING + "'", instanceStatus24.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test04317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04317");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str4 = myDataCenterInstanceConfig1.getNamespace();
        boolean boolean5 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig1.getDataCenterInfo();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo7 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str8 = myDataCenterInstanceConfig1.getAppname();
        int int9 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str10 = myDataCenterInstanceConfig1.getIpAddress();
        java.lang.String str11 = myDataCenterInstanceConfig1.getNamespace();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = myDataCenterInstanceConfig1.getMetadataMap();
        java.lang.Class<?> wildcardClass13 = myDataCenterInstanceConfig1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertNotNull(dataCenterInfo7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "unknown" + "'", str8, "unknown");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 30 + "'", int9 == 30);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "172.20.26.3" + "'", str10, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test04318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04318");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setNamespace("na");
        com.netflix.appinfo.InstanceInfo instanceInfo15 = builder6.build();
        int int16 = instanceInfo15.getSecurePort();
        boolean boolean17 = instanceInfo15.isDirty();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus18 = instanceInfo15.getOverriddenStatus();
        instanceInfo15.setIsDirty(false);
        instanceInfo15.setIsDirty(true);
        java.lang.String str23 = instanceInfo15.getHomePageUrl();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager24 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager24.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig27 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int28 = myDataCenterInstanceConfig27.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig27.getDataCenterInfo();
        java.lang.String str30 = myDataCenterInstanceConfig27.getNamespace();
        boolean boolean31 = myDataCenterInstanceConfig27.isNonSecurePortEnabled();
        applicationInfoManager24.config = myDataCenterInstanceConfig27;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig33 = applicationInfoManager24.config;
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager24.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager24.instanceInfo;
        int int36 = instanceInfo35.getSecurePort();
        boolean boolean37 = instanceInfo35.isDirty();
        boolean boolean38 = instanceInfo35.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo39 = new com.netflix.appinfo.InstanceInfo(instanceInfo35);
        java.lang.Boolean boolean40 = instanceInfo35.isCoordinatingDiscoveryServer();
        java.lang.String str41 = instanceInfo35.getVIPAddress();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus42 = com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING;
        instanceInfo35.setStatusWithoutDirty(instanceStatus42);
        instanceInfo15.setStatus(instanceStatus42);
        java.lang.String str45 = instanceInfo15.getSecureVipAddress();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 7002 + "'", int16 == 7002);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + instanceStatus18 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus18.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(applicationInfoManager24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 30 + "'", int28 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 443 + "'", int36 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + boolean40 + "' != '" + false + "'", boolean40, false);
// flaky:         org.junit.Assert.assertEquals("'" + str41 + "' != '" + "http:///:80/Status" + "'", str41, "http:///:80/Status");
        org.junit.Assert.assertTrue("'" + instanceStatus42 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING + "'", instanceStatus42.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/healthcheck" + "'", str45, "/healthcheck");
    }

    @Test
    public void test04319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04319");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig13 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int14 = myDataCenterInstanceConfig13.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo15 = myDataCenterInstanceConfig13.getDataCenterInfo();
        java.lang.String str17 = myDataCenterInstanceConfig13.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig13.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo18);
        java.lang.String str20 = myDataCenterInstanceConfig19.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = myDataCenterInstanceConfig19.getMetadataMap();
        applicationInfoManager0.registerAppMetadata(strMap21);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager23 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo24 = applicationInfoManager23.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig26 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int27 = myDataCenterInstanceConfig26.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo28 = myDataCenterInstanceConfig26.getDataCenterInfo();
        java.lang.String str29 = myDataCenterInstanceConfig26.getNamespace();
        boolean boolean30 = myDataCenterInstanceConfig26.isNonSecurePortEnabled();
        applicationInfoManager23.config = myDataCenterInstanceConfig26;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig32 = applicationInfoManager23.config;
        com.netflix.appinfo.InstanceInfo instanceInfo33 = applicationInfoManager23.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager23.instanceInfo;
        int int35 = instanceInfo34.getSecurePort();
        boolean boolean36 = instanceInfo34.isDirty();
        boolean boolean37 = instanceInfo34.isDirty();
        java.lang.String str38 = instanceInfo34.getVersion();
        applicationInfoManager0.instanceInfo = instanceInfo34;
        java.lang.String str40 = instanceInfo34.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus41 = instanceInfo34.getOverriddenStatus();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 30 + "'", int14 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(applicationInfoManager23);
        org.junit.Assert.assertNotNull(instanceInfo24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 30 + "'", int27 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 443 + "'", int35 == 443);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "unknown" + "'", str38, "unknown");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "UNKNOWN" + "'", str40, "UNKNOWN");
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus41 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus41.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
    }

    @Test
    public void test04320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04320");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        java.lang.Boolean boolean12 = instanceInfo11.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus13 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo11.setOverriddenStatus(instanceStatus13);
        int int15 = instanceInfo11.getSecurePort();
        java.lang.String str16 = instanceInfo11.getHostName();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = instanceInfo11.getMetadata();
        instanceInfo11.setIsDirty(false);
        com.netflix.appinfo.InstanceInfo instanceInfo20 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        instanceInfo20.setLastUpdatedTimestamp();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertTrue("'" + instanceStatus13 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus13.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 443 + "'", int15 == 443);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str16, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test04321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04321");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig1.getDataCenterInfo();
        int int4 = myDataCenterInstanceConfig1.getNonSecurePort();
        java.lang.String str5 = myDataCenterInstanceConfig1.getIpAddress();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager6 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int9 = myDataCenterInstanceConfig8.getLeaseRenewalIntervalInSeconds();
        int int10 = myDataCenterInstanceConfig8.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager6.config = myDataCenterInstanceConfig8;
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager6.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig14 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int15 = myDataCenterInstanceConfig14.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo16 = myDataCenterInstanceConfig14.getDataCenterInfo();
        java.lang.String str17 = myDataCenterInstanceConfig14.getHealthCheckUrl();
        int int18 = myDataCenterInstanceConfig14.getLeaseExpirationDurationInSeconds();
        applicationInfoManager6.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig14);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int22 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        int int23 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        java.lang.String str24 = myDataCenterInstanceConfig21.getStatusPageUrlPath();
        boolean boolean25 = myDataCenterInstanceConfig21.getSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager26 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager26.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig29 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int30 = myDataCenterInstanceConfig29.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo31 = myDataCenterInstanceConfig29.getDataCenterInfo();
        java.lang.String str32 = myDataCenterInstanceConfig29.getNamespace();
        boolean boolean33 = myDataCenterInstanceConfig29.isNonSecurePortEnabled();
        applicationInfoManager26.config = myDataCenterInstanceConfig29;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig35 = applicationInfoManager26.config;
        com.netflix.appinfo.InstanceInfo instanceInfo36 = applicationInfoManager26.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo37 = applicationInfoManager26.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType38 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo37.setActionType(actionType38);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager40 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo41 = applicationInfoManager40.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig43 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int44 = myDataCenterInstanceConfig43.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo45 = myDataCenterInstanceConfig43.getDataCenterInfo();
        java.lang.String str46 = myDataCenterInstanceConfig43.getNamespace();
        boolean boolean47 = myDataCenterInstanceConfig43.isNonSecurePortEnabled();
        applicationInfoManager40.config = myDataCenterInstanceConfig43;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig49 = applicationInfoManager40.config;
        com.netflix.appinfo.InstanceInfo instanceInfo50 = applicationInfoManager40.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo51 = applicationInfoManager40.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType52 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo51.setActionType(actionType52);
        instanceInfo37.setActionType(actionType52);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager55 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig21, instanceInfo37);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus57 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("inesserver2.windows.cin.ufpe.br:80");
        instanceInfo37.setOverriddenStatus(instanceStatus57);
        applicationInfoManager6.setInstanceStatus(instanceStatus57);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager60 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig62 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int63 = myDataCenterInstanceConfig62.getLeaseRenewalIntervalInSeconds();
        int int64 = myDataCenterInstanceConfig62.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager60.config = myDataCenterInstanceConfig62;
        java.lang.String str66 = myDataCenterInstanceConfig62.getHealthCheckUrlPath();
        java.lang.String str67 = myDataCenterInstanceConfig62.getNamespace();
        java.util.Map<java.lang.String, java.lang.String> strMap68 = myDataCenterInstanceConfig62.getMetadataMap();
        applicationInfoManager6.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig62);
        com.netflix.appinfo.InstanceInfo instanceInfo70 = applicationInfoManager6.instanceInfo;
        int int71 = instanceInfo70.getSecurePort();
        java.lang.String str72 = instanceInfo70.getASGName();
        int int73 = instanceInfo70.getPort();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager74 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo70);
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig75 = applicationInfoManager74.config;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 80 + "'", int4 == 80);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "172.20.26.3" + "'", str5, "172.20.26.3");
        org.junit.Assert.assertNotNull(applicationInfoManager6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 30 + "'", int9 == 30);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 30 + "'", int15 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 90 + "'", int18 == 90);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 30 + "'", int22 == 30);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 30 + "'", int23 == 30);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/Status" + "'", str24, "/Status");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 30 + "'", int30 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig35);
        org.junit.Assert.assertNotNull(instanceInfo36);
        org.junit.Assert.assertNotNull(instanceInfo37);
        org.junit.Assert.assertTrue("'" + actionType38 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType38.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager40);
        org.junit.Assert.assertNotNull(instanceInfo41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 30 + "'", int44 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig49);
        org.junit.Assert.assertNotNull(instanceInfo50);
        org.junit.Assert.assertNotNull(instanceInfo51);
        org.junit.Assert.assertTrue("'" + actionType52 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType52.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + instanceStatus57 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus57.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(applicationInfoManager60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 30 + "'", int63 == 30);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 30 + "'", int64 == 30);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "/healthcheck" + "'", str66, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(instanceInfo70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 443 + "'", int71 == 443);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 80 + "'", int73 == 80);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig75);
    }

    @Test
    public void test04322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04322");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager7 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo8 = applicationInfoManager7.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int11 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo12 = myDataCenterInstanceConfig10.getDataCenterInfo();
        java.lang.String str13 = myDataCenterInstanceConfig10.getNamespace();
        boolean boolean14 = myDataCenterInstanceConfig10.isNonSecurePortEnabled();
        applicationInfoManager7.config = myDataCenterInstanceConfig10;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig16 = applicationInfoManager7.config;
        com.netflix.appinfo.InstanceInfo instanceInfo17 = applicationInfoManager7.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager7.instanceInfo;
        int int19 = instanceInfo18.getSecurePort();
        boolean boolean20 = instanceInfo18.isDirty();
        java.lang.String str21 = instanceInfo18.getHostName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType22 = instanceInfo18.getActionType();
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder0.setActionType(actionType22);
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder0.setAppGroupName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder25.setLastDirtyTimestamp(1636105978968L);
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder25.setAppName("http://inesserver2.windows.cin.ufpe.br:10/Status");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(applicationInfoManager7);
        org.junit.Assert.assertNotNull(instanceInfo8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig16);
        org.junit.Assert.assertNotNull(instanceInfo17);
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 443 + "'", int19 == 443);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str21, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNull(actionType22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
    }

    @Test
    public void test04323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04323");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str3 = myDataCenterInstanceConfig1.getVirtualHostName();
        java.lang.String str4 = myDataCenterInstanceConfig1.getASGName();
        boolean boolean5 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        java.lang.String str6 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        java.lang.String str7 = myDataCenterInstanceConfig1.getHomePageUrl();
        boolean boolean8 = myDataCenterInstanceConfig1.isInstanceEnabledOnit();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str3, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "/healthcheck" + "'", str6, "/healthcheck");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test04324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04324");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        java.lang.String str4 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        java.lang.String str5 = myDataCenterInstanceConfig1.getHomePageUrlPath();
        java.lang.String str6 = myDataCenterInstanceConfig1.getNamespace();
        java.lang.String str7 = myDataCenterInstanceConfig1.getIpAddress();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str9 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/healthcheck" + "'", str4, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/" + "'", str5, "/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "172.20.26.3" + "'", str7, "172.20.26.3");
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/healthcheck" + "'", str9, "/healthcheck");
    }

    @Test
    public void test04325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04325");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        int int13 = instanceInfo11.getPort();
        int int14 = instanceInfo11.getCountryId();
        boolean boolean15 = instanceInfo11.isDirty();
        instanceInfo11.setIsDirty(false);
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setLastDirtyTimestamp(1636106046096L);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 80 + "'", int13 == 80);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test04326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04326");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder2.setHealthCheckUrlsForDeser("unknown", "172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder2.setLastDirtyTimestamp(1636105966016L);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder2.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder2.setNamespace("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS");
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder2.setHomePageUrlForDeser("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder2.setHealthCheckUrlsForDeser("unknown", "");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder2.setHealthCheckUrlsForDeser("/healthcheck", "/");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test04327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04327");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        int int13 = instanceInfo11.getPort();
        int int14 = instanceInfo11.getCountryId();
        boolean boolean15 = instanceInfo11.isDirty();
        int int16 = instanceInfo11.getPort();
        int int17 = instanceInfo11.getPort();
        com.netflix.appinfo.LeaseInfo leaseInfo18 = null;
        instanceInfo11.setLeaseInfo(leaseInfo18);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder20.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder20.setAppName("default");
        com.netflix.appinfo.InstanceInfo instanceInfo25 = builder20.build();
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder20.setIPAddr("http://hi!:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo28 = builder20.build();
        java.lang.String str29 = instanceInfo28.getHostName();
        com.netflix.appinfo.LeaseInfo leaseInfo30 = instanceInfo28.getLeaseInfo();
        instanceInfo28.setLastDirtyTimestamp((java.lang.Long) 1636105976220L);
        java.lang.String str33 = instanceInfo28.getHomePageUrl();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager34 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager34.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig37 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int38 = myDataCenterInstanceConfig37.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo39 = myDataCenterInstanceConfig37.getDataCenterInfo();
        java.lang.String str40 = myDataCenterInstanceConfig37.getNamespace();
        boolean boolean41 = myDataCenterInstanceConfig37.isNonSecurePortEnabled();
        applicationInfoManager34.config = myDataCenterInstanceConfig37;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig43 = applicationInfoManager34.config;
        com.netflix.appinfo.InstanceInfo instanceInfo44 = applicationInfoManager34.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo45 = applicationInfoManager34.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType46 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo45.setActionType(actionType46);
        com.netflix.appinfo.LeaseInfo leaseInfo48 = null;
        instanceInfo45.setLeaseInfo(leaseInfo48);
        java.util.Set<java.lang.String> strSet50 = instanceInfo45.getHealthCheckUrls();
        java.lang.String str51 = instanceInfo45.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder52 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo45);
        com.netflix.appinfo.InstanceInfo.ActionType actionType53 = instanceInfo45.getActionType();
        instanceInfo28.setActionType(actionType53);
        instanceInfo11.setActionType(actionType53);
        java.lang.String str56 = instanceInfo11.getSecureVipAddress();
        boolean boolean57 = instanceInfo11.isDirty();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 80 + "'", int13 == 80);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 80 + "'", int16 == 80);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 80 + "'", int17 == 80);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(leaseInfo30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(applicationInfoManager34);
        org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 30 + "'", int38 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig43);
        org.junit.Assert.assertNotNull(instanceInfo44);
        org.junit.Assert.assertNotNull(instanceInfo45);
        org.junit.Assert.assertTrue("'" + actionType46 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType46.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str51, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + actionType53 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType53.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test04328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04328");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig1 = applicationInfoManager0.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager2 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        int int6 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager2.config = myDataCenterInstanceConfig4;
        java.lang.String str8 = myDataCenterInstanceConfig4.getIpAddress();
        java.lang.String str9 = myDataCenterInstanceConfig4.getVirtualHostName();
        java.lang.String str11 = myDataCenterInstanceConfig4.getHostName(true);
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig4);
        com.netflix.appinfo.InstanceInfo instanceInfo13 = applicationInfoManager0.instanceInfo;
        instanceInfo13.setIsCoordinatingDiscoveryServer();
        long long15 = instanceInfo13.getLastUpdatedTimestamp();
        com.netflix.appinfo.InstanceInfo instanceInfo16 = new com.netflix.appinfo.InstanceInfo(instanceInfo13);
        com.netflix.appinfo.InstanceInfo.ActionType actionType17 = instanceInfo13.getActionType();
        boolean boolean18 = instanceInfo13.isDirty();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig1);
        org.junit.Assert.assertNotNull(applicationInfoManager2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 30 + "'", int6 == 30);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "172.20.26.3" + "'", str8, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str9, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str11, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(instanceInfo13);
// flaky:         org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1636106126191L + "'", long15 == 1636106126191L);
        org.junit.Assert.assertNull(actionType17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test04329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04329");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder8.setHomePageUrlForDeser("");
        com.netflix.appinfo.LeaseInfo leaseInfo13 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setLeaseInfo(leaseInfo13);
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder14.setStatusPageUrlForDeser("/");
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder14.setASGName("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setVIPAddress("/healthcheck");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test04330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04330");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.getInfo();
        java.lang.String[] strArray12 = new java.lang.String[] {};
        com.netflix.appinfo.InstanceInfo instanceInfo13 = null;
        java.lang.String str14 = com.netflix.appinfo.InstanceInfo.getZone(strArray12, instanceInfo13);
        com.netflix.appinfo.InstanceInfo instanceInfo15 = null;
        java.lang.String str16 = com.netflix.appinfo.InstanceInfo.getZone(strArray12, instanceInfo15);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager17 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager17.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig20 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int21 = myDataCenterInstanceConfig20.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = myDataCenterInstanceConfig20.getDataCenterInfo();
        java.lang.String str23 = myDataCenterInstanceConfig20.getNamespace();
        boolean boolean24 = myDataCenterInstanceConfig20.isNonSecurePortEnabled();
        applicationInfoManager17.config = myDataCenterInstanceConfig20;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig26 = applicationInfoManager17.config;
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager17.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager17.instanceInfo;
        int int29 = instanceInfo28.getSecurePort();
        boolean boolean30 = instanceInfo28.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = new com.netflix.appinfo.InstanceInfo(instanceInfo28);
        com.netflix.appinfo.InstanceInfo instanceInfo32 = new com.netflix.appinfo.InstanceInfo(instanceInfo28);
        java.lang.String str33 = instanceInfo28.getAppGroupName();
        int int34 = instanceInfo28.getCountryId();
        java.lang.String str35 = com.netflix.appinfo.InstanceInfo.getZone(strArray12, instanceInfo28);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus36 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo28.setStatus(instanceStatus36);
        applicationInfoManager0.setInstanceStatus(instanceStatus36);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager39 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo40 = applicationInfoManager39.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig42 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int43 = myDataCenterInstanceConfig42.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo44 = myDataCenterInstanceConfig42.getDataCenterInfo();
        java.lang.String str45 = myDataCenterInstanceConfig42.getNamespace();
        boolean boolean46 = myDataCenterInstanceConfig42.isNonSecurePortEnabled();
        applicationInfoManager39.config = myDataCenterInstanceConfig42;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig48 = applicationInfoManager39.config;
        com.netflix.appinfo.InstanceInfo instanceInfo49 = applicationInfoManager39.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo50 = applicationInfoManager39.instanceInfo;
        int int51 = instanceInfo50.getSecurePort();
        boolean boolean52 = instanceInfo50.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo53 = new com.netflix.appinfo.InstanceInfo(instanceInfo50);
        com.netflix.appinfo.InstanceInfo instanceInfo54 = new com.netflix.appinfo.InstanceInfo(instanceInfo50);
        java.lang.String str55 = instanceInfo50.getAppGroupName();
        int int56 = instanceInfo50.getCountryId();
        applicationInfoManager0.instanceInfo = instanceInfo50;
        java.lang.String str58 = instanceInfo50.getHomePageUrl();
        java.lang.String str59 = instanceInfo50.getVIPAddress();
        java.util.Set<java.lang.String> strSet60 = instanceInfo50.getHealthCheckUrls();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "default" + "'", str14, "default");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "default" + "'", str16, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager17);
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 30 + "'", int21 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 443 + "'", int29 == 443);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UNKNOWN" + "'", str33, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "default" + "'", str35, "default");
        org.junit.Assert.assertTrue("'" + instanceStatus36 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus36.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(applicationInfoManager39);
        org.junit.Assert.assertNotNull(instanceInfo40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 30 + "'", int43 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig48);
        org.junit.Assert.assertNotNull(instanceInfo49);
        org.junit.Assert.assertNotNull(instanceInfo50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 443 + "'", int51 == 443);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "UNKNOWN" + "'", str55, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str58, "http://inesserver2.windows.cin.ufpe.br:80/");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str59, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNotNull(strSet60);
    }

    @Test
    public void test04331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04331");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        java.lang.String str4 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        com.netflix.appinfo.InstanceInfo instanceInfo5 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager6 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo5);
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig7 = applicationInfoManager6.config;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        int int11 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        java.lang.String str12 = myDataCenterInstanceConfig9.getStatusPageUrlPath();
        applicationInfoManager6.config = myDataCenterInstanceConfig9;
        java.lang.String str14 = myDataCenterInstanceConfig9.getSecureHealthCheckUrl();
        java.lang.String str15 = myDataCenterInstanceConfig9.getSecureVirtualHostName();
        boolean boolean16 = myDataCenterInstanceConfig9.isNonSecurePortEnabled();
        int int17 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        java.lang.String str18 = myDataCenterInstanceConfig9.getStatusPageUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig9.getDataCenterInfo();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/healthcheck" + "'", str4, "/healthcheck");
        org.junit.Assert.assertNotNull(eurekaInstanceConfig7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/Status" + "'", str12, "/Status");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
    }

    @Test
    public void test04332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04332");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        boolean boolean2 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        java.lang.String str3 = myDataCenterInstanceConfig1.getHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo4 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig1.getHostName(false);
        java.lang.String str7 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = myDataCenterInstanceConfig1.getMetadataMap();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(dataCenterInfo4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str6, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/Status" + "'", str7, "/Status");
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test04333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04333");
        com.netflix.appinfo.DataCenterInfo dataCenterInfo1 = null;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("", dataCenterInfo1);
        boolean boolean3 = myDataCenterInstanceConfig2.getSecurePortEnabled();
        boolean boolean4 = myDataCenterInstanceConfig2.isNonSecurePortEnabled();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test04334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04334");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig6 = applicationInfoManager0.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager7 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        int int11 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager7.config = myDataCenterInstanceConfig9;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig13 = applicationInfoManager7.config;
        applicationInfoManager0.config = eurekaInstanceConfig13;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        com.netflix.appinfo.InstanceInfo.Builder builder17 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder17.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder17.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder17.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = myDataCenterInstanceConfig24.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder23.setDataCenterInfo(dataCenterInfo25);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig27 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo28 = myDataCenterInstanceConfig27.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder23.setDataCenterInfo(dataCenterInfo28);
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder23.setSecureVIPAddressDeser("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo32 = builder23.build();
        java.lang.String str33 = instanceInfo32.getHostName();
        applicationInfoManager0.instanceInfo = instanceInfo32;
        applicationInfoManager0.refreshDataCenterInfoIfRequired();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig6);
        org.junit.Assert.assertNotNull(applicationInfoManager7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(dataCenterInfo28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test04335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04335");
        com.netflix.appinfo.InstanceInfo.Builder builder1 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder3 = builder1.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder1.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder1.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo9 = myDataCenterInstanceConfig8.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder7.setDataCenterInfo(dataCenterInfo9);
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder10.setHealthCheckUrlsForDeser("hi!", "");
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder13.setASGName("");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder15.setSecureVIPAddressDeser("default");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager18 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager18.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager18.getInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig22 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str23 = myDataCenterInstanceConfig22.getIpAddress();
        java.lang.String str24 = myDataCenterInstanceConfig22.getASGName();
        boolean boolean25 = myDataCenterInstanceConfig22.getSecurePortEnabled();
        java.lang.String str26 = myDataCenterInstanceConfig22.getStatusPageUrl();
        applicationInfoManager18.config = myDataCenterInstanceConfig22;
        com.netflix.appinfo.DataCenterInfo dataCenterInfo28 = myDataCenterInstanceConfig22.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder15.setDataCenterInfo(dataCenterInfo28);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig30 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/healthcheck", dataCenterInfo28);
        java.lang.String str31 = myDataCenterInstanceConfig30.getHomePageUrl();
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(dataCenterInfo9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(applicationInfoManager18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "172.20.26.3" + "'", str23, "172.20.26.3");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(dataCenterInfo28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test04336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04336");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder2.add("UNKNOWN", "UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder2.setAppName("172.20.26.3");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager11 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager11.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig14 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int15 = myDataCenterInstanceConfig14.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo16 = myDataCenterInstanceConfig14.getDataCenterInfo();
        java.lang.String str17 = myDataCenterInstanceConfig14.getNamespace();
        boolean boolean18 = myDataCenterInstanceConfig14.isNonSecurePortEnabled();
        applicationInfoManager11.config = myDataCenterInstanceConfig14;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig20 = applicationInfoManager11.config;
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager11.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int25 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig24.getDataCenterInfo();
        java.lang.String str28 = myDataCenterInstanceConfig24.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig24.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig30 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo29);
        java.lang.String str31 = myDataCenterInstanceConfig30.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = myDataCenterInstanceConfig30.getMetadataMap();
        applicationInfoManager11.registerAppMetadata(strMap32);
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager11.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager35 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo36 = applicationInfoManager35.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig38 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int39 = myDataCenterInstanceConfig38.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo40 = myDataCenterInstanceConfig38.getDataCenterInfo();
        java.lang.String str41 = myDataCenterInstanceConfig38.getNamespace();
        boolean boolean42 = myDataCenterInstanceConfig38.isNonSecurePortEnabled();
        applicationInfoManager35.config = myDataCenterInstanceConfig38;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig44 = applicationInfoManager35.config;
        com.netflix.appinfo.InstanceInfo instanceInfo45 = applicationInfoManager35.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo46 = applicationInfoManager35.instanceInfo;
        int int47 = instanceInfo46.getSecurePort();
        boolean boolean48 = instanceInfo46.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo49 = new com.netflix.appinfo.InstanceInfo(instanceInfo46);
        java.lang.String str50 = instanceInfo46.getHomePageUrl();
        applicationInfoManager11.instanceInfo = instanceInfo46;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager52 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo53 = applicationInfoManager52.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig55 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int56 = myDataCenterInstanceConfig55.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo57 = myDataCenterInstanceConfig55.getDataCenterInfo();
        java.lang.String str58 = myDataCenterInstanceConfig55.getNamespace();
        boolean boolean59 = myDataCenterInstanceConfig55.isNonSecurePortEnabled();
        applicationInfoManager52.config = myDataCenterInstanceConfig55;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig61 = applicationInfoManager52.config;
        com.netflix.appinfo.InstanceInfo instanceInfo62 = applicationInfoManager52.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo63 = applicationInfoManager52.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType64 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo63.setActionType(actionType64);
        com.netflix.appinfo.LeaseInfo leaseInfo66 = null;
        instanceInfo63.setLeaseInfo(leaseInfo66);
        java.util.Set<java.lang.String> strSet68 = instanceInfo63.getHealthCheckUrls();
        java.lang.String str69 = instanceInfo63.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder70 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo63);
        com.netflix.appinfo.InstanceInfo.Builder builder72 = builder70.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder75 = builder70.setHealthCheckUrlsForDeser("", "hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder77 = builder75.setLastDirtyTimestamp((long) 443);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus78 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        com.netflix.appinfo.InstanceInfo.Builder builder79 = builder75.setStatus(instanceStatus78);
        applicationInfoManager11.setInstanceStatus(instanceStatus78);
        com.netflix.appinfo.InstanceInfo.Builder builder81 = builder10.setStatus(instanceStatus78);
        com.netflix.appinfo.InstanceInfo.Builder builder83 = builder10.setSecurePort(32);
        boolean boolean84 = builder10.isInitialized();
        com.netflix.appinfo.InstanceInfo.Builder builder86 = builder10.setHomePageUrlForDeser("");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(applicationInfoManager11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 30 + "'", int15 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig20);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 30 + "'", int25 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str28, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertNotNull(applicationInfoManager35);
        org.junit.Assert.assertNotNull(instanceInfo36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 30 + "'", int39 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig44);
        org.junit.Assert.assertNotNull(instanceInfo45);
        org.junit.Assert.assertNotNull(instanceInfo46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 7002 + "'", int47 == 7002);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(applicationInfoManager52);
        org.junit.Assert.assertNotNull(instanceInfo53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 30 + "'", int56 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig61);
        org.junit.Assert.assertNotNull(instanceInfo62);
        org.junit.Assert.assertNotNull(instanceInfo63);
        org.junit.Assert.assertTrue("'" + actionType64 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType64.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str69, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + instanceStatus78 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus78.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(builder86);
    }

    @Test
    public void test04337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04337");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder6.setLastDirtyTimestamp((long) (short) 10);
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder6.setSecurePort((int) '4');
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder6.setNamespace("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder17.setHomePageUrlForDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder19.setSecurePort(0);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
    }

    @Test
    public void test04338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04338");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager1 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig4.getDataCenterInfo();
        java.lang.String str7 = myDataCenterInstanceConfig4.getNamespace();
        boolean boolean8 = myDataCenterInstanceConfig4.isNonSecurePortEnabled();
        applicationInfoManager1.config = myDataCenterInstanceConfig4;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig10 = applicationInfoManager1.config;
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager1.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType13 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo12.setActionType(actionType13);
        java.lang.String str15 = instanceInfo12.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType16 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo12.setActionType(actionType16);
        java.lang.String str18 = instanceInfo12.getHostName();
        int int19 = instanceInfo12.getPort();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo20 = instanceInfo12.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig("", dataCenterInfo20);
        org.junit.Assert.assertNotNull(applicationInfoManager1);
        org.junit.Assert.assertNotNull(instanceInfo2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertTrue("'" + actionType13 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType13.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "/" + "'", str15, "/");
        org.junit.Assert.assertTrue("'" + actionType16 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType16.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str18, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 7001 + "'", int19 == 7001);
        org.junit.Assert.assertNotNull(dataCenterInfo20);
    }

    @Test
    public void test04339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04339");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder2.setSecurePort(10);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder9.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo instanceInfo12 = builder9.getRawInstance();
        java.lang.String str13 = instanceInfo12.getAppName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager14 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo15 = applicationInfoManager14.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig17 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int18 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig17.getDataCenterInfo();
        java.lang.String str20 = myDataCenterInstanceConfig17.getNamespace();
        boolean boolean21 = myDataCenterInstanceConfig17.isNonSecurePortEnabled();
        applicationInfoManager14.config = myDataCenterInstanceConfig17;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig23 = applicationInfoManager14.config;
        com.netflix.appinfo.InstanceInfo instanceInfo24 = applicationInfoManager14.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager14.instanceInfo;
        int int26 = instanceInfo25.getSecurePort();
        com.netflix.appinfo.InstanceInfo.PortType portType27 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean28 = instanceInfo25.isPortEnabled(portType27);
        java.lang.String str29 = instanceInfo25.getVIPAddress();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager30 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager30.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig33 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int34 = myDataCenterInstanceConfig33.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo35 = myDataCenterInstanceConfig33.getDataCenterInfo();
        java.lang.String str36 = myDataCenterInstanceConfig33.getNamespace();
        boolean boolean37 = myDataCenterInstanceConfig33.isNonSecurePortEnabled();
        applicationInfoManager30.config = myDataCenterInstanceConfig33;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig39 = applicationInfoManager30.config;
        com.netflix.appinfo.InstanceInfo instanceInfo40 = applicationInfoManager30.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo41 = applicationInfoManager30.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType42 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo41.setActionType(actionType42);
        instanceInfo25.setActionType(actionType42);
        java.lang.String str45 = instanceInfo25.getSecureVipAddress();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus46 = instanceInfo25.getOverriddenStatus();
        instanceInfo12.setOverriddenStatus(instanceStatus46);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(applicationInfoManager14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 30 + "'", int18 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig23);
        org.junit.Assert.assertNotNull(instanceInfo24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 7002 + "'", int26 == 7002);
        org.junit.Assert.assertTrue("'" + portType27 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType27.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(applicationInfoManager30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig39);
        org.junit.Assert.assertNotNull(instanceInfo40);
        org.junit.Assert.assertNotNull(instanceInfo41);
        org.junit.Assert.assertTrue("'" + actionType42 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType42.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str45, "http://inesserver2.windows.cin.ufpe.br:80/Status");
        org.junit.Assert.assertTrue("'" + instanceStatus46 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus46.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
    }

    @Test
    public void test04340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04340");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder8.setSecurePort((int) '4');
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder8.setSecurePort(100);
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder14.setPort((int) (short) 1);
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder14.setSecurePort((int) (byte) 0);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setAppName("HI!");
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder18.setStatusPageUrlForDeser("/Status");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test04341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04341");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        java.lang.String str6 = myDataCenterInstanceConfig2.getIpAddress();
        java.lang.String str7 = myDataCenterInstanceConfig2.getVirtualHostName();
        boolean boolean8 = myDataCenterInstanceConfig2.isNonSecurePortEnabled();
        java.lang.String str9 = myDataCenterInstanceConfig2.getAppGroupName();
        java.lang.String str10 = myDataCenterInstanceConfig2.getHomePageUrl();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager11 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager11.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig14 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int15 = myDataCenterInstanceConfig14.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo16 = myDataCenterInstanceConfig14.getDataCenterInfo();
        java.lang.String str17 = myDataCenterInstanceConfig14.getNamespace();
        boolean boolean18 = myDataCenterInstanceConfig14.isNonSecurePortEnabled();
        applicationInfoManager11.config = myDataCenterInstanceConfig14;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig20 = applicationInfoManager11.config;
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager11.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo22 = applicationInfoManager11.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType23 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo22.setActionType(actionType23);
        java.lang.String str25 = instanceInfo22.getVersion();
        java.lang.String str26 = instanceInfo22.getIPAddr();
        instanceInfo22.setLastUpdatedTimestamp();
        java.lang.String str28 = instanceInfo22.getVersion();
        boolean boolean29 = instanceInfo22.isDirty();
        int int30 = instanceInfo22.getSecurePort();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager31 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig2, instanceInfo22);
        java.util.Set<java.lang.String> strSet32 = instanceInfo22.getHealthCheckUrls();
        java.util.Set<java.lang.String> strSet33 = instanceInfo22.getHealthCheckUrls();
        java.lang.String str34 = instanceInfo22.getVersion();
        long long35 = instanceInfo22.getLastUpdatedTimestamp();
        java.lang.String str36 = instanceInfo22.getHomePageUrl();
        java.lang.String str37 = instanceInfo22.getStatusPageUrl();
        com.netflix.appinfo.InstanceInfo.Builder builder38 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo22);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "172.20.26.3" + "'", str6, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str7, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "unknown" + "'", str9, "unknown");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(applicationInfoManager11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 30 + "'", int15 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig20);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertTrue("'" + actionType23 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType23.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "unknown" + "'", str25, "unknown");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "unknown" + "'", str28, "unknown");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 7002 + "'", int30 == 7002);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "unknown" + "'", str34, "unknown");
// flaky:         org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1636106126432L + "'", long35 == 1636106126432L);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test04342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04342");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        java.lang.String str4 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        com.netflix.appinfo.InstanceInfo instanceInfo5 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager6 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo5);
        boolean boolean7 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        java.lang.String str8 = myDataCenterInstanceConfig1.getHomePageUrl();
        boolean boolean9 = myDataCenterInstanceConfig1.isInstanceEnabledOnit();
        int int10 = myDataCenterInstanceConfig1.getNonSecurePort();
        int int11 = myDataCenterInstanceConfig1.getSecurePort();
        java.lang.String str12 = myDataCenterInstanceConfig1.getAppname();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/healthcheck" + "'", str4, "/healthcheck");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 80 + "'", int10 == 80);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 443 + "'", int11 == 443);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "unknown" + "'", str12, "unknown");
    }

    @Test
    public void test04343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04343");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        java.lang.String str6 = myDataCenterInstanceConfig2.getHealthCheckUrlPath();
        java.lang.String str7 = myDataCenterInstanceConfig2.getNamespace();
        java.lang.String str8 = myDataCenterInstanceConfig2.getASGName();
        java.lang.String str9 = myDataCenterInstanceConfig2.getAppname();
        java.lang.String str10 = myDataCenterInstanceConfig2.getVirtualHostName();
        java.lang.String str11 = myDataCenterInstanceConfig2.getSecureVirtualHostName();
        java.lang.String str12 = myDataCenterInstanceConfig2.getStatusPageUrlPath();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "/healthcheck" + "'", str6, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "unknown" + "'", str9, "unknown");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str10, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/Status" + "'", str12, "/Status");
    }

    @Test
    public void test04344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04344");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        boolean boolean9 = builder6.isInitialized();
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setVIPAddress("na");
        com.netflix.appinfo.InstanceInfo instanceInfo12 = builder6.build();
        com.netflix.appinfo.InstanceInfo instanceInfo13 = builder6.build();
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder6.setSID("");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder6.setNamespace("");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder6.setIPAddr("http://inesserver2.windows.cin.ufpe.br:10/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder20 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder20.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder20.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder20.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder26.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder28.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo instanceInfo31 = builder30.getRawInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = instanceInfo31.getMetadata();
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder6.setMetadata(strMap32);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertNotNull(instanceInfo13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(builder33);
    }

    @Test
    public void test04345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04345");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        com.netflix.appinfo.InstanceInfo instanceInfo6 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int9 = myDataCenterInstanceConfig8.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo10 = myDataCenterInstanceConfig8.getDataCenterInfo();
        java.lang.String str11 = myDataCenterInstanceConfig8.getHealthCheckUrl();
        int int12 = myDataCenterInstanceConfig8.getLeaseExpirationDurationInSeconds();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig15 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int16 = myDataCenterInstanceConfig15.getLeaseRenewalIntervalInSeconds();
        int int17 = myDataCenterInstanceConfig15.getLeaseRenewalIntervalInSeconds();
        java.lang.String str18 = myDataCenterInstanceConfig15.getStatusPageUrlPath();
        boolean boolean19 = myDataCenterInstanceConfig15.getSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager20 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager20.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig23 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int24 = myDataCenterInstanceConfig23.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = myDataCenterInstanceConfig23.getDataCenterInfo();
        java.lang.String str26 = myDataCenterInstanceConfig23.getNamespace();
        boolean boolean27 = myDataCenterInstanceConfig23.isNonSecurePortEnabled();
        applicationInfoManager20.config = myDataCenterInstanceConfig23;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig29 = applicationInfoManager20.config;
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager20.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager20.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType32 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo31.setActionType(actionType32);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager34 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager34.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig37 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int38 = myDataCenterInstanceConfig37.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo39 = myDataCenterInstanceConfig37.getDataCenterInfo();
        java.lang.String str40 = myDataCenterInstanceConfig37.getNamespace();
        boolean boolean41 = myDataCenterInstanceConfig37.isNonSecurePortEnabled();
        applicationInfoManager34.config = myDataCenterInstanceConfig37;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig43 = applicationInfoManager34.config;
        com.netflix.appinfo.InstanceInfo instanceInfo44 = applicationInfoManager34.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo45 = applicationInfoManager34.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType46 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo45.setActionType(actionType46);
        instanceInfo31.setActionType(actionType46);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager49 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig15, instanceInfo31);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus51 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("inesserver2.windows.cin.ufpe.br:80");
        instanceInfo31.setOverriddenStatus(instanceStatus51);
        applicationInfoManager0.setInstanceStatus(instanceStatus51);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager54 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig56 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int57 = myDataCenterInstanceConfig56.getLeaseRenewalIntervalInSeconds();
        int int58 = myDataCenterInstanceConfig56.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager54.config = myDataCenterInstanceConfig56;
        java.lang.String str60 = myDataCenterInstanceConfig56.getHealthCheckUrlPath();
        java.lang.String str61 = myDataCenterInstanceConfig56.getNamespace();
        java.util.Map<java.lang.String, java.lang.String> strMap62 = myDataCenterInstanceConfig56.getMetadataMap();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig56);
        com.netflix.appinfo.InstanceInfo instanceInfo64 = applicationInfoManager0.instanceInfo;
        int int65 = instanceInfo64.getSecurePort();
        java.lang.String str66 = instanceInfo64.getASGName();
        instanceInfo64.setLastUpdatedTimestamp();
        int int68 = instanceInfo64.getSecurePort();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNull(instanceInfo6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 30 + "'", int9 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 90 + "'", int12 == 90);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 30 + "'", int16 == 30);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/Status" + "'", str18, "/Status");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager20);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 30 + "'", int24 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig29);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertTrue("'" + actionType32 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType32.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager34);
        org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 30 + "'", int38 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig43);
        org.junit.Assert.assertNotNull(instanceInfo44);
        org.junit.Assert.assertNotNull(instanceInfo45);
        org.junit.Assert.assertTrue("'" + actionType46 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType46.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + instanceStatus51 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus51.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(applicationInfoManager54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 30 + "'", int57 == 30);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 30 + "'", int58 == 30);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "/healthcheck" + "'", str60, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(instanceInfo64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 443 + "'", int65 == 443);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 443 + "'", int68 == 443);
    }

    @Test
    public void test04346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04346");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        int int6 = myDataCenterInstanceConfig3.getLeaseExpirationDurationInSeconds();
        java.lang.String str7 = myDataCenterInstanceConfig3.getHomePageUrlPath();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        java.lang.String str9 = myDataCenterInstanceConfig3.getStatusPageUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo10 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str11 = myDataCenterInstanceConfig3.getHomePageUrlPath();
        int int12 = myDataCenterInstanceConfig3.getLeaseExpirationDurationInSeconds();
        java.lang.String str13 = myDataCenterInstanceConfig3.getStatusPageUrlPath();
        java.lang.String str14 = myDataCenterInstanceConfig3.getNamespace();
        java.lang.String str15 = myDataCenterInstanceConfig3.getHealthCheckUrl();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 90 + "'", int6 == 90);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/" + "'", str7, "/");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(dataCenterInfo10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/" + "'", str11, "/");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 90 + "'", int12 == 90);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/Status" + "'", str13, "/Status");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test04347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04347");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder12.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder12.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder12.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo22 = builder21.build();
        java.lang.String str23 = instanceInfo22.getStatusPageUrl();
        com.netflix.appinfo.InstanceInfo instanceInfo24 = new com.netflix.appinfo.InstanceInfo(instanceInfo22);
        instanceInfo24.setIsDirty(true);
        com.netflix.appinfo.LeaseInfo leaseInfo27 = instanceInfo24.getLeaseInfo();
        java.lang.String str28 = instanceInfo24.getStatusPageUrl();
        java.lang.String str29 = instanceInfo24.getASGName();
        java.lang.Boolean boolean30 = instanceInfo24.isCoordinatingDiscoveryServer();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(leaseInfo27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + false + "'", boolean30, false);
    }

    @Test
    public void test04348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04348");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setNamespace("na");
        com.netflix.appinfo.InstanceInfo instanceInfo15 = builder6.build();
        boolean boolean16 = builder6.isInitialized();
        com.netflix.appinfo.InstanceInfo.Builder builder17 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder17.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder17.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder17.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = myDataCenterInstanceConfig24.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder23.setDataCenterInfo(dataCenterInfo25);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig27 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo28 = myDataCenterInstanceConfig27.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder23.setDataCenterInfo(dataCenterInfo28);
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder29.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder29.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder36 = builder29.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder29.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo39 = builder38.build();
        boolean boolean40 = instanceInfo39.isDirty();
        java.lang.String str41 = instanceInfo39.getHomePageUrl();
        com.netflix.appinfo.InstanceInfo.Builder builder42 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder44 = builder42.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder46 = builder42.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder48 = builder42.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder50 = builder48.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder52 = builder50.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder54 = builder50.setHomePageUrlForDeser("");
        com.netflix.appinfo.LeaseInfo leaseInfo55 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder56 = builder54.setLeaseInfo(leaseInfo55);
        com.netflix.appinfo.InstanceInfo.Builder builder58 = builder54.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder59 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder61 = builder59.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder63 = builder59.setCountryId(7002);
        com.netflix.appinfo.InstanceInfo.Builder builder65 = builder63.setSecurePort((int) (byte) 10);
        com.netflix.appinfo.InstanceInfo.PortType portType66 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder68 = builder63.enablePort(portType66, false);
        com.netflix.appinfo.InstanceInfo.Builder builder70 = builder58.enablePort(portType66, true);
        boolean boolean71 = instanceInfo39.isPortEnabled(portType66);
        com.netflix.appinfo.InstanceInfo.Builder builder73 = builder6.enablePort(portType66, true);
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder76 = builder73.setHomePageUrl("/healthcheck", "/");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(dataCenterInfo28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(instanceInfo39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + portType66 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType66.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(builder73);
    }

    @Test
    public void test04349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04349");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig1 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo2 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager3 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig1, instanceInfo2);
        com.netflix.appinfo.InstanceInfo instanceInfo4 = null;
        applicationInfoManager3.instanceInfo = instanceInfo4;
        com.netflix.appinfo.InstanceInfo instanceInfo6 = applicationInfoManager3.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager7 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        int int11 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager7.config = myDataCenterInstanceConfig9;
        java.lang.String str13 = myDataCenterInstanceConfig9.getIpAddress();
        java.lang.String str14 = myDataCenterInstanceConfig9.getVirtualHostName();
        java.lang.String str16 = myDataCenterInstanceConfig9.getHostName(true);
        applicationInfoManager3.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig9);
        applicationInfoManager3.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig20 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int21 = myDataCenterInstanceConfig20.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = myDataCenterInstanceConfig20.getDataCenterInfo();
        java.lang.String str23 = myDataCenterInstanceConfig20.getNamespace();
        boolean boolean24 = myDataCenterInstanceConfig20.isNonSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = myDataCenterInstanceConfig20.getDataCenterInfo();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig20.getDataCenterInfo();
        java.lang.String str27 = myDataCenterInstanceConfig20.getAppname();
        int int28 = myDataCenterInstanceConfig20.getLeaseRenewalIntervalInSeconds();
        java.lang.String str29 = myDataCenterInstanceConfig20.getIpAddress();
        java.lang.String str30 = myDataCenterInstanceConfig20.getAppname();
        applicationInfoManager3.config = myDataCenterInstanceConfig20;
        applicationInfoManager3.refreshDataCenterInfoIfRequired();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig1);
        org.junit.Assert.assertNull(instanceInfo6);
        org.junit.Assert.assertNotNull(applicationInfoManager7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "172.20.26.3" + "'", str13, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str14, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str16, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 30 + "'", int21 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "unknown" + "'", str27, "unknown");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 30 + "'", int28 == 30);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "172.20.26.3" + "'", str29, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "unknown" + "'", str30, "unknown");
    }

    @Test
    public void test04350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04350");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        int int3 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        boolean boolean5 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager6 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo7 = applicationInfoManager6.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig9.getDataCenterInfo();
        java.lang.String str12 = myDataCenterInstanceConfig9.getNamespace();
        boolean boolean13 = myDataCenterInstanceConfig9.isNonSecurePortEnabled();
        applicationInfoManager6.config = myDataCenterInstanceConfig9;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig15 = applicationInfoManager6.config;
        com.netflix.appinfo.InstanceInfo instanceInfo16 = applicationInfoManager6.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo17 = applicationInfoManager6.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType18 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo17.setActionType(actionType18);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager20 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager20.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig23 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int24 = myDataCenterInstanceConfig23.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = myDataCenterInstanceConfig23.getDataCenterInfo();
        java.lang.String str26 = myDataCenterInstanceConfig23.getNamespace();
        boolean boolean27 = myDataCenterInstanceConfig23.isNonSecurePortEnabled();
        applicationInfoManager20.config = myDataCenterInstanceConfig23;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig29 = applicationInfoManager20.config;
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager20.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager20.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType32 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo31.setActionType(actionType32);
        instanceInfo17.setActionType(actionType32);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager35 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo17);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus37 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("inesserver2.windows.cin.ufpe.br:80");
        instanceInfo17.setOverriddenStatus(instanceStatus37);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus40 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("/Status");
        instanceInfo17.setOverriddenStatus(instanceStatus40);
        com.netflix.appinfo.InstanceInfo instanceInfo42 = new com.netflix.appinfo.InstanceInfo(instanceInfo17);
        java.lang.String str43 = instanceInfo42.getStatusPageUrl();
        java.lang.String str44 = instanceInfo42.getSID();
        com.netflix.appinfo.LeaseInfo leaseInfo45 = instanceInfo42.getLeaseInfo();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus46 = instanceInfo42.getOverriddenStatus();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo47 = instanceInfo42.getDataCenterInfo();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/Status" + "'", str4, "/Status");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager6);
        org.junit.Assert.assertNotNull(instanceInfo7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig15);
        org.junit.Assert.assertNotNull(instanceInfo16);
        org.junit.Assert.assertNotNull(instanceInfo17);
        org.junit.Assert.assertTrue("'" + actionType18 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType18.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager20);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 30 + "'", int24 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig29);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertTrue("'" + actionType32 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType32.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + instanceStatus37 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus37.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertTrue("'" + instanceStatus40 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus40.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "na" + "'", str44, "na");
// flaky:         org.junit.Assert.assertNull(leaseInfo45);
        org.junit.Assert.assertTrue("'" + instanceStatus46 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus46.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(dataCenterInfo47);
    }

    @Test
    public void test04351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04351");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        boolean boolean13 = instanceInfo11.isDirty();
        java.lang.String str14 = instanceInfo11.getHostName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType15 = instanceInfo11.getActionType();
        java.lang.String str16 = instanceInfo11.getHostName();
        java.lang.String str17 = instanceInfo11.getASGName();
        int int18 = instanceInfo11.getCountryId();
        java.lang.String str19 = instanceInfo11.getVIPAddress();
        java.lang.String str20 = instanceInfo11.getSID();
        java.lang.String str21 = instanceInfo11.getIPAddr();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str14, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + actionType15 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType15.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str16, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str19, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "na" + "'", str20, "na");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "172.20.26.3" + "'", str21, "172.20.26.3");
    }

    @Test
    public void test04352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04352");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder8.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder8.setCountryId((-1));
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder8.setAppName("na");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder16.add("unknown", "http://inesserver2.windows.cin.ufpe.br:10/Status");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder19);
    }

    @Test
    public void test04353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04353");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setIPAddr("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder0.setSecureVIPAddressDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setAppName("na");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder10.add("unknown", "/");
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder13.add("http:///:80/Status", "DEFAULT");
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder16.setAppGroupName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder16.setASGName("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder16.setIPAddr("HI!");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test04354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04354");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str5 = myDataCenterInstanceConfig1.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str7 = myDataCenterInstanceConfig1.getASGName();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = myDataCenterInstanceConfig1.getMetadataMap();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str5, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test04355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04355");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        boolean boolean2 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager4 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo5 = applicationInfoManager4.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int8 = myDataCenterInstanceConfig7.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo9 = myDataCenterInstanceConfig7.getDataCenterInfo();
        java.lang.String str10 = myDataCenterInstanceConfig7.getNamespace();
        boolean boolean11 = myDataCenterInstanceConfig7.isNonSecurePortEnabled();
        applicationInfoManager4.config = myDataCenterInstanceConfig7;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig13 = applicationInfoManager4.config;
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager4.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo15 = applicationInfoManager4.instanceInfo;
        int int16 = instanceInfo15.getSecurePort();
        instanceInfo15.setIsCoordinatingDiscoveryServer();
        int int18 = instanceInfo15.getSecurePort();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = instanceInfo15.getMetadata();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager20 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo15);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig22 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str23 = myDataCenterInstanceConfig22.getIpAddress();
        java.lang.String str24 = myDataCenterInstanceConfig22.getASGName();
        boolean boolean25 = myDataCenterInstanceConfig22.getSecurePortEnabled();
        java.lang.String str26 = myDataCenterInstanceConfig22.getStatusPageUrl();
        java.lang.String str27 = myDataCenterInstanceConfig22.getIpAddress();
        int int28 = myDataCenterInstanceConfig22.getSecurePort();
        java.lang.String str29 = myDataCenterInstanceConfig22.getStatusPageUrlPath();
        java.lang.String str30 = myDataCenterInstanceConfig22.getASGName();
        applicationInfoManager20.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig22);
        java.lang.String str32 = myDataCenterInstanceConfig22.getHomePageUrlPath();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(applicationInfoManager4);
        org.junit.Assert.assertNotNull(instanceInfo5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig13);
        org.junit.Assert.assertNotNull(instanceInfo14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 443 + "'", int16 == 443);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 443 + "'", int18 == 443);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "172.20.26.3" + "'", str23, "172.20.26.3");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "172.20.26.3" + "'", str27, "172.20.26.3");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 443 + "'", int28 == 443);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "/Status" + "'", str29, "/Status");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "/" + "'", str32, "/");
    }

    @Test
    public void test04356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04356");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig12 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo.Builder builder13 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder13.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager16 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo17 = applicationInfoManager16.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int20 = myDataCenterInstanceConfig19.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo21 = myDataCenterInstanceConfig19.getDataCenterInfo();
        java.lang.String str22 = myDataCenterInstanceConfig19.getNamespace();
        boolean boolean23 = myDataCenterInstanceConfig19.isNonSecurePortEnabled();
        applicationInfoManager16.config = myDataCenterInstanceConfig19;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig25 = applicationInfoManager16.config;
        com.netflix.appinfo.InstanceInfo instanceInfo26 = applicationInfoManager16.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager16.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType28 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo27.setActionType(actionType28);
        com.netflix.appinfo.LeaseInfo leaseInfo30 = null;
        instanceInfo27.setLeaseInfo(leaseInfo30);
        java.util.Set<java.lang.String> strSet32 = instanceInfo27.getHealthCheckUrls();
        java.lang.String str33 = instanceInfo27.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder34 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo27);
        com.netflix.appinfo.InstanceInfo.Builder builder36 = builder34.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder34.setHomePageUrlForDeser("");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager39 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo40 = applicationInfoManager39.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig42 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int43 = myDataCenterInstanceConfig42.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo44 = myDataCenterInstanceConfig42.getDataCenterInfo();
        java.lang.String str45 = myDataCenterInstanceConfig42.getNamespace();
        boolean boolean46 = myDataCenterInstanceConfig42.isNonSecurePortEnabled();
        applicationInfoManager39.config = myDataCenterInstanceConfig42;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig48 = applicationInfoManager39.config;
        com.netflix.appinfo.InstanceInfo instanceInfo49 = applicationInfoManager39.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo50 = applicationInfoManager39.instanceInfo;
        int int51 = instanceInfo50.getSecurePort();
        boolean boolean52 = instanceInfo50.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager53 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo54 = applicationInfoManager53.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig56 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int57 = myDataCenterInstanceConfig56.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo58 = myDataCenterInstanceConfig56.getDataCenterInfo();
        java.lang.String str59 = myDataCenterInstanceConfig56.getNamespace();
        boolean boolean60 = myDataCenterInstanceConfig56.isNonSecurePortEnabled();
        applicationInfoManager53.config = myDataCenterInstanceConfig56;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig62 = applicationInfoManager53.config;
        com.netflix.appinfo.InstanceInfo instanceInfo63 = applicationInfoManager53.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo64 = applicationInfoManager53.instanceInfo;
        int int65 = instanceInfo64.getSecurePort();
        com.netflix.appinfo.InstanceInfo.PortType portType66 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean67 = instanceInfo64.isPortEnabled(portType66);
        boolean boolean68 = instanceInfo50.isPortEnabled(portType66);
        com.netflix.appinfo.InstanceInfo.Builder builder70 = builder34.enablePort(portType66, true);
        com.netflix.appinfo.InstanceInfo.Builder builder72 = builder15.enablePort(portType66, false);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus74 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo.Builder builder75 = builder15.setStatus(instanceStatus74);
        applicationInfoManager0.setInstanceStatus(instanceStatus74);
        applicationInfoManager0.refreshDataCenterInfoIfRequired();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(applicationInfoManager16);
        org.junit.Assert.assertNotNull(instanceInfo17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 30 + "'", int20 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertTrue("'" + actionType28 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType28.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet32);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str33, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(applicationInfoManager39);
        org.junit.Assert.assertNotNull(instanceInfo40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 30 + "'", int43 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig48);
        org.junit.Assert.assertNotNull(instanceInfo49);
        org.junit.Assert.assertNotNull(instanceInfo50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 443 + "'", int51 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(applicationInfoManager53);
        org.junit.Assert.assertNotNull(instanceInfo54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 30 + "'", int57 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig62);
        org.junit.Assert.assertNotNull(instanceInfo63);
        org.junit.Assert.assertNotNull(instanceInfo64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 443 + "'", int65 == 443);
        org.junit.Assert.assertTrue("'" + portType66 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType66.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + instanceStatus74 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus74.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder75);
    }

    @Test
    public void test04357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04357");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        java.lang.String str4 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        com.netflix.appinfo.InstanceInfo instanceInfo5 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager6 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo5);
        java.lang.String str7 = myDataCenterInstanceConfig1.getNamespace();
        java.lang.String str8 = myDataCenterInstanceConfig1.getSecureHealthCheckUrl();
        java.lang.String str9 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/healthcheck" + "'", str4, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/healthcheck" + "'", str9, "/healthcheck");
    }

    @Test
    public void test04358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04358");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig4.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo6);
        java.lang.String str8 = myDataCenterInstanceConfig7.getAppname();
        java.lang.String str9 = myDataCenterInstanceConfig7.getNamespace();
        applicationInfoManager0.config = myDataCenterInstanceConfig7;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager11 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager11.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig14 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int15 = myDataCenterInstanceConfig14.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo16 = myDataCenterInstanceConfig14.getDataCenterInfo();
        java.lang.String str17 = myDataCenterInstanceConfig14.getNamespace();
        boolean boolean18 = myDataCenterInstanceConfig14.isNonSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig14.getDataCenterInfo();
        applicationInfoManager11.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig14);
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig14);
        com.netflix.appinfo.InstanceInfo instanceInfo22 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager24 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager24.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig27 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int28 = myDataCenterInstanceConfig27.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig27.getDataCenterInfo();
        java.lang.String str30 = myDataCenterInstanceConfig27.getNamespace();
        boolean boolean31 = myDataCenterInstanceConfig27.isNonSecurePortEnabled();
        applicationInfoManager24.config = myDataCenterInstanceConfig27;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig33 = applicationInfoManager24.config;
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager24.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager24.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo36 = applicationInfoManager24.getInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig38 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int39 = myDataCenterInstanceConfig38.getLeaseRenewalIntervalInSeconds();
        java.lang.String str40 = myDataCenterInstanceConfig38.getSecureVirtualHostName();
        applicationInfoManager24.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig38);
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig42 = applicationInfoManager24.config;
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!", "/Status", "default", "inesserver2.windows.cin.ufpe.br:80", "default", "default" };
        com.netflix.appinfo.InstanceInfo instanceInfo50 = null;
        java.lang.String str51 = com.netflix.appinfo.InstanceInfo.getZone(strArray49, instanceInfo50);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager52 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo53 = applicationInfoManager52.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig55 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int56 = myDataCenterInstanceConfig55.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo57 = myDataCenterInstanceConfig55.getDataCenterInfo();
        java.lang.String str58 = myDataCenterInstanceConfig55.getNamespace();
        boolean boolean59 = myDataCenterInstanceConfig55.isNonSecurePortEnabled();
        applicationInfoManager52.config = myDataCenterInstanceConfig55;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig61 = applicationInfoManager52.config;
        com.netflix.appinfo.InstanceInfo instanceInfo62 = applicationInfoManager52.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo63 = applicationInfoManager52.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType64 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo63.setActionType(actionType64);
        com.netflix.appinfo.LeaseInfo leaseInfo66 = null;
        instanceInfo63.setLeaseInfo(leaseInfo66);
        java.lang.String str68 = instanceInfo63.getSID();
        java.lang.String str69 = com.netflix.appinfo.InstanceInfo.getZone(strArray49, instanceInfo63);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager70 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo71 = applicationInfoManager70.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig73 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int74 = myDataCenterInstanceConfig73.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo75 = myDataCenterInstanceConfig73.getDataCenterInfo();
        java.lang.String str76 = myDataCenterInstanceConfig73.getNamespace();
        boolean boolean77 = myDataCenterInstanceConfig73.isNonSecurePortEnabled();
        applicationInfoManager70.config = myDataCenterInstanceConfig73;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig79 = applicationInfoManager70.config;
        com.netflix.appinfo.InstanceInfo instanceInfo80 = applicationInfoManager70.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo81 = applicationInfoManager70.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType82 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo81.setActionType(actionType82);
        java.lang.String str84 = instanceInfo81.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.Builder builder85 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo81);
        com.netflix.appinfo.InstanceInfo instanceInfo86 = builder85.build();
        java.lang.String str87 = instanceInfo86.getIPAddr();
        java.lang.String str88 = com.netflix.appinfo.InstanceInfo.getZone(strArray49, instanceInfo86);
        java.lang.String str89 = instanceInfo86.getStatusPageUrl();
        com.netflix.appinfo.InstanceInfo instanceInfo90 = new com.netflix.appinfo.InstanceInfo(instanceInfo86);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager91 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig42, instanceInfo90);
        com.netflix.appinfo.InstanceInfo instanceInfo92 = applicationInfoManager91.instanceInfo;
        applicationInfoManager0.instanceInfo = instanceInfo92;
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "unknown" + "'", str8, "unknown");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/Status" + "'", str9, "/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager11);
        org.junit.Assert.assertNull(instanceInfo12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 30 + "'", int15 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertNotNull(instanceInfo23);
        org.junit.Assert.assertNotNull(applicationInfoManager24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 30 + "'", int28 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertNotNull(instanceInfo36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 30 + "'", int39 == 30);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig42);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(applicationInfoManager52);
        org.junit.Assert.assertNotNull(instanceInfo53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 30 + "'", int56 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig61);
        org.junit.Assert.assertNotNull(instanceInfo62);
        org.junit.Assert.assertNotNull(instanceInfo63);
        org.junit.Assert.assertTrue("'" + actionType64 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType64.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "na" + "'", str68, "na");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(applicationInfoManager70);
        org.junit.Assert.assertNotNull(instanceInfo71);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 30 + "'", int74 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig79);
        org.junit.Assert.assertNotNull(instanceInfo80);
        org.junit.Assert.assertNotNull(instanceInfo81);
        org.junit.Assert.assertTrue("'" + actionType82 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType82.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "UNKNOWN" + "'", str84, "UNKNOWN");
        org.junit.Assert.assertNotNull(instanceInfo86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "172.20.26.3" + "'", str87, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!" + "'", str88, "hi!");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str89, "http://inesserver2.windows.cin.ufpe.br:80/Status");
        org.junit.Assert.assertNotNull(instanceInfo92);
    }

    @Test
    public void test04359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04359");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder6.setLastDirtyTimestamp((long) (short) 10);
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder13.setSecurePort((int) (short) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder15.setSecureVIPAddressDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder15.setIPAddr("http://inesserver2.windows.cin.ufpe.br:10/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder15.setVIPAddressDeser("http:///HEALTHCHECK:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder15.setCountryId((int) ' ');
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
    }

    @Test
    public void test04360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04360");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig6 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo7 = applicationInfoManager0.getInfo();
        instanceInfo7.setSID("default");
        com.netflix.appinfo.DataCenterInfo dataCenterInfo10 = instanceInfo7.getDataCenterInfo();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig6);
        org.junit.Assert.assertNotNull(instanceInfo7);
        org.junit.Assert.assertNotNull(dataCenterInfo10);
    }

    @Test
    public void test04361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04361");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder20.add("/healthcheck", "UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setSecureVIPAddress("172.20.26.3");
        com.netflix.appinfo.InstanceInfo instanceInfo26 = builder23.getRawInstance();
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder23.setASGName("");
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder23.setHomePageUrl("HTTP://HI!:80/STATUS", "INESSERVER2.WINDOWS.CIN.UFPE.BR:80");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder31);
    }

    @Test
    public void test04362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04362");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        int int4 = myDataCenterInstanceConfig1.getSecurePort();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig1.getAppname();
        java.lang.String str7 = myDataCenterInstanceConfig1.getVirtualHostName();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 443 + "'", int4 == 443);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "unknown" + "'", str6, "unknown");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str7, "inesserver2.windows.cin.ufpe.br:80");
    }

    @Test
    public void test04363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04363");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int11 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        int int12 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        java.lang.String str13 = myDataCenterInstanceConfig10.getStatusPageUrlPath();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig10);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig16 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str17 = myDataCenterInstanceConfig16.getVirtualHostName();
        java.lang.String str18 = myDataCenterInstanceConfig16.getAppGroupName();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig16);
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig22 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int23 = myDataCenterInstanceConfig22.getLeaseRenewalIntervalInSeconds();
        boolean boolean24 = myDataCenterInstanceConfig22.isInstanceEnabledOnit();
        java.lang.String str25 = myDataCenterInstanceConfig22.getStatusPageUrlPath();
        java.lang.String str26 = myDataCenterInstanceConfig22.getHomePageUrlPath();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = myDataCenterInstanceConfig22.getMetadataMap();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig22);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 30 + "'", int12 == 30);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/Status" + "'", str13, "/Status");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str17, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "unknown" + "'", str18, "unknown");
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 30 + "'", int23 == 30);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/Status" + "'", str25, "/Status");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/" + "'", str26, "/");
        org.junit.Assert.assertNotNull(strMap27);
    }

    @Test
    public void test04364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04364");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder7.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder9.add("http://inesserver2.windows.cin.ufpe.br:80/Status", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus14 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("na");
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder12.setStatus(instanceStatus14);
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder15.setSecureVIPAddress("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder17.setSecureVIPAddress("UNKNOWN");
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder22 = builder17.setStatusPageUrl("HTTP:///HEALTHCHECK:80/STATUS", "HTTP:///HEALTHCHECK:80/STATUS");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + instanceStatus14 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus14.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
    }

    @Test
    public void test04365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04365");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setHostName("172.20.26.3");
        com.netflix.appinfo.LeaseInfo leaseInfo12 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder11.setLeaseInfo(leaseInfo12);
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder11.setHomePageUrlForDeser("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager16 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig18 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int19 = myDataCenterInstanceConfig18.getLeaseRenewalIntervalInSeconds();
        int int20 = myDataCenterInstanceConfig18.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager16.config = myDataCenterInstanceConfig18;
        java.lang.String str22 = myDataCenterInstanceConfig18.getHealthCheckUrlPath();
        java.lang.String str23 = myDataCenterInstanceConfig18.getNamespace();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = myDataCenterInstanceConfig18.getMetadataMap();
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder11.setMetadata(strMap24);
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder11.setHealthCheckUrls("/Status", "/", "172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder11.setCountryId(90);
        com.netflix.appinfo.InstanceInfo.ActionType actionType32 = com.netflix.appinfo.InstanceInfo.ActionType.MODIFIED;
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder11.setActionType(actionType32);
        com.netflix.appinfo.InstanceInfo.Builder builder35 = builder33.setSecureVIPAddress("http://inesserver2.windows.cin.ufpe.br:80/");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(applicationInfoManager16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 30 + "'", int19 == 30);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 30 + "'", int20 == 30);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "/healthcheck" + "'", str22, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + actionType32 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.MODIFIED + "'", actionType32.equals(com.netflix.appinfo.InstanceInfo.ActionType.MODIFIED));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
    }

    @Test
    public void test04366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04366");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setSecureVIPAddress("hi!");
        boolean boolean26 = builder25.isInitialized();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager27 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager27.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig30 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int31 = myDataCenterInstanceConfig30.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo32 = myDataCenterInstanceConfig30.getDataCenterInfo();
        java.lang.String str33 = myDataCenterInstanceConfig30.getNamespace();
        boolean boolean34 = myDataCenterInstanceConfig30.isNonSecurePortEnabled();
        applicationInfoManager27.config = myDataCenterInstanceConfig30;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig36 = applicationInfoManager27.config;
        com.netflix.appinfo.InstanceInfo instanceInfo37 = applicationInfoManager27.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo38 = applicationInfoManager27.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType39 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo38.setActionType(actionType39);
        com.netflix.appinfo.LeaseInfo leaseInfo41 = null;
        instanceInfo38.setLeaseInfo(leaseInfo41);
        java.lang.String str43 = instanceInfo38.getSID();
        instanceInfo38.setSID("unknown");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager46 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo47 = applicationInfoManager46.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig49 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int50 = myDataCenterInstanceConfig49.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo51 = myDataCenterInstanceConfig49.getDataCenterInfo();
        java.lang.String str52 = myDataCenterInstanceConfig49.getNamespace();
        boolean boolean53 = myDataCenterInstanceConfig49.isNonSecurePortEnabled();
        applicationInfoManager46.config = myDataCenterInstanceConfig49;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig55 = applicationInfoManager46.config;
        com.netflix.appinfo.InstanceInfo instanceInfo56 = applicationInfoManager46.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo57 = applicationInfoManager46.instanceInfo;
        java.lang.Boolean boolean58 = instanceInfo57.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus59 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo57.setOverriddenStatus(instanceStatus59);
        instanceInfo38.setStatusWithoutDirty(instanceStatus59);
        com.netflix.appinfo.InstanceInfo.Builder builder62 = builder25.setOverriddenStatus(instanceStatus59);
        com.netflix.appinfo.InstanceInfo.Builder builder64 = builder25.setStatusPageUrlForDeser("http://default:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo65 = builder64.build();
        com.netflix.appinfo.InstanceInfo.Builder builder67 = builder64.setCountryId(97);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(applicationInfoManager27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 30 + "'", int31 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig36);
        org.junit.Assert.assertNotNull(instanceInfo37);
        org.junit.Assert.assertNotNull(instanceInfo38);
        org.junit.Assert.assertTrue("'" + actionType39 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType39.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "na" + "'", str43, "na");
        org.junit.Assert.assertNotNull(applicationInfoManager46);
        org.junit.Assert.assertNotNull(instanceInfo47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 30 + "'", int50 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig55);
        org.junit.Assert.assertNotNull(instanceInfo56);
        org.junit.Assert.assertNotNull(instanceInfo57);
        org.junit.Assert.assertEquals("'" + boolean58 + "' != '" + false + "'", boolean58, false);
        org.junit.Assert.assertTrue("'" + instanceStatus59 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus59.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(instanceInfo65);
        org.junit.Assert.assertNotNull(builder67);
    }

    @Test
    public void test04367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04367");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder7.setASGName("inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.InstanceInfo instanceInfo10 = builder7.getRawInstance();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder7.setCountryId((int) (byte) 10);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder7.setNamespace("default");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder7.add("172.20.26.3", "/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder7.setLastDirtyTimestamp(1636105987606L);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager20 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig22 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int23 = myDataCenterInstanceConfig22.getLeaseRenewalIntervalInSeconds();
        int int24 = myDataCenterInstanceConfig22.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager20.config = myDataCenterInstanceConfig22;
        java.lang.String str26 = myDataCenterInstanceConfig22.getIpAddress();
        java.lang.String str27 = myDataCenterInstanceConfig22.getHealthCheckUrlPath();
        int int28 = myDataCenterInstanceConfig22.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager29 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager29.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig32 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int33 = myDataCenterInstanceConfig32.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo34 = myDataCenterInstanceConfig32.getDataCenterInfo();
        java.lang.String str35 = myDataCenterInstanceConfig32.getNamespace();
        boolean boolean36 = myDataCenterInstanceConfig32.isNonSecurePortEnabled();
        applicationInfoManager29.config = myDataCenterInstanceConfig32;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig38 = applicationInfoManager29.config;
        com.netflix.appinfo.InstanceInfo instanceInfo39 = applicationInfoManager29.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo40 = applicationInfoManager29.instanceInfo;
        int int41 = instanceInfo40.getSecurePort();
        int int42 = instanceInfo40.getPort();
        int int43 = instanceInfo40.getCountryId();
        boolean boolean44 = instanceInfo40.isDirty();
        int int45 = instanceInfo40.getPort();
        java.lang.String str46 = instanceInfo40.getASGName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager47 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig22, instanceInfo40);
        com.netflix.appinfo.InstanceInfo.PortType portType48 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        boolean boolean49 = instanceInfo40.isPortEnabled(portType48);
        com.netflix.appinfo.LeaseInfo leaseInfo50 = instanceInfo40.getLeaseInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder51 = builder7.setLeaseInfo(leaseInfo50);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(applicationInfoManager20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 30 + "'", int23 == 30);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 30 + "'", int24 == 30);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "172.20.26.3" + "'", str26, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/healthcheck" + "'", str27, "/healthcheck");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 30 + "'", int28 == 30);
        org.junit.Assert.assertNotNull(applicationInfoManager29);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 30 + "'", int33 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig38);
        org.junit.Assert.assertNotNull(instanceInfo39);
        org.junit.Assert.assertNotNull(instanceInfo40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 443 + "'", int41 == 443);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 80 + "'", int42 == 80);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 97 + "'", int43 == 97);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 80 + "'", int45 == 80);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/healthcheck" + "'", str46, "/healthcheck");
        org.junit.Assert.assertTrue("'" + portType48 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType48.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(leaseInfo50);
        org.junit.Assert.assertNotNull(builder51);
    }

    @Test
    public void test04368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04368");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder18.setHealthCheckUrlsForDeser("", "hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setLastDirtyTimestamp((long) 443);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus26 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder23.setStatus(instanceStatus26);
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder27.setVIPAddressDeser("");
        com.netflix.appinfo.InstanceInfo instanceInfo30 = builder29.getRawInstance();
        java.util.Set<java.lang.String> strSet31 = instanceInfo30.getHealthCheckUrls();
        instanceInfo30.setSID("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS");
        com.netflix.appinfo.InstanceInfo.Builder builder34 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder36 = builder34.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder34.setCountryId(7002);
        com.netflix.appinfo.InstanceInfo.Builder builder41 = builder34.setHealthCheckUrlsForDeser("UNKNOWN", "UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder43 = builder41.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder45 = builder43.setIPAddr("/healthcheck");
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus47 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder48 = builder45.setStatus(instanceStatus47);
        instanceInfo30.setStatusWithoutDirty(instanceStatus47);
        java.lang.String str50 = instanceInfo30.getSID();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + instanceStatus26 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus26.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + instanceStatus47 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus47.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS" + "'", str50, "HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS");
    }

    @Test
    public void test04369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04369");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "/Status", "default", "inesserver2.windows.cin.ufpe.br:80", "default", "default" };
        com.netflix.appinfo.InstanceInfo instanceInfo7 = null;
        java.lang.String str8 = com.netflix.appinfo.InstanceInfo.getZone(strArray6, instanceInfo7);
        com.netflix.appinfo.InstanceInfo instanceInfo9 = null;
        java.lang.String str10 = com.netflix.appinfo.InstanceInfo.getZone(strArray6, instanceInfo9);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder11.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder11.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder11.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig18 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig18.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder17.setDataCenterInfo(dataCenterInfo19);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = myDataCenterInstanceConfig21.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder17.setDataCenterInfo(dataCenterInfo22);
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder17.setNamespace("na");
        com.netflix.appinfo.InstanceInfo instanceInfo26 = builder17.build();
        int int27 = instanceInfo26.getSecurePort();
        instanceInfo26.setSID("http://inesserver2.windows.cin.ufpe.br:80/Status");
        int int30 = instanceInfo26.getPort();
        java.lang.String str31 = com.netflix.appinfo.InstanceInfo.getZone(strArray6, instanceInfo26);
        java.lang.String str32 = instanceInfo26.getHomePageUrl();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus33 = instanceInfo26.getOverriddenStatus();
        java.lang.String str34 = instanceInfo26.getVersion();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 7002 + "'", int27 == 7002);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 7001 + "'", int30 == 7001);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + instanceStatus33 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus33.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "unknown" + "'", str34, "unknown");
    }

    @Test
    public void test04370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04370");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig1.getDataCenterInfo();
        int int4 = myDataCenterInstanceConfig1.getNonSecurePort();
        java.lang.String str5 = myDataCenterInstanceConfig1.getSecureHealthCheckUrl();
        java.lang.String str6 = myDataCenterInstanceConfig1.getHomePageUrl();
        int int7 = myDataCenterInstanceConfig1.getLeaseExpirationDurationInSeconds();
        java.lang.String str8 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        int int9 = myDataCenterInstanceConfig1.getLeaseExpirationDurationInSeconds();
        java.lang.String str10 = myDataCenterInstanceConfig1.getAppGroupName();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 80 + "'", int4 == 80);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 90 + "'", int7 == 90);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/healthcheck" + "'", str8, "/healthcheck");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 90 + "'", int9 == 90);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "unknown" + "'", str10, "unknown");
    }

    @Test
    public void test04371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04371");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig1.getDataCenterInfo();
        int int4 = myDataCenterInstanceConfig1.getNonSecurePort();
        java.lang.String str5 = myDataCenterInstanceConfig1.getAppname();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 80 + "'", int4 == 80);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "unknown" + "'", str5, "unknown");
    }

    @Test
    public void test04372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04372");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        com.netflix.appinfo.InstanceInfo instanceInfo1 = null;
        java.lang.String str2 = com.netflix.appinfo.InstanceInfo.getZone(strArray0, instanceInfo1);
        com.netflix.appinfo.InstanceInfo instanceInfo3 = null;
        java.lang.String str4 = com.netflix.appinfo.InstanceInfo.getZone(strArray0, instanceInfo3);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager5 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo6 = applicationInfoManager5.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int9 = myDataCenterInstanceConfig8.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo10 = myDataCenterInstanceConfig8.getDataCenterInfo();
        java.lang.String str11 = myDataCenterInstanceConfig8.getNamespace();
        boolean boolean12 = myDataCenterInstanceConfig8.isNonSecurePortEnabled();
        applicationInfoManager5.config = myDataCenterInstanceConfig8;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig14 = applicationInfoManager5.config;
        com.netflix.appinfo.InstanceInfo instanceInfo15 = applicationInfoManager5.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo16 = applicationInfoManager5.instanceInfo;
        int int17 = instanceInfo16.getSecurePort();
        boolean boolean18 = instanceInfo16.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo19 = new com.netflix.appinfo.InstanceInfo(instanceInfo16);
        com.netflix.appinfo.InstanceInfo instanceInfo20 = new com.netflix.appinfo.InstanceInfo(instanceInfo16);
        java.lang.String str21 = instanceInfo16.getAppGroupName();
        int int22 = instanceInfo16.getCountryId();
        java.lang.String str23 = com.netflix.appinfo.InstanceInfo.getZone(strArray0, instanceInfo16);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager24 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager24.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig27 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int28 = myDataCenterInstanceConfig27.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig27.getDataCenterInfo();
        java.lang.String str30 = myDataCenterInstanceConfig27.getNamespace();
        boolean boolean31 = myDataCenterInstanceConfig27.isNonSecurePortEnabled();
        applicationInfoManager24.config = myDataCenterInstanceConfig27;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig33 = applicationInfoManager24.config;
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager24.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager24.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType36 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo35.setActionType(actionType36);
        com.netflix.appinfo.LeaseInfo leaseInfo38 = null;
        instanceInfo35.setLeaseInfo(leaseInfo38);
        java.util.Set<java.lang.String> strSet40 = instanceInfo35.getHealthCheckUrls();
        java.lang.String str41 = instanceInfo35.getId();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager42 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo43 = applicationInfoManager42.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig45 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int46 = myDataCenterInstanceConfig45.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo47 = myDataCenterInstanceConfig45.getDataCenterInfo();
        java.lang.String str48 = myDataCenterInstanceConfig45.getNamespace();
        boolean boolean49 = myDataCenterInstanceConfig45.isNonSecurePortEnabled();
        applicationInfoManager42.config = myDataCenterInstanceConfig45;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig51 = applicationInfoManager42.config;
        com.netflix.appinfo.InstanceInfo instanceInfo52 = applicationInfoManager42.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo53 = applicationInfoManager42.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType54 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo53.setActionType(actionType54);
        instanceInfo35.setActionType(actionType54);
        int int57 = instanceInfo35.getPort();
        java.lang.String str58 = com.netflix.appinfo.InstanceInfo.getZone(strArray0, instanceInfo35);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager59 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo60 = applicationInfoManager59.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig62 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int63 = myDataCenterInstanceConfig62.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo64 = myDataCenterInstanceConfig62.getDataCenterInfo();
        java.lang.String str65 = myDataCenterInstanceConfig62.getNamespace();
        boolean boolean66 = myDataCenterInstanceConfig62.isNonSecurePortEnabled();
        applicationInfoManager59.config = myDataCenterInstanceConfig62;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig68 = applicationInfoManager59.config;
        com.netflix.appinfo.InstanceInfo instanceInfo69 = applicationInfoManager59.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo70 = applicationInfoManager59.instanceInfo;
        int int71 = instanceInfo70.getSecurePort();
        boolean boolean72 = instanceInfo70.isDirty();
        java.lang.String str73 = instanceInfo70.getHostName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType74 = instanceInfo70.getActionType();
        boolean boolean75 = instanceInfo70.isDirty();
        boolean boolean76 = instanceInfo70.isDirty();
        int int77 = instanceInfo70.getPort();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus79 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("/Status");
        instanceInfo70.setStatusWithoutDirty(instanceStatus79);
        java.lang.String str81 = com.netflix.appinfo.InstanceInfo.getZone(strArray0, instanceInfo70);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "default" + "'", str2, "default");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "default" + "'", str4, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager5);
        org.junit.Assert.assertNotNull(instanceInfo6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 30 + "'", int9 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertNotNull(instanceInfo16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 443 + "'", int17 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UNKNOWN" + "'", str21, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 97 + "'", int22 == 97);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "default" + "'", str23, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 30 + "'", int28 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertTrue("'" + actionType36 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType36.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str41, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager42);
        org.junit.Assert.assertNotNull(instanceInfo43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 30 + "'", int46 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig51);
        org.junit.Assert.assertNotNull(instanceInfo52);
        org.junit.Assert.assertNotNull(instanceInfo53);
        org.junit.Assert.assertTrue("'" + actionType54 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType54.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 80 + "'", int57 == 80);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "default" + "'", str58, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager59);
        org.junit.Assert.assertNotNull(instanceInfo60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 30 + "'", int63 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig68);
        org.junit.Assert.assertNotNull(instanceInfo69);
        org.junit.Assert.assertNotNull(instanceInfo70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 443 + "'", int71 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str73, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + actionType74 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType74.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 80 + "'", int77 == 80);
        org.junit.Assert.assertTrue("'" + instanceStatus79 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus79.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "default" + "'", str81, "default");
    }

    @Test
    public void test04373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04373");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder18.add("na", "/");
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder18.add("/Status", "");
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder27.setAppGroupName("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder29.setVIPAddress("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder31.setStatusPageUrl("172.20.26.3", "http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder35 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder37 = builder35.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder39 = builder35.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder41 = builder35.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder43 = builder41.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder45 = builder43.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder47 = builder43.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder49 = builder43.setCountryId((-1));
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager50 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo51 = applicationInfoManager50.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig53 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int54 = myDataCenterInstanceConfig53.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo55 = myDataCenterInstanceConfig53.getDataCenterInfo();
        java.lang.String str56 = myDataCenterInstanceConfig53.getNamespace();
        boolean boolean57 = myDataCenterInstanceConfig53.isNonSecurePortEnabled();
        applicationInfoManager50.config = myDataCenterInstanceConfig53;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig59 = applicationInfoManager50.config;
        com.netflix.appinfo.InstanceInfo instanceInfo60 = applicationInfoManager50.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo61 = applicationInfoManager50.instanceInfo;
        java.lang.Boolean boolean62 = instanceInfo61.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus63 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo61.setOverriddenStatus(instanceStatus63);
        int int65 = instanceInfo61.getSecurePort();
        java.lang.String str66 = instanceInfo61.getHostName();
        java.util.Map<java.lang.String, java.lang.String> strMap67 = instanceInfo61.getMetadata();
        instanceInfo61.setIsDirty(false);
        com.netflix.appinfo.LeaseInfo leaseInfo70 = instanceInfo61.getLeaseInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder71 = builder43.setLeaseInfo(leaseInfo70);
        com.netflix.appinfo.InstanceInfo.Builder builder72 = builder31.setLeaseInfo(leaseInfo70);
        com.netflix.appinfo.InstanceInfo.Builder builder74 = builder72.setPort(0);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus76 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS");
        com.netflix.appinfo.InstanceInfo.Builder builder77 = builder72.setOverriddenStatus(instanceStatus76);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(applicationInfoManager50);
        org.junit.Assert.assertNotNull(instanceInfo51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 30 + "'", int54 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig59);
        org.junit.Assert.assertNotNull(instanceInfo60);
        org.junit.Assert.assertNotNull(instanceInfo61);
        org.junit.Assert.assertEquals("'" + boolean62 + "' != '" + false + "'", boolean62, false);
        org.junit.Assert.assertTrue("'" + instanceStatus63 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus63.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 443 + "'", int65 == 443);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str66, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNull(leaseInfo70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + instanceStatus76 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus76.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder77);
    }

    @Test
    public void test04374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04374");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo4 = myDataCenterInstanceConfig2.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig5 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo4);
        java.lang.String str6 = myDataCenterInstanceConfig5.getAppname();
        java.lang.String str7 = myDataCenterInstanceConfig5.getNamespace();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig8 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager9 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager9.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int13 = myDataCenterInstanceConfig12.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo14 = myDataCenterInstanceConfig12.getDataCenterInfo();
        java.lang.String str15 = myDataCenterInstanceConfig12.getNamespace();
        boolean boolean16 = myDataCenterInstanceConfig12.isNonSecurePortEnabled();
        applicationInfoManager9.config = myDataCenterInstanceConfig12;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig18 = applicationInfoManager9.config;
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager9.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager9.instanceInfo;
        int int21 = instanceInfo20.getSecurePort();
        boolean boolean22 = instanceInfo20.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager23 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig8, instanceInfo20);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager24 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig5, instanceInfo20);
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager24;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig27 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int28 = myDataCenterInstanceConfig27.getLeaseRenewalIntervalInSeconds();
        boolean boolean29 = myDataCenterInstanceConfig27.isNonSecurePortEnabled();
        java.lang.String str30 = myDataCenterInstanceConfig27.getHealthCheckUrlPath();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager32 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig27, instanceInfo31);
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig33 = applicationInfoManager32.config;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig35 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int36 = myDataCenterInstanceConfig35.getLeaseRenewalIntervalInSeconds();
        int int37 = myDataCenterInstanceConfig35.getLeaseRenewalIntervalInSeconds();
        java.lang.String str38 = myDataCenterInstanceConfig35.getStatusPageUrlPath();
        applicationInfoManager32.config = myDataCenterInstanceConfig35;
        java.lang.String str40 = myDataCenterInstanceConfig35.getSecureHealthCheckUrl();
        java.lang.String str41 = myDataCenterInstanceConfig35.getSecureVirtualHostName();
        boolean boolean42 = myDataCenterInstanceConfig35.isNonSecurePortEnabled();
        applicationInfoManager24.config = myDataCenterInstanceConfig35;
        java.lang.String str44 = myDataCenterInstanceConfig35.getVirtualHostName();
        java.lang.String str45 = myDataCenterInstanceConfig35.getSecureVirtualHostName();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "unknown" + "'", str6, "unknown");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/Status" + "'", str7, "/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 30 + "'", int13 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 443 + "'", int21 == 443);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 30 + "'", int28 == 30);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "/healthcheck" + "'", str30, "/healthcheck");
        org.junit.Assert.assertNotNull(eurekaInstanceConfig33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 30 + "'", int36 == 30);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 30 + "'", int37 == 30);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/Status" + "'", str38, "/Status");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str44, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test04375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04375");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder7.setASGName("http://hi!:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder7.setSID("DEFAULT");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder11.setAppName("http://inesserver2.windows.cin.ufpe.br:80/");
        boolean boolean14 = builder11.isInitialized();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test04376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04376");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        java.lang.String str9 = myDataCenterInstanceConfig3.getSecureVirtualHostName();
        java.lang.String str10 = myDataCenterInstanceConfig3.getStatusPageUrlPath();
        java.lang.String str11 = myDataCenterInstanceConfig3.getHomePageUrlPath();
        boolean boolean12 = myDataCenterInstanceConfig3.isInstanceEnabledOnit();
        java.lang.String str13 = myDataCenterInstanceConfig3.getSecureVirtualHostName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/Status" + "'", str10, "/Status");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/" + "'", str11, "/");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test04377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04377");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder3 = builder0.setHealthCheckUrlsForDeser("/healthcheck", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder0.setNamespace("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder5.setVIPAddressDeser("inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder5.setHostName("http:///:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder9.setStatusPageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder9.setASGName("http://default:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder13.setHealthCheckUrls("unknown", "http://hi!:97/Status", "");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder17);
    }

    @Test
    public void test04378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04378");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        int int3 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        boolean boolean5 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = myDataCenterInstanceConfig1.getMetadataMap();
        java.lang.String str7 = myDataCenterInstanceConfig1.getAppname();
        java.lang.String str8 = myDataCenterInstanceConfig1.getNamespace();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = myDataCenterInstanceConfig1.getMetadataMap();
        java.lang.String str10 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        java.lang.String str11 = myDataCenterInstanceConfig1.getVirtualHostName();
        int int12 = myDataCenterInstanceConfig1.getLeaseExpirationDurationInSeconds();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/Status" + "'", str4, "/Status");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "unknown" + "'", str7, "unknown");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/Status" + "'", str10, "/Status");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str11, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 90 + "'", int12 == 90);
    }

    @Test
    public void test04379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04379");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        boolean boolean2 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        java.lang.String str3 = myDataCenterInstanceConfig1.getHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo4 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig1.getHostName(false);
        java.lang.String str7 = myDataCenterInstanceConfig1.getNamespace();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str9 = myDataCenterInstanceConfig1.getNamespace();
        int int10 = myDataCenterInstanceConfig1.getSecurePort();
        java.lang.String str11 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        java.lang.String str12 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(dataCenterInfo4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str6, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 443 + "'", int10 == 443);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/healthcheck" + "'", str11, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/healthcheck" + "'", str12, "/healthcheck");
    }

    @Test
    public void test04380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04380");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig3.getDataCenterInfo();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig3);
        boolean boolean10 = myDataCenterInstanceConfig3.getSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager11 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager11.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig14 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int15 = myDataCenterInstanceConfig14.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo16 = myDataCenterInstanceConfig14.getDataCenterInfo();
        java.lang.String str17 = myDataCenterInstanceConfig14.getNamespace();
        boolean boolean18 = myDataCenterInstanceConfig14.isNonSecurePortEnabled();
        applicationInfoManager11.config = myDataCenterInstanceConfig14;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig20 = applicationInfoManager11.config;
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager11.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo22 = applicationInfoManager11.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType23 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo22.setActionType(actionType23);
        java.lang.String str25 = instanceInfo22.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType26 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo22.setActionType(actionType26);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager28 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig3, instanceInfo22);
        java.lang.String str29 = instanceInfo22.getIPAddr();
        instanceInfo22.setLastDirtyTimestamp((java.lang.Long) 1636105966016L);
        java.lang.String str32 = instanceInfo22.getASGName();
        com.netflix.appinfo.InstanceInfo.Builder builder33 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo22);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 30 + "'", int15 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig20);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertTrue("'" + actionType23 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType23.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UNKNOWN" + "'", str25, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + actionType26 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType26.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "172.20.26.3" + "'", str29, "172.20.26.3");
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test04381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04381");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setSecurePort(30);
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder20.setAppGroupName("");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder22.setSecureVIPAddressDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder24.setASGName("http://default:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo27 = builder24.getRawInstance();
        com.netflix.appinfo.LeaseInfo leaseInfo28 = instanceInfo27.getLeaseInfo();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertNull(leaseInfo28);
    }

    @Test
    public void test04382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04382");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setPort(443);
        com.netflix.appinfo.InstanceInfo.Builder builder5 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder5.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder5.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder5.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo13 = myDataCenterInstanceConfig12.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder11.setDataCenterInfo(dataCenterInfo13);
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder11.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo instanceInfo17 = builder16.getRawInstance();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager18 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig20 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int21 = myDataCenterInstanceConfig20.getLeaseRenewalIntervalInSeconds();
        int int22 = myDataCenterInstanceConfig20.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager18.config = myDataCenterInstanceConfig20;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager18;
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus26 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("/Status");
        applicationInfoManager18.setInstanceStatus(instanceStatus26);
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder16.setOverriddenStatus(instanceStatus26);
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder28.setPort((int) (byte) 100);
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder28.setStatusPageUrlForDeser("unknown");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager33 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager33.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig36 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int37 = myDataCenterInstanceConfig36.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo38 = myDataCenterInstanceConfig36.getDataCenterInfo();
        java.lang.String str39 = myDataCenterInstanceConfig36.getNamespace();
        boolean boolean40 = myDataCenterInstanceConfig36.isNonSecurePortEnabled();
        applicationInfoManager33.config = myDataCenterInstanceConfig36;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig42 = applicationInfoManager33.config;
        com.netflix.appinfo.InstanceInfo instanceInfo43 = applicationInfoManager33.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo44 = applicationInfoManager33.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType45 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo44.setActionType(actionType45);
        com.netflix.appinfo.LeaseInfo leaseInfo47 = null;
        instanceInfo44.setLeaseInfo(leaseInfo47);
        java.lang.String str49 = instanceInfo44.getSID();
        com.netflix.appinfo.LeaseInfo leaseInfo50 = instanceInfo44.getLeaseInfo();
        instanceInfo44.setIsCoordinatingDiscoveryServer();
        java.lang.String str52 = instanceInfo44.getASGName();
        java.lang.String str53 = instanceInfo44.getHomePageUrl();
        java.lang.String str54 = instanceInfo44.getHostName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager55 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo56 = applicationInfoManager55.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig58 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int59 = myDataCenterInstanceConfig58.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo60 = myDataCenterInstanceConfig58.getDataCenterInfo();
        java.lang.String str61 = myDataCenterInstanceConfig58.getNamespace();
        boolean boolean62 = myDataCenterInstanceConfig58.isNonSecurePortEnabled();
        applicationInfoManager55.config = myDataCenterInstanceConfig58;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig64 = applicationInfoManager55.config;
        com.netflix.appinfo.InstanceInfo instanceInfo65 = applicationInfoManager55.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo66 = applicationInfoManager55.instanceInfo;
        int int67 = instanceInfo66.getSecurePort();
        boolean boolean68 = instanceInfo66.isDirty();
        java.lang.String str69 = instanceInfo66.getHostName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus70 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        instanceInfo66.setStatus(instanceStatus70);
        com.netflix.appinfo.InstanceInfo.PortType portType72 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean73 = instanceInfo66.isPortEnabled(portType72);
        boolean boolean74 = instanceInfo44.isPortEnabled(portType72);
        com.netflix.appinfo.InstanceInfo.Builder builder76 = builder32.enablePort(portType72, true);
        com.netflix.appinfo.InstanceInfo.Builder builder78 = builder4.enablePort(portType72, false);
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo instanceInfo79 = builder4.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: name is required!");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(dataCenterInfo13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(instanceInfo17);
        org.junit.Assert.assertNotNull(applicationInfoManager18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 30 + "'", int21 == 30);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 30 + "'", int22 == 30);
        org.junit.Assert.assertTrue("'" + instanceStatus26 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus26.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(applicationInfoManager33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 30 + "'", int37 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig42);
        org.junit.Assert.assertNotNull(instanceInfo43);
        org.junit.Assert.assertNotNull(instanceInfo44);
        org.junit.Assert.assertTrue("'" + actionType45 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType45.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "na" + "'", str49, "na");
        org.junit.Assert.assertNull(leaseInfo50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "http://default:80/Status" + "'", str52, "http://default:80/Status");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str53, "http://inesserver2.windows.cin.ufpe.br:80/");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str54, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager55);
        org.junit.Assert.assertNotNull(instanceInfo56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 30 + "'", int59 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig64);
        org.junit.Assert.assertNotNull(instanceInfo65);
        org.junit.Assert.assertNotNull(instanceInfo66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 30 + "'", int67 == 30);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str69, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + instanceStatus70 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus70.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertTrue("'" + portType72 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType72.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
    }

    @Test
    public void test04383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04383");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        boolean boolean13 = instanceInfo11.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        java.lang.String str15 = instanceInfo14.getVersion();
        instanceInfo14.setLastUpdatedTimestamp();
        java.lang.String str17 = instanceInfo14.getAppName();
        java.lang.String str18 = instanceInfo14.getSID();
        java.lang.String str19 = instanceInfo14.getASGName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager20 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager20.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig23 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int24 = myDataCenterInstanceConfig23.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = myDataCenterInstanceConfig23.getDataCenterInfo();
        java.lang.String str26 = myDataCenterInstanceConfig23.getNamespace();
        boolean boolean27 = myDataCenterInstanceConfig23.isNonSecurePortEnabled();
        applicationInfoManager20.config = myDataCenterInstanceConfig23;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig29 = applicationInfoManager20.config;
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager20.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager20.instanceInfo;
        java.lang.Boolean boolean32 = instanceInfo31.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus33 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo31.setOverriddenStatus(instanceStatus33);
        int int35 = instanceInfo31.getSecurePort();
        java.lang.String str36 = instanceInfo31.getHostName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager37 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo38 = applicationInfoManager37.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig40 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int41 = myDataCenterInstanceConfig40.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo42 = myDataCenterInstanceConfig40.getDataCenterInfo();
        java.lang.String str43 = myDataCenterInstanceConfig40.getNamespace();
        boolean boolean44 = myDataCenterInstanceConfig40.isNonSecurePortEnabled();
        applicationInfoManager37.config = myDataCenterInstanceConfig40;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig46 = applicationInfoManager37.config;
        com.netflix.appinfo.InstanceInfo instanceInfo47 = applicationInfoManager37.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo48 = applicationInfoManager37.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType49 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo48.setActionType(actionType49);
        com.netflix.appinfo.LeaseInfo leaseInfo51 = null;
        instanceInfo48.setLeaseInfo(leaseInfo51);
        java.lang.String str53 = instanceInfo48.getSID();
        com.netflix.appinfo.LeaseInfo leaseInfo54 = instanceInfo48.getLeaseInfo();
        boolean boolean55 = instanceInfo31.equals((java.lang.Object) instanceInfo48);
        com.netflix.appinfo.LeaseInfo leaseInfo56 = instanceInfo48.getLeaseInfo();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo57 = instanceInfo48.getDataCenterInfo();
        boolean boolean58 = instanceInfo14.equals((java.lang.Object) instanceInfo48);
        java.lang.String str59 = instanceInfo48.getASGName();
        java.lang.Boolean boolean60 = instanceInfo48.isCoordinatingDiscoveryServer();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 30 + "'", int12 == 30);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "unknown" + "'", str15, "unknown");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UNKNOWN" + "'", str17, "UNKNOWN");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "na" + "'", str18, "na");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "http://default:80/Status" + "'", str19, "http://default:80/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager20);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 30 + "'", int24 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig29);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + true + "'", boolean32, true);
        org.junit.Assert.assertTrue("'" + instanceStatus33 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus33.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 30 + "'", int35 == 30);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str36, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager37);
        org.junit.Assert.assertNotNull(instanceInfo38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 30 + "'", int41 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig46);
        org.junit.Assert.assertNotNull(instanceInfo47);
        org.junit.Assert.assertNotNull(instanceInfo48);
        org.junit.Assert.assertTrue("'" + actionType49 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType49.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "na" + "'", str53, "na");
        org.junit.Assert.assertNull(leaseInfo54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(leaseInfo56);
        org.junit.Assert.assertNotNull(dataCenterInfo57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://default:80/Status" + "'", str59, "http://default:80/Status");
        org.junit.Assert.assertEquals("'" + boolean60 + "' != '" + true + "'", boolean60, true);
    }

    @Test
    public void test04384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04384");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig14 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int15 = myDataCenterInstanceConfig14.getLeaseRenewalIntervalInSeconds();
        java.lang.String str16 = myDataCenterInstanceConfig14.getSecureVirtualHostName();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig14);
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig18 = applicationInfoManager0.config;
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "/Status", "default", "inesserver2.windows.cin.ufpe.br:80", "default", "default" };
        com.netflix.appinfo.InstanceInfo instanceInfo26 = null;
        java.lang.String str27 = com.netflix.appinfo.InstanceInfo.getZone(strArray25, instanceInfo26);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager28 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager28.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig31 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int32 = myDataCenterInstanceConfig31.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo33 = myDataCenterInstanceConfig31.getDataCenterInfo();
        java.lang.String str34 = myDataCenterInstanceConfig31.getNamespace();
        boolean boolean35 = myDataCenterInstanceConfig31.isNonSecurePortEnabled();
        applicationInfoManager28.config = myDataCenterInstanceConfig31;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig37 = applicationInfoManager28.config;
        com.netflix.appinfo.InstanceInfo instanceInfo38 = applicationInfoManager28.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo39 = applicationInfoManager28.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType40 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo39.setActionType(actionType40);
        com.netflix.appinfo.LeaseInfo leaseInfo42 = null;
        instanceInfo39.setLeaseInfo(leaseInfo42);
        java.lang.String str44 = instanceInfo39.getSID();
        java.lang.String str45 = com.netflix.appinfo.InstanceInfo.getZone(strArray25, instanceInfo39);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager46 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo47 = applicationInfoManager46.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig49 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int50 = myDataCenterInstanceConfig49.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo51 = myDataCenterInstanceConfig49.getDataCenterInfo();
        java.lang.String str52 = myDataCenterInstanceConfig49.getNamespace();
        boolean boolean53 = myDataCenterInstanceConfig49.isNonSecurePortEnabled();
        applicationInfoManager46.config = myDataCenterInstanceConfig49;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig55 = applicationInfoManager46.config;
        com.netflix.appinfo.InstanceInfo instanceInfo56 = applicationInfoManager46.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo57 = applicationInfoManager46.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType58 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo57.setActionType(actionType58);
        java.lang.String str60 = instanceInfo57.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.Builder builder61 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo57);
        com.netflix.appinfo.InstanceInfo instanceInfo62 = builder61.build();
        java.lang.String str63 = instanceInfo62.getIPAddr();
        java.lang.String str64 = com.netflix.appinfo.InstanceInfo.getZone(strArray25, instanceInfo62);
        java.lang.String str65 = instanceInfo62.getStatusPageUrl();
        com.netflix.appinfo.InstanceInfo instanceInfo66 = new com.netflix.appinfo.InstanceInfo(instanceInfo62);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager67 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig18, instanceInfo66);
        java.lang.String str68 = instanceInfo66.getAppName();
        java.lang.String str69 = instanceInfo66.getHostName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 30 + "'", int15 == 30);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig18);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(applicationInfoManager28);
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 30 + "'", int32 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig37);
        org.junit.Assert.assertNotNull(instanceInfo38);
        org.junit.Assert.assertNotNull(instanceInfo39);
        org.junit.Assert.assertTrue("'" + actionType40 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType40.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "na" + "'", str44, "na");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(applicationInfoManager46);
        org.junit.Assert.assertNotNull(instanceInfo47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 30 + "'", int50 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig55);
        org.junit.Assert.assertNotNull(instanceInfo56);
        org.junit.Assert.assertNotNull(instanceInfo57);
        org.junit.Assert.assertTrue("'" + actionType58 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType58.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "UNKNOWN" + "'", str60, "UNKNOWN");
        org.junit.Assert.assertNotNull(instanceInfo62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "172.20.26.3" + "'", str63, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str65, "http://inesserver2.windows.cin.ufpe.br:80/Status");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "UNKNOWN" + "'", str68, "UNKNOWN");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str69, "inesserver2.windows.cin.ufpe.br");
    }

    @Test
    public void test04385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04385");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager3 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo4 = applicationInfoManager3.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig6 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int7 = myDataCenterInstanceConfig6.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig6.getDataCenterInfo();
        java.lang.String str9 = myDataCenterInstanceConfig6.getNamespace();
        boolean boolean10 = myDataCenterInstanceConfig6.isNonSecurePortEnabled();
        applicationInfoManager3.config = myDataCenterInstanceConfig6;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig12 = applicationInfoManager3.config;
        com.netflix.appinfo.InstanceInfo instanceInfo13 = applicationInfoManager3.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager3.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType15 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo14.setActionType(actionType15);
        com.netflix.appinfo.LeaseInfo leaseInfo17 = null;
        instanceInfo14.setLeaseInfo(leaseInfo17);
        java.util.Set<java.lang.String> strSet19 = instanceInfo14.getHealthCheckUrls();
        java.lang.String str20 = instanceInfo14.getIPAddr();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager21 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo22 = applicationInfoManager21.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int25 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig24.getDataCenterInfo();
        java.lang.String str27 = myDataCenterInstanceConfig24.getNamespace();
        boolean boolean28 = myDataCenterInstanceConfig24.isNonSecurePortEnabled();
        applicationInfoManager21.config = myDataCenterInstanceConfig24;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig30 = applicationInfoManager21.config;
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager21.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager21.instanceInfo;
        int int33 = instanceInfo32.getSecurePort();
        boolean boolean34 = instanceInfo32.isDirty();
        java.lang.String str35 = instanceInfo32.getHostName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType36 = instanceInfo32.getActionType();
        boolean boolean37 = instanceInfo32.isDirty();
        boolean boolean38 = instanceInfo32.isDirty();
        int int39 = instanceInfo32.getPort();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus41 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("/Status");
        instanceInfo32.setStatusWithoutDirty(instanceStatus41);
        instanceInfo14.setStatusWithoutDirty(instanceStatus41);
        instanceInfo2.setStatusWithoutDirty(instanceStatus41);
        instanceInfo2.setIsDirty(false);
        instanceInfo2.setLastDirtyTimestamp((java.lang.Long) 1636105971992L);
        instanceInfo2.setLastUpdatedTimestamp();
        java.lang.String str50 = instanceInfo2.getVersion();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo2);
        org.junit.Assert.assertNotNull(applicationInfoManager3);
        org.junit.Assert.assertNotNull(instanceInfo4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 30 + "'", int7 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig12);
        org.junit.Assert.assertNotNull(instanceInfo13);
        org.junit.Assert.assertNotNull(instanceInfo14);
        org.junit.Assert.assertTrue("'" + actionType15 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType15.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "172.20.26.3" + "'", str20, "172.20.26.3");
        org.junit.Assert.assertNotNull(applicationInfoManager21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 30 + "'", int25 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 443 + "'", int33 == 443);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str35, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + actionType36 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType36.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 80 + "'", int39 == 80);
        org.junit.Assert.assertTrue("'" + instanceStatus41 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus41.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "unknown" + "'", str50, "unknown");
    }

    @Test
    public void test04386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04386");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        com.netflix.appinfo.InstanceInfo instanceInfo3 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig5 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int6 = myDataCenterInstanceConfig5.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo7 = myDataCenterInstanceConfig5.getDataCenterInfo();
        java.lang.String str8 = myDataCenterInstanceConfig5.getNamespace();
        boolean boolean9 = myDataCenterInstanceConfig5.isNonSecurePortEnabled();
        java.lang.String str10 = myDataCenterInstanceConfig5.getIpAddress();
        java.lang.String str11 = myDataCenterInstanceConfig5.getAppname();
        int int12 = myDataCenterInstanceConfig5.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig5);
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager0.instanceInfo;
        applicationInfoManager0.refreshDataCenterInfoIfRequired();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertNotNull(instanceInfo3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 30 + "'", int6 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "172.20.26.3" + "'", str10, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "unknown" + "'", str11, "unknown");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 30 + "'", int12 == 30);
        org.junit.Assert.assertNotNull(instanceInfo14);
    }

    @Test
    public void test04387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04387");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder2.setHealthCheckUrlsForDeser("unknown", "172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder10.setAppName("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setSecureVIPAddress("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder14.setHealthCheckUrlsForDeser("http://inesserver2.windows.cin.ufpe.br:80/Status", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo instanceInfo18 = builder14.build();
        java.lang.String str19 = instanceInfo18.getSID();
        java.lang.String str20 = instanceInfo18.getVIPAddress();
        int int21 = instanceInfo18.getSecurePort();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "na" + "'", str19, "na");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 7002 + "'", int21 == 7002);
    }

    @Test
    public void test04388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04388");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str2 = myDataCenterInstanceConfig1.getIpAddress();
        java.lang.String str3 = myDataCenterInstanceConfig1.getASGName();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo4 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str5 = myDataCenterInstanceConfig1.getAppGroupName();
        java.lang.String str6 = myDataCenterInstanceConfig1.getVirtualHostName();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "172.20.26.3" + "'", str2, "172.20.26.3");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(dataCenterInfo4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "unknown" + "'", str5, "unknown");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str6, "inesserver2.windows.cin.ufpe.br:80");
    }

    @Test
    public void test04389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04389");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig1.getDataCenterInfo();
        int int4 = myDataCenterInstanceConfig1.getLeaseExpirationDurationInSeconds();
        boolean boolean5 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        int int6 = myDataCenterInstanceConfig1.getSecurePort();
        java.lang.String str7 = myDataCenterInstanceConfig1.getHomePageUrl();
        java.lang.String str8 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        int int9 = myDataCenterInstanceConfig1.getSecurePort();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 90 + "'", int4 == 90);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 443 + "'", int6 == 443);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/healthcheck" + "'", str8, "/healthcheck");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 443 + "'", int9 == 443);
    }

    @Test
    public void test04390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04390");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = myDataCenterInstanceConfig1.getMetadataMap();
        java.lang.String str3 = myDataCenterInstanceConfig1.getStatusPageUrl();
        java.lang.String str4 = myDataCenterInstanceConfig1.getNamespace();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    }

    @Test
    public void test04391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04391");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig13 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int14 = myDataCenterInstanceConfig13.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo15 = myDataCenterInstanceConfig13.getDataCenterInfo();
        java.lang.String str17 = myDataCenterInstanceConfig13.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig13.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo18);
        java.lang.String str20 = myDataCenterInstanceConfig19.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = myDataCenterInstanceConfig19.getMetadataMap();
        applicationInfoManager0.registerAppMetadata(strMap21);
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager0.instanceInfo;
        java.lang.String str24 = instanceInfo23.getStatusPageUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = instanceInfo23.getDataCenterInfo();
        java.lang.String str26 = instanceInfo23.getAppName();
        java.util.Set<java.lang.String> strSet27 = instanceInfo23.getHealthCheckUrls();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 30 + "'", int14 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(instanceInfo23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str24, "http://inesserver2.windows.cin.ufpe.br:80/Status");
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UNKNOWN" + "'", str26, "UNKNOWN");
        org.junit.Assert.assertNotNull(strSet27);
    }

    @Test
    public void test04392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04392");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder2.setSecurePort(10);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder9.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder11.setPort((int) ' ');
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder13.setHomePageUrlForDeser("eureka.");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder13.setSecureVIPAddress("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder17.setASGName("HTTP://HI!:35/STATUS");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
    }

    @Test
    public void test04393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04393");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        java.lang.String str4 = myDataCenterInstanceConfig1.getVirtualHostName();
        java.lang.String str5 = myDataCenterInstanceConfig1.getHomePageUrl();
        com.netflix.appinfo.InstanceInfo.Builder builder6 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder6.setAppName("default");
        com.netflix.appinfo.InstanceInfo instanceInfo11 = builder6.build();
        boolean boolean12 = builder6.isInitialized();
        com.netflix.appinfo.InstanceInfo instanceInfo13 = builder6.getRawInstance();
        com.netflix.appinfo.LeaseInfo leaseInfo14 = instanceInfo13.getLeaseInfo();
        java.lang.String str15 = instanceInfo13.getAppGroupName();
        java.lang.String str16 = instanceInfo13.getStatusPageUrl();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager17 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo13);
        java.lang.String str18 = myDataCenterInstanceConfig1.getSecureHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str20 = myDataCenterInstanceConfig1.getAppGroupName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager21 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo22 = applicationInfoManager21.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int25 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig24.getDataCenterInfo();
        java.lang.String str27 = myDataCenterInstanceConfig24.getNamespace();
        boolean boolean28 = myDataCenterInstanceConfig24.isNonSecurePortEnabled();
        applicationInfoManager21.config = myDataCenterInstanceConfig24;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig30 = applicationInfoManager21.config;
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager21.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager21.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType33 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo32.setActionType(actionType33);
        com.netflix.appinfo.LeaseInfo leaseInfo35 = null;
        instanceInfo32.setLeaseInfo(leaseInfo35);
        java.util.Set<java.lang.String> strSet37 = instanceInfo32.getHealthCheckUrls();
        java.lang.String str38 = instanceInfo32.getId();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager39 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo40 = applicationInfoManager39.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig42 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int43 = myDataCenterInstanceConfig42.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo44 = myDataCenterInstanceConfig42.getDataCenterInfo();
        java.lang.String str45 = myDataCenterInstanceConfig42.getNamespace();
        boolean boolean46 = myDataCenterInstanceConfig42.isNonSecurePortEnabled();
        applicationInfoManager39.config = myDataCenterInstanceConfig42;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig48 = applicationInfoManager39.config;
        com.netflix.appinfo.InstanceInfo instanceInfo49 = applicationInfoManager39.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo50 = applicationInfoManager39.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType51 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo50.setActionType(actionType51);
        instanceInfo32.setActionType(actionType51);
        com.netflix.appinfo.InstanceInfo.PortType portType54 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        boolean boolean55 = instanceInfo32.isPortEnabled(portType54);
        com.netflix.appinfo.InstanceInfo instanceInfo56 = new com.netflix.appinfo.InstanceInfo(instanceInfo32);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo57 = instanceInfo56.getDataCenterInfo();
        long long58 = instanceInfo56.getLastUpdatedTimestamp();
        instanceInfo56.setIsDirty(true);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager61 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo56);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str4, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(instanceInfo13);
        org.junit.Assert.assertNull(leaseInfo14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "unknown" + "'", str20, "unknown");
        org.junit.Assert.assertNotNull(applicationInfoManager21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 30 + "'", int25 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertTrue("'" + actionType33 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType33.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(applicationInfoManager39);
        org.junit.Assert.assertNotNull(instanceInfo40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 30 + "'", int43 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig48);
        org.junit.Assert.assertNotNull(instanceInfo49);
        org.junit.Assert.assertNotNull(instanceInfo50);
        org.junit.Assert.assertTrue("'" + actionType51 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType51.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + portType54 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType54.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(dataCenterInfo57);
// flaky:         org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1636106127314L + "'", long58 == 1636106127314L);
    }

    @Test
    public void test04394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04394");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder23.add("http://inesserver2.windows.cin.ufpe.br:80/Status", "");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager27 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager27.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig30 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int31 = myDataCenterInstanceConfig30.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo32 = myDataCenterInstanceConfig30.getDataCenterInfo();
        java.lang.String str33 = myDataCenterInstanceConfig30.getNamespace();
        boolean boolean34 = myDataCenterInstanceConfig30.isNonSecurePortEnabled();
        applicationInfoManager27.config = myDataCenterInstanceConfig30;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig36 = applicationInfoManager27.config;
        com.netflix.appinfo.InstanceInfo instanceInfo37 = applicationInfoManager27.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo38 = applicationInfoManager27.instanceInfo;
        java.lang.Boolean boolean39 = instanceInfo38.isCoordinatingDiscoveryServer();
        java.lang.String str40 = instanceInfo38.getVIPAddress();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus41 = instanceInfo38.getOverriddenStatus();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo42 = instanceInfo38.getDataCenterInfo();
        com.netflix.appinfo.LeaseInfo leaseInfo43 = instanceInfo38.getLeaseInfo();
        com.netflix.appinfo.InstanceInfo.PortType portType44 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        boolean boolean45 = instanceInfo38.isPortEnabled(portType44);
        com.netflix.appinfo.InstanceInfo.Builder builder47 = builder23.enablePort(portType44, true);
        java.lang.Class<?> wildcardClass48 = portType44.getClass();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(applicationInfoManager27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 30 + "'", int31 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig36);
        org.junit.Assert.assertNotNull(instanceInfo37);
        org.junit.Assert.assertNotNull(instanceInfo38);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + false + "'", boolean39, false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + instanceStatus41 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus41.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNull(dataCenterInfo42);
        org.junit.Assert.assertNull(leaseInfo43);
        org.junit.Assert.assertTrue("'" + portType44 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType44.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test04395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04395");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        applicationInfoManager0.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.InstanceInfo instanceInfo3 = applicationInfoManager0.getInfo();
        applicationInfoManager0.refreshDataCenterInfoIfRequired();
        applicationInfoManager0.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig6 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        java.lang.String str7 = myDataCenterInstanceConfig6.getASGName();
        java.lang.String str8 = myDataCenterInstanceConfig6.getStatusPageUrlPath();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = myDataCenterInstanceConfig6.getMetadataMap();
        applicationInfoManager0.registerAppMetadata(strMap9);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager11 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager11.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig14 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int15 = myDataCenterInstanceConfig14.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo16 = myDataCenterInstanceConfig14.getDataCenterInfo();
        int int17 = myDataCenterInstanceConfig14.getLeaseExpirationDurationInSeconds();
        java.lang.String str18 = myDataCenterInstanceConfig14.getHomePageUrlPath();
        applicationInfoManager11.config = myDataCenterInstanceConfig14;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig20 = applicationInfoManager11.config;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = myDataCenterInstanceConfig21.getDataCenterInfo();
        applicationInfoManager11.config = myDataCenterInstanceConfig21;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig24 = applicationInfoManager11.config;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig26 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int27 = myDataCenterInstanceConfig26.getLeaseRenewalIntervalInSeconds();
        boolean boolean28 = myDataCenterInstanceConfig26.isNonSecurePortEnabled();
        int int29 = myDataCenterInstanceConfig26.getSecurePort();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo30 = myDataCenterInstanceConfig26.getDataCenterInfo();
        applicationInfoManager11.config = myDataCenterInstanceConfig26;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager32 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo33 = applicationInfoManager32.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig35 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int36 = myDataCenterInstanceConfig35.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo37 = myDataCenterInstanceConfig35.getDataCenterInfo();
        java.lang.String str38 = myDataCenterInstanceConfig35.getNamespace();
        boolean boolean39 = myDataCenterInstanceConfig35.isNonSecurePortEnabled();
        applicationInfoManager32.config = myDataCenterInstanceConfig35;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig41 = applicationInfoManager32.config;
        com.netflix.appinfo.InstanceInfo instanceInfo42 = applicationInfoManager32.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo43 = applicationInfoManager32.instanceInfo;
        int int44 = instanceInfo43.getSecurePort();
        boolean boolean45 = instanceInfo43.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo46 = new com.netflix.appinfo.InstanceInfo(instanceInfo43);
        applicationInfoManager11.instanceInfo = instanceInfo46;
        java.lang.String str48 = instanceInfo46.getId();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus49 = instanceInfo46.getOverriddenStatus();
        applicationInfoManager0.instanceInfo = instanceInfo46;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig51 = null;
        applicationInfoManager0.config = eurekaInstanceConfig51;
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/Status" + "'", str8, "/Status");
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(applicationInfoManager11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 30 + "'", int15 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 90 + "'", int17 == 90);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/" + "'", str18, "/");
        org.junit.Assert.assertNotNull(eurekaInstanceConfig20);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 30 + "'", int27 == 30);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 443 + "'", int29 == 443);
        org.junit.Assert.assertNotNull(dataCenterInfo30);
        org.junit.Assert.assertNotNull(applicationInfoManager32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 30 + "'", int36 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig41);
        org.junit.Assert.assertNotNull(instanceInfo42);
        org.junit.Assert.assertNotNull(instanceInfo43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 7002 + "'", int44 == 7002);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str48, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + instanceStatus49 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus49.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
    }

    @Test
    public void test04396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04396");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setNamespace("na");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder6.add("unknown", "UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder6.setSecureVIPAddressDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder6.setHostName("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setAppGroupName("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setHomePageUrlForDeser("http://default:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo26 = builder25.getRawInstance();
        int int27 = instanceInfo26.getSecurePort();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 7002 + "'", int27 == 7002);
    }

    @Test
    public void test04397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04397");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder12.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder12.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo instanceInfo20 = builder12.build();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager21 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo22 = applicationInfoManager21.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int25 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig24.getDataCenterInfo();
        java.lang.String str27 = myDataCenterInstanceConfig24.getNamespace();
        boolean boolean28 = myDataCenterInstanceConfig24.isNonSecurePortEnabled();
        applicationInfoManager21.config = myDataCenterInstanceConfig24;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig30 = applicationInfoManager21.config;
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager21.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager21.instanceInfo;
        java.lang.Boolean boolean33 = instanceInfo32.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus34 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo32.setOverriddenStatus(instanceStatus34);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager36 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo37 = applicationInfoManager36.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig39 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int40 = myDataCenterInstanceConfig39.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo41 = myDataCenterInstanceConfig39.getDataCenterInfo();
        java.lang.String str42 = myDataCenterInstanceConfig39.getNamespace();
        boolean boolean43 = myDataCenterInstanceConfig39.isNonSecurePortEnabled();
        applicationInfoManager36.config = myDataCenterInstanceConfig39;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig45 = applicationInfoManager36.config;
        com.netflix.appinfo.InstanceInfo instanceInfo46 = applicationInfoManager36.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo47 = applicationInfoManager36.instanceInfo;
        java.lang.Boolean boolean48 = instanceInfo47.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus49 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo47.setOverriddenStatus(instanceStatus49);
        instanceInfo47.setLastDirtyTimestamp((java.lang.Long) (-1L));
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus53 = instanceInfo47.getOverriddenStatus();
        instanceInfo32.setOverriddenStatus(instanceStatus53);
        instanceInfo20.setStatus(instanceStatus53);
        java.util.Set<java.lang.String> strSet56 = instanceInfo20.getHealthCheckUrls();
        java.lang.String str57 = instanceInfo20.getAppGroupName();
        int int58 = instanceInfo20.getCountryId();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertNotNull(applicationInfoManager21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 30 + "'", int25 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertEquals("'" + boolean33 + "' != '" + false + "'", boolean33, false);
        org.junit.Assert.assertTrue("'" + instanceStatus34 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus34.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(applicationInfoManager36);
        org.junit.Assert.assertNotNull(instanceInfo37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 30 + "'", int40 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig45);
        org.junit.Assert.assertNotNull(instanceInfo46);
        org.junit.Assert.assertNotNull(instanceInfo47);
        org.junit.Assert.assertEquals("'" + boolean48 + "' != '" + false + "'", boolean48, false);
        org.junit.Assert.assertTrue("'" + instanceStatus49 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus49.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + instanceStatus53 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus53.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "/" + "'", str57, "/");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
    }

    @Test
    public void test04398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04398");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        int int13 = instanceInfo11.getPort();
        int int14 = instanceInfo11.getCountryId();
        boolean boolean15 = instanceInfo11.isDirty();
        instanceInfo11.setIsDirty(false);
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = instanceInfo11.getDataCenterInfo();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7002 + "'", int12 == 7002);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 7001 + "'", int13 == 7001);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
    }

    @Test
    public void test04399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04399");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig1 = applicationInfoManager0.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager2 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.InstanceInfo instanceInfo3 = applicationInfoManager2.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig5 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int6 = myDataCenterInstanceConfig5.getLeaseRenewalIntervalInSeconds();
        java.lang.String str7 = myDataCenterInstanceConfig5.getVirtualHostName();
        java.lang.String str8 = myDataCenterInstanceConfig5.getASGName();
        boolean boolean9 = myDataCenterInstanceConfig5.isNonSecurePortEnabled();
        applicationInfoManager2.config = myDataCenterInstanceConfig5;
        java.lang.String str11 = myDataCenterInstanceConfig5.getAppname();
        java.lang.String str12 = myDataCenterInstanceConfig5.getHomePageUrl();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig5);
        int int14 = myDataCenterInstanceConfig5.getLeaseExpirationDurationInSeconds();
        java.lang.String str15 = myDataCenterInstanceConfig5.getHomePageUrlPath();
        java.lang.String str16 = myDataCenterInstanceConfig5.getIpAddress();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig1);
        org.junit.Assert.assertNotNull(applicationInfoManager2);
        org.junit.Assert.assertNotNull(instanceInfo3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 30 + "'", int6 == 30);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str7, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "unknown" + "'", str11, "unknown");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 90 + "'", int14 == 90);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "/" + "'", str15, "/");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "172.20.26.3" + "'", str16, "172.20.26.3");
    }

    @Test
    public void test04400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04400");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        java.lang.String str13 = instanceInfo11.getSID();
        java.util.Set<java.lang.String> strSet14 = instanceInfo11.getHealthCheckUrls();
        java.util.Set<java.lang.String> strSet15 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str16 = instanceInfo11.getASGName();
        instanceInfo11.setLastUpdatedTimestamp();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = instanceInfo11.getDataCenterInfo();
        boolean boolean19 = instanceInfo11.isDirty();
        java.lang.String str20 = instanceInfo11.getHostName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "na" + "'", str13, "na");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str20, "inesserver2.windows.cin.ufpe.br");
    }

    @Test
    public void test04401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04401");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        com.netflix.appinfo.InstanceInfo instanceInfo6 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int9 = myDataCenterInstanceConfig8.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo10 = myDataCenterInstanceConfig8.getDataCenterInfo();
        java.lang.String str11 = myDataCenterInstanceConfig8.getHealthCheckUrl();
        int int12 = myDataCenterInstanceConfig8.getLeaseExpirationDurationInSeconds();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig8);
        int int14 = myDataCenterInstanceConfig8.getLeaseExpirationDurationInSeconds();
        java.lang.String str15 = myDataCenterInstanceConfig8.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = myDataCenterInstanceConfig8.getMetadataMap();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(instanceInfo6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 30 + "'", int9 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 90 + "'", int12 == 90);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 90 + "'", int14 == 90);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test04402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04402");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        applicationInfoManager0.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.InstanceInfo instanceInfo3 = applicationInfoManager0.instanceInfo;
        java.lang.String str4 = instanceInfo3.getIPAddr();
        com.netflix.appinfo.InstanceInfo.Builder builder5 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo3);
        com.netflix.appinfo.InstanceInfo.Builder builder6 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder6.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder14.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder14.setHomePageUrlForDeser("");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager19 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager19.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig22 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int23 = myDataCenterInstanceConfig22.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo24 = myDataCenterInstanceConfig22.getDataCenterInfo();
        java.lang.String str25 = myDataCenterInstanceConfig22.getNamespace();
        boolean boolean26 = myDataCenterInstanceConfig22.isNonSecurePortEnabled();
        applicationInfoManager19.config = myDataCenterInstanceConfig22;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig28 = applicationInfoManager19.config;
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager19.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager19.instanceInfo;
        int int31 = instanceInfo30.getSecurePort();
        boolean boolean32 = instanceInfo30.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo33 = new com.netflix.appinfo.InstanceInfo(instanceInfo30);
        com.netflix.appinfo.InstanceInfo instanceInfo34 = new com.netflix.appinfo.InstanceInfo(instanceInfo30);
        java.lang.String str35 = instanceInfo30.getAppGroupName();
        int int36 = instanceInfo30.getCountryId();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus37 = instanceInfo30.getStatus();
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder18.setStatus(instanceStatus37);
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder38.setSID("/healthcheck");
        boolean boolean41 = instanceInfo3.equals((java.lang.Object) builder40);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "172.20.26.3" + "'", str4, "172.20.26.3");
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(applicationInfoManager19);
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 30 + "'", int23 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig28);
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 443 + "'", int31 == 443);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "UNKNOWN" + "'", str35, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + instanceStatus37 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING + "'", instanceStatus37.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test04403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04403");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.ActionType actionType19 = instanceInfo11.getActionType();
        java.lang.String str20 = instanceInfo11.getSID();
        java.lang.String str21 = instanceInfo11.getSecureVipAddress();
        java.lang.String str22 = instanceInfo11.getAppGroupName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + actionType19 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType19.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "na" + "'", str20, "na");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UNKNOWN" + "'", str22, "UNKNOWN");
    }

    @Test
    public void test04404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04404");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80");
        java.lang.String str2 = myDataCenterInstanceConfig1.getHealthCheckUrl();
        boolean boolean3 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        java.lang.String str4 = myDataCenterInstanceConfig1.getASGName();
        java.lang.String str5 = myDataCenterInstanceConfig1.getHomePageUrl();
        int int6 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 30 + "'", int6 == 30);
    }

    @Test
    public void test04405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04405");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder2.setSecurePort(10);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder2.setAppName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder11.setASGName("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:10/STATUS");
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder16 = builder11.setHomePageUrl("default", "http://inesserver2.windows.cin.ufpe.br:80/");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
    }

    @Test
    public void test04406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04406");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo4 = myDataCenterInstanceConfig2.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig5 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo4);
        java.lang.String str6 = myDataCenterInstanceConfig5.getAppname();
        java.lang.String str7 = myDataCenterInstanceConfig5.getNamespace();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig8 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager9 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager9.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int13 = myDataCenterInstanceConfig12.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo14 = myDataCenterInstanceConfig12.getDataCenterInfo();
        java.lang.String str15 = myDataCenterInstanceConfig12.getNamespace();
        boolean boolean16 = myDataCenterInstanceConfig12.isNonSecurePortEnabled();
        applicationInfoManager9.config = myDataCenterInstanceConfig12;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig18 = applicationInfoManager9.config;
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager9.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager9.instanceInfo;
        int int21 = instanceInfo20.getSecurePort();
        boolean boolean22 = instanceInfo20.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager23 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig8, instanceInfo20);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager24 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig5, instanceInfo20);
        java.lang.String str25 = instanceInfo20.getHomePageUrl();
        long long26 = instanceInfo20.getLastUpdatedTimestamp();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus27 = null;
        instanceInfo20.setOverriddenStatus(instanceStatus27);
        instanceInfo20.setLastUpdatedTimestamp();
        boolean boolean30 = instanceInfo20.isDirty();
        java.lang.String str31 = instanceInfo20.getASGName();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "unknown" + "'", str6, "unknown");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/Status" + "'", str7, "/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 30 + "'", int13 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 443 + "'", int21 == 443);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str25, "http://inesserver2.windows.cin.ufpe.br:80/");
// flaky:         org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1636106127505L + "'", long26 == 1636106127505L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test04407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04407");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str2 = myDataCenterInstanceConfig1.getIpAddress();
        java.lang.String str3 = myDataCenterInstanceConfig1.getASGName();
        java.lang.String str4 = myDataCenterInstanceConfig1.getAppname();
        java.lang.String str5 = myDataCenterInstanceConfig1.getVirtualHostName();
        java.lang.String str6 = myDataCenterInstanceConfig1.getIpAddress();
        com.netflix.appinfo.InstanceInfo instanceInfo7 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager8 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo7);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "172.20.26.3" + "'", str2, "172.20.26.3");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "unknown" + "'", str4, "unknown");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str5, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "172.20.26.3" + "'", str6, "172.20.26.3");
    }

    @Test
    public void test04408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04408");
        com.netflix.appinfo.DataCenterInfo dataCenterInfo1 = null;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("", dataCenterInfo1);
        boolean boolean3 = myDataCenterInstanceConfig2.getSecurePortEnabled();
        java.lang.String str4 = myDataCenterInstanceConfig2.getHomePageUrl();
        boolean boolean5 = myDataCenterInstanceConfig2.getSecurePortEnabled();
        java.lang.String str6 = myDataCenterInstanceConfig2.getStatusPageUrlPath();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "/Status" + "'", str6, "/Status");
    }

    @Test
    public void test04409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04409");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo instanceInfo12 = builder11.getRawInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = instanceInfo12.getMetadata();
        java.lang.Boolean boolean14 = instanceInfo12.isCoordinatingDiscoveryServer();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
    }

    @Test
    public void test04410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04410");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int11 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        int int12 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        java.lang.String str13 = myDataCenterInstanceConfig10.getStatusPageUrlPath();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig10);
        applicationInfoManager0.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager16 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo17 = applicationInfoManager16.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int20 = myDataCenterInstanceConfig19.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo21 = myDataCenterInstanceConfig19.getDataCenterInfo();
        java.lang.String str22 = myDataCenterInstanceConfig19.getNamespace();
        boolean boolean23 = myDataCenterInstanceConfig19.isNonSecurePortEnabled();
        applicationInfoManager16.config = myDataCenterInstanceConfig19;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig25 = applicationInfoManager16.config;
        com.netflix.appinfo.InstanceInfo instanceInfo26 = applicationInfoManager16.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager16.instanceInfo;
        int int28 = instanceInfo27.getSecurePort();
        boolean boolean29 = instanceInfo27.isDirty();
        java.lang.String str30 = instanceInfo27.getHostName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType31 = instanceInfo27.getActionType();
        boolean boolean32 = instanceInfo27.isDirty();
        boolean boolean33 = instanceInfo27.isDirty();
        int int34 = instanceInfo27.getPort();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus36 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("/Status");
        instanceInfo27.setStatusWithoutDirty(instanceStatus36);
        applicationInfoManager0.instanceInfo = instanceInfo27;
        com.netflix.appinfo.InstanceInfo instanceInfo39 = new com.netflix.appinfo.InstanceInfo(instanceInfo27);
        com.netflix.appinfo.InstanceInfo.ActionType actionType40 = instanceInfo27.getActionType();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus41 = instanceInfo27.getStatus();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 30 + "'", int12 == 30);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/Status" + "'", str13, "/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager16);
        org.junit.Assert.assertNotNull(instanceInfo17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 30 + "'", int20 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 443 + "'", int28 == 443);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str30, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNull(actionType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 80 + "'", int34 == 80);
        org.junit.Assert.assertTrue("'" + instanceStatus36 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus36.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNull(actionType40);
        org.junit.Assert.assertTrue("'" + instanceStatus41 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus41.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
    }

    @Test
    public void test04411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04411");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager7 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo8 = applicationInfoManager7.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int11 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo12 = myDataCenterInstanceConfig10.getDataCenterInfo();
        java.lang.String str13 = myDataCenterInstanceConfig10.getNamespace();
        boolean boolean14 = myDataCenterInstanceConfig10.isNonSecurePortEnabled();
        applicationInfoManager7.config = myDataCenterInstanceConfig10;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig16 = applicationInfoManager7.config;
        com.netflix.appinfo.InstanceInfo instanceInfo17 = applicationInfoManager7.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager7.instanceInfo;
        int int19 = instanceInfo18.getSecurePort();
        boolean boolean20 = instanceInfo18.isDirty();
        java.lang.String str21 = instanceInfo18.getHostName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType22 = instanceInfo18.getActionType();
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder0.setActionType(actionType22);
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder0.setAppGroupName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder28 = builder25.setStatusPageUrl("unknown", "http://inesserver2.windows.cin.ufpe.br:10/Status");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(applicationInfoManager7);
        org.junit.Assert.assertNotNull(instanceInfo8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig16);
        org.junit.Assert.assertNotNull(instanceInfo17);
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 443 + "'", int19 == 443);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str21, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNull(actionType22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
    }

    @Test
    public void test04412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04412");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig3.getDataCenterInfo();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig3);
        boolean boolean10 = myDataCenterInstanceConfig3.getSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager11 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager11.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig14 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int15 = myDataCenterInstanceConfig14.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo16 = myDataCenterInstanceConfig14.getDataCenterInfo();
        java.lang.String str17 = myDataCenterInstanceConfig14.getNamespace();
        boolean boolean18 = myDataCenterInstanceConfig14.isNonSecurePortEnabled();
        applicationInfoManager11.config = myDataCenterInstanceConfig14;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig20 = applicationInfoManager11.config;
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager11.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo22 = applicationInfoManager11.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType23 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo22.setActionType(actionType23);
        java.lang.String str25 = instanceInfo22.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType26 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo22.setActionType(actionType26);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager28 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig3, instanceInfo22);
        applicationInfoManager28.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager28.instanceInfo;
        java.lang.Class<?> wildcardClass31 = applicationInfoManager28.getClass();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 30 + "'", int15 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig20);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertTrue("'" + actionType23 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType23.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UNKNOWN" + "'", str25, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + actionType26 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType26.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test04413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04413");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder20.add("/healthcheck", "UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder20.setPort((int) (short) 100);
        com.netflix.appinfo.InstanceInfo instanceInfo26 = builder25.getRawInstance();
        java.lang.String str27 = instanceInfo26.getVIPAddress();
        int int28 = instanceInfo26.getCountryId();
        com.netflix.appinfo.InstanceInfo.Builder builder29 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder29.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder29.setAppName("default");
        com.netflix.appinfo.InstanceInfo instanceInfo34 = builder29.build();
        java.lang.Boolean boolean35 = instanceInfo34.isCoordinatingDiscoveryServer();
        instanceInfo34.setIsCoordinatingDiscoveryServer();
        boolean boolean37 = instanceInfo34.isDirty();
        java.lang.String str38 = instanceInfo34.getSID();
        boolean boolean39 = instanceInfo26.equals((java.lang.Object) instanceInfo34);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str27, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertEquals("'" + boolean35 + "' != '" + false + "'", boolean35, false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "na" + "'", str38, "na");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test04414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04414");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        int int13 = instanceInfo11.getPort();
        int int14 = instanceInfo11.getCountryId();
        boolean boolean15 = instanceInfo11.isDirty();
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
    }

    @Test
    public void test04415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04415");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder18.add("na", "/");
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder18.add("/Status", "");
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder18.setHealthCheckUrls("inesserver2.windows.cin.ufpe.br", "", "172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder18.setHealthCheckUrlsForDeser("/Status", "");
        com.netflix.appinfo.InstanceInfo.Builder builder37 = builder18.setStatusPageUrl("inesserver2.windows.cin.ufpe.br", "");
        com.netflix.appinfo.InstanceInfo.Builder builder39 = builder37.setSecureVIPAddress("default");
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus41 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("http://hi!:35/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder42 = builder37.setOverriddenStatus(instanceStatus41);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + instanceStatus41 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus41.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder42);
    }

    @Test
    public void test04416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04416");
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig0 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager1 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig4.getDataCenterInfo();
        java.lang.String str7 = myDataCenterInstanceConfig4.getNamespace();
        boolean boolean8 = myDataCenterInstanceConfig4.isNonSecurePortEnabled();
        applicationInfoManager1.config = myDataCenterInstanceConfig4;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig10 = applicationInfoManager1.config;
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager1.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager1.instanceInfo;
        int int13 = instanceInfo12.getSecurePort();
        boolean boolean14 = instanceInfo12.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig0, instanceInfo12);
        com.netflix.appinfo.InstanceInfo.Builder builder16 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder16.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder16.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder16.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig23 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo24 = myDataCenterInstanceConfig23.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder22.setDataCenterInfo(dataCenterInfo24);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig26 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo27 = myDataCenterInstanceConfig26.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder22.setDataCenterInfo(dataCenterInfo27);
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder28.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder28.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder35 = builder28.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo instanceInfo36 = builder28.build();
        com.netflix.appinfo.InstanceInfo instanceInfo37 = builder28.getRawInstance();
        applicationInfoManager15.instanceInfo = instanceInfo37;
        com.netflix.appinfo.InstanceInfo instanceInfo39 = applicationInfoManager15.getInfo();
        org.junit.Assert.assertNotNull(applicationInfoManager1);
        org.junit.Assert.assertNotNull(instanceInfo2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 443 + "'", int13 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(dataCenterInfo24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(dataCenterInfo27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(instanceInfo36);
        org.junit.Assert.assertNotNull(instanceInfo37);
        org.junit.Assert.assertNotNull(instanceInfo39);
    }

    @Test
    public void test04417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04417");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder7.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder9.add("http://inesserver2.windows.cin.ufpe.br:80/Status", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus14 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("na");
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder12.setStatus(instanceStatus14);
        com.netflix.appinfo.InstanceInfo instanceInfo16 = builder12.getRawInstance();
        java.lang.Class<?> wildcardClass17 = instanceInfo16.getClass();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + instanceStatus14 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus14.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(instanceInfo16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test04418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04418");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig12 = applicationInfoManager0.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager13 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager13.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig16 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int17 = myDataCenterInstanceConfig16.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig16.getDataCenterInfo();
        java.lang.String str19 = myDataCenterInstanceConfig16.getNamespace();
        boolean boolean20 = myDataCenterInstanceConfig16.isNonSecurePortEnabled();
        applicationInfoManager13.config = myDataCenterInstanceConfig16;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig22 = applicationInfoManager13.config;
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager13.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo24 = applicationInfoManager13.instanceInfo;
        java.lang.Boolean boolean25 = instanceInfo24.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus26 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo24.setOverriddenStatus(instanceStatus26);
        applicationInfoManager0.instanceInfo = instanceInfo24;
        java.lang.String str29 = instanceInfo24.getHostName();
        instanceInfo24.setSID("");
        instanceInfo24.setLastUpdatedTimestamp();
        java.lang.String str33 = instanceInfo24.getSecureVipAddress();
        int int34 = instanceInfo24.getPort();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig12);
        org.junit.Assert.assertNotNull(applicationInfoManager13);
        org.junit.Assert.assertNotNull(instanceInfo14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig22);
        org.junit.Assert.assertNotNull(instanceInfo23);
        org.junit.Assert.assertNotNull(instanceInfo24);
        org.junit.Assert.assertEquals("'" + boolean25 + "' != '" + false + "'", boolean25, false);
        org.junit.Assert.assertTrue("'" + instanceStatus26 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus26.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/healthcheck" + "'", str33, "/healthcheck");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 7001 + "'", int34 == 7001);
    }

    @Test
    public void test04419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04419");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        java.lang.Boolean boolean12 = instanceInfo11.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus13 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo11.setOverriddenStatus(instanceStatus13);
        instanceInfo11.setLastDirtyTimestamp((java.lang.Long) 1636105964629L);
        instanceInfo11.setSID("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo instanceInfo19 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        java.lang.String str20 = instanceInfo11.getVersion();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertTrue("'" + instanceStatus13 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus13.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "unknown" + "'", str20, "unknown");
    }

    @Test
    public void test04420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04420");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig1.getDataCenterInfo();
        int int4 = myDataCenterInstanceConfig1.getNonSecurePort();
        java.lang.String str5 = myDataCenterInstanceConfig1.getIpAddress();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager6 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int9 = myDataCenterInstanceConfig8.getLeaseRenewalIntervalInSeconds();
        int int10 = myDataCenterInstanceConfig8.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager6.config = myDataCenterInstanceConfig8;
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager6.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig14 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int15 = myDataCenterInstanceConfig14.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo16 = myDataCenterInstanceConfig14.getDataCenterInfo();
        java.lang.String str17 = myDataCenterInstanceConfig14.getHealthCheckUrl();
        int int18 = myDataCenterInstanceConfig14.getLeaseExpirationDurationInSeconds();
        applicationInfoManager6.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig14);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int22 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        int int23 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        java.lang.String str24 = myDataCenterInstanceConfig21.getStatusPageUrlPath();
        boolean boolean25 = myDataCenterInstanceConfig21.getSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager26 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager26.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig29 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int30 = myDataCenterInstanceConfig29.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo31 = myDataCenterInstanceConfig29.getDataCenterInfo();
        java.lang.String str32 = myDataCenterInstanceConfig29.getNamespace();
        boolean boolean33 = myDataCenterInstanceConfig29.isNonSecurePortEnabled();
        applicationInfoManager26.config = myDataCenterInstanceConfig29;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig35 = applicationInfoManager26.config;
        com.netflix.appinfo.InstanceInfo instanceInfo36 = applicationInfoManager26.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo37 = applicationInfoManager26.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType38 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo37.setActionType(actionType38);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager40 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo41 = applicationInfoManager40.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig43 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int44 = myDataCenterInstanceConfig43.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo45 = myDataCenterInstanceConfig43.getDataCenterInfo();
        java.lang.String str46 = myDataCenterInstanceConfig43.getNamespace();
        boolean boolean47 = myDataCenterInstanceConfig43.isNonSecurePortEnabled();
        applicationInfoManager40.config = myDataCenterInstanceConfig43;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig49 = applicationInfoManager40.config;
        com.netflix.appinfo.InstanceInfo instanceInfo50 = applicationInfoManager40.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo51 = applicationInfoManager40.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType52 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo51.setActionType(actionType52);
        instanceInfo37.setActionType(actionType52);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager55 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig21, instanceInfo37);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus57 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("inesserver2.windows.cin.ufpe.br:80");
        instanceInfo37.setOverriddenStatus(instanceStatus57);
        applicationInfoManager6.setInstanceStatus(instanceStatus57);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager60 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig62 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int63 = myDataCenterInstanceConfig62.getLeaseRenewalIntervalInSeconds();
        int int64 = myDataCenterInstanceConfig62.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager60.config = myDataCenterInstanceConfig62;
        java.lang.String str66 = myDataCenterInstanceConfig62.getHealthCheckUrlPath();
        java.lang.String str67 = myDataCenterInstanceConfig62.getNamespace();
        java.util.Map<java.lang.String, java.lang.String> strMap68 = myDataCenterInstanceConfig62.getMetadataMap();
        applicationInfoManager6.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig62);
        com.netflix.appinfo.InstanceInfo instanceInfo70 = applicationInfoManager6.instanceInfo;
        int int71 = instanceInfo70.getSecurePort();
        java.lang.String str72 = instanceInfo70.getASGName();
        int int73 = instanceInfo70.getPort();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager74 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo70);
        java.lang.String str75 = myDataCenterInstanceConfig1.getASGName();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 80 + "'", int4 == 80);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "172.20.26.3" + "'", str5, "172.20.26.3");
        org.junit.Assert.assertNotNull(applicationInfoManager6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 30 + "'", int9 == 30);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 30 + "'", int15 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 90 + "'", int18 == 90);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 30 + "'", int22 == 30);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 30 + "'", int23 == 30);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/Status" + "'", str24, "/Status");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 30 + "'", int30 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig35);
        org.junit.Assert.assertNotNull(instanceInfo36);
        org.junit.Assert.assertNotNull(instanceInfo37);
        org.junit.Assert.assertTrue("'" + actionType38 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType38.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager40);
        org.junit.Assert.assertNotNull(instanceInfo41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 30 + "'", int44 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig49);
        org.junit.Assert.assertNotNull(instanceInfo50);
        org.junit.Assert.assertNotNull(instanceInfo51);
        org.junit.Assert.assertTrue("'" + actionType52 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType52.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + instanceStatus57 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus57.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(applicationInfoManager60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 30 + "'", int63 == 30);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 30 + "'", int64 == 30);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "/healthcheck" + "'", str66, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(instanceInfo70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 443 + "'", int71 == 443);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 80 + "'", int73 == 80);
        org.junit.Assert.assertNull(str75);
    }

    @Test
    public void test04421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04421");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str3 = myDataCenterInstanceConfig1.getNamespace();
        int int4 = myDataCenterInstanceConfig1.getSecurePort();
        java.lang.String str5 = myDataCenterInstanceConfig1.getSecureVirtualHostName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager6 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo7 = applicationInfoManager6.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig9.getDataCenterInfo();
        java.lang.String str12 = myDataCenterInstanceConfig9.getNamespace();
        boolean boolean13 = myDataCenterInstanceConfig9.isNonSecurePortEnabled();
        applicationInfoManager6.config = myDataCenterInstanceConfig9;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig15 = applicationInfoManager6.config;
        com.netflix.appinfo.InstanceInfo instanceInfo16 = applicationInfoManager6.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo17 = applicationInfoManager6.instanceInfo;
        int int18 = instanceInfo17.getSecurePort();
        int int19 = instanceInfo17.getPort();
        int int20 = instanceInfo17.getCountryId();
        boolean boolean21 = instanceInfo17.isDirty();
        int int22 = instanceInfo17.getPort();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager23 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo17);
        applicationInfoManager23.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager23.instanceInfo;
        instanceInfo25.setLastUpdatedTimestamp();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 443 + "'", int4 == 443);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(applicationInfoManager6);
        org.junit.Assert.assertNotNull(instanceInfo7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig15);
        org.junit.Assert.assertNotNull(instanceInfo16);
        org.junit.Assert.assertNotNull(instanceInfo17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 443 + "'", int18 == 443);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 80 + "'", int19 == 80);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 80 + "'", int22 == 80);
        org.junit.Assert.assertNotNull(instanceInfo25);
    }

    @Test
    public void test04422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04422");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        java.lang.String str6 = myDataCenterInstanceConfig2.getIpAddress();
        java.lang.String str7 = myDataCenterInstanceConfig2.getHealthCheckUrl();
        java.lang.String str8 = myDataCenterInstanceConfig2.getStatusPageUrl();
        java.lang.String str9 = myDataCenterInstanceConfig2.getIpAddress();
        java.lang.String str11 = myDataCenterInstanceConfig2.getHostName(true);
        java.lang.String str12 = myDataCenterInstanceConfig2.getHomePageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = myDataCenterInstanceConfig2.getMetadataMap();
        boolean boolean14 = myDataCenterInstanceConfig2.isNonSecurePortEnabled();
        boolean boolean15 = myDataCenterInstanceConfig2.isInstanceEnabledOnit();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "172.20.26.3" + "'", str6, "172.20.26.3");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "172.20.26.3" + "'", str9, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str11, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test04423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04423");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig13 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int14 = myDataCenterInstanceConfig13.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo15 = myDataCenterInstanceConfig13.getDataCenterInfo();
        java.lang.String str17 = myDataCenterInstanceConfig13.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig13.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo18);
        java.lang.String str20 = myDataCenterInstanceConfig19.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = myDataCenterInstanceConfig19.getMetadataMap();
        applicationInfoManager0.registerAppMetadata(strMap21);
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager0.instanceInfo;
        int int24 = instanceInfo23.getPort();
        java.util.Set<java.lang.String> strSet25 = instanceInfo23.getHealthCheckUrls();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 30 + "'", int14 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(instanceInfo23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 80 + "'", int24 == 80);
        org.junit.Assert.assertNotNull(strSet25);
    }

    @Test
    public void test04424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04424");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager8 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int11 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        int int12 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager8.config = myDataCenterInstanceConfig10;
        java.lang.String str14 = myDataCenterInstanceConfig10.getIpAddress();
        java.lang.String str15 = myDataCenterInstanceConfig10.getHealthCheckUrl();
        java.lang.String str16 = myDataCenterInstanceConfig10.getStatusPageUrl();
        java.lang.String str17 = myDataCenterInstanceConfig10.getNamespace();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder2.setDataCenterInfo(dataCenterInfo18);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder2.setVIPAddressDeser("na");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder2.setIPAddr("");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(applicationInfoManager8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 30 + "'", int12 == 30);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "172.20.26.3" + "'", str14, "172.20.26.3");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
    }

    @Test
    public void test04425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04425");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager1 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig4.getDataCenterInfo();
        java.lang.String str7 = myDataCenterInstanceConfig4.getNamespace();
        boolean boolean8 = myDataCenterInstanceConfig4.isNonSecurePortEnabled();
        applicationInfoManager1.config = myDataCenterInstanceConfig4;
        int int10 = myDataCenterInstanceConfig4.getLeaseExpirationDurationInSeconds();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = myDataCenterInstanceConfig4.getMetadataMap();
        java.lang.String str12 = myDataCenterInstanceConfig4.getHealthCheckUrl();
        java.lang.String str13 = myDataCenterInstanceConfig4.getHomePageUrlPath();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo14 = myDataCenterInstanceConfig4.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig15 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo14);
        java.lang.String str16 = myDataCenterInstanceConfig15.getStatusPageUrlPath();
        java.lang.String str17 = myDataCenterInstanceConfig15.getStatusPageUrl();
        org.junit.Assert.assertNotNull(applicationInfoManager1);
        org.junit.Assert.assertNotNull(instanceInfo2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 90 + "'", int10 == 90);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/" + "'", str13, "/");
        org.junit.Assert.assertNotNull(dataCenterInfo14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/Status" + "'", str16, "/Status");
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test04426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04426");
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus1 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("HTTP:///HEALTHCHECK:80/STATUS");
        org.junit.Assert.assertTrue("'" + instanceStatus1 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus1.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
    }

    @Test
    public void test04427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04427");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        java.lang.String str12 = instanceInfo11.getHomePageUrl();
        com.netflix.appinfo.LeaseInfo leaseInfo13 = null;
        instanceInfo11.setLeaseInfo(leaseInfo13);
        com.netflix.appinfo.InstanceInfo.Builder builder15 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder15.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder15.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder15.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig22 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo23 = myDataCenterInstanceConfig22.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder21.setDataCenterInfo(dataCenterInfo23);
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder21.setHostName("172.20.26.3");
        boolean boolean27 = instanceInfo11.equals((java.lang.Object) "172.20.26.3");
        boolean boolean28 = instanceInfo11.isDirty();
        java.lang.String str29 = instanceInfo11.getHostName();
        com.netflix.appinfo.LeaseInfo leaseInfo30 = instanceInfo11.getLeaseInfo();
        instanceInfo11.setIsDirty(true);
        com.netflix.appinfo.InstanceInfo.Builder builder33 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str12, "http://inesserver2.windows.cin.ufpe.br:80/");
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(dataCenterInfo23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str29, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNull(leaseInfo30);
    }

    @Test
    public void test04428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04428");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        java.lang.String str6 = myDataCenterInstanceConfig2.getIpAddress();
        java.lang.String str7 = myDataCenterInstanceConfig2.getHealthCheckUrlPath();
        int int8 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager9 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager9.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int13 = myDataCenterInstanceConfig12.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo14 = myDataCenterInstanceConfig12.getDataCenterInfo();
        java.lang.String str15 = myDataCenterInstanceConfig12.getNamespace();
        boolean boolean16 = myDataCenterInstanceConfig12.isNonSecurePortEnabled();
        applicationInfoManager9.config = myDataCenterInstanceConfig12;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig18 = applicationInfoManager9.config;
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager9.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager9.instanceInfo;
        int int21 = instanceInfo20.getSecurePort();
        int int22 = instanceInfo20.getPort();
        int int23 = instanceInfo20.getCountryId();
        boolean boolean24 = instanceInfo20.isDirty();
        int int25 = instanceInfo20.getPort();
        java.lang.String str26 = instanceInfo20.getASGName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager27 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig2, instanceInfo20);
        com.netflix.appinfo.InstanceInfo.PortType portType28 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        boolean boolean29 = instanceInfo20.isPortEnabled(portType28);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager30 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager30.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig33 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int34 = myDataCenterInstanceConfig33.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo35 = myDataCenterInstanceConfig33.getDataCenterInfo();
        java.lang.String str36 = myDataCenterInstanceConfig33.getNamespace();
        boolean boolean37 = myDataCenterInstanceConfig33.isNonSecurePortEnabled();
        applicationInfoManager30.config = myDataCenterInstanceConfig33;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig39 = applicationInfoManager30.config;
        com.netflix.appinfo.InstanceInfo instanceInfo40 = applicationInfoManager30.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo41 = applicationInfoManager30.instanceInfo;
        int int42 = instanceInfo41.getSecurePort();
        boolean boolean43 = instanceInfo41.isDirty();
        java.lang.String str44 = instanceInfo41.getHostName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus45 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        instanceInfo41.setStatus(instanceStatus45);
        com.netflix.appinfo.InstanceInfo.PortType portType47 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean48 = instanceInfo41.isPortEnabled(portType47);
        boolean boolean49 = instanceInfo20.isPortEnabled(portType47);
        com.netflix.appinfo.InstanceInfo instanceInfo50 = new com.netflix.appinfo.InstanceInfo(instanceInfo20);
        java.lang.String str51 = instanceInfo50.getVIPAddress();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "172.20.26.3" + "'", str6, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/healthcheck" + "'", str7, "/healthcheck");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
        org.junit.Assert.assertNotNull(applicationInfoManager9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 30 + "'", int13 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 443 + "'", int21 == 443);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 80 + "'", int22 == 80);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 80 + "'", int25 == 80);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + portType28 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType28.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(applicationInfoManager30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig39);
        org.junit.Assert.assertNotNull(instanceInfo40);
        org.junit.Assert.assertNotNull(instanceInfo41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 443 + "'", int42 == 443);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str44, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + instanceStatus45 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus45.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertTrue("'" + portType47 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType47.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str51, "inesserver2.windows.cin.ufpe.br:80");
    }

    @Test
    public void test04429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04429");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo instanceInfo5 = builder0.build();
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder0.setIPAddr("http://hi!:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder7.setHostName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder9.setASGName("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder12.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder12.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo20 = myDataCenterInstanceConfig19.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.setDataCenterInfo(dataCenterInfo20);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder18.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder18.setLastDirtyTimestamp((long) (short) 10);
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder25.setSecurePort((int) (short) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder27.setSecureVIPAddressDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder27.setPort(10);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager32 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo33 = applicationInfoManager32.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig35 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int36 = myDataCenterInstanceConfig35.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo37 = myDataCenterInstanceConfig35.getDataCenterInfo();
        java.lang.String str38 = myDataCenterInstanceConfig35.getNamespace();
        boolean boolean39 = myDataCenterInstanceConfig35.isNonSecurePortEnabled();
        applicationInfoManager32.config = myDataCenterInstanceConfig35;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig42 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int43 = myDataCenterInstanceConfig42.getLeaseRenewalIntervalInSeconds();
        int int44 = myDataCenterInstanceConfig42.getLeaseRenewalIntervalInSeconds();
        java.lang.String str45 = myDataCenterInstanceConfig42.getStatusPageUrlPath();
        applicationInfoManager32.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig42);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig48 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str49 = myDataCenterInstanceConfig48.getVirtualHostName();
        java.lang.String str50 = myDataCenterInstanceConfig48.getAppGroupName();
        applicationInfoManager32.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig48);
        com.netflix.appinfo.InstanceInfo instanceInfo52 = applicationInfoManager32.getInfo();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus53 = instanceInfo52.getStatus();
        java.lang.String str54 = instanceInfo52.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus55 = instanceInfo52.getStatus();
        com.netflix.appinfo.InstanceInfo.Builder builder56 = builder31.setStatus(instanceStatus55);
        com.netflix.appinfo.InstanceInfo.Builder builder57 = builder11.setOverriddenStatus(instanceStatus55);
        com.netflix.appinfo.InstanceInfo.Builder builder59 = builder11.setIPAddr("");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(instanceInfo5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(dataCenterInfo20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(applicationInfoManager32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 30 + "'", int36 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 30 + "'", int43 == 30);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 30 + "'", int44 == 30);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/Status" + "'", str45, "/Status");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str49, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "unknown" + "'", str50, "unknown");
        org.junit.Assert.assertNotNull(instanceInfo52);
        org.junit.Assert.assertTrue("'" + instanceStatus53 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING + "'", instanceStatus53.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "UNKNOWN" + "'", str54, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + instanceStatus55 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING + "'", instanceStatus55.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
    }

    @Test
    public void test04430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04430");
        com.netflix.appinfo.DataCenterInfo dataCenterInfo1 = null;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("", dataCenterInfo1);
        int int3 = myDataCenterInstanceConfig2.getLeaseExpirationDurationInSeconds();
        java.lang.String str4 = myDataCenterInstanceConfig2.getAppname();
        java.lang.String str5 = myDataCenterInstanceConfig2.getHomePageUrl();
        java.lang.String str7 = myDataCenterInstanceConfig2.getHostName(true);
        int int8 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 90 + "'", int3 == 90);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "unknown" + "'", str4, "unknown");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str7, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
    }

    @Test
    public void test04431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04431");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder18.setHealthCheckUrlsForDeser("", "hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setLastDirtyTimestamp((long) 443);
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder25.setSID("");
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder27.setHealthCheckUrlsForDeser("UNKNOWN", "");
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder27.setHealthCheckUrlsForDeser("DEFAULT", "/healthcheck");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder33);
    }

    @Test
    public void test04432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04432");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setIPAddr("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder0.setSecureVIPAddressDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setSecureVIPAddressDeser("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder8.setIPAddr("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager13 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig15 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int16 = myDataCenterInstanceConfig15.getLeaseRenewalIntervalInSeconds();
        int int17 = myDataCenterInstanceConfig15.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager13.config = myDataCenterInstanceConfig15;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig19 = applicationInfoManager13.config;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig20 = applicationInfoManager13.config;
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager13.getInfo();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager22 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager22.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig25 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int26 = myDataCenterInstanceConfig25.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo27 = myDataCenterInstanceConfig25.getDataCenterInfo();
        java.lang.String str28 = myDataCenterInstanceConfig25.getNamespace();
        boolean boolean29 = myDataCenterInstanceConfig25.isNonSecurePortEnabled();
        applicationInfoManager22.config = myDataCenterInstanceConfig25;
        int int31 = myDataCenterInstanceConfig25.getLeaseExpirationDurationInSeconds();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = myDataCenterInstanceConfig25.getMetadataMap();
        applicationInfoManager13.registerAppMetadata(strMap32);
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager13.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager35 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo36 = applicationInfoManager35.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig38 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int39 = myDataCenterInstanceConfig38.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo40 = myDataCenterInstanceConfig38.getDataCenterInfo();
        java.lang.String str41 = myDataCenterInstanceConfig38.getNamespace();
        boolean boolean42 = myDataCenterInstanceConfig38.isNonSecurePortEnabled();
        applicationInfoManager35.config = myDataCenterInstanceConfig38;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig44 = applicationInfoManager35.config;
        com.netflix.appinfo.InstanceInfo instanceInfo45 = applicationInfoManager35.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo46 = applicationInfoManager35.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType47 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo46.setActionType(actionType47);
        com.netflix.appinfo.LeaseInfo leaseInfo49 = null;
        instanceInfo46.setLeaseInfo(leaseInfo49);
        java.util.Set<java.lang.String> strSet51 = instanceInfo46.getHealthCheckUrls();
        java.lang.String str52 = instanceInfo46.getId();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager53 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo54 = applicationInfoManager53.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig56 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int57 = myDataCenterInstanceConfig56.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo58 = myDataCenterInstanceConfig56.getDataCenterInfo();
        java.lang.String str59 = myDataCenterInstanceConfig56.getNamespace();
        boolean boolean60 = myDataCenterInstanceConfig56.isNonSecurePortEnabled();
        applicationInfoManager53.config = myDataCenterInstanceConfig56;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig62 = applicationInfoManager53.config;
        com.netflix.appinfo.InstanceInfo instanceInfo63 = applicationInfoManager53.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo64 = applicationInfoManager53.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType65 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo64.setActionType(actionType65);
        instanceInfo46.setActionType(actionType65);
        com.netflix.appinfo.InstanceInfo.PortType portType68 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        boolean boolean69 = instanceInfo46.isPortEnabled(portType68);
        java.lang.String str70 = instanceInfo46.getId();
        applicationInfoManager13.instanceInfo = instanceInfo46;
        com.netflix.appinfo.InstanceInfo.ActionType actionType72 = instanceInfo46.getActionType();
        com.netflix.appinfo.InstanceInfo.Builder builder73 = builder8.setActionType(actionType72);
        com.netflix.appinfo.InstanceInfo.Builder builder75 = builder8.setSecureVIPAddressDeser("DEFAULT");
        com.netflix.appinfo.InstanceInfo.Builder builder77 = builder8.setLastDirtyTimestamp(1636106021824L);
        com.netflix.appinfo.InstanceInfo.Builder builder79 = builder8.setAppName("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(applicationInfoManager13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 30 + "'", int16 == 30);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig19);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig20);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertNotNull(applicationInfoManager22);
        org.junit.Assert.assertNotNull(instanceInfo23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 30 + "'", int26 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 90 + "'", int31 == 90);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertNotNull(applicationInfoManager35);
        org.junit.Assert.assertNotNull(instanceInfo36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 30 + "'", int39 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig44);
        org.junit.Assert.assertNotNull(instanceInfo45);
        org.junit.Assert.assertNotNull(instanceInfo46);
        org.junit.Assert.assertTrue("'" + actionType47 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType47.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str52, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager53);
        org.junit.Assert.assertNotNull(instanceInfo54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 30 + "'", int57 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig62);
        org.junit.Assert.assertNotNull(instanceInfo63);
        org.junit.Assert.assertNotNull(instanceInfo64);
        org.junit.Assert.assertTrue("'" + actionType65 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType65.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + portType68 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType68.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str70, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + actionType72 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType72.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
    }

    @Test
    public void test04433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04433");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        applicationInfoManager0.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.InstanceInfo instanceInfo3 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager4 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo5 = applicationInfoManager4.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int8 = myDataCenterInstanceConfig7.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo9 = myDataCenterInstanceConfig7.getDataCenterInfo();
        java.lang.String str10 = myDataCenterInstanceConfig7.getNamespace();
        boolean boolean11 = myDataCenterInstanceConfig7.isNonSecurePortEnabled();
        applicationInfoManager4.config = myDataCenterInstanceConfig7;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig13 = applicationInfoManager4.config;
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager4.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo15 = applicationInfoManager4.instanceInfo;
        int int16 = instanceInfo15.getSecurePort();
        instanceInfo15.setIsCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus18 = com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN;
        instanceInfo15.setOverriddenStatus(instanceStatus18);
        instanceInfo3.setStatusWithoutDirty(instanceStatus18);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo21 = instanceInfo3.getDataCenterInfo();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo3);
        org.junit.Assert.assertNotNull(applicationInfoManager4);
        org.junit.Assert.assertNotNull(instanceInfo5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig13);
        org.junit.Assert.assertNotNull(instanceInfo14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 443 + "'", int16 == 443);
        org.junit.Assert.assertTrue("'" + instanceStatus18 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus18.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(dataCenterInfo21);
    }

    @Test
    public void test04434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04434");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = instanceInfo11.getVersion();
        java.lang.String str15 = instanceInfo11.getIPAddr();
        instanceInfo11.setLastUpdatedTimestamp();
        instanceInfo11.setSID("http://hi!:80/Status");
        java.lang.String str19 = instanceInfo11.getASGName();
        boolean boolean20 = instanceInfo11.isDirty();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "unknown" + "'", str14, "unknown");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "172.20.26.3" + "'", str15, "172.20.26.3");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test04435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04435");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo3 = builder2.build();
        com.netflix.appinfo.LeaseInfo leaseInfo4 = instanceInfo3.getLeaseInfo();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass5 = leaseInfo4.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(instanceInfo3);
        org.junit.Assert.assertNull(leaseInfo4);
    }

    @Test
    public void test04436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04436");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager1 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig4.getDataCenterInfo();
        java.lang.String str7 = myDataCenterInstanceConfig4.getNamespace();
        boolean boolean8 = myDataCenterInstanceConfig4.isNonSecurePortEnabled();
        applicationInfoManager1.config = myDataCenterInstanceConfig4;
        int int10 = myDataCenterInstanceConfig4.getLeaseExpirationDurationInSeconds();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = myDataCenterInstanceConfig4.getMetadataMap();
        java.lang.String str12 = myDataCenterInstanceConfig4.getHealthCheckUrl();
        java.lang.String str13 = myDataCenterInstanceConfig4.getHomePageUrlPath();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo14 = myDataCenterInstanceConfig4.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig15 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo14);
        java.lang.String str16 = myDataCenterInstanceConfig15.getStatusPageUrlPath();
        java.lang.String str17 = myDataCenterInstanceConfig15.getNamespace();
        org.junit.Assert.assertNotNull(applicationInfoManager1);
        org.junit.Assert.assertNotNull(instanceInfo2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 90 + "'", int10 == 90);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/" + "'", str13, "/");
        org.junit.Assert.assertNotNull(dataCenterInfo14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/Status" + "'", str16, "/Status");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str17, "inesserver2.windows.cin.ufpe.br:80");
    }

    @Test
    public void test04437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04437");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder2.setHealthCheckUrlsForDeser("unknown", "172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder10.setAppName("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setSecureVIPAddress("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder14.setHealthCheckUrlsForDeser("http://inesserver2.windows.cin.ufpe.br:80/Status", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo instanceInfo18 = builder14.build();
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder14.setSecureVIPAddressDeser("inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager21 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo22 = applicationInfoManager21.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int25 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig24.getDataCenterInfo();
        java.lang.String str27 = myDataCenterInstanceConfig24.getNamespace();
        boolean boolean28 = myDataCenterInstanceConfig24.isNonSecurePortEnabled();
        applicationInfoManager21.config = myDataCenterInstanceConfig24;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig30 = applicationInfoManager21.config;
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager21.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager21.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager21;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig35 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str36 = myDataCenterInstanceConfig35.getIpAddress();
        java.lang.String str37 = myDataCenterInstanceConfig35.getASGName();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo38 = myDataCenterInstanceConfig35.getDataCenterInfo();
        java.lang.String str39 = myDataCenterInstanceConfig35.getAppGroupName();
        applicationInfoManager21.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig35);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo41 = myDataCenterInstanceConfig35.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder42 = builder20.setDataCenterInfo(dataCenterInfo41);
        com.netflix.appinfo.InstanceInfo.Builder builder44 = builder20.setHomePageUrlForDeser("http://inesserver2.windows.cin.ufpe.br:80:80/Status");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(applicationInfoManager21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 30 + "'", int25 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "172.20.26.3" + "'", str36, "172.20.26.3");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(dataCenterInfo38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "unknown" + "'", str39, "unknown");
        org.junit.Assert.assertNotNull(dataCenterInfo41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
    }

    @Test
    public void test04438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04438");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder18.setHealthCheckUrlsForDeser("", "hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setLastDirtyTimestamp((long) 443);
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder25.setSID("");
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder27.setHealthCheckUrlsForDeser("UNKNOWN", "");
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder27.setSecurePort((int) (short) 100);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
    }

    @Test
    public void test04439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04439");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        boolean boolean13 = instanceInfo11.isDirty();
        boolean boolean14 = instanceInfo11.isDirty();
        java.lang.String str15 = instanceInfo11.getVersion();
        instanceInfo11.setIsCoordinatingDiscoveryServer();
        java.lang.String str17 = instanceInfo11.getVersion();
        java.lang.String str18 = instanceInfo11.getIPAddr();
        com.netflix.appinfo.InstanceInfo.Builder builder19 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder19.setSecureVIPAddressDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setSecureVIPAddress("http://default:80/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "unknown" + "'", str15, "unknown");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "unknown" + "'", str17, "unknown");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "172.20.26.3" + "'", str18, "172.20.26.3");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
    }

    @Test
    public void test04440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04440");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        int int3 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        boolean boolean5 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        com.netflix.appinfo.InstanceInfo instanceInfo6 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager7 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo6);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig9.getDataCenterInfo();
        java.lang.String str12 = myDataCenterInstanceConfig9.getNamespace();
        applicationInfoManager7.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig9);
        boolean boolean14 = myDataCenterInstanceConfig9.getSecurePortEnabled();
        java.lang.String str15 = myDataCenterInstanceConfig9.getHomePageUrlPath();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/Status" + "'", str4, "/Status");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "/" + "'", str15, "/");
    }

    @Test
    public void test04441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04441");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo instanceInfo5 = builder0.build();
        instanceInfo5.setLastUpdatedTimestamp();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus7 = instanceInfo5.getStatus();
        boolean boolean8 = instanceInfo5.isDirty();
        java.lang.String str9 = instanceInfo5.getVersion();
        com.netflix.appinfo.InstanceInfo instanceInfo10 = new com.netflix.appinfo.InstanceInfo(instanceInfo5);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(instanceInfo5);
        org.junit.Assert.assertTrue("'" + instanceStatus7 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UP + "'", instanceStatus7.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UP));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "unknown" + "'", str9, "unknown");
    }

    @Test
    public void test04442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04442");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder18.setHealthCheckUrlsForDeser("", "hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setLastDirtyTimestamp((long) 443);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus26 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder23.setStatus(instanceStatus26);
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder23.setLastDirtyTimestamp(1636105976220L);
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder29.setSecureVIPAddressDeser("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder29.setIPAddr("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + instanceStatus26 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus26.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
    }

    @Test
    public void test04443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04443");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder18.setVIPAddressDeser("hi!");
        com.netflix.appinfo.InstanceInfo.PortType portType24 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder23.enablePort(portType24, false);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager27 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager27.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig30 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int31 = myDataCenterInstanceConfig30.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo32 = myDataCenterInstanceConfig30.getDataCenterInfo();
        java.lang.String str33 = myDataCenterInstanceConfig30.getNamespace();
        boolean boolean34 = myDataCenterInstanceConfig30.isNonSecurePortEnabled();
        applicationInfoManager27.config = myDataCenterInstanceConfig30;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig36 = applicationInfoManager27.config;
        com.netflix.appinfo.InstanceInfo instanceInfo37 = applicationInfoManager27.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo38 = applicationInfoManager27.instanceInfo;
        java.lang.Boolean boolean39 = instanceInfo38.isCoordinatingDiscoveryServer();
        java.lang.String str40 = instanceInfo38.getVIPAddress();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus41 = instanceInfo38.getOverriddenStatus();
        com.netflix.appinfo.InstanceInfo.Builder builder42 = builder26.setOverriddenStatus(instanceStatus41);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager44 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo45 = applicationInfoManager44.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig47 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int48 = myDataCenterInstanceConfig47.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo49 = myDataCenterInstanceConfig47.getDataCenterInfo();
        java.lang.String str50 = myDataCenterInstanceConfig47.getNamespace();
        boolean boolean51 = myDataCenterInstanceConfig47.isNonSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo52 = myDataCenterInstanceConfig47.getDataCenterInfo();
        applicationInfoManager44.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig47);
        boolean boolean54 = myDataCenterInstanceConfig47.getSecurePortEnabled();
        java.lang.String str55 = myDataCenterInstanceConfig47.getSecureHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo56 = myDataCenterInstanceConfig47.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig57 = new com.netflix.appinfo.MyDataCenterInstanceConfig("", dataCenterInfo56);
        com.netflix.appinfo.InstanceInfo.Builder builder58 = builder42.setDataCenterInfo(dataCenterInfo56);
        com.netflix.appinfo.InstanceInfo.Builder builder60 = builder42.setSecureVIPAddressDeser("http://inesserver2.windows.cin.ufpe.br:80/");
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder63 = builder42.setStatusPageUrl("http://inesserver2.windows.cin.ufpe.br:80:80/Status", "/Status");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
// flaky:         org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + portType24 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType24.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(applicationInfoManager27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 30 + "'", int31 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig36);
        org.junit.Assert.assertNotNull(instanceInfo37);
        org.junit.Assert.assertNotNull(instanceInfo38);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + false + "'", boolean39, false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus41 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus41.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(applicationInfoManager44);
        org.junit.Assert.assertNotNull(instanceInfo45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 30 + "'", int48 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(dataCenterInfo56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
    }

    @Test
    public void test04444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04444");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo instanceInfo5 = builder0.build();
        boolean boolean6 = builder0.isInitialized();
        com.netflix.appinfo.InstanceInfo instanceInfo7 = builder0.getRawInstance();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus8 = instanceInfo7.getOverriddenStatus();
        instanceInfo7.setLastDirtyTimestamp((java.lang.Long) 1636106007235L);
        int int11 = instanceInfo7.getPort();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus12 = instanceInfo7.getStatus();
        boolean boolean13 = instanceInfo7.isDirty();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(instanceInfo5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(instanceInfo7);
        org.junit.Assert.assertTrue("'" + instanceStatus8 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus8.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7001 + "'", int11 == 7001);
        org.junit.Assert.assertTrue("'" + instanceStatus12 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UP + "'", instanceStatus12.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UP));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test04445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04445");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager1 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        int int5 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager1.config = myDataCenterInstanceConfig3;
        java.lang.String str7 = myDataCenterInstanceConfig3.getIpAddress();
        java.lang.String str8 = myDataCenterInstanceConfig3.getHealthCheckUrl();
        java.lang.String str9 = myDataCenterInstanceConfig3.getSecureHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo10 = myDataCenterInstanceConfig3.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig11 = new com.netflix.appinfo.MyDataCenterInstanceConfig("", dataCenterInfo10);
        org.junit.Assert.assertNotNull(applicationInfoManager1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "172.20.26.3" + "'", str7, "172.20.26.3");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(dataCenterInfo10);
    }

    @Test
    public void test04446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04446");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/");
        java.lang.String str2 = myDataCenterInstanceConfig1.getAppname();
        int int3 = myDataCenterInstanceConfig1.getNonSecurePort();
        boolean boolean4 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "unknown" + "'", str2, "unknown");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 80 + "'", int3 == 80);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test04447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04447");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("http://inesserver2.windows.cin.ufpe.br:80/", "default");
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder5.setSID("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder5.setHealthCheckUrlsForDeser("http://hi!:80/Status", "unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder5.setIPAddr("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setHostName("unknown");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test04448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04448");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig1 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo2 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager3 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig1, instanceInfo2);
        com.netflix.appinfo.InstanceInfo instanceInfo4 = null;
        applicationInfoManager3.instanceInfo = instanceInfo4;
        com.netflix.appinfo.InstanceInfo instanceInfo6 = applicationInfoManager3.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager7 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        int int11 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager7.config = myDataCenterInstanceConfig9;
        java.lang.String str13 = myDataCenterInstanceConfig9.getIpAddress();
        java.lang.String str14 = myDataCenterInstanceConfig9.getVirtualHostName();
        java.lang.String str16 = myDataCenterInstanceConfig9.getHostName(true);
        applicationInfoManager3.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig9);
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager3.instanceInfo;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig19 = applicationInfoManager3.config;
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNull(eurekaInstanceConfig1);
        org.junit.Assert.assertNull(instanceInfo6);
        org.junit.Assert.assertNotNull(applicationInfoManager7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "172.20.26.3" + "'", str13, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str14, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str16, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig19);
    }

    @Test
    public void test04449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04449");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder7.setASGName("inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder9.setHostName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder9.setSecureVIPAddressDeser("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder9.setASGName("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder9.setCountryId(0);
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder17.setSecurePort((int) (byte) 0);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
    }

    @Test
    public void test04450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04450");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str2 = myDataCenterInstanceConfig1.getIpAddress();
        java.lang.String str3 = myDataCenterInstanceConfig1.getASGName();
        boolean boolean4 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        java.lang.String str5 = myDataCenterInstanceConfig1.getHealthCheckUrl();
        java.lang.String str6 = myDataCenterInstanceConfig1.getStatusPageUrl();
        java.lang.String str7 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        java.lang.String str8 = myDataCenterInstanceConfig1.getStatusPageUrl();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "172.20.26.3" + "'", str2, "172.20.26.3");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/healthcheck" + "'", str7, "/healthcheck");
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test04451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04451");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder8.setSecurePort((int) '4');
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setSecurePort((int) ' ');
        com.netflix.appinfo.InstanceInfo.Builder builder15 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder15.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder15.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder15.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig22 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo23 = myDataCenterInstanceConfig22.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder21.setDataCenterInfo(dataCenterInfo23);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig25 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig25.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder21.setDataCenterInfo(dataCenterInfo26);
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder27.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder29.setStatusPageUrlForDeser("na");
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder29.setAppGroupName("inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager34 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig36 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int37 = myDataCenterInstanceConfig36.getLeaseRenewalIntervalInSeconds();
        int int38 = myDataCenterInstanceConfig36.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager34.config = myDataCenterInstanceConfig36;
        java.lang.String str40 = myDataCenterInstanceConfig36.getIpAddress();
        java.lang.String str41 = myDataCenterInstanceConfig36.getHealthCheckUrlPath();
        java.lang.String str42 = myDataCenterInstanceConfig36.getHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo43 = myDataCenterInstanceConfig36.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder44 = builder33.setDataCenterInfo(dataCenterInfo43);
        com.netflix.appinfo.InstanceInfo.Builder builder45 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder47 = builder45.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder49 = builder45.setCountryId(7002);
        com.netflix.appinfo.InstanceInfo.Builder builder52 = builder45.setHealthCheckUrlsForDeser("UNKNOWN", "UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder54 = builder52.setHostName("/healthcheck");
        com.netflix.appinfo.InstanceInfo instanceInfo55 = builder54.getRawInstance();
        com.netflix.appinfo.InstanceInfo.Builder builder57 = builder54.setASGName("unknown");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager58 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo59 = applicationInfoManager58.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig61 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int62 = myDataCenterInstanceConfig61.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo63 = myDataCenterInstanceConfig61.getDataCenterInfo();
        java.lang.String str64 = myDataCenterInstanceConfig61.getNamespace();
        boolean boolean65 = myDataCenterInstanceConfig61.isNonSecurePortEnabled();
        applicationInfoManager58.config = myDataCenterInstanceConfig61;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig67 = applicationInfoManager58.config;
        com.netflix.appinfo.InstanceInfo instanceInfo68 = applicationInfoManager58.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo69 = applicationInfoManager58.instanceInfo;
        java.lang.Boolean boolean70 = instanceInfo69.isCoordinatingDiscoveryServer();
        java.lang.String str71 = instanceInfo69.getVIPAddress();
        java.util.Map<java.lang.String, java.lang.String> strMap72 = instanceInfo69.getMetadata();
        com.netflix.appinfo.LeaseInfo leaseInfo73 = instanceInfo69.getLeaseInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder74 = builder57.setLeaseInfo(leaseInfo73);
        com.netflix.appinfo.InstanceInfo.Builder builder75 = builder33.setLeaseInfo(leaseInfo73);
        com.netflix.appinfo.InstanceInfo.Builder builder76 = builder14.setLeaseInfo(leaseInfo73);
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder80 = builder76.setHealthCheckUrls("http://hi!:35/Status", "http://inesserver2.windows.cin.ufpe.br:80/", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(dataCenterInfo23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(applicationInfoManager34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 30 + "'", int37 == 30);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 30 + "'", int38 == 30);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "172.20.26.3" + "'", str40, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/healthcheck" + "'", str41, "/healthcheck");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(dataCenterInfo43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(instanceInfo55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(applicationInfoManager58);
        org.junit.Assert.assertNotNull(instanceInfo59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 30 + "'", int62 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig67);
        org.junit.Assert.assertNotNull(instanceInfo68);
        org.junit.Assert.assertNotNull(instanceInfo69);
        org.junit.Assert.assertEquals("'" + boolean70 + "' != '" + false + "'", boolean70, false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str71, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNotNull(strMap72);
// flaky:         org.junit.Assert.assertNull(leaseInfo73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
    }

    @Test
    public void test04452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04452");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder2.setHealthCheckUrlsForDeser("unknown", "172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder10.setAppName("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setSecureVIPAddress("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder14.setHealthCheckUrlsForDeser("http://inesserver2.windows.cin.ufpe.br:80/Status", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo instanceInfo18 = builder14.build();
        java.lang.String str19 = instanceInfo18.getSID();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager20 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager20;
        applicationInfoManager20.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager20.instanceInfo;
        java.lang.String str24 = instanceInfo23.getIPAddr();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = new com.netflix.appinfo.InstanceInfo(instanceInfo23);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus26 = instanceInfo25.getStatus();
        instanceInfo18.setStatus(instanceStatus26);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "na" + "'", str19, "na");
        org.junit.Assert.assertNotNull(applicationInfoManager20);
        org.junit.Assert.assertNotNull(instanceInfo23);
// flaky:         org.junit.Assert.assertNull(str24);
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus26 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus26.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
    }

    @Test
    public void test04453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04453");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = instanceInfo11.getAppGroupName();
        java.lang.String str15 = instanceInfo11.getAppName();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = instanceInfo11.getMetadata();
        java.lang.String str17 = instanceInfo11.getASGName();
        java.lang.String str18 = instanceInfo11.getVIPAddress();
        java.lang.Boolean boolean19 = instanceInfo11.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int22 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        boolean boolean23 = myDataCenterInstanceConfig21.isNonSecurePortEnabled();
        java.lang.String str24 = myDataCenterInstanceConfig21.getHealthCheckUrlPath();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager26 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig21, instanceInfo25);
        java.lang.String str27 = myDataCenterInstanceConfig21.getNamespace();
        boolean boolean28 = instanceInfo11.equals((java.lang.Object) myDataCenterInstanceConfig21);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager29 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig30 = applicationInfoManager29.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager31 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig33 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int34 = myDataCenterInstanceConfig33.getLeaseRenewalIntervalInSeconds();
        int int35 = myDataCenterInstanceConfig33.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager31.config = myDataCenterInstanceConfig33;
        java.lang.String str37 = myDataCenterInstanceConfig33.getIpAddress();
        java.lang.String str38 = myDataCenterInstanceConfig33.getVirtualHostName();
        java.lang.String str40 = myDataCenterInstanceConfig33.getHostName(true);
        applicationInfoManager29.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig33);
        com.netflix.appinfo.InstanceInfo instanceInfo42 = applicationInfoManager29.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo43 = applicationInfoManager29.getInfo();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig44 = applicationInfoManager29.config;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager29;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig46 = applicationInfoManager29.config;
        boolean boolean47 = instanceInfo11.equals((java.lang.Object) applicationInfoManager29);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "/" + "'", str14, "/");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "DEFAULT" + "'", str15, "DEFAULT");
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(str17);
// flaky:         org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 30 + "'", int22 == 30);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/healthcheck" + "'", str24, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager29);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig30);
        org.junit.Assert.assertNotNull(applicationInfoManager31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 30 + "'", int35 == 30);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "172.20.26.3" + "'", str37, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str38, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str40, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(instanceInfo42);
        org.junit.Assert.assertNotNull(instanceInfo43);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig44);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test04454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04454");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        java.lang.Boolean boolean12 = instanceInfo11.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus13 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo11.setOverriddenStatus(instanceStatus13);
        int int15 = instanceInfo11.getSecurePort();
        java.lang.String str16 = instanceInfo11.getHostName();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = instanceInfo11.getMetadata();
        instanceInfo11.setIsCoordinatingDiscoveryServer();
        java.lang.String str19 = instanceInfo11.getHostName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType20 = instanceInfo11.getActionType();
        instanceInfo11.setLastUpdatedTimestamp();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertTrue("'" + instanceStatus13 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus13.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 443 + "'", int15 == 443);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str16, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str19, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNull(actionType20);
    }

    @Test
    public void test04455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04455");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder21.add("", "na");
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder26.setVIPAddress("na");
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder26.setSID("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager31 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager31.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig34 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int35 = myDataCenterInstanceConfig34.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo36 = myDataCenterInstanceConfig34.getDataCenterInfo();
        java.lang.String str37 = myDataCenterInstanceConfig34.getNamespace();
        boolean boolean38 = myDataCenterInstanceConfig34.isNonSecurePortEnabled();
        applicationInfoManager31.config = myDataCenterInstanceConfig34;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig40 = applicationInfoManager31.config;
        com.netflix.appinfo.InstanceInfo instanceInfo41 = applicationInfoManager31.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig44 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int45 = myDataCenterInstanceConfig44.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo46 = myDataCenterInstanceConfig44.getDataCenterInfo();
        java.lang.String str48 = myDataCenterInstanceConfig44.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo49 = myDataCenterInstanceConfig44.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig50 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo49);
        java.lang.String str51 = myDataCenterInstanceConfig50.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = myDataCenterInstanceConfig50.getMetadataMap();
        applicationInfoManager31.registerAppMetadata(strMap52);
        com.netflix.appinfo.InstanceInfo instanceInfo54 = applicationInfoManager31.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo55 = applicationInfoManager31.getInfo();
        com.netflix.appinfo.InstanceInfo.ActionType actionType56 = instanceInfo55.getActionType();
        com.netflix.appinfo.InstanceInfo.Builder builder57 = builder26.setActionType(actionType56);
        com.netflix.appinfo.InstanceInfo.Builder builder59 = builder57.setLastDirtyTimestamp(1636106019986L);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(applicationInfoManager31);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 30 + "'", int35 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig40);
        org.junit.Assert.assertNotNull(instanceInfo41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str48, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(instanceInfo54);
        org.junit.Assert.assertNotNull(instanceInfo55);
        org.junit.Assert.assertTrue("'" + actionType56 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType56.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
    }

    @Test
    public void test04456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04456");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        applicationInfoManager0.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.InstanceInfo instanceInfo3 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager4 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo5 = applicationInfoManager4.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int8 = myDataCenterInstanceConfig7.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo9 = myDataCenterInstanceConfig7.getDataCenterInfo();
        java.lang.String str10 = myDataCenterInstanceConfig7.getNamespace();
        boolean boolean11 = myDataCenterInstanceConfig7.isNonSecurePortEnabled();
        applicationInfoManager4.config = myDataCenterInstanceConfig7;
        int int13 = myDataCenterInstanceConfig7.getLeaseExpirationDurationInSeconds();
        java.lang.String str14 = myDataCenterInstanceConfig7.getHomePageUrl();
        java.lang.String str15 = myDataCenterInstanceConfig7.getVirtualHostName();
        applicationInfoManager0.config = myDataCenterInstanceConfig7;
        java.lang.String str17 = myDataCenterInstanceConfig7.getHealthCheckUrlPath();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo3);
        org.junit.Assert.assertNotNull(applicationInfoManager4);
        org.junit.Assert.assertNotNull(instanceInfo5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 90 + "'", int13 == 90);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str15, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/healthcheck" + "'", str17, "/healthcheck");
    }

    @Test
    public void test04457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04457");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig1 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo2 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager3 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig1, instanceInfo2);
        com.netflix.appinfo.InstanceInfo instanceInfo4 = null;
        applicationInfoManager3.instanceInfo = instanceInfo4;
        com.netflix.appinfo.InstanceInfo instanceInfo6 = applicationInfoManager3.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager7 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        int int11 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager7.config = myDataCenterInstanceConfig9;
        java.lang.String str13 = myDataCenterInstanceConfig9.getIpAddress();
        java.lang.String str14 = myDataCenterInstanceConfig9.getVirtualHostName();
        java.lang.String str16 = myDataCenterInstanceConfig9.getHostName(true);
        applicationInfoManager3.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig9);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus18 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        applicationInfoManager3.setInstanceStatus(instanceStatus18);
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager3.instanceInfo;
        int int21 = instanceInfo20.getPort();
        instanceInfo20.setSID("/Status");
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "/Status", "default", "inesserver2.windows.cin.ufpe.br:80", "default", "default" };
        com.netflix.appinfo.InstanceInfo instanceInfo31 = null;
        java.lang.String str32 = com.netflix.appinfo.InstanceInfo.getZone(strArray30, instanceInfo31);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager33 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager33.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig36 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int37 = myDataCenterInstanceConfig36.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo38 = myDataCenterInstanceConfig36.getDataCenterInfo();
        java.lang.String str39 = myDataCenterInstanceConfig36.getNamespace();
        boolean boolean40 = myDataCenterInstanceConfig36.isNonSecurePortEnabled();
        applicationInfoManager33.config = myDataCenterInstanceConfig36;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig42 = applicationInfoManager33.config;
        com.netflix.appinfo.InstanceInfo instanceInfo43 = applicationInfoManager33.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo44 = applicationInfoManager33.instanceInfo;
        int int45 = instanceInfo44.getSecurePort();
        java.lang.String str46 = instanceInfo44.getSID();
        instanceInfo44.setLastDirtyTimestamp((java.lang.Long) 0L);
        java.lang.String str49 = com.netflix.appinfo.InstanceInfo.getZone(strArray30, instanceInfo44);
        java.lang.String str50 = instanceInfo44.getId();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager51 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo52 = applicationInfoManager51.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig54 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int55 = myDataCenterInstanceConfig54.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo56 = myDataCenterInstanceConfig54.getDataCenterInfo();
        java.lang.String str57 = myDataCenterInstanceConfig54.getNamespace();
        boolean boolean58 = myDataCenterInstanceConfig54.isNonSecurePortEnabled();
        applicationInfoManager51.config = myDataCenterInstanceConfig54;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig60 = applicationInfoManager51.config;
        com.netflix.appinfo.InstanceInfo instanceInfo61 = applicationInfoManager51.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo62 = applicationInfoManager51.instanceInfo;
        java.lang.Boolean boolean63 = instanceInfo62.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus64 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo62.setOverriddenStatus(instanceStatus64);
        int int66 = instanceInfo62.getSecurePort();
        java.lang.String str67 = instanceInfo62.getHostName();
        java.util.Map<java.lang.String, java.lang.String> strMap68 = instanceInfo62.getMetadata();
        instanceInfo62.setIsDirty(false);
        com.netflix.appinfo.LeaseInfo leaseInfo71 = instanceInfo62.getLeaseInfo();
        instanceInfo44.setLeaseInfo(leaseInfo71);
        instanceInfo20.setLeaseInfo(leaseInfo71);
        java.lang.String str74 = instanceInfo20.getAppGroupName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig1);
        org.junit.Assert.assertNull(instanceInfo6);
        org.junit.Assert.assertNotNull(applicationInfoManager7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "172.20.26.3" + "'", str13, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str14, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str16, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + instanceStatus18 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus18.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 80 + "'", int21 == 80);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(applicationInfoManager33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 30 + "'", int37 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig42);
        org.junit.Assert.assertNotNull(instanceInfo43);
        org.junit.Assert.assertNotNull(instanceInfo44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 443 + "'", int45 == 443);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/Status" + "'", str46, "/Status");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str50, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager51);
        org.junit.Assert.assertNotNull(instanceInfo52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig60);
        org.junit.Assert.assertNotNull(instanceInfo61);
        org.junit.Assert.assertNotNull(instanceInfo62);
        org.junit.Assert.assertEquals("'" + boolean63 + "' != '" + false + "'", boolean63, false);
        org.junit.Assert.assertTrue("'" + instanceStatus64 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus64.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 443 + "'", int66 == 443);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str67, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(leaseInfo71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "UNKNOWN" + "'", str74, "UNKNOWN");
    }

    @Test
    public void test04458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04458");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder7.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder7.setStatusPageUrlForDeser("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder7.setVIPAddressDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder13.setNamespace("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager16 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo17 = applicationInfoManager16.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int20 = myDataCenterInstanceConfig19.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo21 = myDataCenterInstanceConfig19.getDataCenterInfo();
        java.lang.String str22 = myDataCenterInstanceConfig19.getNamespace();
        boolean boolean23 = myDataCenterInstanceConfig19.isNonSecurePortEnabled();
        applicationInfoManager16.config = myDataCenterInstanceConfig19;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig25 = applicationInfoManager16.config;
        com.netflix.appinfo.InstanceInfo instanceInfo26 = applicationInfoManager16.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager16.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager16.getInfo();
        java.lang.String str29 = instanceInfo28.getSID();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo30 = instanceInfo28.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder15.setDataCenterInfo(dataCenterInfo30);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(applicationInfoManager16);
        org.junit.Assert.assertNotNull(instanceInfo17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 30 + "'", int20 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "/Status" + "'", str29, "/Status");
        org.junit.Assert.assertNotNull(dataCenterInfo30);
        org.junit.Assert.assertNotNull(builder31);
    }

    @Test
    public void test04459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04459");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.PortType portType21 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder18.enablePort(portType21, true);
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setCountryId(0);
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder25.setAppGroupName("http://hi!:80/Status");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager28 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager28.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig31 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int32 = myDataCenterInstanceConfig31.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo33 = myDataCenterInstanceConfig31.getDataCenterInfo();
        java.lang.String str34 = myDataCenterInstanceConfig31.getNamespace();
        boolean boolean35 = myDataCenterInstanceConfig31.isNonSecurePortEnabled();
        applicationInfoManager28.config = myDataCenterInstanceConfig31;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig37 = applicationInfoManager28.config;
        com.netflix.appinfo.InstanceInfo instanceInfo38 = applicationInfoManager28.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo39 = applicationInfoManager28.instanceInfo;
        int int40 = instanceInfo39.getSecurePort();
        boolean boolean41 = instanceInfo39.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo42 = new com.netflix.appinfo.InstanceInfo(instanceInfo39);
        long long43 = instanceInfo42.getLastUpdatedTimestamp();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus44 = instanceInfo42.getStatus();
        com.netflix.appinfo.InstanceInfo.ActionType actionType45 = instanceInfo42.getActionType();
        com.netflix.appinfo.InstanceInfo.Builder builder46 = builder27.setActionType(actionType45);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + portType21 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType21.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(applicationInfoManager28);
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 30 + "'", int32 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig37);
        org.junit.Assert.assertNotNull(instanceInfo38);
        org.junit.Assert.assertNotNull(instanceInfo39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 443 + "'", int40 == 443);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1636106128582L + "'", long43 == 1636106128582L);
        org.junit.Assert.assertTrue("'" + instanceStatus44 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus44.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertTrue("'" + actionType45 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType45.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(builder46);
    }

    @Test
    public void test04460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04460");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder20.add("/healthcheck", "UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setSecureVIPAddress("172.20.26.3");
        com.netflix.appinfo.InstanceInfo instanceInfo26 = builder23.getRawInstance();
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder23.setASGName("");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig30 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int31 = myDataCenterInstanceConfig30.getLeaseRenewalIntervalInSeconds();
        boolean boolean32 = myDataCenterInstanceConfig30.isNonSecurePortEnabled();
        int int33 = myDataCenterInstanceConfig30.getSecurePort();
        java.lang.String str34 = myDataCenterInstanceConfig30.getAppGroupName();
        java.lang.String str35 = myDataCenterInstanceConfig30.getASGName();
        java.lang.String str36 = myDataCenterInstanceConfig30.getASGName();
        int int37 = myDataCenterInstanceConfig30.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.InstanceInfo.Builder builder38 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder38.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder42 = builder38.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder44 = builder38.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig45 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo46 = myDataCenterInstanceConfig45.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder47 = builder44.setDataCenterInfo(dataCenterInfo46);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig48 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo49 = myDataCenterInstanceConfig48.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder50 = builder44.setDataCenterInfo(dataCenterInfo49);
        com.netflix.appinfo.InstanceInfo.Builder builder52 = builder50.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder55 = builder50.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder57 = builder50.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder59 = builder50.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo60 = builder59.build();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager61 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig30, instanceInfo60);
        com.netflix.appinfo.InstanceInfo instanceInfo62 = applicationInfoManager61.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig65 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int66 = myDataCenterInstanceConfig65.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo67 = myDataCenterInstanceConfig65.getDataCenterInfo();
        java.lang.String str69 = myDataCenterInstanceConfig65.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo70 = myDataCenterInstanceConfig65.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig71 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo70);
        java.lang.String str72 = myDataCenterInstanceConfig71.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap73 = myDataCenterInstanceConfig71.getMetadataMap();
        boolean boolean74 = myDataCenterInstanceConfig71.isInstanceEnabledOnit();
        java.lang.String str75 = myDataCenterInstanceConfig71.getAppGroupName();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo76 = myDataCenterInstanceConfig71.getDataCenterInfo();
        boolean boolean77 = instanceInfo62.equals((java.lang.Object) myDataCenterInstanceConfig71);
        java.util.Map<java.lang.String, java.lang.String> strMap78 = myDataCenterInstanceConfig71.getMetadataMap();
        com.netflix.appinfo.InstanceInfo.Builder builder79 = builder28.setMetadata(strMap78);
        com.netflix.appinfo.InstanceInfo.Builder builder81 = builder79.setSID("");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 30 + "'", int31 == 30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 443 + "'", int33 == 443);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "unknown" + "'", str34, "unknown");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 30 + "'", int37 == 30);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(dataCenterInfo46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(dataCenterInfo49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(instanceInfo60);
        org.junit.Assert.assertNotNull(instanceInfo62);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 30 + "'", int66 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str69, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo70);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "unknown" + "'", str75, "unknown");
        org.junit.Assert.assertNotNull(dataCenterInfo76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder81);
    }

    @Test
    public void test04461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04461");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setIPAddr("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder0.setSecureVIPAddressDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setSecureVIPAddressDeser("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder8.setIPAddr("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setAppName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder12.setAppGroupName("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo instanceInfo17 = builder12.getRawInstance();
        int int18 = instanceInfo17.getPort();
        int int19 = instanceInfo17.getSecurePort();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(instanceInfo17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 7001 + "'", int18 == 7001);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 7002 + "'", int19 == 7002);
    }

    @Test
    public void test04462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04462");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo instanceInfo12 = builder11.getRawInstance();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager13 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager13.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig16 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int17 = myDataCenterInstanceConfig16.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig16.getDataCenterInfo();
        java.lang.String str19 = myDataCenterInstanceConfig16.getNamespace();
        boolean boolean20 = myDataCenterInstanceConfig16.isNonSecurePortEnabled();
        applicationInfoManager13.config = myDataCenterInstanceConfig16;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig22 = applicationInfoManager13.config;
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager13.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig26 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int27 = myDataCenterInstanceConfig26.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo28 = myDataCenterInstanceConfig26.getDataCenterInfo();
        java.lang.String str30 = myDataCenterInstanceConfig26.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo31 = myDataCenterInstanceConfig26.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig32 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo31);
        java.lang.String str33 = myDataCenterInstanceConfig32.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = myDataCenterInstanceConfig32.getMetadataMap();
        applicationInfoManager13.registerAppMetadata(strMap34);
        com.netflix.appinfo.InstanceInfo instanceInfo36 = applicationInfoManager13.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo37 = applicationInfoManager13.getInfo();
        java.util.Set<java.lang.String> strSet38 = instanceInfo37.getHealthCheckUrls();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager39 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo40 = applicationInfoManager39.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig42 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int43 = myDataCenterInstanceConfig42.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo44 = myDataCenterInstanceConfig42.getDataCenterInfo();
        java.lang.String str45 = myDataCenterInstanceConfig42.getNamespace();
        boolean boolean46 = myDataCenterInstanceConfig42.isNonSecurePortEnabled();
        applicationInfoManager39.config = myDataCenterInstanceConfig42;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig48 = applicationInfoManager39.config;
        com.netflix.appinfo.InstanceInfo instanceInfo49 = applicationInfoManager39.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo50 = applicationInfoManager39.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType51 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo50.setActionType(actionType51);
        com.netflix.appinfo.LeaseInfo leaseInfo53 = null;
        instanceInfo50.setLeaseInfo(leaseInfo53);
        java.util.Set<java.lang.String> strSet55 = instanceInfo50.getHealthCheckUrls();
        java.lang.String str56 = instanceInfo50.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder57 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo50);
        com.netflix.appinfo.InstanceInfo.Builder builder60 = builder57.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder62 = builder57.setVIPAddressDeser("hi!");
        com.netflix.appinfo.InstanceInfo.PortType portType63 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder65 = builder62.enablePort(portType63, false);
        boolean boolean66 = instanceInfo37.isPortEnabled(portType63);
        boolean boolean67 = instanceInfo12.isPortEnabled(portType63);
        com.netflix.appinfo.InstanceInfo instanceInfo68 = new com.netflix.appinfo.InstanceInfo(instanceInfo12);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo69 = instanceInfo68.getDataCenterInfo();
        instanceInfo68.setLastUpdatedTimestamp();
        instanceInfo68.setIsDirty(false);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertNotNull(applicationInfoManager13);
        org.junit.Assert.assertNotNull(instanceInfo14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig22);
        org.junit.Assert.assertNotNull(instanceInfo23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 30 + "'", int27 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str30, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(instanceInfo36);
        org.junit.Assert.assertNotNull(instanceInfo37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(applicationInfoManager39);
        org.junit.Assert.assertNotNull(instanceInfo40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 30 + "'", int43 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig48);
        org.junit.Assert.assertNotNull(instanceInfo49);
        org.junit.Assert.assertNotNull(instanceInfo50);
        org.junit.Assert.assertTrue("'" + actionType51 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType51.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + portType63 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType63.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo69);
    }

    @Test
    public void test04463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04463");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder8.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder8.setCountryId((-1));
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder8.setAppName("na");
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder8.setVIPAddressDeser("http://hi!:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setCountryId(0);
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder18.setStatusPageUrlForDeser("UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder18.setHostName("unknown");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager25 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo26 = applicationInfoManager25.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig28 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int29 = myDataCenterInstanceConfig28.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo30 = myDataCenterInstanceConfig28.getDataCenterInfo();
        java.lang.String str31 = myDataCenterInstanceConfig28.getNamespace();
        boolean boolean32 = myDataCenterInstanceConfig28.isNonSecurePortEnabled();
        applicationInfoManager25.config = myDataCenterInstanceConfig28;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig34 = applicationInfoManager25.config;
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager25.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo36 = applicationInfoManager25.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType37 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo36.setActionType(actionType37);
        com.netflix.appinfo.LeaseInfo leaseInfo39 = null;
        instanceInfo36.setLeaseInfo(leaseInfo39);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager41 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo42 = applicationInfoManager41.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig44 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int45 = myDataCenterInstanceConfig44.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo46 = myDataCenterInstanceConfig44.getDataCenterInfo();
        java.lang.String str47 = myDataCenterInstanceConfig44.getNamespace();
        boolean boolean48 = myDataCenterInstanceConfig44.isNonSecurePortEnabled();
        applicationInfoManager41.config = myDataCenterInstanceConfig44;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig50 = applicationInfoManager41.config;
        com.netflix.appinfo.InstanceInfo instanceInfo51 = applicationInfoManager41.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo52 = applicationInfoManager41.instanceInfo;
        int int53 = instanceInfo52.getSecurePort();
        boolean boolean54 = instanceInfo52.isDirty();
        java.lang.String str55 = instanceInfo52.getHostName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus56 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        instanceInfo52.setStatus(instanceStatus56);
        com.netflix.appinfo.InstanceInfo.PortType portType58 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean59 = instanceInfo52.isPortEnabled(portType58);
        boolean boolean60 = instanceInfo36.isPortEnabled(portType58);
        com.netflix.appinfo.InstanceInfo.Builder builder62 = builder18.enablePort(portType58, true);
        com.netflix.appinfo.InstanceInfo.Builder builder64 = builder62.setAppName("http://hi!:80/Status");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(applicationInfoManager25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 30 + "'", int29 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig34);
        org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertNotNull(instanceInfo36);
        org.junit.Assert.assertTrue("'" + actionType37 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType37.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager41);
        org.junit.Assert.assertNotNull(instanceInfo42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig50);
        org.junit.Assert.assertNotNull(instanceInfo51);
        org.junit.Assert.assertNotNull(instanceInfo52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7002 + "'", int53 == 7002);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + instanceStatus56 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus56.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertTrue("'" + portType58 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType58.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
    }

    @Test
    public void test04464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04464");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig3.getDataCenterInfo();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig3);
        boolean boolean10 = myDataCenterInstanceConfig3.getSecurePortEnabled();
        java.lang.String str11 = myDataCenterInstanceConfig3.getSecureHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo12 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str13 = myDataCenterInstanceConfig3.getAppGroupName();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo14 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str15 = myDataCenterInstanceConfig3.getIpAddress();
        java.lang.String str16 = myDataCenterInstanceConfig3.getAppGroupName();
        int int17 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        boolean boolean18 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        java.lang.String str19 = myDataCenterInstanceConfig3.getStatusPageUrl();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(dataCenterInfo12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "unknown" + "'", str13, "unknown");
        org.junit.Assert.assertNotNull(dataCenterInfo14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "172.20.26.3" + "'", str15, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "unknown" + "'", str16, "unknown");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test04465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04465");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setSecurePort(30);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager21 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo22 = applicationInfoManager21.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int25 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig24.getDataCenterInfo();
        java.lang.String str27 = myDataCenterInstanceConfig24.getNamespace();
        boolean boolean28 = myDataCenterInstanceConfig24.isNonSecurePortEnabled();
        applicationInfoManager21.config = myDataCenterInstanceConfig24;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig30 = applicationInfoManager21.config;
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager21.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager21.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType33 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo32.setActionType(actionType33);
        com.netflix.appinfo.LeaseInfo leaseInfo35 = null;
        instanceInfo32.setLeaseInfo(leaseInfo35);
        java.util.Set<java.lang.String> strSet37 = instanceInfo32.getHealthCheckUrls();
        java.lang.String str38 = instanceInfo32.getId();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager39 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo40 = applicationInfoManager39.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig42 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int43 = myDataCenterInstanceConfig42.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo44 = myDataCenterInstanceConfig42.getDataCenterInfo();
        java.lang.String str45 = myDataCenterInstanceConfig42.getNamespace();
        boolean boolean46 = myDataCenterInstanceConfig42.isNonSecurePortEnabled();
        applicationInfoManager39.config = myDataCenterInstanceConfig42;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig48 = applicationInfoManager39.config;
        com.netflix.appinfo.InstanceInfo instanceInfo49 = applicationInfoManager39.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo50 = applicationInfoManager39.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType51 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo50.setActionType(actionType51);
        instanceInfo32.setActionType(actionType51);
        com.netflix.appinfo.InstanceInfo.PortType portType54 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        boolean boolean55 = instanceInfo32.isPortEnabled(portType54);
        com.netflix.appinfo.InstanceInfo.Builder builder57 = builder20.enablePort(portType54, false);
        com.netflix.appinfo.InstanceInfo.Builder builder59 = builder20.setSID("DEFAULT");
        com.netflix.appinfo.InstanceInfo.Builder builder61 = builder20.setSecureVIPAddressDeser("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder63 = builder61.setStatusPageUrlForDeser("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS");
        com.netflix.appinfo.InstanceInfo.Builder builder65 = builder63.setLastDirtyTimestamp(1636106006397L);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(applicationInfoManager21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 30 + "'", int25 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertTrue("'" + actionType33 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType33.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str38, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager39);
        org.junit.Assert.assertNotNull(instanceInfo40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 30 + "'", int43 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig48);
        org.junit.Assert.assertNotNull(instanceInfo49);
        org.junit.Assert.assertNotNull(instanceInfo50);
        org.junit.Assert.assertTrue("'" + actionType51 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType51.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + portType54 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType54.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
    }

    @Test
    public void test04466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04466");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setHostName("172.20.26.3");
        com.netflix.appinfo.LeaseInfo leaseInfo12 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder11.setLeaseInfo(leaseInfo12);
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder11.setHomePageUrlForDeser("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder15.setASGName("http://hi!:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder15.setSecurePort((int) (byte) 1);
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder15.setStatusPageUrl("DEFAULT", "http://inesserver2.windows.cin.ufpe.br:10/Status");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test04467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04467");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder14.setStatusPageUrlForDeser("na");
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder16.setNamespace("na");
        com.netflix.appinfo.LeaseInfo leaseInfo19 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder16.setLeaseInfo(leaseInfo19);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder20.add("inesserver2.windows.cin.ufpe.br", "http://inesserver2.windows.cin.ufpe.br:10/Status");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig26 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        boolean boolean27 = myDataCenterInstanceConfig26.getSecurePortEnabled();
        java.lang.String str28 = myDataCenterInstanceConfig26.getHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig26.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig30 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/", dataCenterInfo29);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = myDataCenterInstanceConfig30.getMetadataMap();
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder20.setMetadata(strMap31);
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder20.setSecureVIPAddress("na");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
    }

    @Test
    public void test04468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04468");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str2 = myDataCenterInstanceConfig1.getIpAddress();
        java.lang.String str3 = myDataCenterInstanceConfig1.getASGName();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo4 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str5 = myDataCenterInstanceConfig1.getVirtualHostName();
        java.lang.String str6 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        java.lang.String str7 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str9 = myDataCenterInstanceConfig1.getAppGroupName();
        int int10 = myDataCenterInstanceConfig1.getNonSecurePort();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "172.20.26.3" + "'", str2, "172.20.26.3");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(dataCenterInfo4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str5, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "/healthcheck" + "'", str6, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/Status" + "'", str7, "/Status");
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "unknown" + "'", str9, "unknown");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 80 + "'", int10 == 80);
    }

    @Test
    public void test04469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04469");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder12.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder17.setIPAddr("unknown");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager20 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager20.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig23 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int24 = myDataCenterInstanceConfig23.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = myDataCenterInstanceConfig23.getDataCenterInfo();
        java.lang.String str26 = myDataCenterInstanceConfig23.getNamespace();
        boolean boolean27 = myDataCenterInstanceConfig23.isNonSecurePortEnabled();
        applicationInfoManager20.config = myDataCenterInstanceConfig23;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig29 = applicationInfoManager20.config;
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager20.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager20.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType32 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo31.setActionType(actionType32);
        com.netflix.appinfo.LeaseInfo leaseInfo34 = null;
        instanceInfo31.setLeaseInfo(leaseInfo34);
        java.util.Set<java.lang.String> strSet36 = instanceInfo31.getHealthCheckUrls();
        java.lang.String str37 = instanceInfo31.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder38 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo31);
        com.netflix.appinfo.InstanceInfo.ActionType actionType39 = instanceInfo31.getActionType();
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder17.setActionType(actionType39);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus42 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.InstanceInfo.Builder builder43 = builder17.setOverriddenStatus(instanceStatus42);
        com.netflix.appinfo.InstanceInfo.Builder builder45 = builder17.setSecurePort((int) (short) 0);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(applicationInfoManager20);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 30 + "'", int24 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig29);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertTrue("'" + actionType32 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType32.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str37, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + actionType39 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType39.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + instanceStatus42 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus42.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
    }

    @Test
    public void test04470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04470");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo4 = myDataCenterInstanceConfig2.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig2.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo7 = myDataCenterInstanceConfig2.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo7);
        java.lang.String str9 = myDataCenterInstanceConfig8.getHealthCheckUrl();
        java.lang.String str10 = myDataCenterInstanceConfig8.getStatusPageUrlPath();
        boolean boolean11 = myDataCenterInstanceConfig8.getSecurePortEnabled();
        java.lang.String str12 = myDataCenterInstanceConfig8.getIpAddress();
        java.lang.String str13 = myDataCenterInstanceConfig8.getNamespace();
        com.netflix.appinfo.InstanceInfo.Builder builder14 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder14.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder14.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder14.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = myDataCenterInstanceConfig21.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder20.setDataCenterInfo(dataCenterInfo22);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = myDataCenterInstanceConfig24.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder20.setDataCenterInfo(dataCenterInfo25);
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder20.setSecureVIPAddressDeser("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo29 = builder20.build();
        instanceInfo29.setSID("na");
        java.lang.String str32 = instanceInfo29.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType33 = instanceInfo29.getActionType();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager34 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig8, instanceInfo29);
        long long35 = instanceInfo29.getLastUpdatedTimestamp();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str6, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/Status" + "'", str10, "/Status");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "172.20.26.3" + "'", str12, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str13, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "/" + "'", str32, "/");
        org.junit.Assert.assertNull(actionType33);
// flaky:         org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1636106128810L + "'", long35 == 1636106128810L);
    }

    @Test
    public void test04471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04471");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo4 = myDataCenterInstanceConfig2.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig2.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo7 = myDataCenterInstanceConfig2.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo7);
        boolean boolean9 = myDataCenterInstanceConfig8.isInstanceEnabledOnit();
        java.lang.String str10 = myDataCenterInstanceConfig8.getHealthCheckUrlPath();
        boolean boolean11 = myDataCenterInstanceConfig8.isNonSecurePortEnabled();
        java.lang.String str12 = myDataCenterInstanceConfig8.getHealthCheckUrlPath();
        java.lang.String str13 = myDataCenterInstanceConfig8.getASGName();
        java.lang.String str14 = myDataCenterInstanceConfig8.getSecureVirtualHostName();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str6, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/healthcheck" + "'", str10, "/healthcheck");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/healthcheck" + "'", str12, "/healthcheck");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test04472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04472");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        java.lang.Boolean boolean12 = instanceInfo11.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus13 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo11.setOverriddenStatus(instanceStatus13);
        int int15 = instanceInfo11.getSecurePort();
        java.lang.String str16 = instanceInfo11.getHostName();
        java.lang.String str17 = instanceInfo11.getAppGroupName();
        java.lang.String str18 = instanceInfo11.getASGName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager19 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager19.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig22 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int23 = myDataCenterInstanceConfig22.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo24 = myDataCenterInstanceConfig22.getDataCenterInfo();
        java.lang.String str25 = myDataCenterInstanceConfig22.getNamespace();
        boolean boolean26 = myDataCenterInstanceConfig22.isNonSecurePortEnabled();
        applicationInfoManager19.config = myDataCenterInstanceConfig22;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig28 = applicationInfoManager19.config;
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager19.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager19.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType31 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo30.setActionType(actionType31);
        com.netflix.appinfo.LeaseInfo leaseInfo33 = null;
        instanceInfo30.setLeaseInfo(leaseInfo33);
        java.util.Set<java.lang.String> strSet35 = instanceInfo30.getHealthCheckUrls();
        java.lang.String str36 = instanceInfo30.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder37 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo30);
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder37.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder42 = builder40.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder44 = builder42.setSecureVIPAddress("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder46 = builder42.setStatusPageUrlForDeser("inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.InstanceInfo.Builder builder48 = builder42.setHostName("hi!");
        com.netflix.appinfo.LeaseInfo leaseInfo49 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder50 = builder48.setLeaseInfo(leaseInfo49);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager51 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig53 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int54 = myDataCenterInstanceConfig53.getLeaseRenewalIntervalInSeconds();
        int int55 = myDataCenterInstanceConfig53.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager51.config = myDataCenterInstanceConfig53;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager51;
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus59 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("/Status");
        applicationInfoManager51.setInstanceStatus(instanceStatus59);
        com.netflix.appinfo.InstanceInfo.Builder builder61 = builder50.setStatus(instanceStatus59);
        instanceInfo11.setStatusWithoutDirty(instanceStatus59);
        int int63 = instanceInfo11.getPort();
        instanceInfo11.setIsDirty(true);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertTrue("'" + instanceStatus13 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus13.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 7002 + "'", int15 == 7002);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/" + "'", str17, "/");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(applicationInfoManager19);
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 30 + "'", int23 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig28);
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertTrue("'" + actionType31 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType31.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(applicationInfoManager51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 30 + "'", int54 == 30);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertTrue("'" + instanceStatus59 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus59.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 7001 + "'", int63 == 7001);
    }

    @Test
    public void test04473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04473");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig13 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int14 = myDataCenterInstanceConfig13.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo15 = myDataCenterInstanceConfig13.getDataCenterInfo();
        java.lang.String str17 = myDataCenterInstanceConfig13.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig13.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo18);
        java.lang.String str20 = myDataCenterInstanceConfig19.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = myDataCenterInstanceConfig19.getMetadataMap();
        applicationInfoManager0.registerAppMetadata(strMap21);
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig25 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int26 = myDataCenterInstanceConfig25.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo27 = myDataCenterInstanceConfig25.getDataCenterInfo();
        java.lang.String str28 = myDataCenterInstanceConfig25.getHealthCheckUrl();
        int int29 = myDataCenterInstanceConfig25.getLeaseExpirationDurationInSeconds();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig25);
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.Builder builder32 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder32.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder36 = builder32.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder32.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig39 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo40 = myDataCenterInstanceConfig39.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder41 = builder38.setDataCenterInfo(dataCenterInfo40);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig42 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo43 = myDataCenterInstanceConfig42.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder44 = builder38.setDataCenterInfo(dataCenterInfo43);
        com.netflix.appinfo.InstanceInfo.Builder builder46 = builder44.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder49 = builder44.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder51 = builder44.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder53 = builder44.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo54 = builder53.build();
        java.lang.String str55 = instanceInfo54.getStatusPageUrl();
        com.netflix.appinfo.InstanceInfo instanceInfo56 = new com.netflix.appinfo.InstanceInfo(instanceInfo54);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager57 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig59 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int60 = myDataCenterInstanceConfig59.getLeaseRenewalIntervalInSeconds();
        int int61 = myDataCenterInstanceConfig59.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager57.config = myDataCenterInstanceConfig59;
        java.lang.String str63 = myDataCenterInstanceConfig59.getHealthCheckUrlPath();
        java.lang.String str64 = myDataCenterInstanceConfig59.getHomePageUrl();
        boolean boolean65 = instanceInfo56.equals((java.lang.Object) myDataCenterInstanceConfig59);
        java.util.Map<java.lang.String, java.lang.String> strMap66 = instanceInfo56.getMetadata();
        applicationInfoManager0.registerAppMetadata(strMap66);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 30 + "'", int14 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(instanceInfo23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 30 + "'", int26 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 90 + "'", int29 == 90);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(dataCenterInfo40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(dataCenterInfo43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(instanceInfo54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(applicationInfoManager57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 30 + "'", int60 == 30);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "/healthcheck" + "'", str63, "/healthcheck");
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strMap66);
    }

    @Test
    public void test04474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04474");
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig0 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager1 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig4.getDataCenterInfo();
        java.lang.String str7 = myDataCenterInstanceConfig4.getNamespace();
        boolean boolean8 = myDataCenterInstanceConfig4.isNonSecurePortEnabled();
        applicationInfoManager1.config = myDataCenterInstanceConfig4;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig10 = applicationInfoManager1.config;
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager1.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager1.instanceInfo;
        int int13 = instanceInfo12.getSecurePort();
        boolean boolean14 = instanceInfo12.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig0, instanceInfo12);
        instanceInfo12.setSID("unknown");
        java.lang.String str18 = instanceInfo12.getSecureVipAddress();
        java.lang.String str19 = instanceInfo12.getVersion();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int22 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo23 = myDataCenterInstanceConfig21.getDataCenterInfo();
        java.lang.String str24 = myDataCenterInstanceConfig21.getNamespace();
        java.lang.String str25 = myDataCenterInstanceConfig21.getVirtualHostName();
        java.lang.String str26 = myDataCenterInstanceConfig21.getSecureHealthCheckUrl();
        int int27 = myDataCenterInstanceConfig21.getLeaseExpirationDurationInSeconds();
        java.lang.String str28 = myDataCenterInstanceConfig21.getIpAddress();
        boolean boolean29 = instanceInfo12.equals((java.lang.Object) myDataCenterInstanceConfig21);
        com.netflix.appinfo.InstanceInfo.Builder builder30 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo12);
        instanceInfo12.setIsDirty(false);
        org.junit.Assert.assertNotNull(applicationInfoManager1);
        org.junit.Assert.assertNotNull(instanceInfo2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 443 + "'", int13 == 443);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "unknown" + "'", str19, "unknown");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 30 + "'", int22 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str25, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 90 + "'", int27 == 90);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "172.20.26.3" + "'", str28, "172.20.26.3");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test04475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04475");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        int int13 = instanceInfo11.getPort();
        int int14 = instanceInfo11.getSecurePort();
        java.lang.Boolean boolean15 = instanceInfo11.isCoordinatingDiscoveryServer();
        java.lang.String str16 = instanceInfo11.getSecureVipAddress();
        instanceInfo11.setIsDirty(false);
        java.lang.String str19 = instanceInfo11.getStatusPageUrl();
        long long20 = instanceInfo11.getLastUpdatedTimestamp();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 80 + "'", int13 == 80);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 443 + "'", int14 == 443);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str19, "http://inesserver2.windows.cin.ufpe.br:80/Status");
// flaky:         org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1636106128879L + "'", long20 == 1636106128879L);
    }

    @Test
    public void test04476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04476");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder11.setHomePageUrlForDeser("UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder13.add("unknown", "/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo17 = builder16.build();
        boolean boolean18 = instanceInfo17.isDirty();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(instanceInfo17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test04477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04477");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setNamespace("na");
        com.netflix.appinfo.InstanceInfo instanceInfo15 = builder6.build();
        boolean boolean16 = builder6.isInitialized();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager17 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager17.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig20 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int21 = myDataCenterInstanceConfig20.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = myDataCenterInstanceConfig20.getDataCenterInfo();
        java.lang.String str23 = myDataCenterInstanceConfig20.getNamespace();
        boolean boolean24 = myDataCenterInstanceConfig20.isNonSecurePortEnabled();
        applicationInfoManager17.config = myDataCenterInstanceConfig20;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig26 = applicationInfoManager17.config;
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager17.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager17.instanceInfo;
        java.lang.Boolean boolean29 = instanceInfo28.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus30 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo28.setOverriddenStatus(instanceStatus30);
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder6.setStatus(instanceStatus30);
        com.netflix.appinfo.InstanceInfo instanceInfo33 = builder6.getRawInstance();
        java.lang.String str34 = instanceInfo33.getIPAddr();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(applicationInfoManager17);
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 30 + "'", int21 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertEquals("'" + boolean29 + "' != '" + false + "'", boolean29, false);
        org.junit.Assert.assertTrue("'" + instanceStatus30 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus30.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test04478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04478");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig1 = applicationInfoManager0.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager2 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        int int6 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager2.config = myDataCenterInstanceConfig4;
        java.lang.String str8 = myDataCenterInstanceConfig4.getIpAddress();
        java.lang.String str9 = myDataCenterInstanceConfig4.getVirtualHostName();
        java.lang.String str11 = myDataCenterInstanceConfig4.getHostName(true);
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig4);
        com.netflix.appinfo.InstanceInfo instanceInfo13 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager14 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo15 = applicationInfoManager14.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig17 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int18 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig17.getDataCenterInfo();
        java.lang.String str20 = myDataCenterInstanceConfig17.getNamespace();
        boolean boolean21 = myDataCenterInstanceConfig17.isNonSecurePortEnabled();
        applicationInfoManager14.config = myDataCenterInstanceConfig17;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig23 = applicationInfoManager14.config;
        com.netflix.appinfo.InstanceInfo instanceInfo24 = applicationInfoManager14.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager14.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType26 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo25.setActionType(actionType26);
        com.netflix.appinfo.LeaseInfo leaseInfo28 = null;
        instanceInfo25.setLeaseInfo(leaseInfo28);
        java.util.Set<java.lang.String> strSet30 = instanceInfo25.getHealthCheckUrls();
        java.lang.String str31 = instanceInfo25.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder32 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo25);
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder32.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder37 = builder32.setHealthCheckUrlsForDeser("", "hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder39 = builder37.setLastDirtyTimestamp((long) 443);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus40 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        com.netflix.appinfo.InstanceInfo.Builder builder41 = builder37.setStatus(instanceStatus40);
        applicationInfoManager0.setInstanceStatus(instanceStatus40);
        applicationInfoManager0.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.InstanceInfo instanceInfo44 = applicationInfoManager0.getInfo();
        java.lang.String str45 = instanceInfo44.getStatusPageUrl();
        java.lang.String str46 = instanceInfo44.getASGName();
        long long47 = instanceInfo44.getLastUpdatedTimestamp();
        int int48 = instanceInfo44.getCountryId();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig1);
        org.junit.Assert.assertNotNull(applicationInfoManager2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 30 + "'", int6 == 30);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "172.20.26.3" + "'", str8, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str9, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str11, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(instanceInfo13);
        org.junit.Assert.assertNotNull(applicationInfoManager14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 30 + "'", int18 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig23);
        org.junit.Assert.assertNotNull(instanceInfo24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertTrue("'" + actionType26 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType26.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str31, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + instanceStatus40 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus40.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(instanceInfo44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str45, "http://inesserver2.windows.cin.ufpe.br:80/Status");
        org.junit.Assert.assertNull(str46);
// flaky:         org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1636106128948L + "'", long47 == 1636106128948L);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
    }

    @Test
    public void test04479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04479");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        java.lang.Boolean boolean12 = instanceInfo11.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus13 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo11.setOverriddenStatus(instanceStatus13);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo16 = applicationInfoManager15.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig18 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int19 = myDataCenterInstanceConfig18.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo20 = myDataCenterInstanceConfig18.getDataCenterInfo();
        java.lang.String str21 = myDataCenterInstanceConfig18.getNamespace();
        boolean boolean22 = myDataCenterInstanceConfig18.isNonSecurePortEnabled();
        applicationInfoManager15.config = myDataCenterInstanceConfig18;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig24 = applicationInfoManager15.config;
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager15.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo26 = applicationInfoManager15.instanceInfo;
        java.lang.Boolean boolean27 = instanceInfo26.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus28 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo26.setOverriddenStatus(instanceStatus28);
        instanceInfo26.setLastDirtyTimestamp((java.lang.Long) (-1L));
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus32 = instanceInfo26.getOverriddenStatus();
        instanceInfo11.setOverriddenStatus(instanceStatus32);
        java.util.Map<java.lang.String, java.lang.String> strMap34 = instanceInfo11.getMetadata();
        java.lang.String str35 = instanceInfo11.getSID();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertTrue("'" + instanceStatus13 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus13.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(applicationInfoManager15);
        org.junit.Assert.assertNotNull(instanceInfo16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 30 + "'", int19 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertEquals("'" + boolean27 + "' != '" + false + "'", boolean27, false);
        org.junit.Assert.assertTrue("'" + instanceStatus28 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus28.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + instanceStatus32 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus32.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "na" + "'", str35, "na");
    }

    @Test
    public void test04480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04480");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setNamespace("na");
        com.netflix.appinfo.InstanceInfo instanceInfo15 = builder6.build();
        int int16 = instanceInfo15.getSecurePort();
        instanceInfo15.setSID("http://inesserver2.windows.cin.ufpe.br:80/Status");
        java.lang.String str19 = instanceInfo15.getHostName();
        com.netflix.appinfo.InstanceInfo.Builder builder20 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo15);
        java.util.Set<java.lang.String> strSet21 = instanceInfo15.getHealthCheckUrls();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 7002 + "'", int16 == 7002);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strSet21);
    }

    @Test
    public void test04481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04481");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig1 = applicationInfoManager0.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager2 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        int int6 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager2.config = myDataCenterInstanceConfig4;
        java.lang.String str8 = myDataCenterInstanceConfig4.getIpAddress();
        java.lang.String str9 = myDataCenterInstanceConfig4.getVirtualHostName();
        java.lang.String str11 = myDataCenterInstanceConfig4.getHostName(true);
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig4);
        com.netflix.appinfo.InstanceInfo instanceInfo13 = applicationInfoManager0.instanceInfo;
        instanceInfo13.setIsCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.ActionType actionType15 = instanceInfo13.getActionType();
        long long16 = instanceInfo13.getLastUpdatedTimestamp();
        java.lang.String str17 = instanceInfo13.getIPAddr();
        com.netflix.appinfo.InstanceInfo.ActionType actionType18 = instanceInfo13.getActionType();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig1);
        org.junit.Assert.assertNotNull(applicationInfoManager2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 30 + "'", int6 == 30);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "172.20.26.3" + "'", str8, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str9, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str11, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(instanceInfo13);
        org.junit.Assert.assertNull(actionType15);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1636106129029L + "'", long16 == 1636106129029L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "172.20.26.3" + "'", str17, "172.20.26.3");
        org.junit.Assert.assertNull(actionType18);
    }

    @Test
    public void test04482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04482");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setSecureVIPAddress("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder23.setStatusPageUrlForDeser("inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder23.setHostName("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder29.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder31.setASGName("http:///:80/Status");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager34 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager34.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig37 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int38 = myDataCenterInstanceConfig37.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo39 = myDataCenterInstanceConfig37.getDataCenterInfo();
        java.lang.String str40 = myDataCenterInstanceConfig37.getNamespace();
        boolean boolean41 = myDataCenterInstanceConfig37.isNonSecurePortEnabled();
        applicationInfoManager34.config = myDataCenterInstanceConfig37;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig43 = applicationInfoManager34.config;
        com.netflix.appinfo.InstanceInfo instanceInfo44 = applicationInfoManager34.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo45 = applicationInfoManager34.instanceInfo;
        java.lang.Boolean boolean46 = instanceInfo45.isCoordinatingDiscoveryServer();
        java.lang.String str47 = instanceInfo45.getVIPAddress();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus48 = instanceInfo45.getOverriddenStatus();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo49 = instanceInfo45.getDataCenterInfo();
        java.lang.Boolean boolean50 = instanceInfo45.isCoordinatingDiscoveryServer();
        int int51 = instanceInfo45.getPort();
        com.netflix.appinfo.InstanceInfo.Builder builder52 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder54 = builder52.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder57 = builder54.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo58 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder59 = builder54.setLeaseInfo(leaseInfo58);
        com.netflix.appinfo.InstanceInfo.Builder builder62 = builder54.setHealthCheckUrlsForDeser("unknown", "172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder64 = builder62.setAppName("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder66 = builder64.setSecureVIPAddress("172.20.26.3");
        com.netflix.appinfo.InstanceInfo instanceInfo67 = builder64.build();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus68 = instanceInfo67.getStatus();
        instanceInfo45.setOverriddenStatus(instanceStatus68);
        com.netflix.appinfo.InstanceInfo.Builder builder70 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder72 = builder70.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder74 = builder70.setAppName("default");
        com.netflix.appinfo.InstanceInfo instanceInfo75 = builder70.build();
        instanceInfo75.setLastUpdatedTimestamp();
        java.util.Set<java.lang.String> strSet77 = instanceInfo75.getHealthCheckUrls();
        com.netflix.appinfo.LeaseInfo leaseInfo78 = null;
        instanceInfo75.setLeaseInfo(leaseInfo78);
        int int80 = instanceInfo75.getCountryId();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus81 = instanceInfo75.getOverriddenStatus();
        instanceInfo45.setStatusWithoutDirty(instanceStatus81);
        com.netflix.appinfo.InstanceInfo.Builder builder83 = builder31.setOverriddenStatus(instanceStatus81);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(applicationInfoManager34);
        org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 30 + "'", int38 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig43);
        org.junit.Assert.assertNotNull(instanceInfo44);
        org.junit.Assert.assertNotNull(instanceInfo45);
        org.junit.Assert.assertEquals("'" + boolean46 + "' != '" + true + "'", boolean46, true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str47, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertTrue("'" + instanceStatus48 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus48.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(dataCenterInfo49);
        org.junit.Assert.assertEquals("'" + boolean50 + "' != '" + true + "'", boolean50, true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 80 + "'", int51 == 80);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(instanceInfo67);
        org.junit.Assert.assertTrue("'" + instanceStatus68 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UP + "'", instanceStatus68.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UP));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(instanceInfo75);
        org.junit.Assert.assertNotNull(strSet77);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertTrue("'" + instanceStatus81 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus81.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder83);
    }

    @Test
    public void test04483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04483");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder23.add("http://inesserver2.windows.cin.ufpe.br:80/Status", "");
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder23.setStatusPageUrl("HTTP://HI!:80/STATUS", "http:///:80/Status");
        com.netflix.appinfo.DataCenterInfo dataCenterInfo30 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder29.setDataCenterInfo(dataCenterInfo30);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager32 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo33 = applicationInfoManager32.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig35 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int36 = myDataCenterInstanceConfig35.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo37 = myDataCenterInstanceConfig35.getDataCenterInfo();
        java.lang.String str38 = myDataCenterInstanceConfig35.getNamespace();
        boolean boolean39 = myDataCenterInstanceConfig35.isNonSecurePortEnabled();
        applicationInfoManager32.config = myDataCenterInstanceConfig35;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig41 = applicationInfoManager32.config;
        com.netflix.appinfo.InstanceInfo instanceInfo42 = applicationInfoManager32.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo43 = applicationInfoManager32.instanceInfo;
        int int44 = instanceInfo43.getSecurePort();
        instanceInfo43.setIsCoordinatingDiscoveryServer();
        int int46 = instanceInfo43.getPort();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus47 = instanceInfo43.getStatus();
        instanceInfo43.setIsDirty(true);
        java.lang.String str50 = instanceInfo43.getId();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager51 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo52 = applicationInfoManager51.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig54 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int55 = myDataCenterInstanceConfig54.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo56 = myDataCenterInstanceConfig54.getDataCenterInfo();
        java.lang.String str57 = myDataCenterInstanceConfig54.getNamespace();
        boolean boolean58 = myDataCenterInstanceConfig54.isNonSecurePortEnabled();
        applicationInfoManager51.config = myDataCenterInstanceConfig54;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig60 = applicationInfoManager51.config;
        com.netflix.appinfo.InstanceInfo instanceInfo61 = applicationInfoManager51.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo62 = applicationInfoManager51.instanceInfo;
        int int63 = instanceInfo62.getSecurePort();
        boolean boolean64 = instanceInfo62.isDirty();
        boolean boolean65 = instanceInfo62.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo66 = new com.netflix.appinfo.InstanceInfo(instanceInfo62);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus67 = instanceInfo62.getStatus();
        instanceInfo43.setStatus(instanceStatus67);
        com.netflix.appinfo.InstanceInfo.Builder builder69 = builder29.setOverriddenStatus(instanceStatus67);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(applicationInfoManager32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 30 + "'", int36 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig41);
        org.junit.Assert.assertNotNull(instanceInfo42);
        org.junit.Assert.assertNotNull(instanceInfo43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 443 + "'", int44 == 443);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 80 + "'", int46 == 80);
        org.junit.Assert.assertTrue("'" + instanceStatus47 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus47.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertNotNull(applicationInfoManager51);
        org.junit.Assert.assertNotNull(instanceInfo52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig60);
        org.junit.Assert.assertNotNull(instanceInfo61);
        org.junit.Assert.assertNotNull(instanceInfo62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 443 + "'", int63 == 443);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + instanceStatus67 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus67.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder69);
    }

    @Test
    public void test04484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04484");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder2.setHealthCheckUrlsForDeser("unknown", "172.20.26.3");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        boolean boolean13 = myDataCenterInstanceConfig12.getSecurePortEnabled();
        java.lang.String str14 = myDataCenterInstanceConfig12.getHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo15 = myDataCenterInstanceConfig12.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder10.setDataCenterInfo(dataCenterInfo15);
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder10.setIPAddr("UNKNOWN");
        com.netflix.appinfo.InstanceInfo instanceInfo19 = builder10.getRawInstance();
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder10.setVIPAddressDeser("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS");
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder24 = builder21.setHomePageUrl("", "http://hi!:97/Status");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(dataCenterInfo15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertNotNull(builder21);
    }

    @Test
    public void test04485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04485");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder2.setAppGroupName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder2.setAppName("http://inesserver2.windows.cin.ufpe.br:10/Status");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
    }

    @Test
    public void test04486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04486");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setCountryId(7002);
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder4.setHealthCheckUrlsForDeser("http://hi!:80/Status", "inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager8 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int11 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        int int12 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager8.config = myDataCenterInstanceConfig10;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig14 = applicationInfoManager8.config;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig15 = applicationInfoManager8.config;
        applicationInfoManager8.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager17 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager17.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig20 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int21 = myDataCenterInstanceConfig20.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = myDataCenterInstanceConfig20.getDataCenterInfo();
        java.lang.String str23 = myDataCenterInstanceConfig20.getNamespace();
        boolean boolean24 = myDataCenterInstanceConfig20.isNonSecurePortEnabled();
        applicationInfoManager17.config = myDataCenterInstanceConfig20;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig26 = applicationInfoManager17.config;
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager17.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager17.instanceInfo;
        int int29 = instanceInfo28.getSecurePort();
        boolean boolean30 = instanceInfo28.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = new com.netflix.appinfo.InstanceInfo(instanceInfo28);
        com.netflix.appinfo.InstanceInfo instanceInfo32 = new com.netflix.appinfo.InstanceInfo(instanceInfo28);
        java.lang.String str33 = instanceInfo28.getAppGroupName();
        int int34 = instanceInfo28.getCountryId();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus35 = instanceInfo28.getStatus();
        applicationInfoManager8.setInstanceStatus(instanceStatus35);
        com.netflix.appinfo.InstanceInfo.Builder builder37 = builder7.setOverriddenStatus(instanceStatus35);
        com.netflix.appinfo.InstanceInfo.Builder builder39 = builder37.setSecureVIPAddress("http:///:80/Status");
        com.netflix.appinfo.DataCenterInfo dataCenterInfo41 = null;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig42 = new com.netflix.appinfo.MyDataCenterInstanceConfig("", dataCenterInfo41);
        boolean boolean43 = myDataCenterInstanceConfig42.getSecurePortEnabled();
        java.lang.String str44 = myDataCenterInstanceConfig42.getHomePageUrl();
        java.lang.String str45 = myDataCenterInstanceConfig42.getVirtualHostName();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = myDataCenterInstanceConfig42.getMetadataMap();
        com.netflix.appinfo.InstanceInfo.Builder builder47 = builder37.setMetadata(strMap46);
        com.netflix.appinfo.InstanceInfo instanceInfo48 = builder47.getRawInstance();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(applicationInfoManager8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 30 + "'", int12 == 30);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig14);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig15);
        org.junit.Assert.assertNotNull(applicationInfoManager17);
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 30 + "'", int21 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 443 + "'", int29 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UNKNOWN" + "'", str33, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus35 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING + "'", instanceStatus35.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str45, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(instanceInfo48);
    }

    @Test
    public void test04487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04487");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder20.add("/healthcheck", "UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder20.setPort((int) (short) 100);
        com.netflix.appinfo.InstanceInfo instanceInfo26 = builder25.getRawInstance();
        java.lang.String str27 = instanceInfo26.getVIPAddress();
        java.lang.String str28 = instanceInfo26.getHostName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str27, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str28, "inesserver2.windows.cin.ufpe.br");
    }

    @Test
    public void test04488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04488");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80");
        java.lang.String str2 = myDataCenterInstanceConfig1.getNamespace();
        java.lang.String str3 = myDataCenterInstanceConfig1.getVirtualHostName();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str2, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str3, "inesserver2.windows.cin.ufpe.br:80");
    }

    @Test
    public void test04489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04489");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        boolean boolean13 = instanceInfo11.isDirty();
        boolean boolean14 = instanceInfo11.isDirty();
        java.lang.String str15 = instanceInfo11.getVersion();
        com.netflix.appinfo.InstanceInfo instanceInfo16 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager17 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager17.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig20 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int21 = myDataCenterInstanceConfig20.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = myDataCenterInstanceConfig20.getDataCenterInfo();
        java.lang.String str23 = myDataCenterInstanceConfig20.getNamespace();
        boolean boolean24 = myDataCenterInstanceConfig20.isNonSecurePortEnabled();
        applicationInfoManager17.config = myDataCenterInstanceConfig20;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig26 = applicationInfoManager17.config;
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager17.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager17.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType29 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo28.setActionType(actionType29);
        com.netflix.appinfo.LeaseInfo leaseInfo31 = null;
        instanceInfo28.setLeaseInfo(leaseInfo31);
        java.util.Set<java.lang.String> strSet33 = instanceInfo28.getHealthCheckUrls();
        java.lang.String str34 = instanceInfo28.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder35 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo28);
        com.netflix.appinfo.InstanceInfo.Builder builder37 = builder35.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.PortType portType38 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder35.enablePort(portType38, true);
        boolean boolean41 = instanceInfo16.isPortEnabled(portType38);
        java.lang.Boolean boolean42 = instanceInfo16.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus43 = instanceInfo16.getStatus();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "unknown" + "'", str15, "unknown");
        org.junit.Assert.assertNotNull(applicationInfoManager17);
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 30 + "'", int21 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertTrue("'" + actionType29 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType29.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str34, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + portType38 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType38.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + boolean42 + "' != '" + true + "'", boolean42, true);
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus43 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING + "'", instanceStatus43.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING));
    }

    @Test
    public void test04490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04490");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/healthcheck");
        java.lang.String str4 = myDataCenterInstanceConfig3.getHomePageUrlPath();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig6 = new com.netflix.appinfo.MyDataCenterInstanceConfig("http://default:80/Status", dataCenterInfo5);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/", dataCenterInfo5);
        int int8 = myDataCenterInstanceConfig7.getLeaseRenewalIntervalInSeconds();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/" + "'", str4, "/");
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
    }

    @Test
    public void test04491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04491");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        int int3 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean4 = myDataCenterInstanceConfig1.isInstanceEnabledOnit();
        int int5 = myDataCenterInstanceConfig1.getSecurePort();
        java.lang.String str6 = myDataCenterInstanceConfig1.getHealthCheckUrl();
        java.lang.String str7 = myDataCenterInstanceConfig1.getNamespace();
        java.lang.String str8 = myDataCenterInstanceConfig1.getStatusPageUrl();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 443 + "'", int5 == 443);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test04492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04492");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        int int3 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        boolean boolean5 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str7 = myDataCenterInstanceConfig1.getHomePageUrlPath();
        java.lang.String str8 = myDataCenterInstanceConfig1.getAppname();
        java.lang.String str9 = myDataCenterInstanceConfig1.getStatusPageUrl();
        int int10 = myDataCenterInstanceConfig1.getNonSecurePort();
        java.lang.String str11 = myDataCenterInstanceConfig1.getNamespace();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = myDataCenterInstanceConfig1.getMetadataMap();
        java.lang.String str13 = myDataCenterInstanceConfig1.getAppGroupName();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/Status" + "'", str4, "/Status");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/" + "'", str7, "/");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "unknown" + "'", str8, "unknown");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 80 + "'", int10 == 80);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "unknown" + "'", str13, "unknown");
    }

    @Test
    public void test04493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04493");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        com.netflix.appinfo.InstanceInfo instanceInfo3 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo4 = applicationInfoManager0.instanceInfo;
        java.lang.String str5 = instanceInfo4.getSID();
        java.lang.String str6 = instanceInfo4.getASGName();
        instanceInfo4.setSID("http://inesserver2.windows.cin.ufpe.br:80/");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertNotNull(instanceInfo3);
        org.junit.Assert.assertNotNull(instanceInfo4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "na" + "'", str5, "na");
// flaky:         org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test04494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04494");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        instanceInfo11.setIsCoordinatingDiscoveryServer();
        int int14 = instanceInfo11.getPort();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus15 = instanceInfo11.getStatus();
        java.lang.String str16 = instanceInfo11.getHostName();
        com.netflix.appinfo.InstanceInfo instanceInfo17 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = instanceInfo17.getMetadata();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus19 = null;
        instanceInfo17.setOverriddenStatus(instanceStatus19);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder21.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder21.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig28 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig28.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder27.setDataCenterInfo(dataCenterInfo29);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig31 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo32 = myDataCenterInstanceConfig31.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder27.setDataCenterInfo(dataCenterInfo32);
        com.netflix.appinfo.InstanceInfo.Builder builder35 = builder27.setNamespace("na");
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder27.add("unknown", "UNKNOWN");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager39 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo40 = applicationInfoManager39.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig42 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int43 = myDataCenterInstanceConfig42.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo44 = myDataCenterInstanceConfig42.getDataCenterInfo();
        java.lang.String str45 = myDataCenterInstanceConfig42.getNamespace();
        boolean boolean46 = myDataCenterInstanceConfig42.isNonSecurePortEnabled();
        applicationInfoManager39.config = myDataCenterInstanceConfig42;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig48 = applicationInfoManager39.config;
        com.netflix.appinfo.InstanceInfo instanceInfo49 = applicationInfoManager39.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo50 = applicationInfoManager39.instanceInfo;
        int int51 = instanceInfo50.getSecurePort();
        int int52 = instanceInfo50.getPort();
        int int53 = instanceInfo50.getCountryId();
        boolean boolean54 = instanceInfo50.isDirty();
        int int55 = instanceInfo50.getPort();
        java.lang.String str56 = instanceInfo50.getStatusPageUrl();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager57 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo58 = applicationInfoManager57.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig60 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int61 = myDataCenterInstanceConfig60.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo62 = myDataCenterInstanceConfig60.getDataCenterInfo();
        java.lang.String str63 = myDataCenterInstanceConfig60.getNamespace();
        boolean boolean64 = myDataCenterInstanceConfig60.isNonSecurePortEnabled();
        applicationInfoManager57.config = myDataCenterInstanceConfig60;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig66 = applicationInfoManager57.config;
        com.netflix.appinfo.InstanceInfo instanceInfo67 = applicationInfoManager57.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo68 = applicationInfoManager57.instanceInfo;
        int int69 = instanceInfo68.getSecurePort();
        com.netflix.appinfo.InstanceInfo.PortType portType70 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean71 = instanceInfo68.isPortEnabled(portType70);
        boolean boolean72 = instanceInfo50.isPortEnabled(portType70);
        com.netflix.appinfo.InstanceInfo.Builder builder74 = builder27.enablePort(portType70, true);
        boolean boolean75 = instanceInfo17.isPortEnabled(portType70);
        com.netflix.appinfo.InstanceInfo.Builder builder76 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo17);
        com.netflix.appinfo.InstanceInfo.Builder builder78 = builder76.setVIPAddressDeser("UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder80 = builder76.setVIPAddressDeser("http://default:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo81 = builder80.getRawInstance();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7002 + "'", int12 == 7002);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 7001 + "'", int14 == 7001);
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus15 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UP + "'", instanceStatus15.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UP));
// flaky:         org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(dataCenterInfo32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(applicationInfoManager39);
        org.junit.Assert.assertNotNull(instanceInfo40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 30 + "'", int43 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig48);
        org.junit.Assert.assertNotNull(instanceInfo49);
        org.junit.Assert.assertNotNull(instanceInfo50);
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + 7002 + "'", int51 == 7002);
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 7001 + "'", int52 == 7001);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int55 + "' != '" + 7001 + "'", int55 == 7001);
// flaky:         org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(applicationInfoManager57);
        org.junit.Assert.assertNotNull(instanceInfo58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig66);
        org.junit.Assert.assertNotNull(instanceInfo67);
        org.junit.Assert.assertNotNull(instanceInfo68);
// flaky:         org.junit.Assert.assertTrue("'" + int69 + "' != '" + 7002 + "'", int69 == 7002);
        org.junit.Assert.assertTrue("'" + portType70 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType70.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
// flaky:         org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(builder74);
// flaky:         org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(instanceInfo81);
    }

    @Test
    public void test04495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04495");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        java.lang.String str6 = myDataCenterInstanceConfig2.getIpAddress();
        java.lang.String str7 = myDataCenterInstanceConfig2.getVirtualHostName();
        java.lang.String str9 = myDataCenterInstanceConfig2.getHostName(true);
        java.lang.String str10 = myDataCenterInstanceConfig2.getNamespace();
        java.lang.String str11 = myDataCenterInstanceConfig2.getSecureVirtualHostName();
        java.lang.String str13 = myDataCenterInstanceConfig2.getHostName(false);
        boolean boolean14 = myDataCenterInstanceConfig2.getSecurePortEnabled();
        boolean boolean15 = myDataCenterInstanceConfig2.isInstanceEnabledOnit();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "172.20.26.3" + "'", str6, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str7, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str9, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str13, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test04496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04496");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str7 = myDataCenterInstanceConfig3.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig3.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("UNKNOWN", dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig("172.20.26.3", dataCenterInfo8);
        java.lang.String str11 = myDataCenterInstanceConfig10.getStatusPageUrlPath();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str7, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/Status" + "'", str11, "/Status");
    }

    @Test
    public void test04497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04497");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        instanceInfo11.setIsCoordinatingDiscoveryServer();
        int int14 = instanceInfo11.getPort();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus15 = instanceInfo11.getStatus();
        java.lang.String str16 = instanceInfo11.getHostName();
        com.netflix.appinfo.InstanceInfo instanceInfo17 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        int int18 = instanceInfo11.getPort();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager19 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int22 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        int int23 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager19.config = myDataCenterInstanceConfig21;
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager19.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig27 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int28 = myDataCenterInstanceConfig27.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig27.getDataCenterInfo();
        java.lang.String str30 = myDataCenterInstanceConfig27.getHealthCheckUrl();
        int int31 = myDataCenterInstanceConfig27.getLeaseExpirationDurationInSeconds();
        applicationInfoManager19.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig27);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig34 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int35 = myDataCenterInstanceConfig34.getLeaseRenewalIntervalInSeconds();
        int int36 = myDataCenterInstanceConfig34.getLeaseRenewalIntervalInSeconds();
        java.lang.String str37 = myDataCenterInstanceConfig34.getStatusPageUrlPath();
        boolean boolean38 = myDataCenterInstanceConfig34.getSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager39 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo40 = applicationInfoManager39.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig42 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int43 = myDataCenterInstanceConfig42.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo44 = myDataCenterInstanceConfig42.getDataCenterInfo();
        java.lang.String str45 = myDataCenterInstanceConfig42.getNamespace();
        boolean boolean46 = myDataCenterInstanceConfig42.isNonSecurePortEnabled();
        applicationInfoManager39.config = myDataCenterInstanceConfig42;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig48 = applicationInfoManager39.config;
        com.netflix.appinfo.InstanceInfo instanceInfo49 = applicationInfoManager39.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo50 = applicationInfoManager39.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType51 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo50.setActionType(actionType51);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager53 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo54 = applicationInfoManager53.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig56 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int57 = myDataCenterInstanceConfig56.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo58 = myDataCenterInstanceConfig56.getDataCenterInfo();
        java.lang.String str59 = myDataCenterInstanceConfig56.getNamespace();
        boolean boolean60 = myDataCenterInstanceConfig56.isNonSecurePortEnabled();
        applicationInfoManager53.config = myDataCenterInstanceConfig56;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig62 = applicationInfoManager53.config;
        com.netflix.appinfo.InstanceInfo instanceInfo63 = applicationInfoManager53.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo64 = applicationInfoManager53.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType65 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo64.setActionType(actionType65);
        instanceInfo50.setActionType(actionType65);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager68 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig34, instanceInfo50);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus70 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("inesserver2.windows.cin.ufpe.br:80");
        instanceInfo50.setOverriddenStatus(instanceStatus70);
        applicationInfoManager19.setInstanceStatus(instanceStatus70);
        instanceInfo11.setOverriddenStatus(instanceStatus70);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus74 = null;
        instanceInfo11.setOverriddenStatus(instanceStatus74);
        instanceInfo11.setIsDirty(false);
        boolean boolean78 = instanceInfo11.isDirty();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7002 + "'", int12 == 7002);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 7001 + "'", int14 == 7001);
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus15 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UP + "'", instanceStatus15.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UP));
// flaky:         org.junit.Assert.assertNull(str16);
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 7001 + "'", int18 == 7001);
        org.junit.Assert.assertNotNull(applicationInfoManager19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 30 + "'", int22 == 30);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 30 + "'", int23 == 30);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 30 + "'", int28 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 90 + "'", int31 == 90);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 30 + "'", int35 == 30);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 30 + "'", int36 == 30);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "/Status" + "'", str37, "/Status");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager39);
        org.junit.Assert.assertNotNull(instanceInfo40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 30 + "'", int43 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig48);
        org.junit.Assert.assertNotNull(instanceInfo49);
        org.junit.Assert.assertNotNull(instanceInfo50);
        org.junit.Assert.assertTrue("'" + actionType51 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType51.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager53);
        org.junit.Assert.assertNotNull(instanceInfo54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 30 + "'", int57 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig62);
        org.junit.Assert.assertNotNull(instanceInfo63);
        org.junit.Assert.assertNotNull(instanceInfo64);
        org.junit.Assert.assertTrue("'" + actionType65 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType65.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + instanceStatus70 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus70.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test04498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04498");
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig0 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager1 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig4.getDataCenterInfo();
        java.lang.String str7 = myDataCenterInstanceConfig4.getNamespace();
        boolean boolean8 = myDataCenterInstanceConfig4.isNonSecurePortEnabled();
        applicationInfoManager1.config = myDataCenterInstanceConfig4;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig10 = applicationInfoManager1.config;
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager1.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager1.instanceInfo;
        int int13 = instanceInfo12.getSecurePort();
        boolean boolean14 = instanceInfo12.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig0, instanceInfo12);
        int int16 = instanceInfo12.getCountryId();
        java.lang.Boolean boolean17 = instanceInfo12.isCoordinatingDiscoveryServer();
        int int18 = instanceInfo12.getSecurePort();
        java.lang.String str19 = instanceInfo12.getSID();
        int int20 = instanceInfo12.getCountryId();
        int int21 = instanceInfo12.getCountryId();
        org.junit.Assert.assertNotNull(applicationInfoManager1);
        org.junit.Assert.assertNotNull(instanceInfo2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 443 + "'", int13 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 443 + "'", int18 == 443);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "na" + "'", str19, "na");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test04499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04499");
        com.netflix.appinfo.InstanceInfo.Builder builder2 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder2.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder4.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo8 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder4.setLeaseInfo(leaseInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder9.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder11.add("http://inesserver2.windows.cin.ufpe.br:80/Status", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo16 = applicationInfoManager15.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig18 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int19 = myDataCenterInstanceConfig18.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo20 = myDataCenterInstanceConfig18.getDataCenterInfo();
        java.lang.String str21 = myDataCenterInstanceConfig18.getNamespace();
        boolean boolean22 = myDataCenterInstanceConfig18.isNonSecurePortEnabled();
        applicationInfoManager15.config = myDataCenterInstanceConfig18;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig24 = applicationInfoManager15.config;
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager15.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo26 = applicationInfoManager15.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType27 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo26.setActionType(actionType27);
        java.lang.String str29 = instanceInfo26.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType30 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo26.setActionType(actionType30);
        java.lang.String str32 = instanceInfo26.getHostName();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo33 = instanceInfo26.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder11.setDataCenterInfo(dataCenterInfo33);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig35 = new com.netflix.appinfo.MyDataCenterInstanceConfig("INESSERVER2.WINDOWS.CIN.UFPE.BR", dataCenterInfo33);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig36 = new com.netflix.appinfo.MyDataCenterInstanceConfig("http://inesserver2.windows.cin.ufpe.br:80:80/Status", dataCenterInfo33);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(applicationInfoManager15);
        org.junit.Assert.assertNotNull(instanceInfo16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 30 + "'", int19 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertTrue("'" + actionType27 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType27.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UNKNOWN" + "'", str29, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + actionType30 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType30.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str32, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo33);
        org.junit.Assert.assertNotNull(builder34);
    }

    @Test
    public void test04500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04500");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder2.setHealthCheckUrlsForDeser("unknown", "172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder10.setAppName("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo instanceInfo13 = builder12.build();
        long long14 = instanceInfo13.getLastUpdatedTimestamp();
        int int15 = instanceInfo13.getSecurePort();
        java.util.Set<java.lang.String> strSet16 = instanceInfo13.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo13.getSecureVipAddress();
        java.lang.String str18 = instanceInfo13.getHomePageUrl();
        java.lang.Boolean boolean19 = instanceInfo13.isCoordinatingDiscoveryServer();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(instanceInfo13);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1636106129560L + "'", long14 == 1636106129560L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 7002 + "'", int15 == 7002);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/healthcheck" + "'", str17, "/healthcheck");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
    }
}
