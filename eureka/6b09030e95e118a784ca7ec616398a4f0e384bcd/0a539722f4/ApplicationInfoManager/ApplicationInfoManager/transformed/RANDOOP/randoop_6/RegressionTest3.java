import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test01501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01501");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = 0; // flaky: instanceInfo11.getSecurePort();
        int int13 = 0; // flaky: instanceInfo11.getPort();
        int int14 = 0; // flaky: instanceInfo11.getCountryId();
        boolean boolean15 = false; // flaky: instanceInfo11.isDirty();
// flaky:         instanceInfo11.setIsDirty(false);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = null; // flaky: instanceInfo11.getDataCenterInfo();
        java.lang.String str19 = null; // flaky: instanceInfo11.getIPAddr();
        boolean boolean20 = false; // flaky: instanceInfo11.isDirty();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 80 + "'", int13 == 80);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
// flaky:         org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
// flaky:         org.junit.Assert.assertNotNull(dataCenterInfo18);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "172.20.26.3" + "'", str19, "172.20.26.3");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test01502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01502");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig4.getDataCenterInfo();
        java.lang.String str8 = myDataCenterInstanceConfig4.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo9 = myDataCenterInstanceConfig4.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig("UNKNOWN", dataCenterInfo9);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig11 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo9);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo9);
        java.lang.String str13 = myDataCenterInstanceConfig12.getAppGroupName();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str8, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "unknown" + "'", str13, "unknown");
    }

    @Test
    public void test01503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01503");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder6.setLastDirtyTimestamp((long) (short) 10);
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder6.setSecurePort((int) '4');
        com.netflix.appinfo.InstanceInfo.Builder builder16 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder16.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder16.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder16.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig23 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo24 = myDataCenterInstanceConfig23.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder22.setDataCenterInfo(dataCenterInfo24);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig26 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo27 = myDataCenterInstanceConfig26.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder22.setDataCenterInfo(dataCenterInfo27);
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder22.setNamespace("na");
        com.netflix.appinfo.InstanceInfo instanceInfo31 = builder22.build();
        boolean boolean32 = builder22.isInitialized();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager33 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager33.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig36 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int37 = myDataCenterInstanceConfig36.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo38 = myDataCenterInstanceConfig36.getDataCenterInfo();
        java.lang.String str39 = myDataCenterInstanceConfig36.getNamespace();
        boolean boolean40 = myDataCenterInstanceConfig36.isNonSecurePortEnabled();
        applicationInfoManager33.config = myDataCenterInstanceConfig36;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig42 = applicationInfoManager33.config;
        com.netflix.appinfo.InstanceInfo instanceInfo43 = applicationInfoManager33.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo44 = applicationInfoManager33.instanceInfo;
        java.lang.Boolean boolean45 = null; // flaky: instanceInfo44.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus46 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
// flaky:         instanceInfo44.setOverriddenStatus(instanceStatus46);
        com.netflix.appinfo.InstanceInfo.Builder builder48 = builder22.setStatus(instanceStatus46);
        com.netflix.appinfo.InstanceInfo.Builder builder50 = builder22.setSecureVIPAddressDeser("");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig53 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        java.lang.String str54 = myDataCenterInstanceConfig53.getASGName();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = myDataCenterInstanceConfig53.getMetadataMap();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo56 = myDataCenterInstanceConfig53.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig57 = new com.netflix.appinfo.MyDataCenterInstanceConfig("na", dataCenterInfo56);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig58 = new com.netflix.appinfo.MyDataCenterInstanceConfig("", dataCenterInfo56);
        com.netflix.appinfo.InstanceInfo.Builder builder59 = builder22.setDataCenterInfo(dataCenterInfo56);
        com.netflix.appinfo.InstanceInfo.Builder builder60 = builder6.setDataCenterInfo(dataCenterInfo56);
        com.netflix.appinfo.InstanceInfo.Builder builder62 = builder60.setVIPAddressDeser("/Status");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(dataCenterInfo24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(dataCenterInfo27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(applicationInfoManager33);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 30 + "'", int37 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig42);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo43);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo44);
// flaky:         org.junit.Assert.assertEquals("'" + boolean45 + "' != '" + false + "'", boolean45, false);
        org.junit.Assert.assertTrue("'" + instanceStatus46 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus46.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(dataCenterInfo56);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder62);
    }

    @Test
    public void test01504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01504");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder2.setSecurePort(10);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder9.setSecureVIPAddressDeser("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder9.setIPAddr("UNKNOWN");
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo instanceInfo14 = builder9.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: name is required!");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
    }

    @Test
    public void test01505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01505");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig13 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int14 = myDataCenterInstanceConfig13.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo15 = myDataCenterInstanceConfig13.getDataCenterInfo();
        java.lang.String str17 = myDataCenterInstanceConfig13.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig13.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo18);
        java.lang.String str20 = myDataCenterInstanceConfig19.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = myDataCenterInstanceConfig19.getMetadataMap();
// flaky:         applicationInfoManager0.registerAppMetadata(strMap21);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        // The following exception was thrown during execution in test generation
        try {
            applicationInfoManager0.registerAppMetadata(strMap23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 30 + "'", int14 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
    }

    @Test
    public void test01506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01506");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig1 = applicationInfoManager0.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager2 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        int int6 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager2.config = myDataCenterInstanceConfig4;
        java.lang.String str8 = myDataCenterInstanceConfig4.getIpAddress();
        java.lang.String str9 = myDataCenterInstanceConfig4.getVirtualHostName();
        java.lang.String str11 = myDataCenterInstanceConfig4.getHostName(true);
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig4);
        java.lang.String str13 = myDataCenterInstanceConfig4.getSecureVirtualHostName();
        java.lang.String str14 = myDataCenterInstanceConfig4.getHealthCheckUrl();
        boolean boolean15 = myDataCenterInstanceConfig4.isNonSecurePortEnabled();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig1);
        org.junit.Assert.assertNotNull(applicationInfoManager2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 30 + "'", int6 == 30);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "172.20.26.3" + "'", str8, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str9, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str11, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test01507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01507");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder18.setVIPAddressDeser("hi!");
        com.netflix.appinfo.LeaseInfo leaseInfo24 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder18.setLeaseInfo(leaseInfo24);
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder25.setHomePageUrlForDeser("/");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager28 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager28.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig31 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int32 = myDataCenterInstanceConfig31.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo33 = myDataCenterInstanceConfig31.getDataCenterInfo();
        java.lang.String str34 = myDataCenterInstanceConfig31.getNamespace();
        boolean boolean35 = myDataCenterInstanceConfig31.isNonSecurePortEnabled();
        applicationInfoManager28.config = myDataCenterInstanceConfig31;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig37 = applicationInfoManager28.config;
        com.netflix.appinfo.InstanceInfo instanceInfo38 = applicationInfoManager28.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo39 = applicationInfoManager28.instanceInfo;
        java.lang.Boolean boolean40 = instanceInfo39.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus41 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo39.setOverriddenStatus(instanceStatus41);
        instanceInfo39.setLastDirtyTimestamp((java.lang.Long) (-1L));
        com.netflix.appinfo.DataCenterInfo dataCenterInfo45 = instanceInfo39.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder46 = builder27.setDataCenterInfo(dataCenterInfo45);
        com.netflix.appinfo.InstanceInfo.Builder builder49 = builder46.setHealthCheckUrlsForDeser("eureka.", "http://hi!:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder52 = builder49.add("/", "UNKNOWN");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(applicationInfoManager28);
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 30 + "'", int32 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig37);
        org.junit.Assert.assertNotNull(instanceInfo38);
        org.junit.Assert.assertNotNull(instanceInfo39);
        org.junit.Assert.assertEquals("'" + boolean40 + "' != '" + false + "'", boolean40, false);
        org.junit.Assert.assertTrue("'" + instanceStatus41 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus41.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(dataCenterInfo45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder52);
    }

    @Test
    public void test01508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01508");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder18.setVIPAddressDeser("hi!");
        com.netflix.appinfo.LeaseInfo leaseInfo24 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder18.setLeaseInfo(leaseInfo24);
        com.netflix.appinfo.InstanceInfo.PortType portType26 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder18.enablePort(portType26, false);
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder18.setHealthCheckUrls("/healthcheck", "unknown", "inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder32.setAppGroupName("DEFAULT");
        com.netflix.appinfo.InstanceInfo.Builder builder36 = builder34.setASGName("");
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder34.setSecureVIPAddressDeser("/");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + portType26 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType26.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
    }

    @Test
    public void test01509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01509");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isInstanceEnabledOnit();
        java.lang.String str4 = myDataCenterInstanceConfig1.getIpAddress();
        int int5 = myDataCenterInstanceConfig1.getSecurePort();
        int int6 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str7 = myDataCenterInstanceConfig1.getSecureHealthCheckUrl();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "172.20.26.3" + "'", str4, "172.20.26.3");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 443 + "'", int5 == 443);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 30 + "'", int6 == 30);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test01510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01510");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig3.getDataCenterInfo();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig3);
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig10 = applicationInfoManager0.config;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int13 = myDataCenterInstanceConfig12.getLeaseRenewalIntervalInSeconds();
        java.lang.String str14 = myDataCenterInstanceConfig12.getVirtualHostName();
        int int15 = myDataCenterInstanceConfig12.getNonSecurePort();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo16 = myDataCenterInstanceConfig12.getDataCenterInfo();
        applicationInfoManager0.config = myDataCenterInstanceConfig12;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        com.netflix.appinfo.InstanceInfo.Builder builder19 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder19.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder19.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder19.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig26 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo27 = myDataCenterInstanceConfig26.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder25.setDataCenterInfo(dataCenterInfo27);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig29 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo30 = myDataCenterInstanceConfig29.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder25.setDataCenterInfo(dataCenterInfo30);
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder25.setSecureVIPAddressDeser("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder34 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder36 = builder34.setNamespace("unknown");
        boolean boolean37 = builder34.isInitialized();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager38 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo39 = applicationInfoManager38.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager38;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig42 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int43 = myDataCenterInstanceConfig42.getLeaseRenewalIntervalInSeconds();
        int int44 = myDataCenterInstanceConfig42.getLeaseRenewalIntervalInSeconds();
        java.lang.String str45 = myDataCenterInstanceConfig42.getStatusPageUrlPath();
        boolean boolean46 = myDataCenterInstanceConfig42.getSecurePortEnabled();
        com.netflix.appinfo.InstanceInfo instanceInfo47 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager48 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig42, instanceInfo47);
        java.util.Map<java.lang.String, java.lang.String> strMap49 = myDataCenterInstanceConfig42.getMetadataMap();
        applicationInfoManager38.registerAppMetadata(strMap49);
        com.netflix.appinfo.InstanceInfo.Builder builder51 = builder34.setMetadata(strMap49);
        com.netflix.appinfo.InstanceInfo.Builder builder52 = builder25.setMetadata(strMap49);
        applicationInfoManager0.registerAppMetadata(strMap49);
        applicationInfoManager0.refreshDataCenterInfoIfRequired();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 30 + "'", int13 == 30);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str14, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 80 + "'", int15 == 80);
        org.junit.Assert.assertNotNull(dataCenterInfo16);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(dataCenterInfo27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(dataCenterInfo30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager38);
        org.junit.Assert.assertNotNull(instanceInfo39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 30 + "'", int43 == 30);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 30 + "'", int44 == 30);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/Status" + "'", str45, "/Status");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
    }

    @Test
    public void test01511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01511");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isInstanceEnabledOnit();
        java.lang.String str4 = myDataCenterInstanceConfig1.getIpAddress();
        int int5 = myDataCenterInstanceConfig1.getSecurePort();
        java.lang.String str6 = myDataCenterInstanceConfig1.getAppname();
        boolean boolean7 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        java.lang.String str8 = myDataCenterInstanceConfig1.getSecureHealthCheckUrl();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "172.20.26.3" + "'", str4, "172.20.26.3");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 443 + "'", int5 == 443);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "unknown" + "'", str6, "unknown");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test01512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01512");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager1 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig4.getDataCenterInfo();
        java.lang.String str7 = myDataCenterInstanceConfig4.getNamespace();
        boolean boolean8 = myDataCenterInstanceConfig4.isNonSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo9 = myDataCenterInstanceConfig4.getDataCenterInfo();
        applicationInfoManager1.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig4);
        boolean boolean11 = myDataCenterInstanceConfig4.getSecurePortEnabled();
        java.lang.String str12 = myDataCenterInstanceConfig4.getSecureHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo13 = myDataCenterInstanceConfig4.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig14 = new com.netflix.appinfo.MyDataCenterInstanceConfig("", dataCenterInfo13);
        boolean boolean15 = myDataCenterInstanceConfig14.isNonSecurePortEnabled();
        int int16 = myDataCenterInstanceConfig14.getNonSecurePort();
        boolean boolean17 = myDataCenterInstanceConfig14.getSecurePortEnabled();
        org.junit.Assert.assertNotNull(applicationInfoManager1);
        org.junit.Assert.assertNull(instanceInfo2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(dataCenterInfo13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 80 + "'", int16 == 80);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test01513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01513");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        boolean boolean13 = instanceInfo11.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        java.lang.String str15 = instanceInfo14.getVersion();
        instanceInfo14.setLastUpdatedTimestamp();
        java.lang.String str17 = instanceInfo14.getAppName();
        java.lang.String str18 = instanceInfo14.getSID();
        java.lang.String str19 = instanceInfo14.getSecureVipAddress();
        java.lang.String str20 = instanceInfo14.getStatusPageUrl();
        int int21 = instanceInfo14.getSecurePort();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7002 + "'", int12 == 7002);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "unknown" + "'", str15, "unknown");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "DEFAULT" + "'", str17, "DEFAULT");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "na" + "'", str18, "na");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str19, "http://inesserver2.windows.cin.ufpe.br:80/Status");
// flaky:         org.junit.Assert.assertNull(str20);
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 7002 + "'", int21 == 7002);
    }

    @Test
    public void test01514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01514");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str4 = myDataCenterInstanceConfig1.getNamespace();
        boolean boolean5 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig1.getDataCenterInfo();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo7 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str8 = myDataCenterInstanceConfig1.getAppname();
        int int9 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str10 = myDataCenterInstanceConfig1.getNamespace();
        java.lang.String str11 = myDataCenterInstanceConfig1.getASGName();
        java.lang.String str12 = myDataCenterInstanceConfig1.getAppGroupName();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo13 = myDataCenterInstanceConfig1.getDataCenterInfo();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertNotNull(dataCenterInfo7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "unknown" + "'", str8, "unknown");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 30 + "'", int9 == 30);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "unknown" + "'", str12, "unknown");
        org.junit.Assert.assertNotNull(dataCenterInfo13);
    }

    @Test
    public void test01515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01515");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig1 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo2 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager3 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig1, instanceInfo2);
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig4 = applicationInfoManager3.config;
        com.netflix.appinfo.InstanceInfo instanceInfo5 = applicationInfoManager3.getInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig6 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo7 = myDataCenterInstanceConfig6.getDataCenterInfo();
        applicationInfoManager3.config = myDataCenterInstanceConfig6;
        boolean boolean9 = myDataCenterInstanceConfig6.isInstanceEnabledOnit();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNull(eurekaInstanceConfig1);
// flaky:         org.junit.Assert.assertNull(eurekaInstanceConfig4);
        org.junit.Assert.assertNull(instanceInfo5);
        org.junit.Assert.assertNotNull(dataCenterInfo7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test01516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01516");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo2 = myDataCenterInstanceConfig1.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("172.20.26.3", dataCenterInfo2);
        int int4 = myDataCenterInstanceConfig3.getSecurePort();
        java.lang.String str5 = myDataCenterInstanceConfig3.getHomePageUrl();
        java.lang.String str6 = myDataCenterInstanceConfig3.getHealthCheckUrl();
        java.lang.String str7 = myDataCenterInstanceConfig3.getStatusPageUrlPath();
        org.junit.Assert.assertNotNull(dataCenterInfo2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 443 + "'", int4 == 443);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/Status" + "'", str7, "/Status");
    }

    @Test
    public void test01517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01517");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
// flaky:         instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = null; // flaky: instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = null; // flaky: instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = null; // flaky: builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder22 = null; // flaky: builder18.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = null; // flaky: builder22.setSecureVIPAddress("http://hi!:80/Status");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig26 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int27 = myDataCenterInstanceConfig26.getLeaseRenewalIntervalInSeconds();
        int int28 = myDataCenterInstanceConfig26.getLeaseRenewalIntervalInSeconds();
        java.lang.String str29 = myDataCenterInstanceConfig26.getStatusPageUrlPath();
        boolean boolean30 = myDataCenterInstanceConfig26.getSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager31 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager31.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig34 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int35 = myDataCenterInstanceConfig34.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo36 = myDataCenterInstanceConfig34.getDataCenterInfo();
        java.lang.String str37 = myDataCenterInstanceConfig34.getNamespace();
        boolean boolean38 = myDataCenterInstanceConfig34.isNonSecurePortEnabled();
        applicationInfoManager31.config = myDataCenterInstanceConfig34;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig40 = applicationInfoManager31.config;
        com.netflix.appinfo.InstanceInfo instanceInfo41 = applicationInfoManager31.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo42 = applicationInfoManager31.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType43 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo42.setActionType(actionType43);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager45 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo46 = applicationInfoManager45.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig48 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int49 = myDataCenterInstanceConfig48.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo50 = myDataCenterInstanceConfig48.getDataCenterInfo();
        java.lang.String str51 = myDataCenterInstanceConfig48.getNamespace();
        boolean boolean52 = myDataCenterInstanceConfig48.isNonSecurePortEnabled();
        applicationInfoManager45.config = myDataCenterInstanceConfig48;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig54 = applicationInfoManager45.config;
        com.netflix.appinfo.InstanceInfo instanceInfo55 = applicationInfoManager45.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo56 = applicationInfoManager45.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType57 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo56.setActionType(actionType57);
// flaky:         instanceInfo42.setActionType(actionType57);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager60 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig26, instanceInfo42);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus62 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("inesserver2.windows.cin.ufpe.br:80");
// flaky:         instanceInfo42.setOverriddenStatus(instanceStatus62);
        com.netflix.appinfo.InstanceInfo.Builder builder64 = null; // flaky: builder22.setStatus(instanceStatus62);
        com.netflix.appinfo.InstanceInfo.Builder builder66 = null; // flaky: builder64.setAppName("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder69 = null; // flaky: builder64.setStatusPageUrl("", "inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.InstanceInfo.Builder builder71 = null; // flaky: builder64.setIPAddr("eureka.");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertNotNull(strSet16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertNotNull(builder20);
// flaky:         org.junit.Assert.assertNotNull(builder22);
// flaky:         org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 30 + "'", int27 == 30);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 30 + "'", int28 == 30);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "/Status" + "'", str29, "/Status");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager31);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 30 + "'", int35 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig40);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo41);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo42);
        org.junit.Assert.assertTrue("'" + actionType43 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType43.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager45);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 30 + "'", int49 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig54);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo55);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo56);
        org.junit.Assert.assertTrue("'" + actionType57 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType57.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + instanceStatus62 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus62.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
// flaky:         org.junit.Assert.assertNotNull(builder64);
// flaky:         org.junit.Assert.assertNotNull(builder66);
// flaky:         org.junit.Assert.assertNotNull(builder69);
// flaky:         org.junit.Assert.assertNotNull(builder71);
    }

    @Test
    public void test01518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01518");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        int int3 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        boolean boolean5 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        com.netflix.appinfo.InstanceInfo instanceInfo6 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager7 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo6);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig9.getDataCenterInfo();
        java.lang.String str12 = myDataCenterInstanceConfig9.getNamespace();
        applicationInfoManager7.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig9);
        java.lang.String str14 = myDataCenterInstanceConfig9.getIpAddress();
        java.lang.String str15 = myDataCenterInstanceConfig9.getStatusPageUrlPath();
        java.lang.String str16 = myDataCenterInstanceConfig9.getHealthCheckUrlPath();
        int int17 = myDataCenterInstanceConfig9.getLeaseExpirationDurationInSeconds();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/Status" + "'", str4, "/Status");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "172.20.26.3" + "'", str14, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "/Status" + "'", str15, "/Status");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/healthcheck" + "'", str16, "/healthcheck");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 90 + "'", int17 == 90);
    }

    @Test
    public void test01519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01519");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo4 = myDataCenterInstanceConfig2.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig5 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo4);
        java.lang.String str6 = myDataCenterInstanceConfig5.getAppname();
        java.lang.String str7 = myDataCenterInstanceConfig5.getNamespace();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig8 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager9 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager9.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int13 = myDataCenterInstanceConfig12.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo14 = myDataCenterInstanceConfig12.getDataCenterInfo();
        java.lang.String str15 = myDataCenterInstanceConfig12.getNamespace();
        boolean boolean16 = myDataCenterInstanceConfig12.isNonSecurePortEnabled();
        applicationInfoManager9.config = myDataCenterInstanceConfig12;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig18 = applicationInfoManager9.config;
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager9.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager9.instanceInfo;
        int int21 = instanceInfo20.getSecurePort();
        boolean boolean22 = instanceInfo20.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager23 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig8, instanceInfo20);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager24 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig5, instanceInfo20);
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig25 = applicationInfoManager24.config;
        applicationInfoManager24.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager24;
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager24.getInfo();
        java.lang.String str29 = instanceInfo28.getHostName();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "unknown" + "'", str6, "unknown");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/Status" + "'", str7, "/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 30 + "'", int13 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 443 + "'", int21 == 443);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig25);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str29, "inesserver2.windows.cin.ufpe.br");
    }

    @Test
    public void test01520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01520");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setIPAddr("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setPort((int) (short) 10);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder8.add("http:///:80/Status", "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder11);
    }

    @Test
    public void test01521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01521");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        boolean boolean13 = instanceInfo11.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        int int15 = instanceInfo11.getPort();
        java.lang.String str16 = instanceInfo11.getASGName();
        java.util.Set<java.lang.String> strSet17 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str18 = instanceInfo11.getIPAddr();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 80 + "'", int15 == 80);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "172.20.26.3" + "'", str18, "172.20.26.3");
    }

    @Test
    public void test01522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01522");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        boolean boolean13 = instanceInfo11.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        int int15 = instanceInfo11.getPort();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager16 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager16;
        applicationInfoManager16.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager16.getInfo();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager20 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager20.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig23 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int24 = myDataCenterInstanceConfig23.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = myDataCenterInstanceConfig23.getDataCenterInfo();
        java.lang.String str26 = myDataCenterInstanceConfig23.getNamespace();
        boolean boolean27 = myDataCenterInstanceConfig23.isNonSecurePortEnabled();
        applicationInfoManager20.config = myDataCenterInstanceConfig23;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig29 = applicationInfoManager20.config;
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager20.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager20.instanceInfo;
        int int32 = instanceInfo31.getSecurePort();
        instanceInfo31.setIsCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus34 = com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN;
        instanceInfo31.setOverriddenStatus(instanceStatus34);
        instanceInfo19.setStatusWithoutDirty(instanceStatus34);
        instanceInfo11.setStatusWithoutDirty(instanceStatus34);
        java.lang.String str38 = instanceInfo11.getId();
        java.lang.String str39 = instanceInfo11.getAppGroupName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 80 + "'", int15 == 80);
        org.junit.Assert.assertNotNull(applicationInfoManager16);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertNotNull(applicationInfoManager20);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 30 + "'", int24 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig29);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 443 + "'", int32 == 443);
        org.junit.Assert.assertTrue("'" + instanceStatus34 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus34.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str38, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "UNKNOWN" + "'", str39, "UNKNOWN");
    }

    @Test
    public void test01523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01523");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setNamespace("na");
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder6.setLastDirtyTimestamp(1636105969900L);
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder16.setSecureVIPAddress("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder16.setSecureVIPAddressDeser("na");
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder16.setHostName("");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test01524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01524");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        java.lang.String str6 = myDataCenterInstanceConfig2.getIpAddress();
        java.lang.String str7 = myDataCenterInstanceConfig2.getHealthCheckUrl();
        java.lang.String str8 = myDataCenterInstanceConfig2.getNamespace();
        java.lang.String str9 = myDataCenterInstanceConfig2.getHomePageUrl();
        java.lang.String str10 = myDataCenterInstanceConfig2.getIpAddress();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "172.20.26.3" + "'", str6, "172.20.26.3");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "172.20.26.3" + "'", str10, "172.20.26.3");
    }

    @Test
    public void test01525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01525");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        java.lang.String str6 = myDataCenterInstanceConfig2.getIpAddress();
        java.lang.String str7 = myDataCenterInstanceConfig2.getHealthCheckUrlPath();
        int int8 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        java.lang.String str9 = myDataCenterInstanceConfig2.getASGName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "172.20.26.3" + "'", str6, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/healthcheck" + "'", str7, "/healthcheck");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test01526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01526");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str3 = myDataCenterInstanceConfig1.getNamespace();
        java.lang.String str4 = myDataCenterInstanceConfig1.getNamespace();
        java.lang.String str5 = myDataCenterInstanceConfig1.getStatusPageUrl();
        int int6 = myDataCenterInstanceConfig1.getNonSecurePort();
        boolean boolean7 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        java.lang.String str8 = myDataCenterInstanceConfig1.getAppname();
        boolean boolean9 = myDataCenterInstanceConfig1.isInstanceEnabledOnit();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 80 + "'", int6 == 80);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "unknown" + "'", str8, "unknown");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test01527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01527");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder3 = builder0.setHealthCheckUrlsForDeser("/healthcheck", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder0.setNamespace("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder0.setIPAddr("INESSERVER2.WINDOWS.CIN.UFPE.BR");
        boolean boolean8 = builder0.isInitialized();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test01528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01528");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setSecureVIPAddressDeser("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo15 = builder6.build();
        long long16 = instanceInfo15.getLastUpdatedTimestamp();
        com.netflix.appinfo.InstanceInfo.Builder builder17 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder17.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder17.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder17.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = myDataCenterInstanceConfig24.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder23.setDataCenterInfo(dataCenterInfo25);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig27 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo28 = myDataCenterInstanceConfig27.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder23.setDataCenterInfo(dataCenterInfo28);
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder29.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder29.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder36 = builder29.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo instanceInfo37 = builder29.build();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager38 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo39 = applicationInfoManager38.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig41 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int42 = myDataCenterInstanceConfig41.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo43 = myDataCenterInstanceConfig41.getDataCenterInfo();
        java.lang.String str44 = myDataCenterInstanceConfig41.getNamespace();
        boolean boolean45 = myDataCenterInstanceConfig41.isNonSecurePortEnabled();
        applicationInfoManager38.config = myDataCenterInstanceConfig41;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig47 = applicationInfoManager38.config;
        com.netflix.appinfo.InstanceInfo instanceInfo48 = applicationInfoManager38.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo49 = applicationInfoManager38.instanceInfo;
        java.lang.Boolean boolean50 = instanceInfo49.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus51 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo49.setOverriddenStatus(instanceStatus51);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager53 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo54 = applicationInfoManager53.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig56 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int57 = myDataCenterInstanceConfig56.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo58 = myDataCenterInstanceConfig56.getDataCenterInfo();
        java.lang.String str59 = myDataCenterInstanceConfig56.getNamespace();
        boolean boolean60 = myDataCenterInstanceConfig56.isNonSecurePortEnabled();
        applicationInfoManager53.config = myDataCenterInstanceConfig56;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig62 = applicationInfoManager53.config;
        com.netflix.appinfo.InstanceInfo instanceInfo63 = applicationInfoManager53.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo64 = applicationInfoManager53.instanceInfo;
        java.lang.Boolean boolean65 = instanceInfo64.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus66 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo64.setOverriddenStatus(instanceStatus66);
        instanceInfo64.setLastDirtyTimestamp((java.lang.Long) (-1L));
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus70 = instanceInfo64.getOverriddenStatus();
        instanceInfo49.setOverriddenStatus(instanceStatus70);
        instanceInfo37.setStatus(instanceStatus70);
        boolean boolean73 = instanceInfo15.equals((java.lang.Object) instanceStatus70);
        java.lang.String str74 = instanceInfo15.getAppName();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(instanceInfo15);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1636106047636L + "'", long16 == 1636106047636L);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(dataCenterInfo28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(instanceInfo37);
        org.junit.Assert.assertNotNull(applicationInfoManager38);
        org.junit.Assert.assertNotNull(instanceInfo39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig47);
        org.junit.Assert.assertNotNull(instanceInfo48);
        org.junit.Assert.assertNotNull(instanceInfo49);
// flaky:         org.junit.Assert.assertEquals("'" + boolean50 + "' != '" + false + "'", boolean50, false);
        org.junit.Assert.assertTrue("'" + instanceStatus51 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus51.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(applicationInfoManager53);
        org.junit.Assert.assertNotNull(instanceInfo54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 30 + "'", int57 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig62);
        org.junit.Assert.assertNotNull(instanceInfo63);
        org.junit.Assert.assertNotNull(instanceInfo64);
// flaky:         org.junit.Assert.assertEquals("'" + boolean65 + "' != '" + false + "'", boolean65, false);
        org.junit.Assert.assertTrue("'" + instanceStatus66 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus66.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + instanceStatus70 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus70.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "DEFAULT" + "'", str74, "DEFAULT");
    }

    @Test
    public void test01529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01529");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        java.lang.String str5 = myDataCenterInstanceConfig3.getVirtualHostName();
        java.lang.String str6 = myDataCenterInstanceConfig3.getASGName();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        java.lang.String str9 = myDataCenterInstanceConfig3.getAppname();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo10 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str11 = myDataCenterInstanceConfig3.getVirtualHostName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str5, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "unknown" + "'", str9, "unknown");
        org.junit.Assert.assertNotNull(dataCenterInfo10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str11, "inesserver2.windows.cin.ufpe.br:80");
    }

    @Test
    public void test01530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01530");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int9 = myDataCenterInstanceConfig8.getLeaseRenewalIntervalInSeconds();
        int int10 = myDataCenterInstanceConfig8.getLeaseRenewalIntervalInSeconds();
        java.lang.String str11 = myDataCenterInstanceConfig8.getStatusPageUrlPath();
        boolean boolean12 = myDataCenterInstanceConfig8.getSecurePortEnabled();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = myDataCenterInstanceConfig8.getMetadataMap();
        applicationInfoManager0.config = myDataCenterInstanceConfig8;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig17 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int18 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig17.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig20 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo19);
        java.lang.String str21 = myDataCenterInstanceConfig20.getAppname();
        java.lang.String str22 = myDataCenterInstanceConfig20.getNamespace();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig23 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager24 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager24.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig27 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int28 = myDataCenterInstanceConfig27.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig27.getDataCenterInfo();
        java.lang.String str30 = myDataCenterInstanceConfig27.getNamespace();
        boolean boolean31 = myDataCenterInstanceConfig27.isNonSecurePortEnabled();
        applicationInfoManager24.config = myDataCenterInstanceConfig27;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig33 = applicationInfoManager24.config;
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager24.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager24.instanceInfo;
        int int36 = instanceInfo35.getSecurePort();
        boolean boolean37 = instanceInfo35.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager38 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig23, instanceInfo35);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager39 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig20, instanceInfo35);
        java.lang.String str40 = instanceInfo35.getHomePageUrl();
        applicationInfoManager0.instanceInfo = instanceInfo35;
        com.netflix.appinfo.InstanceInfo instanceInfo42 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager43 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo44 = applicationInfoManager43.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig46 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int47 = myDataCenterInstanceConfig46.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo48 = myDataCenterInstanceConfig46.getDataCenterInfo();
        java.lang.String str49 = myDataCenterInstanceConfig46.getNamespace();
        boolean boolean50 = myDataCenterInstanceConfig46.isNonSecurePortEnabled();
        applicationInfoManager43.config = myDataCenterInstanceConfig46;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig52 = applicationInfoManager43.config;
        com.netflix.appinfo.InstanceInfo instanceInfo53 = applicationInfoManager43.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo54 = applicationInfoManager43.instanceInfo;
        java.lang.Boolean boolean55 = instanceInfo54.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus56 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo54.setOverriddenStatus(instanceStatus56);
        int int58 = instanceInfo54.getSecurePort();
        java.lang.String str59 = instanceInfo54.getHostName();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = instanceInfo54.getMetadata();
        instanceInfo54.setIsDirty(false);
        com.netflix.appinfo.LeaseInfo leaseInfo63 = instanceInfo54.getLeaseInfo();
        instanceInfo42.setLeaseInfo(leaseInfo63);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus65 = instanceInfo42.getOverriddenStatus();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 30 + "'", int9 == 30);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/Status" + "'", str11, "/Status");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 30 + "'", int18 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "unknown" + "'", str21, "unknown");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "/Status" + "'", str22, "/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 30 + "'", int28 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertNotNull(instanceInfo35);
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 7002 + "'", int36 == 7002);
// flaky:         org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
// flaky:         org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(instanceInfo42);
        org.junit.Assert.assertNotNull(applicationInfoManager43);
        org.junit.Assert.assertNotNull(instanceInfo44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 30 + "'", int47 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig52);
        org.junit.Assert.assertNotNull(instanceInfo53);
        org.junit.Assert.assertNotNull(instanceInfo54);
// flaky:         org.junit.Assert.assertEquals("'" + boolean55 + "' != '" + false + "'", boolean55, false);
        org.junit.Assert.assertTrue("'" + instanceStatus56 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus56.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 7002 + "'", int58 == 7002);
// flaky:         org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(strMap60);
// flaky:         org.junit.Assert.assertNull(leaseInfo63);
        org.junit.Assert.assertTrue("'" + instanceStatus65 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus65.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
    }

    @Test
    public void test01531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01531");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        java.lang.String str12 = instanceInfo11.getHomePageUrl();
        com.netflix.appinfo.LeaseInfo leaseInfo13 = null;
        instanceInfo11.setLeaseInfo(leaseInfo13);
        com.netflix.appinfo.InstanceInfo.Builder builder15 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder15.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder15.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder15.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig22 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo23 = myDataCenterInstanceConfig22.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder21.setDataCenterInfo(dataCenterInfo23);
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder21.setHostName("172.20.26.3");
        boolean boolean27 = instanceInfo11.equals((java.lang.Object) "172.20.26.3");
        boolean boolean28 = instanceInfo11.isDirty();
        java.lang.String str29 = instanceInfo11.getHostName();
        com.netflix.appinfo.LeaseInfo leaseInfo30 = instanceInfo11.getLeaseInfo();
        java.lang.String str31 = instanceInfo11.getVIPAddress();
        instanceInfo11.setSID("/healthcheck");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(dataCenterInfo23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
// flaky:         org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(leaseInfo30);
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/Status" + "'", str31, "/Status");
    }

    @Test
    public void test01532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01532");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setCountryId(7002);
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder4.setHealthCheckUrlsForDeser("http://hi!:80/Status", "inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager8 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int11 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        int int12 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager8.config = myDataCenterInstanceConfig10;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig14 = applicationInfoManager8.config;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig15 = applicationInfoManager8.config;
        applicationInfoManager8.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager17 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager17.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig20 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int21 = myDataCenterInstanceConfig20.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = myDataCenterInstanceConfig20.getDataCenterInfo();
        java.lang.String str23 = myDataCenterInstanceConfig20.getNamespace();
        boolean boolean24 = myDataCenterInstanceConfig20.isNonSecurePortEnabled();
        applicationInfoManager17.config = myDataCenterInstanceConfig20;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig26 = applicationInfoManager17.config;
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager17.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager17.instanceInfo;
        int int29 = instanceInfo28.getSecurePort();
        boolean boolean30 = instanceInfo28.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = new com.netflix.appinfo.InstanceInfo(instanceInfo28);
        com.netflix.appinfo.InstanceInfo instanceInfo32 = new com.netflix.appinfo.InstanceInfo(instanceInfo28);
        java.lang.String str33 = instanceInfo28.getAppGroupName();
        int int34 = instanceInfo28.getCountryId();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus35 = instanceInfo28.getStatus();
        applicationInfoManager8.setInstanceStatus(instanceStatus35);
        com.netflix.appinfo.InstanceInfo.Builder builder37 = builder7.setOverriddenStatus(instanceStatus35);
        com.netflix.appinfo.InstanceInfo.Builder builder39 = builder7.setSecureVIPAddressDeser("/Status");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(applicationInfoManager8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 30 + "'", int12 == 30);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig14);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig15);
        org.junit.Assert.assertNotNull(applicationInfoManager17);
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 30 + "'", int21 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertNotNull(instanceInfo28);
// flaky:         org.junit.Assert.assertTrue("'" + int29 + "' != '" + 7002 + "'", int29 == 7002);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/" + "'", str33, "/");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus35 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UP + "'", instanceStatus35.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UP));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
    }

    @Test
    public void test01533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01533");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setStatusPageUrlForDeser("na");
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.add("default", "http://hi!:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setHealthCheckUrlsForDeser("unknown", "");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setVIPAddress("http:///:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder6.setASGName("http://hi!:80/Status");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test01534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01534");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setCountryId(7002);
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder4.setCountryId((int) '#');
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder4.setAppGroupName("http://hi!:35/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setHostName("DEFAULT");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test01535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01535");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder2.setHealthCheckUrlsForDeser("unknown", "172.20.26.3");
        com.netflix.appinfo.LeaseInfo leaseInfo11 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder2.setLeaseInfo(leaseInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder2.setVIPAddress("");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder2.add("HTTP://HI!:80/STATUS", "inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder2.setHealthCheckUrlsForDeser("INESSERVER2.WINDOWS.CIN.UFPE.BR", "DEFAULT");
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder2.setNamespace("inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test01536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01536");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder7.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder9.add("http://inesserver2.windows.cin.ufpe.br:80/Status", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus14 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("na");
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder12.setStatus(instanceStatus14);
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder12.setStatusPageUrlForDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder12.setStatusPageUrlForDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder19.setSecureVIPAddress("");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setStatusPageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setNamespace("DEFAULT");
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder25.setSID("http://inesserver2.windows.cin.ufpe.br:10/Status");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + instanceStatus14 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus14.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
    }

    @Test
    public void test01537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01537");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        int int4 = myDataCenterInstanceConfig1.getSecurePort();
        java.lang.String str5 = myDataCenterInstanceConfig1.getAppGroupName();
        java.lang.String str6 = myDataCenterInstanceConfig1.getASGName();
        java.lang.String str7 = myDataCenterInstanceConfig1.getASGName();
        int int8 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder9.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder9.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder9.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig16 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo17 = myDataCenterInstanceConfig16.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder15.setDataCenterInfo(dataCenterInfo17);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo20 = myDataCenterInstanceConfig19.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder15.setDataCenterInfo(dataCenterInfo20);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder21.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder21.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder21.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo31 = builder30.build();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager32 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo31);
        com.netflix.appinfo.InstanceInfo instanceInfo33 = applicationInfoManager32.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager32.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager32.instanceInfo;
        com.netflix.appinfo.InstanceInfo.Builder builder36 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder36.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder36.setCountryId(7002);
        com.netflix.appinfo.InstanceInfo.Builder builder43 = builder36.setHealthCheckUrlsForDeser("UNKNOWN", "UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder45 = builder43.setHostName("/healthcheck");
        com.netflix.appinfo.InstanceInfo instanceInfo46 = builder45.getRawInstance();
        com.netflix.appinfo.InstanceInfo.Builder builder47 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder49 = builder47.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder52 = builder49.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo53 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder54 = builder49.setLeaseInfo(leaseInfo53);
        com.netflix.appinfo.InstanceInfo.Builder builder57 = builder49.setHealthCheckUrlsForDeser("unknown", "172.20.26.3");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig59 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        boolean boolean60 = myDataCenterInstanceConfig59.getSecurePortEnabled();
        java.lang.String str61 = myDataCenterInstanceConfig59.getHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo62 = myDataCenterInstanceConfig59.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder63 = builder57.setDataCenterInfo(dataCenterInfo62);
        com.netflix.appinfo.InstanceInfo.Builder builder65 = builder63.setLastDirtyTimestamp(1L);
        com.netflix.appinfo.InstanceInfo.Builder builder68 = builder63.setHealthCheckUrlsForDeser("/Status", "http://default:80/Status");
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus70 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("");
        com.netflix.appinfo.InstanceInfo.Builder builder71 = builder68.setOverriddenStatus(instanceStatus70);
        com.netflix.appinfo.InstanceInfo.Builder builder72 = builder45.setStatus(instanceStatus70);
        applicationInfoManager32.setInstanceStatus(instanceStatus70);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 443 + "'", int4 == 443);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "unknown" + "'", str5, "unknown");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(dataCenterInfo17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(dataCenterInfo20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(instanceInfo46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(dataCenterInfo62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertTrue("'" + instanceStatus70 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus70.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder72);
    }

    @Test
    public void test01538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01538");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        int int3 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        boolean boolean5 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        com.netflix.appinfo.InstanceInfo instanceInfo6 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager7 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo6);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig9.getDataCenterInfo();
        java.lang.String str12 = myDataCenterInstanceConfig9.getNamespace();
        applicationInfoManager7.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig9);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig15 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str16 = myDataCenterInstanceConfig15.getIpAddress();
        java.lang.String str17 = myDataCenterInstanceConfig15.getHealthCheckUrlPath();
        java.lang.String str18 = myDataCenterInstanceConfig15.getAppGroupName();
        java.lang.String str19 = myDataCenterInstanceConfig15.getASGName();
        applicationInfoManager7.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig15);
        java.lang.String str21 = myDataCenterInstanceConfig15.getHomePageUrl();
        int int22 = myDataCenterInstanceConfig15.getLeaseRenewalIntervalInSeconds();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/Status" + "'", str4, "/Status");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "172.20.26.3" + "'", str16, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/healthcheck" + "'", str17, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "unknown" + "'", str18, "unknown");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 30 + "'", int22 == 30);
    }

    @Test
    public void test01539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01539");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setSecureVIPAddressDeser("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo15 = builder6.build();
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder6.setCountryId(1);
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder17.setVIPAddressDeser("");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int22 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        int int23 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        java.lang.String str24 = myDataCenterInstanceConfig21.getStatusPageUrlPath();
        boolean boolean25 = myDataCenterInstanceConfig21.getSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager26 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager26.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig29 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int30 = myDataCenterInstanceConfig29.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo31 = myDataCenterInstanceConfig29.getDataCenterInfo();
        java.lang.String str32 = myDataCenterInstanceConfig29.getNamespace();
        boolean boolean33 = myDataCenterInstanceConfig29.isNonSecurePortEnabled();
        applicationInfoManager26.config = myDataCenterInstanceConfig29;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig35 = applicationInfoManager26.config;
        com.netflix.appinfo.InstanceInfo instanceInfo36 = applicationInfoManager26.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo37 = applicationInfoManager26.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType38 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo37.setActionType(actionType38);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager40 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo41 = applicationInfoManager40.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig43 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int44 = myDataCenterInstanceConfig43.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo45 = myDataCenterInstanceConfig43.getDataCenterInfo();
        java.lang.String str46 = myDataCenterInstanceConfig43.getNamespace();
        boolean boolean47 = myDataCenterInstanceConfig43.isNonSecurePortEnabled();
        applicationInfoManager40.config = myDataCenterInstanceConfig43;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig49 = applicationInfoManager40.config;
        com.netflix.appinfo.InstanceInfo instanceInfo50 = applicationInfoManager40.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo51 = applicationInfoManager40.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType52 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo51.setActionType(actionType52);
        instanceInfo37.setActionType(actionType52);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager55 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig21, instanceInfo37);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus57 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("inesserver2.windows.cin.ufpe.br:80");
        instanceInfo37.setOverriddenStatus(instanceStatus57);
        com.netflix.appinfo.InstanceInfo instanceInfo59 = new com.netflix.appinfo.InstanceInfo(instanceInfo37);
        instanceInfo59.setLastUpdatedTimestamp();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager61 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig63 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int64 = myDataCenterInstanceConfig63.getLeaseRenewalIntervalInSeconds();
        int int65 = myDataCenterInstanceConfig63.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager61.config = myDataCenterInstanceConfig63;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig67 = applicationInfoManager61.config;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig68 = applicationInfoManager61.config;
        applicationInfoManager61.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager70 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo71 = applicationInfoManager70.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig73 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int74 = myDataCenterInstanceConfig73.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo75 = myDataCenterInstanceConfig73.getDataCenterInfo();
        java.lang.String str76 = myDataCenterInstanceConfig73.getNamespace();
        boolean boolean77 = myDataCenterInstanceConfig73.isNonSecurePortEnabled();
        applicationInfoManager70.config = myDataCenterInstanceConfig73;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig79 = applicationInfoManager70.config;
        com.netflix.appinfo.InstanceInfo instanceInfo80 = applicationInfoManager70.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo81 = applicationInfoManager70.instanceInfo;
        int int82 = instanceInfo81.getSecurePort();
        boolean boolean83 = instanceInfo81.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo84 = new com.netflix.appinfo.InstanceInfo(instanceInfo81);
        com.netflix.appinfo.InstanceInfo instanceInfo85 = new com.netflix.appinfo.InstanceInfo(instanceInfo81);
        java.lang.String str86 = instanceInfo81.getAppGroupName();
        int int87 = instanceInfo81.getCountryId();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus88 = instanceInfo81.getStatus();
        applicationInfoManager61.setInstanceStatus(instanceStatus88);
        instanceInfo59.setOverriddenStatus(instanceStatus88);
        com.netflix.appinfo.InstanceInfo.Builder builder91 = builder19.setStatus(instanceStatus88);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 30 + "'", int22 == 30);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 30 + "'", int23 == 30);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/Status" + "'", str24, "/Status");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 30 + "'", int30 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig35);
        org.junit.Assert.assertNotNull(instanceInfo36);
        org.junit.Assert.assertNotNull(instanceInfo37);
        org.junit.Assert.assertTrue("'" + actionType38 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType38.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager40);
        org.junit.Assert.assertNotNull(instanceInfo41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 30 + "'", int44 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig49);
        org.junit.Assert.assertNotNull(instanceInfo50);
        org.junit.Assert.assertNotNull(instanceInfo51);
        org.junit.Assert.assertTrue("'" + actionType52 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType52.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + instanceStatus57 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus57.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(applicationInfoManager61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 30 + "'", int64 == 30);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 30 + "'", int65 == 30);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig67);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig68);
        org.junit.Assert.assertNotNull(applicationInfoManager70);
        org.junit.Assert.assertNotNull(instanceInfo71);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 30 + "'", int74 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig79);
        org.junit.Assert.assertNotNull(instanceInfo80);
        org.junit.Assert.assertNotNull(instanceInfo81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 443 + "'", int82 == 443);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "UNKNOWN" + "'", str86, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + instanceStatus88 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING + "'", instanceStatus88.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING));
        org.junit.Assert.assertNotNull(builder91);
    }

    @Test
    public void test01540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01540");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder2.setHealthCheckUrlsForDeser("unknown", "172.20.26.3");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        boolean boolean13 = myDataCenterInstanceConfig12.getSecurePortEnabled();
        java.lang.String str14 = myDataCenterInstanceConfig12.getHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo15 = myDataCenterInstanceConfig12.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder10.setDataCenterInfo(dataCenterInfo15);
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder16.setSID("unknown");
        boolean boolean19 = builder16.isInitialized();
        com.netflix.appinfo.InstanceInfo.Builder builder20 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder20.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder20.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder20.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder26.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder28.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder28.setHomePageUrlForDeser("");
        com.netflix.appinfo.LeaseInfo leaseInfo33 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder32.setLeaseInfo(leaseInfo33);
        com.netflix.appinfo.InstanceInfo.Builder builder36 = builder32.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder37 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder39 = builder37.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder41 = builder37.setCountryId(7002);
        com.netflix.appinfo.InstanceInfo.Builder builder43 = builder41.setSecurePort((int) (byte) 10);
        com.netflix.appinfo.InstanceInfo.PortType portType44 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder46 = builder41.enablePort(portType44, false);
        com.netflix.appinfo.InstanceInfo.Builder builder48 = builder36.enablePort(portType44, true);
        com.netflix.appinfo.InstanceInfo.Builder builder50 = builder16.enablePort(portType44, false);
        com.netflix.appinfo.InstanceInfo.Builder builder52 = builder50.setNamespace("http://default:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder54 = builder50.setSecurePort(100);
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder58 = builder54.setHealthCheckUrls("HI!", "http://hi!:80/Status", "/healthcheck");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(dataCenterInfo15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + portType44 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType44.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
    }

    @Test
    public void test01541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01541");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder18.setVIPAddressDeser("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setSID("http://hi!:35/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
// flaky:         org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
    }

    @Test
    public void test01542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01542");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        instanceInfo11.setIsCoordinatingDiscoveryServer();
        int int14 = instanceInfo11.getPort();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus15 = instanceInfo11.getStatus();
        instanceInfo11.setIsDirty(true);
        java.lang.String str18 = instanceInfo11.getId();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager19 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager19.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig22 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int23 = myDataCenterInstanceConfig22.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo24 = myDataCenterInstanceConfig22.getDataCenterInfo();
        java.lang.String str25 = myDataCenterInstanceConfig22.getNamespace();
        boolean boolean26 = myDataCenterInstanceConfig22.isNonSecurePortEnabled();
        applicationInfoManager19.config = myDataCenterInstanceConfig22;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig28 = applicationInfoManager19.config;
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager19.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager19.instanceInfo;
        int int31 = instanceInfo30.getSecurePort();
        boolean boolean32 = instanceInfo30.isDirty();
        boolean boolean33 = instanceInfo30.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo34 = new com.netflix.appinfo.InstanceInfo(instanceInfo30);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus35 = instanceInfo30.getStatus();
        instanceInfo11.setStatus(instanceStatus35);
        java.lang.String str37 = instanceInfo11.getSecureVipAddress();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus38 = instanceInfo11.getOverriddenStatus();
        java.lang.String str39 = instanceInfo11.getAppName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7002 + "'", int12 == 7002);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 7001 + "'", int14 == 7001);
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus15 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UP + "'", instanceStatus15.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UP));
// flaky:         org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(applicationInfoManager19);
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 30 + "'", int23 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig28);
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertNotNull(instanceInfo30);
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + 7002 + "'", int31 == 7002);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus35 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UP + "'", instanceStatus35.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UP));
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "/healthcheck" + "'", str37, "/healthcheck");
        org.junit.Assert.assertTrue("'" + instanceStatus38 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus38.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS" + "'", str39, "HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS");
    }

    @Test
    public void test01543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01543");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setHostName("172.20.26.3");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager12 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo13 = applicationInfoManager12.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig15 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int16 = myDataCenterInstanceConfig15.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo17 = myDataCenterInstanceConfig15.getDataCenterInfo();
        java.lang.String str18 = myDataCenterInstanceConfig15.getNamespace();
        boolean boolean19 = myDataCenterInstanceConfig15.isNonSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo20 = myDataCenterInstanceConfig15.getDataCenterInfo();
        applicationInfoManager12.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig15);
        boolean boolean22 = myDataCenterInstanceConfig15.isInstanceEnabledOnit();
        int int23 = myDataCenterInstanceConfig15.getNonSecurePort();
        boolean boolean24 = myDataCenterInstanceConfig15.getSecurePortEnabled();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = myDataCenterInstanceConfig15.getMetadataMap();
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder11.setMetadata(strMap25);
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder11.setStatusPageUrlForDeser("");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(applicationInfoManager12);
        org.junit.Assert.assertNotNull(instanceInfo13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 30 + "'", int16 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 80 + "'", int23 == 80);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test01544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01544");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager1 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig4.getDataCenterInfo();
        java.lang.String str7 = myDataCenterInstanceConfig4.getNamespace();
        boolean boolean8 = myDataCenterInstanceConfig4.isNonSecurePortEnabled();
        applicationInfoManager1.config = myDataCenterInstanceConfig4;
        int int10 = myDataCenterInstanceConfig4.getLeaseExpirationDurationInSeconds();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = myDataCenterInstanceConfig4.getMetadataMap();
        java.lang.String str12 = myDataCenterInstanceConfig4.getHealthCheckUrl();
        java.lang.String str13 = myDataCenterInstanceConfig4.getASGName();
        com.netflix.appinfo.InstanceInfo.Builder builder14 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder14.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder14.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder14.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = myDataCenterInstanceConfig21.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder20.setDataCenterInfo(dataCenterInfo22);
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder20.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo instanceInfo26 = builder25.getRawInstance();
        java.lang.String str27 = instanceInfo26.getSID();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager28 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig4, instanceInfo26);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig4.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig30 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/healthcheck", dataCenterInfo29);
        java.lang.String str31 = myDataCenterInstanceConfig30.getAppGroupName();
        org.junit.Assert.assertNotNull(applicationInfoManager1);
        org.junit.Assert.assertNotNull(instanceInfo2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 90 + "'", int10 == 90);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "na" + "'", str27, "na");
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "unknown" + "'", str31, "unknown");
    }

    @Test
    public void test01545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01545");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = instanceInfo11.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.Builder builder15 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig17 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int18 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig17.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder15.setDataCenterInfo(dataCenterInfo19);
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder15.setHealthCheckUrls("", "", "/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder24.setSecureVIPAddress("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig28 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int29 = myDataCenterInstanceConfig28.getLeaseRenewalIntervalInSeconds();
        java.lang.String str30 = myDataCenterInstanceConfig28.getNamespace();
        java.lang.String str31 = myDataCenterInstanceConfig28.getNamespace();
        java.lang.String str32 = myDataCenterInstanceConfig28.getHealthCheckUrlPath();
        int int33 = myDataCenterInstanceConfig28.getNonSecurePort();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager34 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager34.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig37 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int38 = myDataCenterInstanceConfig37.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo39 = myDataCenterInstanceConfig37.getDataCenterInfo();
        java.lang.String str40 = myDataCenterInstanceConfig37.getNamespace();
        boolean boolean41 = myDataCenterInstanceConfig37.isNonSecurePortEnabled();
        applicationInfoManager34.config = myDataCenterInstanceConfig37;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig43 = applicationInfoManager34.config;
        com.netflix.appinfo.InstanceInfo instanceInfo44 = applicationInfoManager34.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo45 = applicationInfoManager34.instanceInfo;
        java.lang.Boolean boolean46 = instanceInfo45.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus47 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo45.setOverriddenStatus(instanceStatus47);
        int int49 = instanceInfo45.getSecurePort();
        java.lang.String str50 = instanceInfo45.getHostName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager51 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo52 = applicationInfoManager51.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig54 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int55 = myDataCenterInstanceConfig54.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo56 = myDataCenterInstanceConfig54.getDataCenterInfo();
        java.lang.String str57 = myDataCenterInstanceConfig54.getNamespace();
        boolean boolean58 = myDataCenterInstanceConfig54.isNonSecurePortEnabled();
        applicationInfoManager51.config = myDataCenterInstanceConfig54;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig60 = applicationInfoManager51.config;
        com.netflix.appinfo.InstanceInfo instanceInfo61 = applicationInfoManager51.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo62 = applicationInfoManager51.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType63 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo62.setActionType(actionType63);
        com.netflix.appinfo.LeaseInfo leaseInfo65 = null;
        instanceInfo62.setLeaseInfo(leaseInfo65);
        java.lang.String str67 = instanceInfo62.getSID();
        com.netflix.appinfo.LeaseInfo leaseInfo68 = instanceInfo62.getLeaseInfo();
        boolean boolean69 = instanceInfo45.equals((java.lang.Object) instanceInfo62);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager70 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig28, instanceInfo45);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig72 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int73 = myDataCenterInstanceConfig72.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo74 = myDataCenterInstanceConfig72.getDataCenterInfo();
        java.lang.String str75 = myDataCenterInstanceConfig72.getNamespace();
        boolean boolean76 = myDataCenterInstanceConfig72.isNonSecurePortEnabled();
        java.lang.String str77 = myDataCenterInstanceConfig72.getIpAddress();
        java.util.Map<java.lang.String, java.lang.String> strMap78 = myDataCenterInstanceConfig72.getMetadataMap();
        applicationInfoManager70.registerAppMetadata(strMap78);
        com.netflix.appinfo.InstanceInfo.Builder builder80 = builder24.setMetadata(strMap78);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager81 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo82 = applicationInfoManager81.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig84 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int85 = myDataCenterInstanceConfig84.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo86 = myDataCenterInstanceConfig84.getDataCenterInfo();
        java.lang.String str87 = myDataCenterInstanceConfig84.getNamespace();
        boolean boolean88 = myDataCenterInstanceConfig84.isNonSecurePortEnabled();
        applicationInfoManager81.config = myDataCenterInstanceConfig84;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig90 = applicationInfoManager81.config;
        com.netflix.appinfo.InstanceInfo instanceInfo91 = applicationInfoManager81.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo92 = applicationInfoManager81.instanceInfo;
        int int93 = instanceInfo92.getSecurePort();
        boolean boolean94 = instanceInfo92.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo95 = new com.netflix.appinfo.InstanceInfo(instanceInfo92);
        java.lang.String str96 = instanceInfo95.getHostName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType97 = instanceInfo95.getActionType();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo98 = instanceInfo95.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder99 = builder24.setDataCenterInfo(dataCenterInfo98);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "/" + "'", str14, "/");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 30 + "'", int18 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 30 + "'", int29 == 30);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "/healthcheck" + "'", str32, "/healthcheck");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 80 + "'", int33 == 80);
        org.junit.Assert.assertNotNull(applicationInfoManager34);
        org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 30 + "'", int38 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig43);
        org.junit.Assert.assertNotNull(instanceInfo44);
        org.junit.Assert.assertNotNull(instanceInfo45);
        org.junit.Assert.assertEquals("'" + boolean46 + "' != '" + false + "'", boolean46, false);
        org.junit.Assert.assertTrue("'" + instanceStatus47 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus47.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 7002 + "'", int49 == 7002);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "172.20.26.3" + "'", str50, "172.20.26.3");
        org.junit.Assert.assertNotNull(applicationInfoManager51);
        org.junit.Assert.assertNotNull(instanceInfo52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig60);
        org.junit.Assert.assertNotNull(instanceInfo61);
        org.junit.Assert.assertNotNull(instanceInfo62);
        org.junit.Assert.assertTrue("'" + actionType63 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType63.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "na" + "'", str67, "na");
        org.junit.Assert.assertNull(leaseInfo68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 30 + "'", int73 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "172.20.26.3" + "'", str77, "172.20.26.3");
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(applicationInfoManager81);
        org.junit.Assert.assertNotNull(instanceInfo82);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 30 + "'", int85 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig90);
        org.junit.Assert.assertNotNull(instanceInfo91);
        org.junit.Assert.assertNotNull(instanceInfo92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 7002 + "'", int93 == 7002);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "172.20.26.3" + "'", str96, "172.20.26.3");
        org.junit.Assert.assertTrue("'" + actionType97 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType97.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(dataCenterInfo98);
        org.junit.Assert.assertNotNull(builder99);
    }

    @Test
    public void test01546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01546");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder2.setHealthCheckUrlsForDeser("unknown", "172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder10.setAppName("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setSecureVIPAddress("172.20.26.3");
        com.netflix.appinfo.InstanceInfo instanceInfo15 = builder12.build();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus16 = instanceInfo15.getStatus();
        boolean boolean17 = instanceInfo15.isDirty();
        java.util.Set<java.lang.String> strSet18 = instanceInfo15.getHealthCheckUrls();
        instanceInfo15.setIsDirty(false);
        int int21 = instanceInfo15.getPort();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertTrue("'" + instanceStatus16 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UP + "'", instanceStatus16.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UP));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 7001 + "'", int21 == 7001);
    }

    @Test
    public void test01547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01547");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo4 = myDataCenterInstanceConfig2.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig5 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo4);
        java.lang.String str6 = myDataCenterInstanceConfig5.getAppname();
        java.lang.String str7 = myDataCenterInstanceConfig5.getNamespace();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig8 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager9 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager9.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int13 = myDataCenterInstanceConfig12.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo14 = myDataCenterInstanceConfig12.getDataCenterInfo();
        java.lang.String str15 = myDataCenterInstanceConfig12.getNamespace();
        boolean boolean16 = myDataCenterInstanceConfig12.isNonSecurePortEnabled();
        applicationInfoManager9.config = myDataCenterInstanceConfig12;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig18 = applicationInfoManager9.config;
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager9.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager9.instanceInfo;
        int int21 = instanceInfo20.getSecurePort();
        boolean boolean22 = instanceInfo20.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager23 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig8, instanceInfo20);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager24 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig5, instanceInfo20);
        int int25 = instanceInfo20.getCountryId();
        java.util.Set<java.lang.String> strSet26 = instanceInfo20.getHealthCheckUrls();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus27 = instanceInfo20.getStatus();
        com.netflix.appinfo.InstanceInfo.Builder builder28 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder28.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder28.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder28.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder36 = builder34.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder36.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder36.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder42 = builder40.setHostName("inesserver2.windows.cin.ufpe.br:80");
        boolean boolean43 = builder40.isInitialized();
        com.netflix.appinfo.InstanceInfo.Builder builder46 = builder40.setHealthCheckUrlsForDeser("/healthcheck", "/Status");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig48 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int49 = myDataCenterInstanceConfig48.getLeaseRenewalIntervalInSeconds();
        int int50 = myDataCenterInstanceConfig48.getLeaseRenewalIntervalInSeconds();
        java.lang.String str51 = myDataCenterInstanceConfig48.getStatusPageUrlPath();
        boolean boolean52 = myDataCenterInstanceConfig48.getSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager53 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo54 = applicationInfoManager53.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig56 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int57 = myDataCenterInstanceConfig56.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo58 = myDataCenterInstanceConfig56.getDataCenterInfo();
        java.lang.String str59 = myDataCenterInstanceConfig56.getNamespace();
        boolean boolean60 = myDataCenterInstanceConfig56.isNonSecurePortEnabled();
        applicationInfoManager53.config = myDataCenterInstanceConfig56;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig62 = applicationInfoManager53.config;
        com.netflix.appinfo.InstanceInfo instanceInfo63 = applicationInfoManager53.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo64 = applicationInfoManager53.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType65 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo64.setActionType(actionType65);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager67 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo68 = applicationInfoManager67.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig70 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int71 = myDataCenterInstanceConfig70.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo72 = myDataCenterInstanceConfig70.getDataCenterInfo();
        java.lang.String str73 = myDataCenterInstanceConfig70.getNamespace();
        boolean boolean74 = myDataCenterInstanceConfig70.isNonSecurePortEnabled();
        applicationInfoManager67.config = myDataCenterInstanceConfig70;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig76 = applicationInfoManager67.config;
        com.netflix.appinfo.InstanceInfo instanceInfo77 = applicationInfoManager67.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo78 = applicationInfoManager67.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType79 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo78.setActionType(actionType79);
        instanceInfo64.setActionType(actionType79);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager82 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig48, instanceInfo64);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus84 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("inesserver2.windows.cin.ufpe.br:80");
        instanceInfo64.setOverriddenStatus(instanceStatus84);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus87 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("/Status");
        instanceInfo64.setOverriddenStatus(instanceStatus87);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus89 = instanceInfo64.getOverriddenStatus();
        com.netflix.appinfo.InstanceInfo.ActionType actionType90 = instanceInfo64.getActionType();
        com.netflix.appinfo.InstanceInfo.Builder builder91 = builder40.setActionType(actionType90);
        instanceInfo20.setActionType(actionType90);
        instanceInfo20.setLastUpdatedTimestamp();
        com.netflix.appinfo.InstanceInfo.ActionType actionType94 = instanceInfo20.getActionType();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "unknown" + "'", str6, "unknown");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/Status" + "'", str7, "/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 30 + "'", int13 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertNotNull(instanceInfo20);
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 443 + "'", int21 == 443);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(strSet26);
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus27 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus27.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 30 + "'", int49 == 30);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 30 + "'", int50 == 30);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "/Status" + "'", str51, "/Status");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager53);
        org.junit.Assert.assertNotNull(instanceInfo54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 30 + "'", int57 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig62);
        org.junit.Assert.assertNotNull(instanceInfo63);
        org.junit.Assert.assertNotNull(instanceInfo64);
        org.junit.Assert.assertTrue("'" + actionType65 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType65.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager67);
        org.junit.Assert.assertNotNull(instanceInfo68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 30 + "'", int71 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig76);
        org.junit.Assert.assertNotNull(instanceInfo77);
        org.junit.Assert.assertNotNull(instanceInfo78);
        org.junit.Assert.assertTrue("'" + actionType79 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType79.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + instanceStatus84 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus84.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertTrue("'" + instanceStatus87 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus87.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertTrue("'" + instanceStatus89 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus89.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertTrue("'" + actionType90 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType90.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertTrue("'" + actionType94 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType94.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
    }

    @Test
    public void test01548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01548");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager14 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig16 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int17 = myDataCenterInstanceConfig16.getLeaseRenewalIntervalInSeconds();
        int int18 = myDataCenterInstanceConfig16.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager14.config = myDataCenterInstanceConfig16;
        java.lang.String str20 = myDataCenterInstanceConfig16.getHealthCheckUrlPath();
        boolean boolean21 = instanceInfo11.equals((java.lang.Object) str20);
        int int22 = instanceInfo11.getSecurePort();
        long long23 = instanceInfo11.getLastUpdatedTimestamp();
        java.lang.String str24 = instanceInfo11.getAppName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 30 + "'", int18 == 30);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "/healthcheck" + "'", str20, "/healthcheck");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 443 + "'", int22 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1636106048554L + "'", long23 == 1636106048554L);
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UNKNOWN" + "'", str24, "UNKNOWN");
    }

    @Test
    public void test01549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01549");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str5 = myDataCenterInstanceConfig4.getIpAddress();
        java.lang.String str6 = myDataCenterInstanceConfig4.getASGName();
        boolean boolean7 = myDataCenterInstanceConfig4.getSecurePortEnabled();
        java.lang.String str8 = myDataCenterInstanceConfig4.getStatusPageUrl();
        applicationInfoManager0.config = myDataCenterInstanceConfig4;
        java.lang.String str10 = myDataCenterInstanceConfig4.getIpAddress();
        java.lang.String str11 = myDataCenterInstanceConfig4.getHomePageUrl();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertNotNull(instanceInfo2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "172.20.26.3" + "'", str5, "172.20.26.3");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "172.20.26.3" + "'", str10, "172.20.26.3");
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test01550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01550");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder8.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder8.setCountryId((-1));
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder8.setAppName("na");
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder8.setIPAddr("default");
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder8.setVIPAddressDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder20.setAppName("HI!");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test01551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01551");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder2.setHealthCheckUrlsForDeser("unknown", "172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder10.setAppName("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder10.setCountryId((-1));
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder10.setStatusPageUrlForDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder16.setNamespace("http://inesserver2.windows.cin.ufpe.br:80/");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test01552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01552");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo4 = myDataCenterInstanceConfig2.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig5 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo4);
        java.lang.String str6 = myDataCenterInstanceConfig5.getAppname();
        java.lang.String str7 = myDataCenterInstanceConfig5.getNamespace();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig8 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager9 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager9.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int13 = myDataCenterInstanceConfig12.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo14 = myDataCenterInstanceConfig12.getDataCenterInfo();
        java.lang.String str15 = myDataCenterInstanceConfig12.getNamespace();
        boolean boolean16 = myDataCenterInstanceConfig12.isNonSecurePortEnabled();
        applicationInfoManager9.config = myDataCenterInstanceConfig12;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig18 = applicationInfoManager9.config;
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager9.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager9.instanceInfo;
        int int21 = instanceInfo20.getSecurePort();
        boolean boolean22 = instanceInfo20.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager23 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig8, instanceInfo20);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager24 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig5, instanceInfo20);
        java.lang.String str25 = instanceInfo20.getHomePageUrl();
        long long26 = instanceInfo20.getLastUpdatedTimestamp();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus27 = null;
        instanceInfo20.setOverriddenStatus(instanceStatus27);
        instanceInfo20.setLastUpdatedTimestamp();
        instanceInfo20.setLastDirtyTimestamp((java.lang.Long) 1636106004932L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "unknown" + "'", str6, "unknown");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/Status" + "'", str7, "/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 30 + "'", int13 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertNotNull(instanceInfo20);
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 30 + "'", int21 == 30);
// flaky:         org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str25, "http://inesserver2.windows.cin.ufpe.br:80/");
// flaky:         org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1636106048554L + "'", long26 == 1636106048554L);
    }

    @Test
    public void test01553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01553");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        java.lang.String str4 = myDataCenterInstanceConfig1.getVirtualHostName();
        java.lang.String str5 = myDataCenterInstanceConfig1.getHomePageUrl();
        java.lang.String str6 = myDataCenterInstanceConfig1.getHomePageUrlPath();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str4, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "/" + "'", str6, "/");
    }

    @Test
    public void test01554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01554");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.lang.String str16 = instanceInfo11.getSID();
        com.netflix.appinfo.InstanceInfo instanceInfo17 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        java.lang.String str18 = instanceInfo17.getVIPAddress();
        instanceInfo17.setLastDirtyTimestamp((java.lang.Long) 1636106048097L);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "unknown" + "'", str16, "unknown");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test01555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01555");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str4 = myDataCenterInstanceConfig1.getNamespace();
        java.lang.String str5 = myDataCenterInstanceConfig1.getVirtualHostName();
        java.lang.String str6 = myDataCenterInstanceConfig1.getHomePageUrl();
        int int7 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str5, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 30 + "'", int7 == 30);
    }

    @Test
    public void test01556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01556");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        java.lang.Boolean boolean12 = instanceInfo11.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus13 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo11.setOverriddenStatus(instanceStatus13);
        java.lang.String str15 = instanceInfo11.getSID();
        int int16 = instanceInfo11.getSecurePort();
        long long17 = instanceInfo11.getLastUpdatedTimestamp();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + true + "'", boolean12, true);
        org.junit.Assert.assertTrue("'" + instanceStatus13 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus13.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "unknown" + "'", str15, "unknown");
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 443 + "'", int16 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1636106048755L + "'", long17 == 1636106048755L);
    }

    @Test
    public void test01557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01557");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder20.add("/healthcheck", "UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setSecureVIPAddress("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder23.setCountryId(0);
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder23.setSID("/");
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder23.setCountryId(1);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig33 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/healthcheck");
        java.util.Map<java.lang.String, java.lang.String> strMap34 = myDataCenterInstanceConfig33.getMetadataMap();
        com.netflix.appinfo.InstanceInfo.Builder builder35 = builder31.setMetadata(strMap34);
        com.netflix.appinfo.InstanceInfo.Builder builder37 = builder35.setPort((int) (byte) -1);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
    }

    @Test
    public void test01558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01558");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo4 = myDataCenterInstanceConfig2.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig5 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo4);
        java.lang.String str6 = myDataCenterInstanceConfig5.getSecureVirtualHostName();
        java.lang.String str7 = myDataCenterInstanceConfig5.getVirtualHostName();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = myDataCenterInstanceConfig5.getMetadataMap();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo9 = myDataCenterInstanceConfig5.getDataCenterInfo();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str7, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(dataCenterInfo9);
    }

    @Test
    public void test01559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01559");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager3 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo4 = applicationInfoManager3.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig6 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int7 = myDataCenterInstanceConfig6.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig6.getDataCenterInfo();
        java.lang.String str9 = myDataCenterInstanceConfig6.getNamespace();
        boolean boolean10 = myDataCenterInstanceConfig6.isNonSecurePortEnabled();
        applicationInfoManager3.config = myDataCenterInstanceConfig6;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig12 = applicationInfoManager3.config;
        com.netflix.appinfo.InstanceInfo instanceInfo13 = applicationInfoManager3.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager3.instanceInfo;
        java.lang.String str15 = instanceInfo14.getVersion();
        instanceInfo14.setLastUpdatedTimestamp();
        applicationInfoManager0.instanceInfo = instanceInfo14;
        java.lang.String str18 = instanceInfo14.getAppGroupName();
        java.lang.String str19 = instanceInfo14.getASGName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertNotNull(applicationInfoManager3);
        org.junit.Assert.assertNotNull(instanceInfo4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 30 + "'", int7 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig12);
        org.junit.Assert.assertNotNull(instanceInfo13);
        org.junit.Assert.assertNotNull(instanceInfo14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "unknown" + "'", str15, "unknown");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UNKNOWN" + "'", str18, "UNKNOWN");
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test01560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01560");
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig0 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager1 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig4.getDataCenterInfo();
        java.lang.String str7 = myDataCenterInstanceConfig4.getNamespace();
        boolean boolean8 = myDataCenterInstanceConfig4.isNonSecurePortEnabled();
        applicationInfoManager1.config = myDataCenterInstanceConfig4;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig10 = applicationInfoManager1.config;
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager1.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager1.instanceInfo;
        int int13 = instanceInfo12.getSecurePort();
        boolean boolean14 = instanceInfo12.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig0, instanceInfo12);
        instanceInfo12.setSID("unknown");
        java.lang.String str18 = instanceInfo12.getId();
        int int19 = instanceInfo12.getPort();
        java.lang.String str20 = instanceInfo12.getHostName();
        com.netflix.appinfo.InstanceInfo.Builder builder21 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder21.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder21.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig28 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig28.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder27.setDataCenterInfo(dataCenterInfo29);
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder27.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo instanceInfo33 = builder32.getRawInstance();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager34 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig36 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int37 = myDataCenterInstanceConfig36.getLeaseRenewalIntervalInSeconds();
        int int38 = myDataCenterInstanceConfig36.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager34.config = myDataCenterInstanceConfig36;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager34;
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus42 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("/Status");
        applicationInfoManager34.setInstanceStatus(instanceStatus42);
        com.netflix.appinfo.InstanceInfo.Builder builder44 = builder32.setOverriddenStatus(instanceStatus42);
        com.netflix.appinfo.InstanceInfo.Builder builder46 = builder44.setPort((int) (byte) 100);
        com.netflix.appinfo.InstanceInfo.Builder builder48 = builder44.setStatusPageUrlForDeser("unknown");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager49 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo50 = applicationInfoManager49.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig52 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int53 = myDataCenterInstanceConfig52.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo54 = myDataCenterInstanceConfig52.getDataCenterInfo();
        java.lang.String str55 = myDataCenterInstanceConfig52.getNamespace();
        boolean boolean56 = myDataCenterInstanceConfig52.isNonSecurePortEnabled();
        applicationInfoManager49.config = myDataCenterInstanceConfig52;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig58 = applicationInfoManager49.config;
        com.netflix.appinfo.InstanceInfo instanceInfo59 = applicationInfoManager49.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo60 = applicationInfoManager49.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType61 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo60.setActionType(actionType61);
        com.netflix.appinfo.LeaseInfo leaseInfo63 = null;
        instanceInfo60.setLeaseInfo(leaseInfo63);
        java.lang.String str65 = instanceInfo60.getSID();
        com.netflix.appinfo.LeaseInfo leaseInfo66 = instanceInfo60.getLeaseInfo();
        instanceInfo60.setIsCoordinatingDiscoveryServer();
        java.lang.String str68 = instanceInfo60.getASGName();
        java.lang.String str69 = instanceInfo60.getHomePageUrl();
        java.lang.String str70 = instanceInfo60.getHostName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager71 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo72 = applicationInfoManager71.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig74 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int75 = myDataCenterInstanceConfig74.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo76 = myDataCenterInstanceConfig74.getDataCenterInfo();
        java.lang.String str77 = myDataCenterInstanceConfig74.getNamespace();
        boolean boolean78 = myDataCenterInstanceConfig74.isNonSecurePortEnabled();
        applicationInfoManager71.config = myDataCenterInstanceConfig74;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig80 = applicationInfoManager71.config;
        com.netflix.appinfo.InstanceInfo instanceInfo81 = applicationInfoManager71.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo82 = applicationInfoManager71.instanceInfo;
        int int83 = instanceInfo82.getSecurePort();
        boolean boolean84 = instanceInfo82.isDirty();
        java.lang.String str85 = instanceInfo82.getHostName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus86 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        instanceInfo82.setStatus(instanceStatus86);
        com.netflix.appinfo.InstanceInfo.PortType portType88 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean89 = instanceInfo82.isPortEnabled(portType88);
        boolean boolean90 = instanceInfo60.isPortEnabled(portType88);
        com.netflix.appinfo.InstanceInfo.Builder builder92 = builder48.enablePort(portType88, true);
        boolean boolean93 = instanceInfo12.isPortEnabled(portType88);
        java.lang.String str94 = instanceInfo12.getStatusPageUrl();
        org.junit.Assert.assertNotNull(applicationInfoManager1);
        org.junit.Assert.assertNotNull(instanceInfo2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(instanceInfo12);
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 443 + "'", int13 == 443);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str18, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str20, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertNotNull(applicationInfoManager34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 30 + "'", int37 == 30);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 30 + "'", int38 == 30);
        org.junit.Assert.assertTrue("'" + instanceStatus42 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus42.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(applicationInfoManager49);
        org.junit.Assert.assertNotNull(instanceInfo50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 30 + "'", int53 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig58);
        org.junit.Assert.assertNotNull(instanceInfo59);
        org.junit.Assert.assertNotNull(instanceInfo60);
        org.junit.Assert.assertTrue("'" + actionType61 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType61.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "unknown" + "'", str65, "unknown");
        org.junit.Assert.assertNull(leaseInfo66);
        org.junit.Assert.assertNull(str68);
// flaky:         org.junit.Assert.assertEquals("'" + str69 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str69, "http://inesserver2.windows.cin.ufpe.br:80/");
// flaky:         org.junit.Assert.assertEquals("'" + str70 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str70, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager71);
        org.junit.Assert.assertNotNull(instanceInfo72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 30 + "'", int75 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig80);
        org.junit.Assert.assertNotNull(instanceInfo81);
        org.junit.Assert.assertNotNull(instanceInfo82);
// flaky:         org.junit.Assert.assertTrue("'" + int83 + "' != '" + 443 + "'", int83 == 443);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str85 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str85, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + instanceStatus86 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus86.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertTrue("'" + portType88 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType88.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str94 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str94, "http://inesserver2.windows.cin.ufpe.br:80/Status");
    }

    @Test
    public void test01561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01561");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str2 = myDataCenterInstanceConfig1.getIpAddress();
        java.lang.String str3 = myDataCenterInstanceConfig1.getASGName();
        boolean boolean4 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        java.lang.String str5 = myDataCenterInstanceConfig1.getHealthCheckUrl();
        java.lang.String str6 = myDataCenterInstanceConfig1.getStatusPageUrl();
        boolean boolean7 = myDataCenterInstanceConfig1.isInstanceEnabledOnit();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "172.20.26.3" + "'", str2, "172.20.26.3");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test01562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01562");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo4 = myDataCenterInstanceConfig2.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig2.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo7 = myDataCenterInstanceConfig2.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo7);
        java.lang.String str9 = myDataCenterInstanceConfig8.getHealthCheckUrl();
        java.lang.String str10 = myDataCenterInstanceConfig8.getStatusPageUrlPath();
        boolean boolean11 = myDataCenterInstanceConfig8.getSecurePortEnabled();
        java.lang.String str12 = myDataCenterInstanceConfig8.getIpAddress();
        java.lang.String str13 = myDataCenterInstanceConfig8.getNamespace();
        java.lang.String str14 = myDataCenterInstanceConfig8.getAppname();
        int int15 = myDataCenterInstanceConfig8.getSecurePort();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str6, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/Status" + "'", str10, "/Status");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "172.20.26.3" + "'", str12, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str13, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "unknown" + "'", str14, "unknown");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 443 + "'", int15 == 443);
    }

    @Test
    public void test01563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01563");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        java.lang.Boolean boolean12 = instanceInfo11.isCoordinatingDiscoveryServer();
        java.lang.String str13 = instanceInfo11.getVIPAddress();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus14 = instanceInfo11.getOverriddenStatus();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo16 = applicationInfoManager15.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig18 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int19 = myDataCenterInstanceConfig18.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo20 = myDataCenterInstanceConfig18.getDataCenterInfo();
        java.lang.String str21 = myDataCenterInstanceConfig18.getNamespace();
        boolean boolean22 = myDataCenterInstanceConfig18.isNonSecurePortEnabled();
        applicationInfoManager15.config = myDataCenterInstanceConfig18;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig24 = applicationInfoManager15.config;
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager15.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo26 = applicationInfoManager15.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType27 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo26.setActionType(actionType27);
        com.netflix.appinfo.LeaseInfo leaseInfo29 = null;
        instanceInfo26.setLeaseInfo(leaseInfo29);
        java.util.Set<java.lang.String> strSet31 = instanceInfo26.getHealthCheckUrls();
        java.lang.String str32 = instanceInfo26.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder33 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo26);
        com.netflix.appinfo.InstanceInfo.Builder builder36 = builder33.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder36.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus39 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder36.setStatus(instanceStatus39);
        instanceInfo11.setOverriddenStatus(instanceStatus39);
        instanceInfo11.setSID("inesserver2.windows.cin.ufpe.br");
        boolean boolean44 = instanceInfo11.isDirty();
        instanceInfo11.setIsCoordinatingDiscoveryServer();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + true + "'", boolean12, true);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + instanceStatus14 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus14.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(applicationInfoManager15);
        org.junit.Assert.assertNotNull(instanceInfo16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 30 + "'", int19 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertTrue("'" + actionType27 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType27.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet31);
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str32, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + instanceStatus39 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus39.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test01564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01564");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setNamespace("na");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder6.add("unknown", "UNKNOWN");
        com.netflix.appinfo.LeaseInfo leaseInfo18 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder17.setLeaseInfo(leaseInfo18);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo20 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder19.setDataCenterInfo(dataCenterInfo20);
        com.netflix.appinfo.InstanceInfo instanceInfo22 = builder21.getRawInstance();
        java.lang.Boolean boolean23 = instanceInfo22.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.LeaseInfo leaseInfo24 = instanceInfo22.getLeaseInfo();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + false + "'", boolean23, false);
        org.junit.Assert.assertNull(leaseInfo24);
    }

    @Test
    public void test01565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01565");
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig0 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager1 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig4.getDataCenterInfo();
        java.lang.String str7 = myDataCenterInstanceConfig4.getNamespace();
        boolean boolean8 = myDataCenterInstanceConfig4.isNonSecurePortEnabled();
        applicationInfoManager1.config = myDataCenterInstanceConfig4;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig10 = applicationInfoManager1.config;
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager1.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager1.instanceInfo;
        int int13 = instanceInfo12.getSecurePort();
        boolean boolean14 = instanceInfo12.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig0, instanceInfo12);
        instanceInfo12.setSID("unknown");
        java.lang.String str18 = instanceInfo12.getId();
        int int19 = instanceInfo12.getPort();
        instanceInfo12.setIsDirty(false);
        org.junit.Assert.assertNotNull(applicationInfoManager1);
        org.junit.Assert.assertNotNull(instanceInfo2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(instanceInfo12);
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 443 + "'", int13 == 443);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str18, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
    }

    @Test
    public void test01566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01566");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        int int4 = myDataCenterInstanceConfig1.getSecurePort();
        java.lang.String str5 = myDataCenterInstanceConfig1.getAppname();
        java.lang.String str6 = myDataCenterInstanceConfig1.getSecureVirtualHostName();
        java.lang.String str7 = myDataCenterInstanceConfig1.getAppGroupName();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 443 + "'", int4 == 443);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "unknown" + "'", str5, "unknown");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "unknown" + "'", str7, "unknown");
    }

    @Test
    public void test01567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01567");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        int int4 = myDataCenterInstanceConfig1.getSecurePort();
        java.lang.String str5 = myDataCenterInstanceConfig1.getAppGroupName();
        java.lang.String str6 = myDataCenterInstanceConfig1.getASGName();
        java.lang.String str7 = myDataCenterInstanceConfig1.getASGName();
        int int8 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        int int9 = myDataCenterInstanceConfig1.getSecurePort();
        java.lang.Class<?> wildcardClass10 = myDataCenterInstanceConfig1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 443 + "'", int4 == 443);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "unknown" + "'", str5, "unknown");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 443 + "'", int9 == 443);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test01568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01568");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setCountryId(7002);
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder4.setHostName("na");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder8.setHealthCheckUrlsForDeser("/healthcheck", "http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo12 = builder8.getRawInstance();
        com.netflix.appinfo.LeaseInfo leaseInfo13 = instanceInfo12.getLeaseInfo();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertNull(leaseInfo13);
    }

    @Test
    public void test01569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01569");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig12 = applicationInfoManager0.config;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig13 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        java.lang.String str14 = myDataCenterInstanceConfig13.getASGName();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = myDataCenterInstanceConfig13.getMetadataMap();
        int int16 = myDataCenterInstanceConfig13.getSecurePort();
        java.lang.String str17 = myDataCenterInstanceConfig13.getVirtualHostName();
        applicationInfoManager0.config = myDataCenterInstanceConfig13;
        int int19 = myDataCenterInstanceConfig13.getSecurePort();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 443 + "'", int16 == 443);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str17, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 443 + "'", int19 == 443);
    }

    @Test
    public void test01570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01570");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder9.setHealthCheckUrlsForDeser("hi!", "");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setASGName("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder14.setHomePageUrlForDeser("INESSERVER2.WINDOWS.CIN.UFPE.BR");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test01571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01571");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        int int13 = instanceInfo11.getPort();
        int int14 = instanceInfo11.getSecurePort();
        java.lang.Boolean boolean15 = instanceInfo11.isCoordinatingDiscoveryServer();
        java.lang.String str16 = instanceInfo11.getSecureVipAddress();
        instanceInfo11.setIsDirty(false);
        java.lang.String str19 = instanceInfo11.getStatusPageUrl();
        java.lang.String str20 = instanceInfo11.getHomePageUrl();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 80 + "'", int13 == 80);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 443 + "'", int14 == 443);
// flaky:         org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
// flaky:         org.junit.Assert.assertNull(str16);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str19, "http://inesserver2.windows.cin.ufpe.br:80/Status");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str20, "http://inesserver2.windows.cin.ufpe.br:80/");
    }

    @Test
    public void test01572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01572");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        java.lang.Boolean boolean12 = instanceInfo11.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus13 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo11.setOverriddenStatus(instanceStatus13);
        instanceInfo11.setLastDirtyTimestamp((java.lang.Long) (-1L));
        java.lang.String str17 = instanceInfo11.getSecureVipAddress();
        java.lang.String str18 = instanceInfo11.getStatusPageUrl();
        java.lang.String str19 = instanceInfo11.getAppName();
        instanceInfo11.setSID("UNKNOWN");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertTrue("'" + instanceStatus13 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus13.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
// flaky:         org.junit.Assert.assertNull(str17);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str18, "http://inesserver2.windows.cin.ufpe.br:80/Status");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UNKNOWN" + "'", str19, "UNKNOWN");
    }

    @Test
    public void test01573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01573");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        java.lang.Boolean boolean12 = instanceInfo11.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus13 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo11.setOverriddenStatus(instanceStatus13);
        int int15 = instanceInfo11.getSecurePort();
        java.lang.String str16 = instanceInfo11.getHostName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager17 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager17.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig20 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int21 = myDataCenterInstanceConfig20.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = myDataCenterInstanceConfig20.getDataCenterInfo();
        java.lang.String str23 = myDataCenterInstanceConfig20.getNamespace();
        boolean boolean24 = myDataCenterInstanceConfig20.isNonSecurePortEnabled();
        applicationInfoManager17.config = myDataCenterInstanceConfig20;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig26 = applicationInfoManager17.config;
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager17.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager17.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType29 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo28.setActionType(actionType29);
        com.netflix.appinfo.LeaseInfo leaseInfo31 = null;
        instanceInfo28.setLeaseInfo(leaseInfo31);
        java.lang.String str33 = instanceInfo28.getSID();
        com.netflix.appinfo.LeaseInfo leaseInfo34 = instanceInfo28.getLeaseInfo();
        boolean boolean35 = instanceInfo11.equals((java.lang.Object) instanceInfo28);
        java.lang.String str36 = instanceInfo11.getASGName();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo37 = instanceInfo11.getDataCenterInfo();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager38 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo39 = applicationInfoManager38.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig41 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int42 = myDataCenterInstanceConfig41.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo43 = myDataCenterInstanceConfig41.getDataCenterInfo();
        java.lang.String str44 = myDataCenterInstanceConfig41.getNamespace();
        boolean boolean45 = myDataCenterInstanceConfig41.isNonSecurePortEnabled();
        applicationInfoManager38.config = myDataCenterInstanceConfig41;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig47 = applicationInfoManager38.config;
        com.netflix.appinfo.InstanceInfo instanceInfo48 = applicationInfoManager38.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo49 = applicationInfoManager38.instanceInfo;
        int int50 = instanceInfo49.getSecurePort();
        instanceInfo49.setIsCoordinatingDiscoveryServer();
        int int52 = instanceInfo49.getPort();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus53 = instanceInfo49.getStatus();
        instanceInfo11.setOverriddenStatus(instanceStatus53);
        java.lang.String str55 = instanceInfo11.getIPAddr();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertTrue("'" + instanceStatus13 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus13.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 443 + "'", int15 == 443);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str16, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager17);
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 30 + "'", int21 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertTrue("'" + actionType29 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType29.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UNKNOWN" + "'", str33, "UNKNOWN");
        org.junit.Assert.assertNull(leaseInfo34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
// flaky:         org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(dataCenterInfo37);
        org.junit.Assert.assertNotNull(applicationInfoManager38);
        org.junit.Assert.assertNotNull(instanceInfo39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig47);
        org.junit.Assert.assertNotNull(instanceInfo48);
        org.junit.Assert.assertNotNull(instanceInfo49);
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 443 + "'", int50 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 80 + "'", int52 == 80);
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus53 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING + "'", instanceStatus53.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING));
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "172.20.26.3" + "'", str55, "172.20.26.3");
    }

    @Test
    public void test01574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01574");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        int int3 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        boolean boolean5 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        com.netflix.appinfo.InstanceInfo instanceInfo6 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager7 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo6);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig9.getDataCenterInfo();
        java.lang.String str12 = myDataCenterInstanceConfig9.getNamespace();
        applicationInfoManager7.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig9);
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager7;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig17 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int18 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        int int19 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager15.config = myDataCenterInstanceConfig17;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig21 = applicationInfoManager15.config;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig22 = applicationInfoManager15.config;
        applicationInfoManager15.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager24 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager24.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig27 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int28 = myDataCenterInstanceConfig27.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig27.getDataCenterInfo();
        java.lang.String str30 = myDataCenterInstanceConfig27.getNamespace();
        boolean boolean31 = myDataCenterInstanceConfig27.isNonSecurePortEnabled();
        applicationInfoManager24.config = myDataCenterInstanceConfig27;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig33 = applicationInfoManager24.config;
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager24.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager24.instanceInfo;
        int int36 = instanceInfo35.getSecurePort();
        boolean boolean37 = instanceInfo35.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo38 = new com.netflix.appinfo.InstanceInfo(instanceInfo35);
        com.netflix.appinfo.InstanceInfo instanceInfo39 = new com.netflix.appinfo.InstanceInfo(instanceInfo35);
        java.lang.String str40 = instanceInfo35.getAppGroupName();
        int int41 = instanceInfo35.getCountryId();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus42 = instanceInfo35.getStatus();
        applicationInfoManager15.setInstanceStatus(instanceStatus42);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig45 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str46 = myDataCenterInstanceConfig45.getIpAddress();
        java.lang.String str47 = myDataCenterInstanceConfig45.getASGName();
        boolean boolean48 = myDataCenterInstanceConfig45.getSecurePortEnabled();
        int int49 = myDataCenterInstanceConfig45.getLeaseExpirationDurationInSeconds();
        int int50 = myDataCenterInstanceConfig45.getNonSecurePort();
        java.lang.String str51 = myDataCenterInstanceConfig45.getStatusPageUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo52 = myDataCenterInstanceConfig45.getDataCenterInfo();
        java.lang.String str53 = myDataCenterInstanceConfig45.getIpAddress();
        applicationInfoManager15.config = myDataCenterInstanceConfig45;
        applicationInfoManager7.config = myDataCenterInstanceConfig45;
        com.netflix.appinfo.InstanceInfo instanceInfo56 = applicationInfoManager7.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager57 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo58 = applicationInfoManager57.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig60 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int61 = myDataCenterInstanceConfig60.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo62 = myDataCenterInstanceConfig60.getDataCenterInfo();
        java.lang.String str63 = myDataCenterInstanceConfig60.getNamespace();
        boolean boolean64 = myDataCenterInstanceConfig60.isNonSecurePortEnabled();
        applicationInfoManager57.config = myDataCenterInstanceConfig60;
        int int66 = myDataCenterInstanceConfig60.getLeaseExpirationDurationInSeconds();
        java.util.Map<java.lang.String, java.lang.String> strMap67 = myDataCenterInstanceConfig60.getMetadataMap();
        int int68 = myDataCenterInstanceConfig60.getLeaseExpirationDurationInSeconds();
        applicationInfoManager7.config = myDataCenterInstanceConfig60;
        boolean boolean70 = myDataCenterInstanceConfig60.getSecurePortEnabled();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/Status" + "'", str4, "/Status");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(applicationInfoManager15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 30 + "'", int18 == 30);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 30 + "'", int19 == 30);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig21);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig22);
        org.junit.Assert.assertNotNull(applicationInfoManager24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 30 + "'", int28 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 443 + "'", int36 == 443);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "UNKNOWN" + "'", str40, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + instanceStatus42 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING + "'", instanceStatus42.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "172.20.26.3" + "'", str46, "172.20.26.3");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 90 + "'", int49 == 90);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 80 + "'", int50 == 80);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(dataCenterInfo52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "172.20.26.3" + "'", str53, "172.20.26.3");
        org.junit.Assert.assertNotNull(instanceInfo56);
        org.junit.Assert.assertNotNull(applicationInfoManager57);
        org.junit.Assert.assertNotNull(instanceInfo58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 90 + "'", int66 == 90);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 90 + "'", int68 == 90);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test01575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01575");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        boolean boolean13 = instanceInfo11.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        com.netflix.appinfo.InstanceInfo instanceInfo15 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        int int16 = instanceInfo11.getSecurePort();
        java.lang.String str17 = instanceInfo11.getStatusPageUrl();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus18 = instanceInfo11.getStatus();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 443 + "'", int16 == 443);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str17, "http://inesserver2.windows.cin.ufpe.br:80/Status");
        org.junit.Assert.assertTrue("'" + instanceStatus18 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING + "'", instanceStatus18.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING));
    }

    @Test
    public void test01576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01576");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int9 = myDataCenterInstanceConfig8.getLeaseRenewalIntervalInSeconds();
        int int10 = myDataCenterInstanceConfig8.getLeaseRenewalIntervalInSeconds();
        java.lang.String str11 = myDataCenterInstanceConfig8.getStatusPageUrlPath();
        boolean boolean12 = myDataCenterInstanceConfig8.getSecurePortEnabled();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = myDataCenterInstanceConfig8.getMetadataMap();
        applicationInfoManager0.config = myDataCenterInstanceConfig8;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig17 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int18 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        int int19 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager15.config = myDataCenterInstanceConfig17;
        java.lang.String str21 = myDataCenterInstanceConfig17.getHealthCheckUrlPath();
        java.lang.String str22 = myDataCenterInstanceConfig17.getNamespace();
        java.lang.String str23 = myDataCenterInstanceConfig17.getASGName();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig17);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager25 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo26 = applicationInfoManager25.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig28 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int29 = myDataCenterInstanceConfig28.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo30 = myDataCenterInstanceConfig28.getDataCenterInfo();
        java.lang.String str31 = myDataCenterInstanceConfig28.getNamespace();
        boolean boolean32 = myDataCenterInstanceConfig28.isNonSecurePortEnabled();
        applicationInfoManager25.config = myDataCenterInstanceConfig28;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig34 = applicationInfoManager25.config;
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager25.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo36 = applicationInfoManager25.instanceInfo;
        java.lang.Boolean boolean37 = instanceInfo36.isCoordinatingDiscoveryServer();
        applicationInfoManager0.instanceInfo = instanceInfo36;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig40 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        boolean boolean41 = myDataCenterInstanceConfig40.getSecurePortEnabled();
        boolean boolean42 = myDataCenterInstanceConfig40.isNonSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager43 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo44 = applicationInfoManager43.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig46 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int47 = myDataCenterInstanceConfig46.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo48 = myDataCenterInstanceConfig46.getDataCenterInfo();
        java.lang.String str49 = myDataCenterInstanceConfig46.getNamespace();
        boolean boolean50 = myDataCenterInstanceConfig46.isNonSecurePortEnabled();
        applicationInfoManager43.config = myDataCenterInstanceConfig46;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig52 = applicationInfoManager43.config;
        com.netflix.appinfo.InstanceInfo instanceInfo53 = applicationInfoManager43.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo54 = applicationInfoManager43.instanceInfo;
        int int55 = instanceInfo54.getSecurePort();
        instanceInfo54.setIsCoordinatingDiscoveryServer();
        int int57 = instanceInfo54.getSecurePort();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = instanceInfo54.getMetadata();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager59 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig40, instanceInfo54);
        com.netflix.appinfo.LeaseInfo leaseInfo60 = instanceInfo54.getLeaseInfo();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager61 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo62 = applicationInfoManager61.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig64 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int65 = myDataCenterInstanceConfig64.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo66 = myDataCenterInstanceConfig64.getDataCenterInfo();
        java.lang.String str67 = myDataCenterInstanceConfig64.getNamespace();
        boolean boolean68 = myDataCenterInstanceConfig64.isNonSecurePortEnabled();
        applicationInfoManager61.config = myDataCenterInstanceConfig64;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig70 = applicationInfoManager61.config;
        com.netflix.appinfo.InstanceInfo instanceInfo71 = applicationInfoManager61.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo72 = applicationInfoManager61.getInfo();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig73 = applicationInfoManager61.config;
        applicationInfoManager61.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus75 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        applicationInfoManager61.setInstanceStatus(instanceStatus75);
        instanceInfo54.setStatus(instanceStatus75);
        applicationInfoManager0.setInstanceStatus(instanceStatus75);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 30 + "'", int9 == 30);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/Status" + "'", str11, "/Status");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(applicationInfoManager15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 30 + "'", int18 == 30);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 30 + "'", int19 == 30);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "/healthcheck" + "'", str21, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(applicationInfoManager25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 30 + "'", int29 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig34);
        org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertNotNull(instanceInfo36);
        org.junit.Assert.assertEquals("'" + boolean37 + "' != '" + false + "'", boolean37, false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(applicationInfoManager43);
        org.junit.Assert.assertNotNull(instanceInfo44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 30 + "'", int47 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig52);
        org.junit.Assert.assertNotNull(instanceInfo53);
        org.junit.Assert.assertNotNull(instanceInfo54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 443 + "'", int55 == 443);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 443 + "'", int57 == 443);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(leaseInfo60);
        org.junit.Assert.assertNotNull(applicationInfoManager61);
        org.junit.Assert.assertNotNull(instanceInfo62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 30 + "'", int65 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig70);
        org.junit.Assert.assertNotNull(instanceInfo71);
        org.junit.Assert.assertNotNull(instanceInfo72);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig73);
        org.junit.Assert.assertTrue("'" + instanceStatus75 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus75.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
    }

    @Test
    public void test01577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01577");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = instanceInfo11.getStatusPageUrl();
        java.lang.String str15 = instanceInfo11.getVersion();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = instanceInfo11.getMetadata();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager17 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager17.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig20 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int21 = myDataCenterInstanceConfig20.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = myDataCenterInstanceConfig20.getDataCenterInfo();
        java.lang.String str23 = myDataCenterInstanceConfig20.getNamespace();
        boolean boolean24 = myDataCenterInstanceConfig20.isNonSecurePortEnabled();
        applicationInfoManager17.config = myDataCenterInstanceConfig20;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig26 = applicationInfoManager17.config;
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager17.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager17.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType29 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo28.setActionType(actionType29);
        com.netflix.appinfo.LeaseInfo leaseInfo31 = null;
        instanceInfo28.setLeaseInfo(leaseInfo31);
        java.util.Set<java.lang.String> strSet33 = instanceInfo28.getHealthCheckUrls();
        java.lang.String str34 = instanceInfo28.getId();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager35 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo36 = applicationInfoManager35.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig38 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int39 = myDataCenterInstanceConfig38.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo40 = myDataCenterInstanceConfig38.getDataCenterInfo();
        java.lang.String str41 = myDataCenterInstanceConfig38.getNamespace();
        boolean boolean42 = myDataCenterInstanceConfig38.isNonSecurePortEnabled();
        applicationInfoManager35.config = myDataCenterInstanceConfig38;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig44 = applicationInfoManager35.config;
        com.netflix.appinfo.InstanceInfo instanceInfo45 = applicationInfoManager35.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo46 = applicationInfoManager35.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType47 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo46.setActionType(actionType47);
        instanceInfo28.setActionType(actionType47);
        java.lang.String str50 = instanceInfo28.getSID();
        com.netflix.appinfo.InstanceInfo.ActionType actionType51 = instanceInfo28.getActionType();
        instanceInfo11.setActionType(actionType51);
        com.netflix.appinfo.InstanceInfo.ActionType actionType53 = instanceInfo11.getActionType();
        instanceInfo11.setLastDirtyTimestamp((java.lang.Long) 1636105999675L);
        java.lang.String str56 = instanceInfo11.getId();
        java.lang.Boolean boolean57 = instanceInfo11.isCoordinatingDiscoveryServer();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str14, "http://inesserver2.windows.cin.ufpe.br:80/Status");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "unknown" + "'", str15, "unknown");
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(applicationInfoManager17);
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 30 + "'", int21 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertTrue("'" + actionType29 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType29.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str34, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager35);
        org.junit.Assert.assertNotNull(instanceInfo36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 30 + "'", int39 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig44);
        org.junit.Assert.assertNotNull(instanceInfo45);
        org.junit.Assert.assertNotNull(instanceInfo46);
        org.junit.Assert.assertTrue("'" + actionType47 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType47.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "na" + "'", str50, "na");
        org.junit.Assert.assertTrue("'" + actionType51 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType51.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + actionType53 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType53.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str56, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + boolean57 + "' != '" + true + "'", boolean57, true);
    }

    @Test
    public void test01578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01578");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isInstanceEnabledOnit();
        java.lang.String str4 = myDataCenterInstanceConfig1.getNamespace();
        java.lang.String str5 = myDataCenterInstanceConfig1.getHomePageUrl();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test01579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01579");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig5 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int6 = myDataCenterInstanceConfig5.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo7 = myDataCenterInstanceConfig5.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo7);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo7);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig("http://inesserver2.windows.cin.ufpe.br:10/Status", dataCenterInfo7);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig11 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo7);
        java.lang.Class<?> wildcardClass12 = dataCenterInfo7.getClass();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 30 + "'", int6 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo7);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test01580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01580");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str3 = myDataCenterInstanceConfig1.getVirtualHostName();
        int int4 = myDataCenterInstanceConfig1.getNonSecurePort();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig1.getAppGroupName();
        boolean boolean7 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        java.lang.String str8 = myDataCenterInstanceConfig1.getAppname();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str3, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 80 + "'", int4 == 80);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "unknown" + "'", str6, "unknown");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "unknown" + "'", str8, "unknown");
    }

    @Test
    public void test01581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01581");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig1 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo2 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager3 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig1, instanceInfo2);
        com.netflix.appinfo.InstanceInfo instanceInfo4 = null;
        applicationInfoManager3.instanceInfo = instanceInfo4;
        com.netflix.appinfo.InstanceInfo instanceInfo6 = applicationInfoManager3.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager7 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        int int11 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager7.config = myDataCenterInstanceConfig9;
        java.lang.String str13 = myDataCenterInstanceConfig9.getIpAddress();
        java.lang.String str14 = myDataCenterInstanceConfig9.getVirtualHostName();
        java.lang.String str16 = myDataCenterInstanceConfig9.getHostName(true);
        applicationInfoManager3.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig9);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus18 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        applicationInfoManager3.setInstanceStatus(instanceStatus18);
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager3.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager3.instanceInfo;
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig1);
        org.junit.Assert.assertNull(instanceInfo6);
        org.junit.Assert.assertNotNull(applicationInfoManager7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "172.20.26.3" + "'", str13, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str14, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str16, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + instanceStatus18 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus18.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertNotNull(instanceInfo21);
    }

    @Test
    public void test01582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01582");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo instanceInfo5 = builder0.build();
        boolean boolean6 = builder0.isInitialized();
        com.netflix.appinfo.InstanceInfo instanceInfo7 = builder0.getRawInstance();
        com.netflix.appinfo.LeaseInfo leaseInfo8 = instanceInfo7.getLeaseInfo();
        java.lang.String str9 = instanceInfo7.getAppGroupName();
        java.lang.String str10 = instanceInfo7.getStatusPageUrl();
        java.lang.String str11 = instanceInfo7.getSecureVipAddress();
        java.lang.String str12 = instanceInfo7.getStatusPageUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(instanceInfo5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(instanceInfo7);
        org.junit.Assert.assertNull(leaseInfo8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/healthcheck" + "'", str11, "/healthcheck");
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test01583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01583");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        int int16 = instanceInfo11.getCountryId();
        instanceInfo11.setSID("/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test01584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01584");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = myDataCenterInstanceConfig1.getMetadataMap();
        java.lang.String str3 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        java.lang.String str5 = myDataCenterInstanceConfig1.getHomePageUrlPath();
        java.lang.String str6 = myDataCenterInstanceConfig1.getVirtualHostName();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "/healthcheck" + "'", str3, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/Status" + "'", str4, "/Status");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/" + "'", str5, "/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str6, "inesserver2.windows.cin.ufpe.br:80");
    }

    @Test
    public void test01585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01585");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        java.lang.Boolean boolean12 = instanceInfo11.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus13 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo11.setOverriddenStatus(instanceStatus13);
        int int15 = instanceInfo11.getSecurePort();
        java.lang.String str16 = instanceInfo11.getHostName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager17 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager17.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig20 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int21 = myDataCenterInstanceConfig20.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = myDataCenterInstanceConfig20.getDataCenterInfo();
        java.lang.String str23 = myDataCenterInstanceConfig20.getNamespace();
        boolean boolean24 = myDataCenterInstanceConfig20.isNonSecurePortEnabled();
        applicationInfoManager17.config = myDataCenterInstanceConfig20;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig26 = applicationInfoManager17.config;
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager17.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager17.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType29 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo28.setActionType(actionType29);
        com.netflix.appinfo.LeaseInfo leaseInfo31 = null;
        instanceInfo28.setLeaseInfo(leaseInfo31);
        java.lang.String str33 = instanceInfo28.getSID();
        com.netflix.appinfo.LeaseInfo leaseInfo34 = instanceInfo28.getLeaseInfo();
        boolean boolean35 = instanceInfo11.equals((java.lang.Object) instanceInfo28);
        java.lang.String str36 = instanceInfo28.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus37 = instanceInfo28.getOverriddenStatus();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertTrue("'" + instanceStatus13 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus13.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 7002 + "'", int15 == 7002);
// flaky:         org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(applicationInfoManager17);
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 30 + "'", int21 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertTrue("'" + actionType29 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType29.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/healthcheck" + "'", str33, "/healthcheck");
        org.junit.Assert.assertNull(leaseInfo34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
// flaky:         org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + instanceStatus37 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus37.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
    }

    @Test
    public void test01586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01586");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "/Status", "default", "inesserver2.windows.cin.ufpe.br:80", "default", "default" };
        com.netflix.appinfo.InstanceInfo instanceInfo7 = null;
        java.lang.String str8 = com.netflix.appinfo.InstanceInfo.getZone(strArray6, instanceInfo7);
        com.netflix.appinfo.InstanceInfo instanceInfo9 = null;
        java.lang.String str10 = com.netflix.appinfo.InstanceInfo.getZone(strArray6, instanceInfo9);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder11.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder11.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder11.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig18 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig18.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder17.setDataCenterInfo(dataCenterInfo19);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = myDataCenterInstanceConfig21.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder17.setDataCenterInfo(dataCenterInfo22);
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder17.setNamespace("na");
        com.netflix.appinfo.InstanceInfo instanceInfo26 = builder17.build();
        int int27 = instanceInfo26.getSecurePort();
        instanceInfo26.setSID("http://inesserver2.windows.cin.ufpe.br:80/Status");
        int int30 = instanceInfo26.getPort();
        java.lang.String str31 = com.netflix.appinfo.InstanceInfo.getZone(strArray6, instanceInfo26);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager32 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo33 = applicationInfoManager32.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig35 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int36 = myDataCenterInstanceConfig35.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo37 = myDataCenterInstanceConfig35.getDataCenterInfo();
        java.lang.String str38 = myDataCenterInstanceConfig35.getNamespace();
        boolean boolean39 = myDataCenterInstanceConfig35.isNonSecurePortEnabled();
        applicationInfoManager32.config = myDataCenterInstanceConfig35;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig41 = applicationInfoManager32.config;
        com.netflix.appinfo.InstanceInfo instanceInfo42 = applicationInfoManager32.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo43 = applicationInfoManager32.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType44 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo43.setActionType(actionType44);
        com.netflix.appinfo.LeaseInfo leaseInfo46 = null;
        instanceInfo43.setLeaseInfo(leaseInfo46);
        java.util.Set<java.lang.String> strSet48 = instanceInfo43.getHealthCheckUrls();
        java.lang.String str49 = instanceInfo43.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder50 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo43);
        com.netflix.appinfo.InstanceInfo.Builder builder53 = builder50.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder55 = builder53.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder57 = builder55.setSecureVIPAddress("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder59 = builder55.setStatusPageUrlForDeser("inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.InstanceInfo.Builder builder61 = builder55.setHostName("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder63 = builder61.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo instanceInfo64 = builder61.getRawInstance();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str65 = com.netflix.appinfo.InstanceInfo.getZone(strArray6, instanceInfo64);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 7002 + "'", int27 == 7002);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 7001 + "'", int30 == 7001);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(applicationInfoManager32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 30 + "'", int36 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig41);
        org.junit.Assert.assertNotNull(instanceInfo42);
        org.junit.Assert.assertNotNull(instanceInfo43);
        org.junit.Assert.assertTrue("'" + actionType44 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType44.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet48);
// flaky:         org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(instanceInfo64);
    }

    @Test
    public void test01587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01587");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setCountryId(7002);
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder4.setSecurePort((int) (byte) 10);
        com.netflix.appinfo.InstanceInfo.PortType portType7 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder4.enablePort(portType7, false);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder9.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder11.setVIPAddressDeser("http://hi!:80/Status");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + portType7 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType7.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
    }

    @Test
    public void test01588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01588");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = instanceInfo11.getStatusPageUrl();
        java.lang.String str15 = instanceInfo11.getVersion();
        java.lang.String str16 = instanceInfo11.getAppGroupName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str14, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "unknown" + "'", str15, "unknown");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test01589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01589");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setSecureVIPAddress("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder23.setStatusPageUrlForDeser("inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder23.setHostName("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder29.setStatusPageUrl("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:10/STATUS", "INESSERVER2.WINDOWS.CIN.UFPE.BR");
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder29.setNamespace("/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
    }

    @Test
    public void test01590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01590");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        java.lang.String str13 = instanceInfo11.getSID();
        java.util.Set<java.lang.String> strSet14 = instanceInfo11.getHealthCheckUrls();
        java.util.Set<java.lang.String> strSet15 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str16 = instanceInfo11.getASGName();
        com.netflix.appinfo.InstanceInfo.Builder builder17 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 30 + "'", int12 == 30);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/healthcheck" + "'", str13, "/healthcheck");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/healthcheck" + "'", str16, "/healthcheck");
    }

    @Test
    public void test01591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01591");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder2.setHealthCheckUrlsForDeser("unknown", "172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder2.setAppName("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder2.setAppName("");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder2.setHealthCheckUrlsForDeser("eureka.", "http://default:80/Status");
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder21 = builder2.setHealthCheckUrls("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS", "inesserver2.windows.cin.ufpe.br", "http://inesserver2.windows.cin.ufpe.br:80/");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
    }

    @Test
    public void test01592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01592");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str2 = myDataCenterInstanceConfig1.getIpAddress();
        java.lang.String str3 = myDataCenterInstanceConfig1.getASGName();
        boolean boolean4 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        java.lang.String str5 = myDataCenterInstanceConfig1.getHealthCheckUrl();
        java.lang.String str6 = myDataCenterInstanceConfig1.getAppGroupName();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "172.20.26.3" + "'", str2, "172.20.26.3");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "unknown" + "'", str6, "unknown");
    }

    @Test
    public void test01593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01593");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str2 = myDataCenterInstanceConfig1.getIpAddress();
        java.lang.String str3 = myDataCenterInstanceConfig1.getASGName();
        boolean boolean4 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        int int5 = myDataCenterInstanceConfig1.getLeaseExpirationDurationInSeconds();
        int int6 = myDataCenterInstanceConfig1.getNonSecurePort();
        java.lang.String str7 = myDataCenterInstanceConfig1.getStatusPageUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str9 = myDataCenterInstanceConfig1.getIpAddress();
        int int10 = myDataCenterInstanceConfig1.getSecurePort();
        boolean boolean11 = myDataCenterInstanceConfig1.isInstanceEnabledOnit();
        java.lang.String str12 = myDataCenterInstanceConfig1.getHealthCheckUrl();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "172.20.26.3" + "'", str2, "172.20.26.3");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 90 + "'", int5 == 90);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 80 + "'", int6 == 80);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "172.20.26.3" + "'", str9, "172.20.26.3");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 443 + "'", int10 == 443);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test01594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01594");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        com.netflix.appinfo.InstanceInfo.PortType portType13 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean14 = instanceInfo11.isPortEnabled(portType13);
        com.netflix.appinfo.InstanceInfo.ActionType actionType15 = instanceInfo11.getActionType();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus16 = com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN;
        instanceInfo11.setStatusWithoutDirty(instanceStatus16);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertTrue("'" + portType13 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType13.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + actionType15 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType15.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + instanceStatus16 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus16.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
    }

    @Test
    public void test01595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01595");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setCountryId(7002);
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder0.setHealthCheckUrlsForDeser("UNKNOWN", "UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder7.setStatusPageUrlForDeser("http://hi!:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder7.setHealthCheckUrlsForDeser("na", "");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder7.setAppName("/healthcheck");
        com.netflix.appinfo.InstanceInfo instanceInfo15 = builder7.build();
        com.netflix.appinfo.InstanceInfo instanceInfo16 = new com.netflix.appinfo.InstanceInfo(instanceInfo15);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = instanceInfo16.getMetadata();
        int int18 = instanceInfo16.getSecurePort();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 7002 + "'", int18 == 7002);
    }

    @Test
    public void test01596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01596");
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig0 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager1 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig4.getDataCenterInfo();
        java.lang.String str7 = myDataCenterInstanceConfig4.getNamespace();
        boolean boolean8 = myDataCenterInstanceConfig4.isNonSecurePortEnabled();
        applicationInfoManager1.config = myDataCenterInstanceConfig4;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig10 = applicationInfoManager1.config;
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager1.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager1.instanceInfo;
        int int13 = instanceInfo12.getSecurePort();
        boolean boolean14 = instanceInfo12.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig0, instanceInfo12);
        java.lang.String str16 = instanceInfo12.getHostName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus18 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("na");
        instanceInfo12.setStatus(instanceStatus18);
        java.lang.String str20 = instanceInfo12.getAppName();
        org.junit.Assert.assertNotNull(applicationInfoManager1);
        org.junit.Assert.assertNotNull(instanceInfo2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 443 + "'", int13 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertTrue("'" + instanceStatus18 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus18.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UNKNOWN" + "'", str20, "UNKNOWN");
    }

    @Test
    public void test01597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01597");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        java.lang.String str13 = instanceInfo11.getSID();
        java.util.Set<java.lang.String> strSet14 = instanceInfo11.getHealthCheckUrls();
        java.util.Set<java.lang.String> strSet15 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str16 = instanceInfo11.getASGName();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = instanceInfo11.getMetadata();
        java.lang.String str18 = instanceInfo11.getId();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "na" + "'", str13, "na");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test01598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01598");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str3 = myDataCenterInstanceConfig1.getNamespace();
        java.lang.String str4 = myDataCenterInstanceConfig1.getNamespace();
        java.lang.String str5 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        java.lang.String str6 = myDataCenterInstanceConfig1.getASGName();
        int int7 = myDataCenterInstanceConfig1.getLeaseExpirationDurationInSeconds();
        java.lang.String str8 = myDataCenterInstanceConfig1.getNamespace();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo9 = myDataCenterInstanceConfig1.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder10 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder10.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder12.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo16 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder12.setLeaseInfo(leaseInfo16);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder12.setHealthCheckUrlsForDeser("unknown", "172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder20.setAppName("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo instanceInfo23 = builder22.build();
        java.lang.String str24 = instanceInfo23.getId();
        java.lang.String str25 = instanceInfo23.getAppName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager26 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo23);
        java.lang.String str27 = instanceInfo23.getStatusPageUrl();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/healthcheck" + "'", str5, "/healthcheck");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 90 + "'", int7 == 90);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(dataCenterInfo9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(instanceInfo23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "INESSERVER2.WINDOWS.CIN.UFPE.BR" + "'", str25, "INESSERVER2.WINDOWS.CIN.UFPE.BR");
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test01599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01599");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setSecureVIPAddress("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder23.setStatusPageUrlForDeser("inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder23.setHostName("hi!");
        com.netflix.appinfo.LeaseInfo leaseInfo30 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder29.setLeaseInfo(leaseInfo30);
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder29.setVIPAddress("http://hi!:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder35 = builder29.setPort(443);
        com.netflix.appinfo.InstanceInfo.Builder builder37 = builder29.setASGName("DEFAULT");
        com.netflix.appinfo.InstanceInfo.Builder builder39 = builder29.setAppName("http://hi!:35/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
    }

    @Test
    public void test01600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01600");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str3 = myDataCenterInstanceConfig1.getVirtualHostName();
        java.lang.String str4 = myDataCenterInstanceConfig1.getSecureHealthCheckUrl();
        java.lang.String str5 = myDataCenterInstanceConfig1.getHomePageUrlPath();
        java.lang.String str7 = myDataCenterInstanceConfig1.getHostName(false);
        java.lang.String str8 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        java.lang.String str9 = myDataCenterInstanceConfig1.getHomePageUrlPath();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str3, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/" + "'", str5, "/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str7, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/healthcheck" + "'", str8, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/" + "'", str9, "/");
    }

    @Test
    public void test01601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01601");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setCountryId(7002);
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder4.setHostName("na");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder6.setStatusPageUrlForDeser("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder10.setSecurePort((int) 'a');
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test01602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01602");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setNamespace("na");
        com.netflix.appinfo.InstanceInfo instanceInfo15 = builder6.build();
        boolean boolean16 = builder6.isInitialized();
        com.netflix.appinfo.InstanceInfo.Builder builder17 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder17.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder17.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder17.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = myDataCenterInstanceConfig24.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder23.setDataCenterInfo(dataCenterInfo25);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig27 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo28 = myDataCenterInstanceConfig27.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder23.setDataCenterInfo(dataCenterInfo28);
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder29.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder29.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder36 = builder29.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder29.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo39 = builder38.build();
        boolean boolean40 = instanceInfo39.isDirty();
        java.lang.String str41 = instanceInfo39.getHomePageUrl();
        com.netflix.appinfo.InstanceInfo.Builder builder42 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder44 = builder42.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder46 = builder42.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder48 = builder42.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder50 = builder48.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder52 = builder50.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder54 = builder50.setHomePageUrlForDeser("");
        com.netflix.appinfo.LeaseInfo leaseInfo55 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder56 = builder54.setLeaseInfo(leaseInfo55);
        com.netflix.appinfo.InstanceInfo.Builder builder58 = builder54.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder59 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder61 = builder59.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder63 = builder59.setCountryId(7002);
        com.netflix.appinfo.InstanceInfo.Builder builder65 = builder63.setSecurePort((int) (byte) 10);
        com.netflix.appinfo.InstanceInfo.PortType portType66 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder68 = builder63.enablePort(portType66, false);
        com.netflix.appinfo.InstanceInfo.Builder builder70 = builder58.enablePort(portType66, true);
        boolean boolean71 = instanceInfo39.isPortEnabled(portType66);
        com.netflix.appinfo.InstanceInfo.Builder builder73 = builder6.enablePort(portType66, true);
        com.netflix.appinfo.InstanceInfo.Builder builder75 = builder6.setAppName("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:10/STATUS");
        com.netflix.appinfo.InstanceInfo.Builder builder77 = builder6.setCountryId(32);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(dataCenterInfo28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(instanceInfo39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + portType66 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType66.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder77);
    }

    @Test
    public void test01603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01603");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder12.setSecureVIPAddressDeser("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder16.add("na", "/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder16.setCountryId((int) (short) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setAppGroupName("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus24 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setOverriddenStatus(instanceStatus24);
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder25.setASGName("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder25.setLastDirtyTimestamp(1636106014493L);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + instanceStatus24 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus24.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
    }

    @Test
    public void test01604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01604");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str4 = myDataCenterInstanceConfig1.getHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig1.getDataCenterInfo();
        boolean boolean6 = myDataCenterInstanceConfig1.isInstanceEnabledOnit();
        java.lang.String str7 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        java.lang.String str8 = myDataCenterInstanceConfig1.getSecureVirtualHostName();
        int int9 = myDataCenterInstanceConfig1.getSecurePort();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/healthcheck" + "'", str7, "/healthcheck");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 443 + "'", int9 == 443);
    }

    @Test
    public void test01605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01605");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "/Status", "default", "inesserver2.windows.cin.ufpe.br:80", "default", "default" };
        com.netflix.appinfo.InstanceInfo instanceInfo7 = null;
        java.lang.String str8 = com.netflix.appinfo.InstanceInfo.getZone(strArray6, instanceInfo7);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager9 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager9.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int13 = myDataCenterInstanceConfig12.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo14 = myDataCenterInstanceConfig12.getDataCenterInfo();
        java.lang.String str15 = myDataCenterInstanceConfig12.getNamespace();
        boolean boolean16 = myDataCenterInstanceConfig12.isNonSecurePortEnabled();
        applicationInfoManager9.config = myDataCenterInstanceConfig12;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig18 = applicationInfoManager9.config;
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager9.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager9.instanceInfo;
        int int21 = instanceInfo20.getSecurePort();
        boolean boolean22 = instanceInfo20.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo23 = new com.netflix.appinfo.InstanceInfo(instanceInfo20);
        long long24 = instanceInfo23.getLastUpdatedTimestamp();
        java.lang.Boolean boolean25 = instanceInfo23.isCoordinatingDiscoveryServer();
        java.lang.String str26 = instanceInfo23.getSecureVipAddress();
        java.lang.String str27 = null; // flaky: com.netflix.appinfo.InstanceInfo.getZone(strArray6, instanceInfo23);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager28 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager28.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig31 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int32 = myDataCenterInstanceConfig31.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo33 = myDataCenterInstanceConfig31.getDataCenterInfo();
        java.lang.String str34 = myDataCenterInstanceConfig31.getNamespace();
        boolean boolean35 = myDataCenterInstanceConfig31.isNonSecurePortEnabled();
        applicationInfoManager28.config = myDataCenterInstanceConfig31;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig37 = applicationInfoManager28.config;
        com.netflix.appinfo.InstanceInfo instanceInfo38 = applicationInfoManager28.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo39 = applicationInfoManager28.instanceInfo;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig40 = applicationInfoManager28.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager41 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo42 = applicationInfoManager41.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig44 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int45 = myDataCenterInstanceConfig44.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo46 = myDataCenterInstanceConfig44.getDataCenterInfo();
        java.lang.String str47 = myDataCenterInstanceConfig44.getNamespace();
        boolean boolean48 = myDataCenterInstanceConfig44.isNonSecurePortEnabled();
        applicationInfoManager41.config = myDataCenterInstanceConfig44;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig50 = applicationInfoManager41.config;
        com.netflix.appinfo.InstanceInfo instanceInfo51 = applicationInfoManager41.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo52 = applicationInfoManager41.instanceInfo;
        java.lang.Boolean boolean53 = instanceInfo52.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus54 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo52.setOverriddenStatus(instanceStatus54);
        applicationInfoManager28.instanceInfo = instanceInfo52;
        java.lang.String str57 = instanceInfo52.getHostName();
        instanceInfo52.setSID("");
        java.lang.String str60 = instanceInfo52.getHostName();
        java.lang.String str61 = null; // flaky: com.netflix.appinfo.InstanceInfo.getZone(strArray6, instanceInfo52);
        java.lang.String str62 = instanceInfo52.getHomePageUrl();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(applicationInfoManager9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 30 + "'", int13 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertNotNull(instanceInfo20);
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 443 + "'", int21 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1636106050686L + "'", long24 == 1636106050686L);
// flaky:         org.junit.Assert.assertEquals("'" + boolean25 + "' != '" + true + "'", boolean25, true);
// flaky:         org.junit.Assert.assertNull(str26);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(applicationInfoManager28);
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 30 + "'", int32 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig37);
        org.junit.Assert.assertNotNull(instanceInfo38);
        org.junit.Assert.assertNotNull(instanceInfo39);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig40);
        org.junit.Assert.assertNotNull(applicationInfoManager41);
        org.junit.Assert.assertNotNull(instanceInfo42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig50);
        org.junit.Assert.assertNotNull(instanceInfo51);
        org.junit.Assert.assertNotNull(instanceInfo52);
// flaky:         org.junit.Assert.assertEquals("'" + boolean53 + "' != '" + true + "'", boolean53, true);
        org.junit.Assert.assertTrue("'" + instanceStatus54 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus54.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
// flaky:         org.junit.Assert.assertEquals("'" + str57 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str57, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertEquals("'" + str60 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str60, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str62 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str62, "http://inesserver2.windows.cin.ufpe.br:80/");
    }

    @Test
    public void test01606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01606");
        com.netflix.appinfo.InstanceInfo instanceInfo0 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder1 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo0);
        com.netflix.appinfo.InstanceInfo.Builder builder3 = builder1.setNamespace("");
        com.netflix.appinfo.InstanceInfo instanceInfo4 = builder3.getRawInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo5 = builder3.getRawInstance();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager6 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo7 = applicationInfoManager6.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig9.getDataCenterInfo();
        java.lang.String str12 = myDataCenterInstanceConfig9.getNamespace();
        boolean boolean13 = myDataCenterInstanceConfig9.isNonSecurePortEnabled();
        applicationInfoManager6.config = myDataCenterInstanceConfig9;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig15 = applicationInfoManager6.config;
        com.netflix.appinfo.InstanceInfo instanceInfo16 = applicationInfoManager6.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo17 = applicationInfoManager6.instanceInfo;
        int int18 = instanceInfo17.getSecurePort();
        boolean boolean19 = instanceInfo17.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = new com.netflix.appinfo.InstanceInfo(instanceInfo17);
        java.lang.String str21 = instanceInfo20.getVersion();
        instanceInfo20.setLastUpdatedTimestamp();
        java.lang.String str23 = instanceInfo20.getAppName();
        java.lang.String str24 = instanceInfo20.getSID();
        java.lang.String str25 = instanceInfo20.getASGName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager26 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager26.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig29 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int30 = myDataCenterInstanceConfig29.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo31 = myDataCenterInstanceConfig29.getDataCenterInfo();
        java.lang.String str32 = myDataCenterInstanceConfig29.getNamespace();
        boolean boolean33 = myDataCenterInstanceConfig29.isNonSecurePortEnabled();
        applicationInfoManager26.config = myDataCenterInstanceConfig29;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig35 = applicationInfoManager26.config;
        com.netflix.appinfo.InstanceInfo instanceInfo36 = applicationInfoManager26.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo37 = applicationInfoManager26.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType38 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo37.setActionType(actionType38);
        java.lang.String str40 = instanceInfo37.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType41 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo37.setActionType(actionType41);
        instanceInfo20.setActionType(actionType41);
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder44 = builder3.setActionType(actionType41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(instanceInfo4);
        org.junit.Assert.assertNull(instanceInfo5);
        org.junit.Assert.assertNotNull(applicationInfoManager6);
        org.junit.Assert.assertNotNull(instanceInfo7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig15);
        org.junit.Assert.assertNotNull(instanceInfo16);
        org.junit.Assert.assertNotNull(instanceInfo17);
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 443 + "'", int18 == 443);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "unknown" + "'", str21, "unknown");
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UNKNOWN" + "'", str23, "UNKNOWN");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
// flaky:         org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(applicationInfoManager26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 30 + "'", int30 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig35);
        org.junit.Assert.assertNotNull(instanceInfo36);
        org.junit.Assert.assertNotNull(instanceInfo37);
        org.junit.Assert.assertTrue("'" + actionType38 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType38.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "UNKNOWN" + "'", str40, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + actionType41 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType41.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
    }

    @Test
    public void test01607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01607");
        com.netflix.appinfo.DataCenterInfo dataCenterInfo1 = null;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("", dataCenterInfo1);
        boolean boolean3 = myDataCenterInstanceConfig2.isNonSecurePortEnabled();
        boolean boolean4 = myDataCenterInstanceConfig2.getSecurePortEnabled();
        java.lang.String str5 = myDataCenterInstanceConfig2.getHealthCheckUrlPath();
        boolean boolean6 = myDataCenterInstanceConfig2.isNonSecurePortEnabled();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/healthcheck" + "'", str5, "/healthcheck");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test01608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01608");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder18.add("na", "/");
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder18.add("/Status", "");
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder27.setASGName("http://default:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder29.setSecurePort(443);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
// flaky:         org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
    }

    @Test
    public void test01609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01609");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder2.setSID("inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager5 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo6 = applicationInfoManager5.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int9 = myDataCenterInstanceConfig8.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo10 = myDataCenterInstanceConfig8.getDataCenterInfo();
        java.lang.String str11 = myDataCenterInstanceConfig8.getNamespace();
        boolean boolean12 = myDataCenterInstanceConfig8.isNonSecurePortEnabled();
        applicationInfoManager5.config = myDataCenterInstanceConfig8;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig14 = applicationInfoManager5.config;
        com.netflix.appinfo.InstanceInfo instanceInfo15 = applicationInfoManager5.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig18 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int19 = myDataCenterInstanceConfig18.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo20 = myDataCenterInstanceConfig18.getDataCenterInfo();
        java.lang.String str22 = myDataCenterInstanceConfig18.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo23 = myDataCenterInstanceConfig18.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo23);
        java.lang.String str25 = myDataCenterInstanceConfig24.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = myDataCenterInstanceConfig24.getMetadataMap();
        applicationInfoManager5.registerAppMetadata(strMap26);
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager5.instanceInfo;
        java.lang.String str29 = instanceInfo28.getStatusPageUrl();
        instanceInfo28.setSID("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager32 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo33 = applicationInfoManager32.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig35 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int36 = myDataCenterInstanceConfig35.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo37 = myDataCenterInstanceConfig35.getDataCenterInfo();
        java.lang.String str38 = myDataCenterInstanceConfig35.getNamespace();
        boolean boolean39 = myDataCenterInstanceConfig35.isNonSecurePortEnabled();
        applicationInfoManager32.config = myDataCenterInstanceConfig35;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig41 = applicationInfoManager32.config;
        com.netflix.appinfo.InstanceInfo instanceInfo42 = applicationInfoManager32.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo43 = applicationInfoManager32.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType44 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo43.setActionType(actionType44);
        java.lang.String str46 = instanceInfo43.getVersion();
        java.lang.String str47 = instanceInfo43.getIPAddr();
        instanceInfo43.setLastUpdatedTimestamp();
        instanceInfo43.setSID("http://hi!:80/Status");
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus51 = instanceInfo43.getOverriddenStatus();
        instanceInfo28.setStatusWithoutDirty(instanceStatus51);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus53 = instanceInfo28.getOverriddenStatus();
        com.netflix.appinfo.InstanceInfo.Builder builder54 = builder4.setStatus(instanceStatus53);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(applicationInfoManager5);
        org.junit.Assert.assertNotNull(instanceInfo6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 30 + "'", int9 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 30 + "'", int19 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str22, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(instanceInfo28);
// flaky:         org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(applicationInfoManager32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 30 + "'", int36 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig41);
        org.junit.Assert.assertNotNull(instanceInfo42);
        org.junit.Assert.assertNotNull(instanceInfo43);
        org.junit.Assert.assertTrue("'" + actionType44 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType44.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "unknown" + "'", str46, "unknown");
        org.junit.Assert.assertNull(str47);
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus51 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus51.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus53 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus53.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder54);
    }

    @Test
    public void test01610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01610");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setSecurePort(30);
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder20.setAppGroupName("");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig27 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int28 = myDataCenterInstanceConfig27.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig27.getDataCenterInfo();
        java.lang.String str31 = myDataCenterInstanceConfig27.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo32 = myDataCenterInstanceConfig27.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig33 = new com.netflix.appinfo.MyDataCenterInstanceConfig("UNKNOWN", dataCenterInfo32);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig34 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo32);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig35 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo32);
        java.lang.String str36 = myDataCenterInstanceConfig35.getHomePageUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo37 = myDataCenterInstanceConfig35.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder22.setDataCenterInfo(dataCenterInfo37);
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder38.setSecureVIPAddressDeser("eureka.");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig42 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int43 = myDataCenterInstanceConfig42.getLeaseRenewalIntervalInSeconds();
        java.lang.String str44 = myDataCenterInstanceConfig42.getNamespace();
        java.lang.String str45 = myDataCenterInstanceConfig42.getNamespace();
        java.lang.String str46 = myDataCenterInstanceConfig42.getHealthCheckUrlPath();
        java.lang.String str47 = myDataCenterInstanceConfig42.getASGName();
        int int48 = myDataCenterInstanceConfig42.getLeaseExpirationDurationInSeconds();
        java.lang.String str49 = myDataCenterInstanceConfig42.getNamespace();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo50 = myDataCenterInstanceConfig42.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder51 = builder40.setDataCenterInfo(dataCenterInfo50);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
// flaky:         org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 30 + "'", int28 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str31, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(dataCenterInfo37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 30 + "'", int43 == 30);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/healthcheck" + "'", str46, "/healthcheck");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 90 + "'", int48 == 90);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(dataCenterInfo50);
        org.junit.Assert.assertNotNull(builder51);
    }

    @Test
    public void test01611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01611");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        boolean boolean13 = instanceInfo11.isDirty();
        java.lang.String str14 = instanceInfo11.getHostName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType15 = instanceInfo11.getActionType();
        boolean boolean16 = instanceInfo11.isDirty();
        com.netflix.appinfo.InstanceInfo.Builder builder17 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder17.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager20 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager20.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig23 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int24 = myDataCenterInstanceConfig23.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = myDataCenterInstanceConfig23.getDataCenterInfo();
        java.lang.String str26 = myDataCenterInstanceConfig23.getNamespace();
        boolean boolean27 = myDataCenterInstanceConfig23.isNonSecurePortEnabled();
        applicationInfoManager20.config = myDataCenterInstanceConfig23;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig29 = applicationInfoManager20.config;
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager20.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager20.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType32 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo31.setActionType(actionType32);
        com.netflix.appinfo.LeaseInfo leaseInfo34 = null;
        instanceInfo31.setLeaseInfo(leaseInfo34);
        java.util.Set<java.lang.String> strSet36 = instanceInfo31.getHealthCheckUrls();
        java.lang.String str37 = instanceInfo31.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder38 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo31);
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder38.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder42 = builder38.setHomePageUrlForDeser("");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager43 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo44 = applicationInfoManager43.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig46 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int47 = myDataCenterInstanceConfig46.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo48 = myDataCenterInstanceConfig46.getDataCenterInfo();
        java.lang.String str49 = myDataCenterInstanceConfig46.getNamespace();
        boolean boolean50 = myDataCenterInstanceConfig46.isNonSecurePortEnabled();
        applicationInfoManager43.config = myDataCenterInstanceConfig46;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig52 = applicationInfoManager43.config;
        com.netflix.appinfo.InstanceInfo instanceInfo53 = applicationInfoManager43.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo54 = applicationInfoManager43.instanceInfo;
        int int55 = instanceInfo54.getSecurePort();
        boolean boolean56 = instanceInfo54.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager57 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo58 = applicationInfoManager57.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig60 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int61 = myDataCenterInstanceConfig60.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo62 = myDataCenterInstanceConfig60.getDataCenterInfo();
        java.lang.String str63 = myDataCenterInstanceConfig60.getNamespace();
        boolean boolean64 = myDataCenterInstanceConfig60.isNonSecurePortEnabled();
        applicationInfoManager57.config = myDataCenterInstanceConfig60;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig66 = applicationInfoManager57.config;
        com.netflix.appinfo.InstanceInfo instanceInfo67 = applicationInfoManager57.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo68 = applicationInfoManager57.instanceInfo;
        int int69 = instanceInfo68.getSecurePort();
        com.netflix.appinfo.InstanceInfo.PortType portType70 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean71 = instanceInfo68.isPortEnabled(portType70);
        boolean boolean72 = instanceInfo54.isPortEnabled(portType70);
        com.netflix.appinfo.InstanceInfo.Builder builder74 = builder38.enablePort(portType70, true);
        com.netflix.appinfo.InstanceInfo.Builder builder76 = builder19.enablePort(portType70, false);
        boolean boolean77 = instanceInfo11.isPortEnabled(portType70);
        java.lang.String str78 = instanceInfo11.getAppName();
        int int79 = instanceInfo11.getCountryId();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 30 + "'", int12 == 30);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
// flaky:         org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + actionType15 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType15.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(applicationInfoManager20);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 30 + "'", int24 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig29);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertTrue("'" + actionType32 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType32.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet36);
// flaky:         org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(applicationInfoManager43);
        org.junit.Assert.assertNotNull(instanceInfo44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 30 + "'", int47 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig52);
        org.junit.Assert.assertNotNull(instanceInfo53);
        org.junit.Assert.assertNotNull(instanceInfo54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(applicationInfoManager57);
        org.junit.Assert.assertNotNull(instanceInfo58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig66);
        org.junit.Assert.assertNotNull(instanceInfo67);
        org.junit.Assert.assertNotNull(instanceInfo68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 30 + "'", int69 == 30);
        org.junit.Assert.assertTrue("'" + portType70 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType70.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str78 + "' != '" + "DEFAULT" + "'", str78, "DEFAULT");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
    }

    @Test
    public void test01612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01612");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder8.setHomePageUrlForDeser("");
        com.netflix.appinfo.LeaseInfo leaseInfo13 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setLeaseInfo(leaseInfo13);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo16 = applicationInfoManager15.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig18 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int19 = myDataCenterInstanceConfig18.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo20 = myDataCenterInstanceConfig18.getDataCenterInfo();
        java.lang.String str21 = myDataCenterInstanceConfig18.getNamespace();
        boolean boolean22 = myDataCenterInstanceConfig18.isNonSecurePortEnabled();
        applicationInfoManager15.config = myDataCenterInstanceConfig18;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig24 = applicationInfoManager15.config;
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager15.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo26 = applicationInfoManager15.getInfo();
        java.lang.String[] strArray27 = new java.lang.String[] {};
        com.netflix.appinfo.InstanceInfo instanceInfo28 = null;
        java.lang.String str29 = com.netflix.appinfo.InstanceInfo.getZone(strArray27, instanceInfo28);
        com.netflix.appinfo.InstanceInfo instanceInfo30 = null;
        java.lang.String str31 = com.netflix.appinfo.InstanceInfo.getZone(strArray27, instanceInfo30);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager32 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo33 = applicationInfoManager32.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig35 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int36 = myDataCenterInstanceConfig35.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo37 = myDataCenterInstanceConfig35.getDataCenterInfo();
        java.lang.String str38 = myDataCenterInstanceConfig35.getNamespace();
        boolean boolean39 = myDataCenterInstanceConfig35.isNonSecurePortEnabled();
        applicationInfoManager32.config = myDataCenterInstanceConfig35;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig41 = applicationInfoManager32.config;
        com.netflix.appinfo.InstanceInfo instanceInfo42 = applicationInfoManager32.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo43 = applicationInfoManager32.instanceInfo;
        int int44 = instanceInfo43.getSecurePort();
        boolean boolean45 = instanceInfo43.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo46 = new com.netflix.appinfo.InstanceInfo(instanceInfo43);
        com.netflix.appinfo.InstanceInfo instanceInfo47 = new com.netflix.appinfo.InstanceInfo(instanceInfo43);
        java.lang.String str48 = instanceInfo43.getAppGroupName();
        int int49 = instanceInfo43.getCountryId();
        java.lang.String str50 = com.netflix.appinfo.InstanceInfo.getZone(strArray27, instanceInfo43);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus51 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo43.setStatus(instanceStatus51);
        applicationInfoManager15.setInstanceStatus(instanceStatus51);
        com.netflix.appinfo.InstanceInfo.Builder builder54 = builder12.setOverriddenStatus(instanceStatus51);
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder58 = builder54.setHealthCheckUrls("INESSERVER2.WINDOWS.CIN.UFPE.BR", "/", "http://inesserver2.windows.cin.ufpe.br:10/Status");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(applicationInfoManager15);
        org.junit.Assert.assertNotNull(instanceInfo16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 30 + "'", int19 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "default" + "'", str29, "default");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "default" + "'", str31, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 30 + "'", int36 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig41);
        org.junit.Assert.assertNotNull(instanceInfo42);
        org.junit.Assert.assertNotNull(instanceInfo43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 30 + "'", int44 == 30);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "default" + "'", str50, "default");
        org.junit.Assert.assertTrue("'" + instanceStatus51 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus51.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(builder54);
    }

    @Test
    public void test01613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01613");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("http://inesserver2.windows.cin.ufpe.br:80/", "default");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager6 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo7 = applicationInfoManager6.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig9.getDataCenterInfo();
        java.lang.String str12 = myDataCenterInstanceConfig9.getNamespace();
        boolean boolean13 = myDataCenterInstanceConfig9.isNonSecurePortEnabled();
        applicationInfoManager6.config = myDataCenterInstanceConfig9;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig15 = applicationInfoManager6.config;
        com.netflix.appinfo.InstanceInfo instanceInfo16 = applicationInfoManager6.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo17 = applicationInfoManager6.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType18 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo17.setActionType(actionType18);
        com.netflix.appinfo.LeaseInfo leaseInfo20 = null;
        instanceInfo17.setLeaseInfo(leaseInfo20);
        java.lang.String str22 = instanceInfo17.getSID();
        com.netflix.appinfo.InstanceInfo instanceInfo23 = new com.netflix.appinfo.InstanceInfo(instanceInfo17);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager24 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager24.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig27 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int28 = myDataCenterInstanceConfig27.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig27.getDataCenterInfo();
        java.lang.String str30 = myDataCenterInstanceConfig27.getNamespace();
        boolean boolean31 = myDataCenterInstanceConfig27.isNonSecurePortEnabled();
        applicationInfoManager24.config = myDataCenterInstanceConfig27;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig33 = applicationInfoManager24.config;
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager24.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager24.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType36 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo35.setActionType(actionType36);
        com.netflix.appinfo.LeaseInfo leaseInfo38 = null;
        instanceInfo35.setLeaseInfo(leaseInfo38);
        java.util.Set<java.lang.String> strSet40 = instanceInfo35.getHealthCheckUrls();
        java.lang.String str41 = instanceInfo35.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder42 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo35);
        com.netflix.appinfo.InstanceInfo.Builder builder45 = builder42.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder47 = builder42.setVIPAddressDeser("hi!");
        com.netflix.appinfo.LeaseInfo leaseInfo48 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder49 = builder42.setLeaseInfo(leaseInfo48);
        com.netflix.appinfo.InstanceInfo.PortType portType50 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder52 = builder42.enablePort(portType50, false);
        boolean boolean53 = instanceInfo17.isPortEnabled(portType50);
        com.netflix.appinfo.InstanceInfo.Builder builder55 = builder2.enablePort(portType50, false);
        com.netflix.appinfo.InstanceInfo.Builder builder57 = builder2.setAppName("inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.InstanceInfo.Builder builder60 = builder2.setHealthCheckUrlsForDeser("inesserver2.windows.cin.ufpe.br", "http://hi!:80/Status");
        com.netflix.appinfo.DataCenterInfo dataCenterInfo61 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder62 = builder60.setDataCenterInfo(dataCenterInfo61);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(applicationInfoManager6);
        org.junit.Assert.assertNotNull(instanceInfo7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig15);
        org.junit.Assert.assertNotNull(instanceInfo16);
        org.junit.Assert.assertNotNull(instanceInfo17);
        org.junit.Assert.assertTrue("'" + actionType18 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType18.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "http://hi!:80/Status" + "'", str22, "http://hi!:80/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 30 + "'", int28 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertTrue("'" + actionType36 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType36.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet40);
// flaky:         org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + portType50 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType50.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder62);
    }

    @Test
    public void test01614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01614");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("unknown");
        boolean boolean2 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        boolean boolean3 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        java.lang.String str4 = myDataCenterInstanceConfig1.getHealthCheckUrl();
        boolean boolean5 = myDataCenterInstanceConfig1.isInstanceEnabledOnit();
        java.lang.String str6 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "/Status" + "'", str6, "/Status");
    }

    @Test
    public void test01615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01615");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus24 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder21.setStatus(instanceStatus24);
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder21.setHealthCheckUrls("172.20.26.3", "", "http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager30 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager30.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig33 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int34 = myDataCenterInstanceConfig33.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo35 = myDataCenterInstanceConfig33.getDataCenterInfo();
        java.lang.String str36 = myDataCenterInstanceConfig33.getNamespace();
        boolean boolean37 = myDataCenterInstanceConfig33.isNonSecurePortEnabled();
        applicationInfoManager30.config = myDataCenterInstanceConfig33;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig39 = applicationInfoManager30.config;
        com.netflix.appinfo.InstanceInfo instanceInfo40 = applicationInfoManager30.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo41 = applicationInfoManager30.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType42 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo41.setActionType(actionType42);
        java.lang.String str44 = instanceInfo41.getAppGroupName();
        java.lang.String str45 = instanceInfo41.getAppName();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = instanceInfo41.getMetadata();
        com.netflix.appinfo.InstanceInfo.Builder builder47 = builder29.setMetadata(strMap46);
        com.netflix.appinfo.InstanceInfo.Builder builder49 = builder47.setSecurePort((int) (byte) 1);
        com.netflix.appinfo.InstanceInfo.Builder builder51 = builder47.setPort((int) (short) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder53 = builder51.setHomePageUrlForDeser("INESSERVER2.WINDOWS.CIN.UFPE.BR");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + instanceStatus24 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus24.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(applicationInfoManager30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig39);
        org.junit.Assert.assertNotNull(instanceInfo40);
        org.junit.Assert.assertNotNull(instanceInfo41);
        org.junit.Assert.assertTrue("'" + actionType42 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType42.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "UNKNOWN" + "'", str44, "UNKNOWN");
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "UNKNOWN" + "'", str45, "UNKNOWN");
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
    }

    @Test
    public void test01616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01616");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager1 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig4.getDataCenterInfo();
        java.lang.String str7 = myDataCenterInstanceConfig4.getNamespace();
        boolean boolean8 = myDataCenterInstanceConfig4.isNonSecurePortEnabled();
        applicationInfoManager1.config = myDataCenterInstanceConfig4;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig10 = applicationInfoManager1.config;
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager1.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType13 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo12.setActionType(actionType13);
        java.lang.String str15 = instanceInfo12.getVersion();
        java.lang.String str16 = instanceInfo12.getIPAddr();
        instanceInfo12.setLastUpdatedTimestamp();
        java.lang.String str18 = instanceInfo12.getVersion();
        boolean boolean19 = instanceInfo12.isDirty();
        instanceInfo12.setLastDirtyTimestamp((java.lang.Long) 1636105963791L);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = instanceInfo12.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig23 = new com.netflix.appinfo.MyDataCenterInstanceConfig("http://hi!:80/Status", dataCenterInfo22);
        java.lang.String str24 = myDataCenterInstanceConfig23.getVirtualHostName();
        org.junit.Assert.assertNotNull(applicationInfoManager1);
        org.junit.Assert.assertNotNull(instanceInfo2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertTrue("'" + actionType13 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType13.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "unknown" + "'", str15, "unknown");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "172.20.26.3" + "'", str16, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "unknown" + "'", str18, "unknown");
// flaky:         org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str24, "inesserver2.windows.cin.ufpe.br:80");
    }

    @Test
    public void test01617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01617");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        java.lang.String str5 = myDataCenterInstanceConfig3.getVirtualHostName();
        java.lang.String str6 = myDataCenterInstanceConfig3.getASGName();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager10 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager10.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig13 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int14 = myDataCenterInstanceConfig13.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo15 = myDataCenterInstanceConfig13.getDataCenterInfo();
        java.lang.String str16 = myDataCenterInstanceConfig13.getNamespace();
        boolean boolean17 = myDataCenterInstanceConfig13.isNonSecurePortEnabled();
        applicationInfoManager10.config = myDataCenterInstanceConfig13;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig19 = applicationInfoManager10.config;
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager10.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager10.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType22 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo21.setActionType(actionType22);
        com.netflix.appinfo.LeaseInfo leaseInfo24 = null;
        instanceInfo21.setLeaseInfo(leaseInfo24);
        java.util.Set<java.lang.String> strSet26 = instanceInfo21.getHealthCheckUrls();
        java.lang.String str27 = instanceInfo21.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder28 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo21);
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder28.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder28.setHealthCheckUrlsForDeser("", "hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder36 = builder28.setStatusPageUrl("default", "");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager37 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo38 = applicationInfoManager37.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig40 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int41 = myDataCenterInstanceConfig40.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo42 = myDataCenterInstanceConfig40.getDataCenterInfo();
        java.lang.String str43 = myDataCenterInstanceConfig40.getNamespace();
        boolean boolean44 = myDataCenterInstanceConfig40.isNonSecurePortEnabled();
        applicationInfoManager37.config = myDataCenterInstanceConfig40;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig46 = applicationInfoManager37.config;
        com.netflix.appinfo.InstanceInfo instanceInfo47 = applicationInfoManager37.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo48 = applicationInfoManager37.instanceInfo;
        int int49 = instanceInfo48.getSecurePort();
        com.netflix.appinfo.InstanceInfo.PortType portType50 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean51 = instanceInfo48.isPortEnabled(portType50);
        com.netflix.appinfo.InstanceInfo.Builder builder53 = builder28.enablePort(portType50, true);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig55 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int56 = myDataCenterInstanceConfig55.getLeaseRenewalIntervalInSeconds();
        boolean boolean57 = myDataCenterInstanceConfig55.isNonSecurePortEnabled();
        int int58 = myDataCenterInstanceConfig55.getLeaseRenewalIntervalInSeconds();
        int int59 = myDataCenterInstanceConfig55.getLeaseRenewalIntervalInSeconds();
        java.lang.String str60 = myDataCenterInstanceConfig55.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap61 = myDataCenterInstanceConfig55.getMetadataMap();
        com.netflix.appinfo.InstanceInfo.Builder builder62 = builder28.setMetadata(strMap61);
        applicationInfoManager0.registerAppMetadata(strMap61);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager64 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig66 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int67 = myDataCenterInstanceConfig66.getLeaseRenewalIntervalInSeconds();
        int int68 = myDataCenterInstanceConfig66.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager64.config = myDataCenterInstanceConfig66;
        java.lang.String str70 = myDataCenterInstanceConfig66.getIpAddress();
        java.lang.String str71 = myDataCenterInstanceConfig66.getHealthCheckUrl();
        java.lang.String str72 = myDataCenterInstanceConfig66.getStatusPageUrl();
        java.lang.String str73 = myDataCenterInstanceConfig66.getIpAddress();
        int int74 = myDataCenterInstanceConfig66.getSecurePort();
        java.lang.String str75 = myDataCenterInstanceConfig66.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap76 = myDataCenterInstanceConfig66.getMetadataMap();
        applicationInfoManager0.registerAppMetadata(strMap76);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str5, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(applicationInfoManager10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 30 + "'", int14 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig19);
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertTrue("'" + actionType22 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType22.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet26);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str27, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(applicationInfoManager37);
        org.junit.Assert.assertNotNull(instanceInfo38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 30 + "'", int41 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig46);
        org.junit.Assert.assertNotNull(instanceInfo47);
        org.junit.Assert.assertNotNull(instanceInfo48);
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 443 + "'", int49 == 443);
        org.junit.Assert.assertTrue("'" + portType50 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType50.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
// flaky:         org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 30 + "'", int56 == 30);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 30 + "'", int58 == 30);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 30 + "'", int59 == 30);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(applicationInfoManager64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 30 + "'", int67 == 30);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 30 + "'", int68 == 30);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "172.20.26.3" + "'", str70, "172.20.26.3");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "172.20.26.3" + "'", str73, "172.20.26.3");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 443 + "'", int74 == 443);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(strMap76);
    }

    @Test
    public void test01618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01618");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        java.lang.String str6 = myDataCenterInstanceConfig2.getIpAddress();
        java.lang.String str7 = myDataCenterInstanceConfig2.getHealthCheckUrl();
        int int8 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int9 = myDataCenterInstanceConfig2.getSecurePort();
        java.lang.String str10 = myDataCenterInstanceConfig2.getSecureHealthCheckUrl();
        int int11 = myDataCenterInstanceConfig2.getNonSecurePort();
        java.lang.String str12 = myDataCenterInstanceConfig2.getVirtualHostName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "172.20.26.3" + "'", str6, "172.20.26.3");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 443 + "'", int9 == 443);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 80 + "'", int11 == 80);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str12, "inesserver2.windows.cin.ufpe.br:80");
    }

    @Test
    public void test01619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01619");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        java.lang.String str6 = myDataCenterInstanceConfig2.getIpAddress();
        java.lang.String str7 = myDataCenterInstanceConfig2.getHealthCheckUrl();
        java.lang.String str8 = myDataCenterInstanceConfig2.getStatusPageUrl();
        java.lang.String str9 = myDataCenterInstanceConfig2.getIpAddress();
        int int10 = myDataCenterInstanceConfig2.getSecurePort();
        java.lang.String str11 = myDataCenterInstanceConfig2.getHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = myDataCenterInstanceConfig2.getMetadataMap();
        int int13 = myDataCenterInstanceConfig2.getLeaseExpirationDurationInSeconds();
        java.lang.String str14 = myDataCenterInstanceConfig2.getStatusPageUrl();
        int int15 = myDataCenterInstanceConfig2.getLeaseExpirationDurationInSeconds();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "172.20.26.3" + "'", str6, "172.20.26.3");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "172.20.26.3" + "'", str9, "172.20.26.3");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 443 + "'", int10 == 443);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 90 + "'", int13 == 90);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 90 + "'", int15 == 90);
    }

    @Test
    public void test01620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01620");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setNamespace("na");
        com.netflix.appinfo.InstanceInfo instanceInfo15 = builder6.build();
        int int16 = instanceInfo15.getSecurePort();
        instanceInfo15.setSID("http://inesserver2.windows.cin.ufpe.br:80/Status");
        int int19 = instanceInfo15.getPort();
        java.lang.String str20 = instanceInfo15.getSecureVipAddress();
        int int21 = instanceInfo15.getSecurePort();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig25 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int26 = myDataCenterInstanceConfig25.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo27 = myDataCenterInstanceConfig25.getDataCenterInfo();
        java.lang.String str29 = myDataCenterInstanceConfig25.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo30 = myDataCenterInstanceConfig25.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig31 = new com.netflix.appinfo.MyDataCenterInstanceConfig("UNKNOWN", dataCenterInfo30);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig32 = new com.netflix.appinfo.MyDataCenterInstanceConfig("172.20.26.3", dataCenterInfo30);
        int int33 = myDataCenterInstanceConfig32.getLeaseExpirationDurationInSeconds();
        boolean boolean34 = instanceInfo15.equals((java.lang.Object) int33);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 7002 + "'", int16 == 7002);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 7001 + "'", int19 == 7001);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "/healthcheck" + "'", str20, "/healthcheck");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 7002 + "'", int21 == 7002);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 30 + "'", int26 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str29, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 90 + "'", int33 == 90);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test01621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01621");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        int int13 = instanceInfo11.getPort();
        int int14 = instanceInfo11.getCountryId();
        boolean boolean15 = instanceInfo11.isDirty();
        int int16 = instanceInfo11.getPort();
        java.lang.String str17 = instanceInfo11.getASGName();
        java.lang.String str18 = instanceInfo11.getHomePageUrl();
        com.netflix.appinfo.InstanceInfo.Builder builder19 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 7002 + "'", int14 == 7002);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
// flaky:         org.junit.Assert.assertNull(str17);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test01622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01622");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder18.setHealthCheckUrlsForDeser("", "hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder18.setStatusPageUrl("default", "");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager27 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager27.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig30 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int31 = myDataCenterInstanceConfig30.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo32 = myDataCenterInstanceConfig30.getDataCenterInfo();
        java.lang.String str33 = myDataCenterInstanceConfig30.getNamespace();
        boolean boolean34 = myDataCenterInstanceConfig30.isNonSecurePortEnabled();
        applicationInfoManager27.config = myDataCenterInstanceConfig30;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig36 = applicationInfoManager27.config;
        com.netflix.appinfo.InstanceInfo instanceInfo37 = applicationInfoManager27.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo38 = applicationInfoManager27.instanceInfo;
        int int39 = instanceInfo38.getSecurePort();
        com.netflix.appinfo.InstanceInfo.PortType portType40 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean41 = instanceInfo38.isPortEnabled(portType40);
        com.netflix.appinfo.InstanceInfo.Builder builder43 = builder18.enablePort(portType40, true);
        com.netflix.appinfo.InstanceInfo.Builder builder46 = builder43.setHealthCheckUrlsForDeser("http://inesserver2.windows.cin.ufpe.br:80/Status", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder48 = builder46.setSID("UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder50 = builder48.setSecurePort(30);
        com.netflix.appinfo.InstanceInfo.Builder builder52 = builder48.setASGName("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:10/STATUS");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(applicationInfoManager27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 30 + "'", int31 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig36);
        org.junit.Assert.assertNotNull(instanceInfo37);
        org.junit.Assert.assertNotNull(instanceInfo38);
// flaky:         org.junit.Assert.assertTrue("'" + int39 + "' != '" + 443 + "'", int39 == 443);
        org.junit.Assert.assertTrue("'" + portType40 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType40.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
// flaky:         org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
    }

    @Test
    public void test01623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01623");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setNamespace("na");
        com.netflix.appinfo.InstanceInfo instanceInfo15 = builder6.build();
        int int16 = instanceInfo15.getSecurePort();
        instanceInfo15.setSID("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo15);
        java.lang.String str20 = instanceInfo15.getHomePageUrl();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager21 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo22 = applicationInfoManager21.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int25 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig24.getDataCenterInfo();
        java.lang.String str27 = myDataCenterInstanceConfig24.getNamespace();
        boolean boolean28 = myDataCenterInstanceConfig24.isNonSecurePortEnabled();
        applicationInfoManager21.config = myDataCenterInstanceConfig24;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig30 = applicationInfoManager21.config;
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager21.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager21.instanceInfo;
        int int33 = instanceInfo32.getSecurePort();
        boolean boolean34 = instanceInfo32.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = new com.netflix.appinfo.InstanceInfo(instanceInfo32);
        com.netflix.appinfo.InstanceInfo instanceInfo36 = new com.netflix.appinfo.InstanceInfo(instanceInfo32);
        com.netflix.appinfo.InstanceInfo.ActionType actionType37 = instanceInfo32.getActionType();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus39 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("na");
        instanceInfo32.setStatusWithoutDirty(instanceStatus39);
        instanceInfo15.setOverriddenStatus(instanceStatus39);
        java.lang.String str42 = instanceInfo15.getVersion();
        java.lang.String str43 = instanceInfo15.getVersion();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 7002 + "'", int16 == 7002);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(applicationInfoManager21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 30 + "'", int25 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 30 + "'", int33 == 30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + actionType37 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType37.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + instanceStatus39 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus39.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "unknown" + "'", str42, "unknown");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "unknown" + "'", str43, "unknown");
    }

    @Test
    public void test01624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01624");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        int int6 = myDataCenterInstanceConfig3.getLeaseExpirationDurationInSeconds();
        java.lang.String str7 = myDataCenterInstanceConfig3.getHomePageUrlPath();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        applicationInfoManager0.config = myDataCenterInstanceConfig10;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig13 = applicationInfoManager0.config;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig15 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int16 = myDataCenterInstanceConfig15.getLeaseRenewalIntervalInSeconds();
        boolean boolean17 = myDataCenterInstanceConfig15.isNonSecurePortEnabled();
        int int18 = myDataCenterInstanceConfig15.getSecurePort();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig15.getDataCenterInfo();
        applicationInfoManager0.config = myDataCenterInstanceConfig15;
        applicationInfoManager0.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig23 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int24 = myDataCenterInstanceConfig23.getLeaseRenewalIntervalInSeconds();
        boolean boolean25 = myDataCenterInstanceConfig23.isNonSecurePortEnabled();
        int int26 = myDataCenterInstanceConfig23.getLeaseRenewalIntervalInSeconds();
        int int27 = myDataCenterInstanceConfig23.getLeaseRenewalIntervalInSeconds();
        java.lang.String str28 = myDataCenterInstanceConfig23.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = myDataCenterInstanceConfig23.getMetadataMap();
        applicationInfoManager0.registerAppMetadata(strMap29);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 90 + "'", int6 == 90);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/" + "'", str7, "/");
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 30 + "'", int16 == 30);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 443 + "'", int18 == 443);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 30 + "'", int24 == 30);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 30 + "'", int26 == 30);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 30 + "'", int27 == 30);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strMap29);
    }

    @Test
    public void test01625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01625");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setIPAddr("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder0.setSecureVIPAddressDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setSecureVIPAddressDeser("unknown");
        boolean boolean11 = builder10.isInitialized();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test01626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01626");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager18 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager18.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int22 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo23 = myDataCenterInstanceConfig21.getDataCenterInfo();
        java.lang.String str24 = myDataCenterInstanceConfig21.getNamespace();
        boolean boolean25 = myDataCenterInstanceConfig21.isNonSecurePortEnabled();
        applicationInfoManager18.config = myDataCenterInstanceConfig21;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig27 = applicationInfoManager18.config;
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager18.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager18.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType30 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo29.setActionType(actionType30);
        instanceInfo11.setActionType(actionType30);
        com.netflix.appinfo.InstanceInfo.PortType portType33 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        boolean boolean34 = instanceInfo11.isPortEnabled(portType33);
        java.lang.String str35 = instanceInfo11.getId();
        java.lang.String str36 = instanceInfo11.getHomePageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = instanceInfo11.getMetadata();
        java.lang.String str38 = instanceInfo11.getId();
        int int39 = instanceInfo11.getCountryId();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 30 + "'", int22 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertTrue("'" + actionType30 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType30.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + portType33 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType33.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
// flaky:         org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str35, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str36, "http://inesserver2.windows.cin.ufpe.br:80/");
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str38, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
    }

    @Test
    public void test01627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01627");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str5 = myDataCenterInstanceConfig4.getIpAddress();
        java.lang.String str6 = myDataCenterInstanceConfig4.getASGName();
        boolean boolean7 = myDataCenterInstanceConfig4.getSecurePortEnabled();
        java.lang.String str8 = myDataCenterInstanceConfig4.getStatusPageUrl();
        applicationInfoManager0.config = myDataCenterInstanceConfig4;
        java.lang.String str10 = myDataCenterInstanceConfig4.getSecureVirtualHostName();
        java.lang.String str11 = myDataCenterInstanceConfig4.getASGName();
        java.lang.String str12 = myDataCenterInstanceConfig4.getVirtualHostName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNull(instanceInfo1);
// flaky:         org.junit.Assert.assertNull(instanceInfo2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "172.20.26.3" + "'", str5, "172.20.26.3");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str12, "inesserver2.windows.cin.ufpe.br:80");
    }

    @Test
    public void test01628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01628");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder12.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder12.setHomePageUrlForDeser("");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager20 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager20.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig23 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int24 = myDataCenterInstanceConfig23.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = myDataCenterInstanceConfig23.getDataCenterInfo();
        java.lang.String str26 = myDataCenterInstanceConfig23.getNamespace();
        boolean boolean27 = myDataCenterInstanceConfig23.isNonSecurePortEnabled();
        applicationInfoManager20.config = myDataCenterInstanceConfig23;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig29 = applicationInfoManager20.config;
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager20.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager20.instanceInfo;
        java.lang.Boolean boolean32 = instanceInfo31.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus33 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo31.setOverriddenStatus(instanceStatus33);
        int int35 = instanceInfo31.getSecurePort();
        java.lang.String str36 = instanceInfo31.getHostName();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = instanceInfo31.getMetadata();
        com.netflix.appinfo.InstanceInfo.Builder builder38 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo31);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus40 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("http://inesserver2.windows.cin.ufpe.br:80/");
        instanceInfo31.setStatus(instanceStatus40);
        com.netflix.appinfo.InstanceInfo.Builder builder42 = builder19.setStatus(instanceStatus40);
        com.netflix.appinfo.InstanceInfo instanceInfo43 = builder42.build();
        java.lang.Class<?> wildcardClass44 = builder42.getClass();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(applicationInfoManager20);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 30 + "'", int24 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig29);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertTrue("'" + instanceStatus33 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus33.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
// flaky:         org.junit.Assert.assertTrue("'" + int35 + "' != '" + 443 + "'", int35 == 443);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str36, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertTrue("'" + instanceStatus40 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus40.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(instanceInfo43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test01629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01629");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder18.setVIPAddressDeser("hi!");
        com.netflix.appinfo.LeaseInfo leaseInfo24 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder18.setLeaseInfo(leaseInfo24);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus27 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("na");
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder25.setStatus(instanceStatus27);
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder28.setASGName("");
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder28.add("inesserver2.windows.cin.ufpe.br:80", "http://default:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder35 = builder28.setLastDirtyTimestamp(1636106042963L);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + instanceStatus27 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus27.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
    }

    @Test
    public void test01630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01630");
        com.netflix.appinfo.InstanceInfo instanceInfo0 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder1 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo0);
        com.netflix.appinfo.InstanceInfo.Builder builder3 = builder1.setNamespace("");
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder7 = builder3.setHealthCheckUrls("HI!", "HI!", "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
    }

    @Test
    public void test01631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01631");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        com.netflix.appinfo.InstanceInfo instanceInfo6 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int9 = myDataCenterInstanceConfig8.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo10 = myDataCenterInstanceConfig8.getDataCenterInfo();
        java.lang.String str11 = myDataCenterInstanceConfig8.getHealthCheckUrl();
        int int12 = myDataCenterInstanceConfig8.getLeaseExpirationDurationInSeconds();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig8);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager14 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo15 = applicationInfoManager14.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig17 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int18 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig17.getDataCenterInfo();
        int int20 = myDataCenterInstanceConfig17.getLeaseExpirationDurationInSeconds();
        java.lang.String str21 = myDataCenterInstanceConfig17.getHomePageUrlPath();
        applicationInfoManager14.config = myDataCenterInstanceConfig17;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig23 = applicationInfoManager14.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager24 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager24.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig27 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int28 = myDataCenterInstanceConfig27.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig27.getDataCenterInfo();
        java.lang.String str30 = myDataCenterInstanceConfig27.getNamespace();
        boolean boolean31 = myDataCenterInstanceConfig27.isNonSecurePortEnabled();
        applicationInfoManager24.config = myDataCenterInstanceConfig27;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig33 = applicationInfoManager24.config;
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager24.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager24.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType36 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo35.setActionType(actionType36);
        applicationInfoManager14.instanceInfo = instanceInfo35;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager39 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo40 = applicationInfoManager39.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig42 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int43 = myDataCenterInstanceConfig42.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo44 = myDataCenterInstanceConfig42.getDataCenterInfo();
        java.lang.String str45 = myDataCenterInstanceConfig42.getNamespace();
        boolean boolean46 = myDataCenterInstanceConfig42.isNonSecurePortEnabled();
        applicationInfoManager39.config = myDataCenterInstanceConfig42;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig48 = applicationInfoManager39.config;
        com.netflix.appinfo.InstanceInfo instanceInfo49 = applicationInfoManager39.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo50 = applicationInfoManager39.instanceInfo;
        int int51 = instanceInfo50.getSecurePort();
        java.lang.String str52 = instanceInfo50.getSID();
        java.util.Set<java.lang.String> strSet53 = instanceInfo50.getHealthCheckUrls();
        java.util.Set<java.lang.String> strSet54 = instanceInfo50.getHealthCheckUrls();
        java.lang.String str55 = instanceInfo50.getASGName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus56 = instanceInfo50.getStatus();
        applicationInfoManager14.setInstanceStatus(instanceStatus56);
        applicationInfoManager0.setInstanceStatus(instanceStatus56);
        applicationInfoManager0.refreshDataCenterInfoIfRequired();
        applicationInfoManager0.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager61 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo62 = applicationInfoManager61.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig64 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int65 = myDataCenterInstanceConfig64.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo66 = myDataCenterInstanceConfig64.getDataCenterInfo();
        java.lang.String str67 = myDataCenterInstanceConfig64.getNamespace();
        boolean boolean68 = myDataCenterInstanceConfig64.isNonSecurePortEnabled();
        applicationInfoManager61.config = myDataCenterInstanceConfig64;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig70 = applicationInfoManager61.config;
        com.netflix.appinfo.InstanceInfo instanceInfo71 = applicationInfoManager61.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo72 = applicationInfoManager61.instanceInfo;
        int int73 = instanceInfo72.getSecurePort();
        boolean boolean74 = instanceInfo72.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo75 = new com.netflix.appinfo.InstanceInfo(instanceInfo72);
        java.lang.String str76 = instanceInfo72.getAppGroupName();
        applicationInfoManager0.instanceInfo = instanceInfo72;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig78 = applicationInfoManager0.config;
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(instanceInfo6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 30 + "'", int9 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 90 + "'", int12 == 90);
        org.junit.Assert.assertNotNull(applicationInfoManager14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 30 + "'", int18 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 90 + "'", int20 == 90);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "/" + "'", str21, "/");
        org.junit.Assert.assertNotNull(eurekaInstanceConfig23);
        org.junit.Assert.assertNotNull(applicationInfoManager24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 30 + "'", int28 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertTrue("'" + actionType36 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType36.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager39);
        org.junit.Assert.assertNotNull(instanceInfo40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 30 + "'", int43 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig48);
        org.junit.Assert.assertNotNull(instanceInfo49);
        org.junit.Assert.assertNotNull(instanceInfo50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 443 + "'", int51 == 443);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "na" + "'", str52, "na");
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + instanceStatus56 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING + "'", instanceStatus56.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING));
        org.junit.Assert.assertNotNull(applicationInfoManager61);
        org.junit.Assert.assertNotNull(instanceInfo62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 30 + "'", int65 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig70);
        org.junit.Assert.assertNotNull(instanceInfo71);
        org.junit.Assert.assertNotNull(instanceInfo72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 443 + "'", int73 == 443);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "UNKNOWN" + "'", str76, "UNKNOWN");
        org.junit.Assert.assertNotNull(eurekaInstanceConfig78);
    }

    @Test
    public void test01632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01632");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        boolean boolean13 = instanceInfo11.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        java.lang.String str15 = instanceInfo14.getHostName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager16 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo17 = applicationInfoManager16.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int20 = myDataCenterInstanceConfig19.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo21 = myDataCenterInstanceConfig19.getDataCenterInfo();
        java.lang.String str22 = myDataCenterInstanceConfig19.getNamespace();
        boolean boolean23 = myDataCenterInstanceConfig19.isNonSecurePortEnabled();
        applicationInfoManager16.config = myDataCenterInstanceConfig19;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig25 = applicationInfoManager16.config;
        com.netflix.appinfo.InstanceInfo instanceInfo26 = applicationInfoManager16.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager16.instanceInfo;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig28 = applicationInfoManager16.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager29 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager29.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig32 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int33 = myDataCenterInstanceConfig32.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo34 = myDataCenterInstanceConfig32.getDataCenterInfo();
        java.lang.String str35 = myDataCenterInstanceConfig32.getNamespace();
        boolean boolean36 = myDataCenterInstanceConfig32.isNonSecurePortEnabled();
        applicationInfoManager29.config = myDataCenterInstanceConfig32;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig38 = applicationInfoManager29.config;
        com.netflix.appinfo.InstanceInfo instanceInfo39 = applicationInfoManager29.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo40 = applicationInfoManager29.instanceInfo;
        java.lang.Boolean boolean41 = instanceInfo40.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus42 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo40.setOverriddenStatus(instanceStatus42);
        applicationInfoManager16.instanceInfo = instanceInfo40;
        com.netflix.appinfo.InstanceInfo.ActionType actionType45 = com.netflix.appinfo.InstanceInfo.ActionType.DELETED;
        instanceInfo40.setActionType(actionType45);
        boolean boolean47 = instanceInfo14.equals((java.lang.Object) instanceInfo40);
        int int48 = instanceInfo14.getSecurePort();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str15, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager16);
        org.junit.Assert.assertNotNull(instanceInfo17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 30 + "'", int20 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig28);
        org.junit.Assert.assertNotNull(applicationInfoManager29);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 30 + "'", int33 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig38);
        org.junit.Assert.assertNotNull(instanceInfo39);
        org.junit.Assert.assertNotNull(instanceInfo40);
// flaky:         org.junit.Assert.assertEquals("'" + boolean41 + "' != '" + true + "'", boolean41, true);
        org.junit.Assert.assertTrue("'" + instanceStatus42 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus42.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + actionType45 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.DELETED + "'", actionType45.equals(com.netflix.appinfo.InstanceInfo.ActionType.DELETED));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 443 + "'", int48 == 443);
    }

    @Test
    public void test01633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01633");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        int int4 = myDataCenterInstanceConfig1.getSecurePort();
        java.lang.String str5 = myDataCenterInstanceConfig1.getAppGroupName();
        java.lang.String str6 = myDataCenterInstanceConfig1.getASGName();
        java.lang.String str7 = myDataCenterInstanceConfig1.getASGName();
        java.lang.String str8 = myDataCenterInstanceConfig1.getHomePageUrl();
        java.lang.String str9 = myDataCenterInstanceConfig1.getASGName();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 443 + "'", int4 == 443);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "unknown" + "'", str5, "unknown");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test01634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01634");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder7.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder9.setVIPAddressDeser("/");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder11.setASGName("na");
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder13.setVIPAddressDeser("inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
    }

    @Test
    public void test01635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01635");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig3.getDataCenterInfo();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig3);
        boolean boolean10 = myDataCenterInstanceConfig3.isInstanceEnabledOnit();
        boolean boolean11 = myDataCenterInstanceConfig3.isInstanceEnabledOnit();
        int int12 = myDataCenterInstanceConfig3.getSecurePort();
        java.lang.String str13 = myDataCenterInstanceConfig3.getStatusPageUrlPath();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/Status" + "'", str13, "/Status");
    }

    @Test
    public void test01636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01636");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        int int3 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        boolean boolean5 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        com.netflix.appinfo.InstanceInfo instanceInfo6 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager7 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo6);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig9.getDataCenterInfo();
        java.lang.String str12 = myDataCenterInstanceConfig9.getNamespace();
        applicationInfoManager7.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig9);
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager7;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo16 = applicationInfoManager15.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig18 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int19 = myDataCenterInstanceConfig18.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo20 = myDataCenterInstanceConfig18.getDataCenterInfo();
        java.lang.String str21 = myDataCenterInstanceConfig18.getNamespace();
        boolean boolean22 = myDataCenterInstanceConfig18.isNonSecurePortEnabled();
        applicationInfoManager15.config = myDataCenterInstanceConfig18;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig24 = applicationInfoManager15.config;
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager15.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo26 = applicationInfoManager15.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType27 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo26.setActionType(actionType27);
        java.lang.String str29 = instanceInfo26.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.Builder builder30 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo26);
        com.netflix.appinfo.InstanceInfo instanceInfo31 = builder30.build();
        java.lang.String str32 = instanceInfo31.getIPAddr();
        java.lang.String str33 = instanceInfo31.getHostName();
        applicationInfoManager7.instanceInfo = instanceInfo31;
        long long35 = instanceInfo31.getLastUpdatedTimestamp();
        java.lang.String str36 = instanceInfo31.getSID();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/Status" + "'", str4, "/Status");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(applicationInfoManager15);
        org.junit.Assert.assertNotNull(instanceInfo16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 30 + "'", int19 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertTrue("'" + actionType27 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType27.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UNKNOWN" + "'", str29, "UNKNOWN");
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "172.20.26.3" + "'", str32, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str33, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1636106051987L + "'", long35 == 1636106051987L);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "na" + "'", str36, "na");
    }

    @Test
    public void test01637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01637");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig13 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int14 = myDataCenterInstanceConfig13.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo15 = myDataCenterInstanceConfig13.getDataCenterInfo();
        java.lang.String str17 = myDataCenterInstanceConfig13.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig13.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo18);
        java.lang.String str20 = myDataCenterInstanceConfig19.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = myDataCenterInstanceConfig19.getMetadataMap();
        applicationInfoManager0.registerAppMetadata(strMap21);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str25 = myDataCenterInstanceConfig24.getIpAddress();
        java.lang.String str26 = myDataCenterInstanceConfig24.getHealthCheckUrlPath();
        java.lang.String str27 = myDataCenterInstanceConfig24.getVirtualHostName();
        java.lang.String str28 = myDataCenterInstanceConfig24.getStatusPageUrl();
        applicationInfoManager0.config = myDataCenterInstanceConfig24;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig31 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str32 = myDataCenterInstanceConfig31.getIpAddress();
        java.lang.String str33 = myDataCenterInstanceConfig31.getHealthCheckUrlPath();
        java.lang.String str34 = myDataCenterInstanceConfig31.getHealthCheckUrl();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager35 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo36 = applicationInfoManager35.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig38 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int39 = myDataCenterInstanceConfig38.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo40 = myDataCenterInstanceConfig38.getDataCenterInfo();
        java.lang.String str41 = myDataCenterInstanceConfig38.getNamespace();
        boolean boolean42 = myDataCenterInstanceConfig38.isNonSecurePortEnabled();
        applicationInfoManager35.config = myDataCenterInstanceConfig38;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig44 = applicationInfoManager35.config;
        com.netflix.appinfo.InstanceInfo instanceInfo45 = applicationInfoManager35.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo46 = applicationInfoManager35.instanceInfo;
        int int47 = instanceInfo46.getSecurePort();
        boolean boolean48 = instanceInfo46.isDirty();
        boolean boolean49 = instanceInfo46.isDirty();
        java.lang.String str50 = instanceInfo46.getVersion();
        instanceInfo46.setIsCoordinatingDiscoveryServer();
        java.lang.String str52 = instanceInfo46.getVersion();
        com.netflix.appinfo.InstanceInfo.PortType portType53 = null;
        boolean boolean54 = instanceInfo46.isPortEnabled(portType53);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager55 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig31, instanceInfo46);
        java.util.Map<java.lang.String, java.lang.String> strMap56 = instanceInfo46.getMetadata();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager57 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig24, instanceInfo46);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig59 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int60 = myDataCenterInstanceConfig59.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo61 = myDataCenterInstanceConfig59.getDataCenterInfo();
        java.lang.String str62 = myDataCenterInstanceConfig59.getNamespace();
        java.lang.String str63 = myDataCenterInstanceConfig59.getVirtualHostName();
        java.lang.String str64 = myDataCenterInstanceConfig59.getHomePageUrl();
        applicationInfoManager57.config = myDataCenterInstanceConfig59;
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 30 + "'", int14 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "172.20.26.3" + "'", str25, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/healthcheck" + "'", str26, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str27, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "172.20.26.3" + "'", str32, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/healthcheck" + "'", str33, "/healthcheck");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(applicationInfoManager35);
        org.junit.Assert.assertNotNull(instanceInfo36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 30 + "'", int39 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig44);
        org.junit.Assert.assertNotNull(instanceInfo45);
        org.junit.Assert.assertNotNull(instanceInfo46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 443 + "'", int47 == 443);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "unknown" + "'", str50, "unknown");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "unknown" + "'", str52, "unknown");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 30 + "'", int60 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str63, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str64);
    }

    @Test
    public void test01638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01638");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.lang.String str16 = instanceInfo11.getSID();
        com.netflix.appinfo.LeaseInfo leaseInfo17 = instanceInfo11.getLeaseInfo();
        instanceInfo11.setIsCoordinatingDiscoveryServer();
        java.lang.String str19 = instanceInfo11.getASGName();
        java.lang.String str20 = instanceInfo11.getASGName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "na" + "'", str16, "na");
        org.junit.Assert.assertNull(leaseInfo17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test01639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01639");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setSecurePort(30);
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder20.setAppGroupName("");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder20.setIPAddr("unknown");
        com.netflix.appinfo.InstanceInfo instanceInfo25 = builder20.build();
        com.netflix.appinfo.InstanceInfo instanceInfo26 = builder20.getRawInstance();
        instanceInfo26.setSID("/");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertNotNull(instanceInfo26);
    }

    @Test
    public void test01640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01640");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setNamespace("na");
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder6.setLastDirtyTimestamp(1636105969900L);
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder16.setSecureVIPAddress("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setSecureVIPAddress("eureka.");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test01641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01641");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig13 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int14 = myDataCenterInstanceConfig13.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo15 = myDataCenterInstanceConfig13.getDataCenterInfo();
        java.lang.String str17 = myDataCenterInstanceConfig13.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig13.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo18);
        java.lang.String str20 = myDataCenterInstanceConfig19.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = myDataCenterInstanceConfig19.getMetadataMap();
        applicationInfoManager0.registerAppMetadata(strMap21);
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig25 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int26 = myDataCenterInstanceConfig25.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo27 = myDataCenterInstanceConfig25.getDataCenterInfo();
        java.lang.String str28 = myDataCenterInstanceConfig25.getHealthCheckUrl();
        int int29 = myDataCenterInstanceConfig25.getLeaseExpirationDurationInSeconds();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig25);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig32 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.util.Map<java.lang.String, java.lang.String> strMap33 = myDataCenterInstanceConfig32.getMetadataMap();
        java.lang.String str34 = myDataCenterInstanceConfig32.getHealthCheckUrlPath();
        java.lang.String str35 = myDataCenterInstanceConfig32.getStatusPageUrlPath();
        java.lang.String str36 = myDataCenterInstanceConfig32.getVirtualHostName();
        int int37 = myDataCenterInstanceConfig32.getNonSecurePort();
        applicationInfoManager0.config = myDataCenterInstanceConfig32;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig40 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int41 = myDataCenterInstanceConfig40.getLeaseRenewalIntervalInSeconds();
        boolean boolean42 = myDataCenterInstanceConfig40.isNonSecurePortEnabled();
        int int43 = myDataCenterInstanceConfig40.getSecurePort();
        java.lang.String str44 = myDataCenterInstanceConfig40.getAppGroupName();
        java.lang.String str45 = myDataCenterInstanceConfig40.getASGName();
        java.lang.String str46 = myDataCenterInstanceConfig40.getASGName();
        int int47 = myDataCenterInstanceConfig40.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.InstanceInfo.Builder builder48 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder50 = builder48.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder52 = builder48.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder54 = builder48.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig55 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo56 = myDataCenterInstanceConfig55.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder57 = builder54.setDataCenterInfo(dataCenterInfo56);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig58 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo59 = myDataCenterInstanceConfig58.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder60 = builder54.setDataCenterInfo(dataCenterInfo59);
        com.netflix.appinfo.InstanceInfo.Builder builder62 = builder60.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder65 = builder60.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder67 = builder60.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder69 = builder60.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo70 = builder69.build();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager71 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig40, instanceInfo70);
        com.netflix.appinfo.InstanceInfo instanceInfo72 = applicationInfoManager71.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig74 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int75 = myDataCenterInstanceConfig74.getLeaseRenewalIntervalInSeconds();
        boolean boolean76 = myDataCenterInstanceConfig74.isNonSecurePortEnabled();
        java.lang.String str77 = myDataCenterInstanceConfig74.getHealthCheckUrlPath();
        java.lang.String str78 = myDataCenterInstanceConfig74.getHomePageUrlPath();
        java.lang.String str79 = myDataCenterInstanceConfig74.getNamespace();
        java.lang.String str80 = myDataCenterInstanceConfig74.getIpAddress();
        applicationInfoManager71.config = myDataCenterInstanceConfig74;
        java.lang.String str82 = myDataCenterInstanceConfig74.getVirtualHostName();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig74);
        java.lang.String str84 = myDataCenterInstanceConfig74.getHealthCheckUrlPath();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 30 + "'", int14 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(instanceInfo23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 30 + "'", int26 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 90 + "'", int29 == 90);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "/healthcheck" + "'", str34, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/Status" + "'", str35, "/Status");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str36, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 80 + "'", int37 == 80);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 30 + "'", int41 == 30);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 443 + "'", int43 == 443);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "unknown" + "'", str44, "unknown");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 30 + "'", int47 == 30);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(dataCenterInfo56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(dataCenterInfo59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(instanceInfo70);
        org.junit.Assert.assertNotNull(instanceInfo72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 30 + "'", int75 == 30);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "/healthcheck" + "'", str77, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/" + "'", str78, "/");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "172.20.26.3" + "'", str80, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str82, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "/healthcheck" + "'", str84, "/healthcheck");
    }

    @Test
    public void test01642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01642");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        int int6 = myDataCenterInstanceConfig3.getLeaseExpirationDurationInSeconds();
        java.lang.String str7 = myDataCenterInstanceConfig3.getHomePageUrlPath();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        applicationInfoManager0.config = myDataCenterInstanceConfig10;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig13 = applicationInfoManager0.config;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig15 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int16 = myDataCenterInstanceConfig15.getLeaseRenewalIntervalInSeconds();
        boolean boolean17 = myDataCenterInstanceConfig15.isNonSecurePortEnabled();
        int int18 = myDataCenterInstanceConfig15.getSecurePort();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig15.getDataCenterInfo();
        applicationInfoManager0.config = myDataCenterInstanceConfig15;
        applicationInfoManager0.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager22 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int25 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        int int26 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager22.config = myDataCenterInstanceConfig24;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig28 = applicationInfoManager22.config;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager22;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager30 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager30.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig33 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int34 = myDataCenterInstanceConfig33.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo35 = myDataCenterInstanceConfig33.getDataCenterInfo();
        java.lang.String str36 = myDataCenterInstanceConfig33.getNamespace();
        boolean boolean37 = myDataCenterInstanceConfig33.isNonSecurePortEnabled();
        applicationInfoManager30.config = myDataCenterInstanceConfig33;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig39 = applicationInfoManager30.config;
        com.netflix.appinfo.InstanceInfo instanceInfo40 = applicationInfoManager30.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo41 = applicationInfoManager30.getInfo();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig42 = applicationInfoManager30.config;
        applicationInfoManager30.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus44 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        applicationInfoManager30.setInstanceStatus(instanceStatus44);
        applicationInfoManager22.setInstanceStatus(instanceStatus44);
        applicationInfoManager0.setInstanceStatus(instanceStatus44);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 90 + "'", int6 == 90);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/" + "'", str7, "/");
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 30 + "'", int16 == 30);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 443 + "'", int18 == 443);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertNotNull(applicationInfoManager22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 30 + "'", int25 == 30);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 30 + "'", int26 == 30);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig28);
        org.junit.Assert.assertNotNull(applicationInfoManager30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig39);
        org.junit.Assert.assertNotNull(instanceInfo40);
        org.junit.Assert.assertNotNull(instanceInfo41);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig42);
        org.junit.Assert.assertTrue("'" + instanceStatus44 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus44.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
    }

    @Test
    public void test01643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01643");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        java.lang.String str6 = myDataCenterInstanceConfig2.getIpAddress();
        java.lang.String str7 = myDataCenterInstanceConfig2.getHealthCheckUrlPath();
        int int8 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager9 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager9.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int13 = myDataCenterInstanceConfig12.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo14 = myDataCenterInstanceConfig12.getDataCenterInfo();
        java.lang.String str15 = myDataCenterInstanceConfig12.getNamespace();
        boolean boolean16 = myDataCenterInstanceConfig12.isNonSecurePortEnabled();
        applicationInfoManager9.config = myDataCenterInstanceConfig12;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig18 = applicationInfoManager9.config;
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager9.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager9.instanceInfo;
        int int21 = instanceInfo20.getSecurePort();
        int int22 = instanceInfo20.getPort();
        int int23 = instanceInfo20.getCountryId();
        boolean boolean24 = instanceInfo20.isDirty();
        int int25 = instanceInfo20.getPort();
        java.lang.String str26 = instanceInfo20.getASGName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager27 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig2, instanceInfo20);
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager27.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager27.instanceInfo;
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "172.20.26.3" + "'", str6, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/healthcheck" + "'", str7, "/healthcheck");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
        org.junit.Assert.assertNotNull(applicationInfoManager9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 30 + "'", int13 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertNotNull(instanceInfo20);
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 443 + "'", int21 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 80 + "'", int22 == 80);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 80 + "'", int25 == 80);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertNotNull(instanceInfo29);
    }

    @Test
    public void test01644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01644");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder12.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder12.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder12.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo22 = builder21.build();
        java.lang.String str23 = instanceInfo22.getSID();
        int int24 = instanceInfo22.getCountryId();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "na" + "'", str23, "na");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
    }

    @Test
    public void test01645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01645");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        java.lang.Boolean boolean12 = instanceInfo11.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus13 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo11.setOverriddenStatus(instanceStatus13);
        int int15 = instanceInfo11.getSecurePort();
        java.lang.String str16 = instanceInfo11.getHostName();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = instanceInfo11.getMetadata();
        instanceInfo11.setIsCoordinatingDiscoveryServer();
        java.lang.String str19 = instanceInfo11.getHostName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType20 = instanceInfo11.getActionType();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager21 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo22 = applicationInfoManager21.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int25 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig24.getDataCenterInfo();
        java.lang.String str27 = myDataCenterInstanceConfig24.getNamespace();
        boolean boolean28 = myDataCenterInstanceConfig24.isNonSecurePortEnabled();
        applicationInfoManager21.config = myDataCenterInstanceConfig24;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig30 = applicationInfoManager21.config;
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager21.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager21.instanceInfo;
        int int33 = instanceInfo32.getSecurePort();
        boolean boolean34 = instanceInfo32.isDirty();
        java.lang.String str35 = instanceInfo32.getHostName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus36 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        instanceInfo32.setStatus(instanceStatus36);
        instanceInfo11.setStatusWithoutDirty(instanceStatus36);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo39 = instanceInfo11.getDataCenterInfo();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertTrue("'" + instanceStatus13 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus13.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 443 + "'", int15 == 443);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str16, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str19, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertTrue("'" + actionType20 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType20.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 30 + "'", int25 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertNotNull(instanceInfo32);
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 443 + "'", int33 == 443);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str35, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + instanceStatus36 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus36.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(dataCenterInfo39);
    }

    @Test
    public void test01646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01646");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setCountryId(7002);
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder4.setSecurePort((int) (byte) 10);
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder4.setIPAddr("/");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder4.setVIPAddress("");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder10.add("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS", "na");
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder10.setNamespace("DEFAULT");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder10.setVIPAddressDeser("");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
    }

    @Test
    public void test01647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01647");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isInstanceEnabledOnit();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        java.lang.String str5 = myDataCenterInstanceConfig1.getStatusPageUrl();
        java.lang.String str6 = myDataCenterInstanceConfig1.getAppGroupName();
        java.lang.String str7 = myDataCenterInstanceConfig1.getVirtualHostName();
        java.lang.String str8 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        int int9 = myDataCenterInstanceConfig1.getNonSecurePort();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/Status" + "'", str4, "/Status");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "unknown" + "'", str6, "unknown");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str7, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/healthcheck" + "'", str8, "/healthcheck");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 80 + "'", int9 == 80);
    }

    @Test
    public void test01648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01648");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        java.lang.String str13 = instanceInfo11.getSID();
        java.util.Set<java.lang.String> strSet14 = instanceInfo11.getHealthCheckUrls();
        java.util.Set<java.lang.String> strSet15 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str16 = instanceInfo11.getASGName();
        instanceInfo11.setLastUpdatedTimestamp();
        java.lang.String str18 = instanceInfo11.getAppName();
        java.lang.String str19 = instanceInfo11.getSID();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "na" + "'", str13, "na");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(str16);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UNKNOWN" + "'", str18, "UNKNOWN");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "na" + "'", str19, "na");
    }

    @Test
    public void test01649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01649");
        com.netflix.appinfo.DataCenterInfo dataCenterInfo1 = null;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("na", dataCenterInfo1);
    }

    @Test
    public void test01650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01650");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder8.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder8.setCountryId((-1));
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder8.setAppName("na");
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder8.setIPAddr("default");
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder8.setVIPAddressDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder20.setIPAddr("/HEALTHCHECK");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder20.setVIPAddress("/HEALTHCHECK");
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder24.setASGName("HTTP://HI!:80/STATUS");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
    }

    @Test
    public void test01651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01651");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus24 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder21.setStatus(instanceStatus24);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager26 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager26.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig29 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int30 = myDataCenterInstanceConfig29.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo31 = myDataCenterInstanceConfig29.getDataCenterInfo();
        java.lang.String str32 = myDataCenterInstanceConfig29.getNamespace();
        boolean boolean33 = myDataCenterInstanceConfig29.isNonSecurePortEnabled();
        applicationInfoManager26.config = myDataCenterInstanceConfig29;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig35 = applicationInfoManager26.config;
        com.netflix.appinfo.InstanceInfo instanceInfo36 = applicationInfoManager26.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo37 = applicationInfoManager26.instanceInfo;
        java.lang.Boolean boolean38 = instanceInfo37.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus39 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo37.setOverriddenStatus(instanceStatus39);
        instanceInfo37.setLastDirtyTimestamp((java.lang.Long) (-1L));
        com.netflix.appinfo.DataCenterInfo dataCenterInfo43 = instanceInfo37.getDataCenterInfo();
        java.lang.String str44 = instanceInfo37.getStatusPageUrl();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager45 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo46 = applicationInfoManager45.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig48 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int49 = myDataCenterInstanceConfig48.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo50 = myDataCenterInstanceConfig48.getDataCenterInfo();
        java.lang.String str51 = myDataCenterInstanceConfig48.getNamespace();
        boolean boolean52 = myDataCenterInstanceConfig48.isNonSecurePortEnabled();
        applicationInfoManager45.config = myDataCenterInstanceConfig48;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig54 = applicationInfoManager45.config;
        com.netflix.appinfo.InstanceInfo instanceInfo55 = applicationInfoManager45.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo56 = applicationInfoManager45.instanceInfo;
        java.lang.Boolean boolean57 = instanceInfo56.isCoordinatingDiscoveryServer();
        java.lang.String str58 = instanceInfo56.getVIPAddress();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus59 = instanceInfo56.getOverriddenStatus();
        instanceInfo37.setStatusWithoutDirty(instanceStatus59);
        com.netflix.appinfo.InstanceInfo.Builder builder61 = builder25.setOverriddenStatus(instanceStatus59);
        com.netflix.appinfo.InstanceInfo.Builder builder63 = builder25.setSecureVIPAddress("http://hi!:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder66 = builder25.setStatusPageUrl("/HEALTHCHECK", "HTTP://HI!:80/STATUS");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + instanceStatus24 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus24.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(applicationInfoManager26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 30 + "'", int30 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig35);
        org.junit.Assert.assertNotNull(instanceInfo36);
        org.junit.Assert.assertNotNull(instanceInfo37);
        org.junit.Assert.assertEquals("'" + boolean38 + "' != '" + true + "'", boolean38, true);
        org.junit.Assert.assertTrue("'" + instanceStatus39 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus39.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(dataCenterInfo43);
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str44, "http://inesserver2.windows.cin.ufpe.br:80/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager45);
        org.junit.Assert.assertNotNull(instanceInfo46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 30 + "'", int49 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig54);
        org.junit.Assert.assertNotNull(instanceInfo55);
        org.junit.Assert.assertNotNull(instanceInfo56);
        org.junit.Assert.assertEquals("'" + boolean57 + "' != '" + true + "'", boolean57, true);
// flaky:         org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertTrue("'" + instanceStatus59 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus59.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder66);
    }

    @Test
    public void test01652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01652");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str4 = myDataCenterInstanceConfig1.getHomePageUrlPath();
        java.lang.String str5 = myDataCenterInstanceConfig1.getSecureVirtualHostName();
        java.lang.String str6 = myDataCenterInstanceConfig1.getHealthCheckUrl();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/" + "'", str4, "/");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test01653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01653");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setAppName("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setNamespace("");
        com.netflix.appinfo.InstanceInfo instanceInfo11 = builder8.build();
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder8.setVIPAddress("HTTP://HI!:80/STATUS");
        com.netflix.appinfo.InstanceInfo instanceInfo14 = builder13.getRawInstance();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(instanceInfo14);
    }

    @Test
    public void test01654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01654");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str4 = myDataCenterInstanceConfig1.getHealthCheckUrl();
        int int5 = myDataCenterInstanceConfig1.getLeaseExpirationDurationInSeconds();
        java.lang.String str6 = myDataCenterInstanceConfig1.getAppname();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 90 + "'", int5 == 90);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "unknown" + "'", str6, "unknown");
    }

    @Test
    public void test01655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01655");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str3 = myDataCenterInstanceConfig1.getNamespace();
        java.lang.String str4 = myDataCenterInstanceConfig1.getNamespace();
        java.lang.String str5 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        int int6 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str7 = myDataCenterInstanceConfig1.getIpAddress();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/healthcheck" + "'", str5, "/healthcheck");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 30 + "'", int6 == 30);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "172.20.26.3" + "'", str7, "172.20.26.3");
    }

    @Test
    public void test01656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01656");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder18.add("na", "/");
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder18.add("/Status", "");
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder27.setVIPAddressDeser("UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder29.setSecureVIPAddressDeser("eureka.");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
    }

    @Test
    public void test01657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01657");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setIPAddr("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder0.setSecureVIPAddressDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setAppName("na");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder10.setSecurePort(0);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test01658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01658");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        com.netflix.appinfo.InstanceInfo instanceInfo1 = null;
        java.lang.String str2 = com.netflix.appinfo.InstanceInfo.getZone(strArray0, instanceInfo1);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager3 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo4 = applicationInfoManager3.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig6 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int7 = myDataCenterInstanceConfig6.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig6.getDataCenterInfo();
        java.lang.String str9 = myDataCenterInstanceConfig6.getNamespace();
        boolean boolean10 = myDataCenterInstanceConfig6.isNonSecurePortEnabled();
        applicationInfoManager3.config = myDataCenterInstanceConfig6;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig12 = applicationInfoManager3.config;
        com.netflix.appinfo.InstanceInfo instanceInfo13 = applicationInfoManager3.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager3.instanceInfo;
        int int15 = instanceInfo14.getSecurePort();
        int int16 = instanceInfo14.getPort();
        int int17 = instanceInfo14.getSecurePort();
        java.lang.String str18 = com.netflix.appinfo.InstanceInfo.getZone(strArray0, instanceInfo14);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager19 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager19.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig22 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int23 = myDataCenterInstanceConfig22.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo24 = myDataCenterInstanceConfig22.getDataCenterInfo();
        java.lang.String str25 = myDataCenterInstanceConfig22.getNamespace();
        boolean boolean26 = myDataCenterInstanceConfig22.isNonSecurePortEnabled();
        applicationInfoManager19.config = myDataCenterInstanceConfig22;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig28 = applicationInfoManager19.config;
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager19.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager19.instanceInfo;
        int int31 = instanceInfo30.getSecurePort();
        boolean boolean32 = instanceInfo30.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo33 = new com.netflix.appinfo.InstanceInfo(instanceInfo30);
        com.netflix.appinfo.InstanceInfo.ActionType actionType34 = com.netflix.appinfo.InstanceInfo.ActionType.MODIFIED;
        instanceInfo30.setActionType(actionType34);
        instanceInfo14.setActionType(actionType34);
        com.netflix.appinfo.LeaseInfo leaseInfo37 = instanceInfo14.getLeaseInfo();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "default" + "'", str2, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager3);
        org.junit.Assert.assertNotNull(instanceInfo4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 30 + "'", int7 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig12);
        org.junit.Assert.assertNotNull(instanceInfo13);
        org.junit.Assert.assertNotNull(instanceInfo14);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 443 + "'", int15 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 80 + "'", int16 == 80);
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 443 + "'", int17 == 443);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "default" + "'", str18, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager19);
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 30 + "'", int23 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig28);
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertNotNull(instanceInfo30);
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + 443 + "'", int31 == 443);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + actionType34 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.MODIFIED + "'", actionType34.equals(com.netflix.appinfo.InstanceInfo.ActionType.MODIFIED));
        org.junit.Assert.assertNull(leaseInfo37);
    }

    @Test
    public void test01659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01659");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        boolean boolean13 = instanceInfo11.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        int int15 = instanceInfo11.getPort();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager16 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo17 = applicationInfoManager16.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int20 = myDataCenterInstanceConfig19.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo21 = myDataCenterInstanceConfig19.getDataCenterInfo();
        java.lang.String str22 = myDataCenterInstanceConfig19.getNamespace();
        boolean boolean23 = myDataCenterInstanceConfig19.isNonSecurePortEnabled();
        applicationInfoManager16.config = myDataCenterInstanceConfig19;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig25 = applicationInfoManager16.config;
        com.netflix.appinfo.InstanceInfo instanceInfo26 = applicationInfoManager16.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager16.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType28 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo27.setActionType(actionType28);
        java.lang.String str30 = instanceInfo27.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType31 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo27.setActionType(actionType31);
        java.lang.String str33 = instanceInfo27.getHostName();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo34 = instanceInfo27.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.ActionType actionType35 = instanceInfo27.getActionType();
        instanceInfo11.setActionType(actionType35);
        long long37 = instanceInfo11.getLastUpdatedTimestamp();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 80 + "'", int15 == 80);
        org.junit.Assert.assertNotNull(applicationInfoManager16);
        org.junit.Assert.assertNotNull(instanceInfo17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 30 + "'", int20 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertTrue("'" + actionType28 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType28.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UNKNOWN" + "'", str30, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + actionType31 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType31.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str33, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo34);
        org.junit.Assert.assertTrue("'" + actionType35 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType35.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1636106052575L + "'", long37 == 1636106052575L);
    }

    @Test
    public void test01660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01660");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder2.setHealthCheckUrlsForDeser("unknown", "172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder10.setAppName("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setSID("/");
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder14.setPort(7001);
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder16.setLastDirtyTimestamp(1636106028123L);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test01661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01661");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        int int3 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        boolean boolean5 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = myDataCenterInstanceConfig1.getMetadataMap();
        boolean boolean7 = myDataCenterInstanceConfig1.isInstanceEnabledOnit();
        int int8 = myDataCenterInstanceConfig1.getSecurePort();
        int int9 = myDataCenterInstanceConfig1.getLeaseExpirationDurationInSeconds();
        boolean boolean10 = myDataCenterInstanceConfig1.isInstanceEnabledOnit();
        java.lang.String str11 = myDataCenterInstanceConfig1.getASGName();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo12 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str13 = myDataCenterInstanceConfig1.getHomePageUrl();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/Status" + "'", str4, "/Status");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 443 + "'", int8 == 443);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 90 + "'", int9 == 90);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(dataCenterInfo12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test01662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01662");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder2.setSecurePort(10);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder2.setAppName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder2.setIPAddr("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:10/STATUS");
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder16 = builder13.setStatusPageUrl("unknown", "http://default:80/Status");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
    }

    @Test
    public void test01663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01663");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("http://inesserver2.windows.cin.ufpe.br:80/", "default");
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder5.setSID("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder7.setASGName("http://inesserver2.windows.cin.ufpe.br:10/Status");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
    }

    @Test
    public void test01664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01664");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        int int3 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str4 = myDataCenterInstanceConfig1.getSecureVirtualHostName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager5 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo6 = applicationInfoManager5.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int9 = myDataCenterInstanceConfig8.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo10 = myDataCenterInstanceConfig8.getDataCenterInfo();
        java.lang.String str11 = myDataCenterInstanceConfig8.getNamespace();
        boolean boolean12 = myDataCenterInstanceConfig8.isNonSecurePortEnabled();
        applicationInfoManager5.config = myDataCenterInstanceConfig8;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig14 = applicationInfoManager5.config;
        com.netflix.appinfo.InstanceInfo instanceInfo15 = applicationInfoManager5.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo16 = applicationInfoManager5.instanceInfo;
        int int17 = instanceInfo16.getSecurePort();
        int int18 = instanceInfo16.getPort();
        int int19 = instanceInfo16.getCountryId();
        boolean boolean20 = instanceInfo16.isDirty();
        int int21 = instanceInfo16.getPort();
        int int22 = instanceInfo16.getPort();
        java.lang.String str23 = instanceInfo16.getHomePageUrl();
        java.lang.String[] strArray24 = new java.lang.String[] {};
        com.netflix.appinfo.InstanceInfo instanceInfo25 = null;
        java.lang.String str26 = com.netflix.appinfo.InstanceInfo.getZone(strArray24, instanceInfo25);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager27 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager27.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig30 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int31 = myDataCenterInstanceConfig30.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo32 = myDataCenterInstanceConfig30.getDataCenterInfo();
        java.lang.String str33 = myDataCenterInstanceConfig30.getNamespace();
        boolean boolean34 = myDataCenterInstanceConfig30.isNonSecurePortEnabled();
        applicationInfoManager27.config = myDataCenterInstanceConfig30;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig36 = applicationInfoManager27.config;
        com.netflix.appinfo.InstanceInfo instanceInfo37 = applicationInfoManager27.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo38 = applicationInfoManager27.instanceInfo;
        int int39 = instanceInfo38.getSecurePort();
        int int40 = instanceInfo38.getPort();
        int int41 = instanceInfo38.getSecurePort();
        java.lang.String str42 = com.netflix.appinfo.InstanceInfo.getZone(strArray24, instanceInfo38);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager43 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo44 = applicationInfoManager43.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig46 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int47 = myDataCenterInstanceConfig46.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo48 = myDataCenterInstanceConfig46.getDataCenterInfo();
        java.lang.String str49 = myDataCenterInstanceConfig46.getNamespace();
        boolean boolean50 = myDataCenterInstanceConfig46.isNonSecurePortEnabled();
        applicationInfoManager43.config = myDataCenterInstanceConfig46;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig52 = applicationInfoManager43.config;
        com.netflix.appinfo.InstanceInfo instanceInfo53 = applicationInfoManager43.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo54 = applicationInfoManager43.instanceInfo;
        int int55 = instanceInfo54.getSecurePort();
        boolean boolean56 = instanceInfo54.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo57 = new com.netflix.appinfo.InstanceInfo(instanceInfo54);
        com.netflix.appinfo.InstanceInfo.ActionType actionType58 = com.netflix.appinfo.InstanceInfo.ActionType.MODIFIED;
        instanceInfo54.setActionType(actionType58);
        instanceInfo38.setActionType(actionType58);
        instanceInfo16.setActionType(actionType58);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager62 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo16);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = myDataCenterInstanceConfig1.getMetadataMap();
        java.lang.String str64 = myDataCenterInstanceConfig1.getAppGroupName();
        java.lang.String str66 = myDataCenterInstanceConfig1.getHostName(true);
        java.lang.String str67 = myDataCenterInstanceConfig1.getStatusPageUrl();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(applicationInfoManager5);
        org.junit.Assert.assertNotNull(instanceInfo6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 30 + "'", int9 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertNotNull(instanceInfo16);
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 443 + "'", int17 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 80 + "'", int18 == 80);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
// flaky:         org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 80 + "'", int21 == 80);
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 80 + "'", int22 == 80);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str23, "http://inesserver2.windows.cin.ufpe.br:80/");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "default" + "'", str26, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 30 + "'", int31 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig36);
        org.junit.Assert.assertNotNull(instanceInfo37);
        org.junit.Assert.assertNotNull(instanceInfo38);
// flaky:         org.junit.Assert.assertTrue("'" + int39 + "' != '" + 443 + "'", int39 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 80 + "'", int40 == 80);
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + 443 + "'", int41 == 443);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "default" + "'", str42, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager43);
        org.junit.Assert.assertNotNull(instanceInfo44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 30 + "'", int47 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig52);
        org.junit.Assert.assertNotNull(instanceInfo53);
        org.junit.Assert.assertNotNull(instanceInfo54);
// flaky:         org.junit.Assert.assertTrue("'" + int55 + "' != '" + 443 + "'", int55 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + actionType58 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.MODIFIED + "'", actionType58.equals(com.netflix.appinfo.InstanceInfo.ActionType.MODIFIED));
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "unknown" + "'", str64, "unknown");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str66, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNull(str67);
    }

    @Test
    public void test01665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01665");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isInstanceEnabledOnit();
        java.lang.String str4 = myDataCenterInstanceConfig1.getHomePageUrlPath();
        java.lang.String str5 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        int int6 = myDataCenterInstanceConfig1.getLeaseExpirationDurationInSeconds();
        java.lang.String str7 = myDataCenterInstanceConfig1.getAppGroupName();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/" + "'", str4, "/");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/healthcheck" + "'", str5, "/healthcheck");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 90 + "'", int6 == 90);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "unknown" + "'", str7, "unknown");
    }

    @Test
    public void test01666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01666");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig1 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo2 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager3 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig1, instanceInfo2);
        com.netflix.appinfo.InstanceInfo instanceInfo4 = null;
        applicationInfoManager3.instanceInfo = instanceInfo4;
        com.netflix.appinfo.InstanceInfo instanceInfo6 = applicationInfoManager3.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager7 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        int int11 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager7.config = myDataCenterInstanceConfig9;
        java.lang.String str13 = myDataCenterInstanceConfig9.getIpAddress();
        java.lang.String str14 = myDataCenterInstanceConfig9.getVirtualHostName();
        java.lang.String str16 = myDataCenterInstanceConfig9.getHostName(true);
        applicationInfoManager3.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig9);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus18 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        applicationInfoManager3.setInstanceStatus(instanceStatus18);
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager3;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig22 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int23 = myDataCenterInstanceConfig22.getLeaseRenewalIntervalInSeconds();
        int int24 = myDataCenterInstanceConfig22.getLeaseRenewalIntervalInSeconds();
        java.lang.String str25 = myDataCenterInstanceConfig22.getStatusPageUrlPath();
        boolean boolean26 = myDataCenterInstanceConfig22.getSecurePortEnabled();
        com.netflix.appinfo.InstanceInfo instanceInfo27 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager28 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig22, instanceInfo27);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig30 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.util.Map<java.lang.String, java.lang.String> strMap31 = myDataCenterInstanceConfig30.getMetadataMap();
        java.lang.String str32 = myDataCenterInstanceConfig30.getHealthCheckUrlPath();
        int int33 = myDataCenterInstanceConfig30.getLeaseRenewalIntervalInSeconds();
        java.lang.String str35 = myDataCenterInstanceConfig30.getHostName(true);
        applicationInfoManager28.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig30);
        java.lang.String str37 = myDataCenterInstanceConfig30.getAppGroupName();
        applicationInfoManager3.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig30);
        com.netflix.appinfo.InstanceInfo instanceInfo39 = applicationInfoManager3.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo40 = applicationInfoManager3.getInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig42 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int43 = myDataCenterInstanceConfig42.getLeaseRenewalIntervalInSeconds();
        boolean boolean44 = myDataCenterInstanceConfig42.isNonSecurePortEnabled();
        java.lang.String str45 = myDataCenterInstanceConfig42.getHealthCheckUrlPath();
        com.netflix.appinfo.InstanceInfo instanceInfo46 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager47 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig42, instanceInfo46);
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig48 = applicationInfoManager47.config;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig50 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int51 = myDataCenterInstanceConfig50.getLeaseRenewalIntervalInSeconds();
        int int52 = myDataCenterInstanceConfig50.getLeaseRenewalIntervalInSeconds();
        java.lang.String str53 = myDataCenterInstanceConfig50.getStatusPageUrlPath();
        applicationInfoManager47.config = myDataCenterInstanceConfig50;
        java.lang.String str56 = myDataCenterInstanceConfig50.getHostName(false);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo57 = myDataCenterInstanceConfig50.getDataCenterInfo();
        applicationInfoManager3.config = myDataCenterInstanceConfig50;
        java.lang.String str59 = myDataCenterInstanceConfig50.getHealthCheckUrl();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig1);
        org.junit.Assert.assertNull(instanceInfo6);
        org.junit.Assert.assertNotNull(applicationInfoManager7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "172.20.26.3" + "'", str13, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str14, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str16, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + instanceStatus18 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus18.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 30 + "'", int23 == 30);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 30 + "'", int24 == 30);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/Status" + "'", str25, "/Status");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "/healthcheck" + "'", str32, "/healthcheck");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 30 + "'", int33 == 30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str35, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "unknown" + "'", str37, "unknown");
        org.junit.Assert.assertNotNull(instanceInfo39);
        org.junit.Assert.assertNotNull(instanceInfo40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 30 + "'", int43 == 30);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/healthcheck" + "'", str45, "/healthcheck");
        org.junit.Assert.assertNotNull(eurekaInstanceConfig48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 30 + "'", int51 == 30);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 30 + "'", int52 == 30);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "/Status" + "'", str53, "/Status");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str56, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo57);
        org.junit.Assert.assertNull(str59);
    }

    @Test
    public void test01667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01667");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = 0; // flaky: instanceInfo11.getSecurePort();
        boolean boolean13 = false; // flaky: instanceInfo11.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager14 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo15 = applicationInfoManager14.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig17 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int18 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig17.getDataCenterInfo();
        java.lang.String str20 = myDataCenterInstanceConfig17.getNamespace();
        boolean boolean21 = myDataCenterInstanceConfig17.isNonSecurePortEnabled();
        applicationInfoManager14.config = myDataCenterInstanceConfig17;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig23 = applicationInfoManager14.config;
        com.netflix.appinfo.InstanceInfo instanceInfo24 = applicationInfoManager14.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager14.instanceInfo;
        int int26 = 0; // flaky: instanceInfo25.getSecurePort();
        com.netflix.appinfo.InstanceInfo.PortType portType27 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean28 = false; // flaky: instanceInfo25.isPortEnabled(portType27);
        boolean boolean29 = false; // flaky: instanceInfo11.isPortEnabled(portType27);
        java.lang.String str30 = null; // flaky: instanceInfo11.getSID();
        java.util.Set<java.lang.String> strSet31 = null; // flaky: instanceInfo11.getHealthCheckUrls();
        com.netflix.appinfo.InstanceInfo.ActionType actionType32 = null; // flaky: instanceInfo11.getActionType();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(applicationInfoManager14);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 30 + "'", int18 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig23);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo24);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo25);
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 443 + "'", int26 == 443);
        org.junit.Assert.assertTrue("'" + portType27 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType27.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "na" + "'", str30, "na");
// flaky:         org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(actionType32);
    }

    @Test
    public void test01668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01668");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
// flaky:         instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = null; // flaky: instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = null; // flaky: instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = null; // flaky: builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = null; // flaky: builder18.setVIPAddressDeser("hi!");
        com.netflix.appinfo.InstanceInfo.PortType portType24 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder26 = null; // flaky: builder23.enablePort(portType24, false);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager27 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager27.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig30 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int31 = myDataCenterInstanceConfig30.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo32 = myDataCenterInstanceConfig30.getDataCenterInfo();
        java.lang.String str33 = myDataCenterInstanceConfig30.getNamespace();
        boolean boolean34 = myDataCenterInstanceConfig30.isNonSecurePortEnabled();
        applicationInfoManager27.config = myDataCenterInstanceConfig30;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig36 = applicationInfoManager27.config;
        com.netflix.appinfo.InstanceInfo instanceInfo37 = applicationInfoManager27.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo38 = applicationInfoManager27.instanceInfo;
        java.lang.Boolean boolean39 = null; // flaky: instanceInfo38.isCoordinatingDiscoveryServer();
        java.lang.String str40 = null; // flaky: instanceInfo38.getVIPAddress();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus41 = null; // flaky: instanceInfo38.getOverriddenStatus();
        com.netflix.appinfo.InstanceInfo.Builder builder42 = null; // flaky: builder26.setOverriddenStatus(instanceStatus41);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager44 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo45 = applicationInfoManager44.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig47 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int48 = myDataCenterInstanceConfig47.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo49 = myDataCenterInstanceConfig47.getDataCenterInfo();
        java.lang.String str50 = myDataCenterInstanceConfig47.getNamespace();
        boolean boolean51 = myDataCenterInstanceConfig47.isNonSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo52 = myDataCenterInstanceConfig47.getDataCenterInfo();
        applicationInfoManager44.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig47);
        boolean boolean54 = myDataCenterInstanceConfig47.getSecurePortEnabled();
        java.lang.String str55 = myDataCenterInstanceConfig47.getSecureHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo56 = myDataCenterInstanceConfig47.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig57 = new com.netflix.appinfo.MyDataCenterInstanceConfig("", dataCenterInfo56);
        com.netflix.appinfo.InstanceInfo.Builder builder58 = null; // flaky: builder42.setDataCenterInfo(dataCenterInfo56);
        com.netflix.appinfo.InstanceInfo.Builder builder60 = null; // flaky: builder58.setSID("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder62 = null; // flaky: builder58.setASGName("");
        com.netflix.appinfo.InstanceInfo.Builder builder64 = null; // flaky: builder62.setNamespace("/");
        com.netflix.appinfo.InstanceInfo.Builder builder66 = null; // flaky: builder64.setCountryId((int) ' ');
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertNotNull(strSet16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertNotNull(builder21);
// flaky:         org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + portType24 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType24.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
// flaky:         org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(applicationInfoManager27);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 30 + "'", int31 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig36);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo37);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo38);
// flaky:         org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + false + "'", boolean39, false);
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus41 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus41.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
// flaky:         org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(applicationInfoManager44);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 30 + "'", int48 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(dataCenterInfo56);
// flaky:         org.junit.Assert.assertNotNull(builder58);
// flaky:         org.junit.Assert.assertNotNull(builder60);
// flaky:         org.junit.Assert.assertNotNull(builder62);
// flaky:         org.junit.Assert.assertNotNull(builder64);
// flaky:         org.junit.Assert.assertNotNull(builder66);
    }

    @Test
    public void test01669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01669");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
// flaky:         instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = null; // flaky: instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = null; // flaky: instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = null; // flaky: builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = null; // flaky: builder18.setHealthCheckUrlsForDeser("", "hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = null; // flaky: builder23.setLastDirtyTimestamp((long) 443);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus26 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        com.netflix.appinfo.InstanceInfo.Builder builder27 = null; // flaky: builder23.setStatus(instanceStatus26);
        com.netflix.appinfo.InstanceInfo.Builder builder30 = null; // flaky: builder23.setStatusPageUrl("/healthcheck", "/healthcheck");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager31 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager31.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig34 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int35 = myDataCenterInstanceConfig34.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo36 = myDataCenterInstanceConfig34.getDataCenterInfo();
        java.lang.String str37 = myDataCenterInstanceConfig34.getNamespace();
        boolean boolean38 = myDataCenterInstanceConfig34.isNonSecurePortEnabled();
        applicationInfoManager31.config = myDataCenterInstanceConfig34;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig40 = applicationInfoManager31.config;
        com.netflix.appinfo.InstanceInfo instanceInfo41 = applicationInfoManager31.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo42 = applicationInfoManager31.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType43 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo42.setActionType(actionType43);
        com.netflix.appinfo.LeaseInfo leaseInfo45 = null;
// flaky:         instanceInfo42.setLeaseInfo(leaseInfo45);
        java.util.Set<java.lang.String> strSet47 = instanceInfo42.getHealthCheckUrls();
        java.lang.String str48 = instanceInfo42.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder49 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo42);
        com.netflix.appinfo.InstanceInfo.Builder builder51 = builder49.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder54 = builder49.setHealthCheckUrlsForDeser("", "hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder56 = builder54.setLastDirtyTimestamp((long) 443);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus57 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        com.netflix.appinfo.InstanceInfo.Builder builder58 = builder54.setStatus(instanceStatus57);
        com.netflix.appinfo.InstanceInfo.Builder builder60 = builder58.setVIPAddressDeser("");
        com.netflix.appinfo.InstanceInfo instanceInfo61 = builder60.getRawInstance();
        java.util.Set<java.lang.String> strSet62 = instanceInfo61.getHealthCheckUrls();
        instanceInfo61.setSID("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS");
        com.netflix.appinfo.InstanceInfo.Builder builder65 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder67 = builder65.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder69 = builder65.setCountryId(7002);
        com.netflix.appinfo.InstanceInfo.Builder builder72 = builder65.setHealthCheckUrlsForDeser("UNKNOWN", "UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder74 = builder72.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder76 = builder74.setIPAddr("/healthcheck");
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus78 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder79 = builder76.setStatus(instanceStatus78);
        instanceInfo61.setStatusWithoutDirty(instanceStatus78);
        com.netflix.appinfo.InstanceInfo.Builder builder81 = null; // flaky: builder23.setStatus(instanceStatus78);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertNotNull(strSet16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertNotNull(builder20);
// flaky:         org.junit.Assert.assertNotNull(builder23);
// flaky:         org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + instanceStatus26 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus26.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
// flaky:         org.junit.Assert.assertNotNull(builder27);
// flaky:         org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(applicationInfoManager31);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 30 + "'", int35 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig40);
        org.junit.Assert.assertNotNull(instanceInfo41);
        org.junit.Assert.assertNotNull(instanceInfo42);
        org.junit.Assert.assertTrue("'" + actionType43 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType43.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str48, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + instanceStatus57 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus57.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(instanceInfo61);
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + instanceStatus78 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus78.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder79);
// flaky:         org.junit.Assert.assertNotNull(builder81);
    }

    @Test
    public void test01670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01670");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        int int4 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        int int5 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str6 = myDataCenterInstanceConfig1.getSecureHealthCheckUrl();
        java.lang.String str8 = myDataCenterInstanceConfig1.getHostName(true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str8, "inesserver2.windows.cin.ufpe.br");
    }

    @Test
    public void test01671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01671");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int11 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        int int12 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        java.lang.String str13 = myDataCenterInstanceConfig10.getStatusPageUrlPath();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig10);
        applicationInfoManager0.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager16 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo17 = applicationInfoManager16.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int20 = myDataCenterInstanceConfig19.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo21 = myDataCenterInstanceConfig19.getDataCenterInfo();
        java.lang.String str22 = myDataCenterInstanceConfig19.getNamespace();
        boolean boolean23 = myDataCenterInstanceConfig19.isNonSecurePortEnabled();
        applicationInfoManager16.config = myDataCenterInstanceConfig19;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig25 = applicationInfoManager16.config;
        com.netflix.appinfo.InstanceInfo instanceInfo26 = applicationInfoManager16.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager16.instanceInfo;
        int int28 = instanceInfo27.getSecurePort();
        int int29 = instanceInfo27.getPort();
        int int30 = instanceInfo27.getCountryId();
        boolean boolean31 = instanceInfo27.isDirty();
        int int32 = instanceInfo27.getPort();
        int int33 = instanceInfo27.getPort();
        com.netflix.appinfo.LeaseInfo leaseInfo34 = null;
        instanceInfo27.setLeaseInfo(leaseInfo34);
        applicationInfoManager0.instanceInfo = instanceInfo27;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager38 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo39 = applicationInfoManager38.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig41 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int42 = myDataCenterInstanceConfig41.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo43 = myDataCenterInstanceConfig41.getDataCenterInfo();
        java.lang.String str44 = myDataCenterInstanceConfig41.getNamespace();
        boolean boolean45 = myDataCenterInstanceConfig41.isNonSecurePortEnabled();
        applicationInfoManager38.config = myDataCenterInstanceConfig41;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig47 = applicationInfoManager38.config;
        com.netflix.appinfo.InstanceInfo instanceInfo48 = applicationInfoManager38.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo49 = applicationInfoManager38.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType50 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo49.setActionType(actionType50);
        com.netflix.appinfo.LeaseInfo leaseInfo52 = null;
        instanceInfo49.setLeaseInfo(leaseInfo52);
        java.util.Set<java.lang.String> strSet54 = instanceInfo49.getHealthCheckUrls();
        java.lang.String str55 = instanceInfo49.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder56 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo49);
        com.netflix.appinfo.InstanceInfo.Builder builder59 = builder56.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder61 = builder56.setVIPAddressDeser("hi!");
        com.netflix.appinfo.LeaseInfo leaseInfo62 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder63 = builder56.setLeaseInfo(leaseInfo62);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus65 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("na");
        com.netflix.appinfo.InstanceInfo.Builder builder66 = builder63.setStatus(instanceStatus65);
        com.netflix.appinfo.InstanceInfo.Builder builder68 = builder66.setSID("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder71 = builder68.setHealthCheckUrlsForDeser("hi!", "");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig73 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int74 = myDataCenterInstanceConfig73.getLeaseRenewalIntervalInSeconds();
        java.lang.String str75 = myDataCenterInstanceConfig73.getNamespace();
        java.lang.String str76 = myDataCenterInstanceConfig73.getNamespace();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo77 = myDataCenterInstanceConfig73.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder78 = builder71.setDataCenterInfo(dataCenterInfo77);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig79 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/HEALTHCHECK", dataCenterInfo77);
        applicationInfoManager0.config = myDataCenterInstanceConfig79;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager81 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig83 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int84 = myDataCenterInstanceConfig83.getLeaseRenewalIntervalInSeconds();
        int int85 = myDataCenterInstanceConfig83.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager81.config = myDataCenterInstanceConfig83;
        java.lang.String str87 = myDataCenterInstanceConfig83.getIpAddress();
        java.lang.String str88 = myDataCenterInstanceConfig83.getHealthCheckUrlPath();
        java.lang.String str89 = myDataCenterInstanceConfig83.getHealthCheckUrl();
        java.lang.String str90 = myDataCenterInstanceConfig83.getStatusPageUrlPath();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig83);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 30 + "'", int12 == 30);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/Status" + "'", str13, "/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager16);
        org.junit.Assert.assertNotNull(instanceInfo17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 30 + "'", int20 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 443 + "'", int28 == 443);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 80 + "'", int29 == 80);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 80 + "'", int32 == 80);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 80 + "'", int33 == 80);
        org.junit.Assert.assertNotNull(applicationInfoManager38);
        org.junit.Assert.assertNotNull(instanceInfo39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig47);
        org.junit.Assert.assertNotNull(instanceInfo48);
        org.junit.Assert.assertNotNull(instanceInfo49);
        org.junit.Assert.assertTrue("'" + actionType50 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType50.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str55, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + instanceStatus65 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus65.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 30 + "'", int74 == 30);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertNotNull(dataCenterInfo77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(applicationInfoManager81);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 30 + "'", int84 == 30);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 30 + "'", int85 == 30);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "172.20.26.3" + "'", str87, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "/healthcheck" + "'", str88, "/healthcheck");
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "/Status" + "'", str90, "/Status");
    }

    @Test
    public void test01672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01672");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder7.setASGName("inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder9.setHostName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder9.setSecureVIPAddressDeser("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder9.setASGName("/Status");
        boolean boolean16 = builder15.isInitialized();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test01673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01673");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        java.lang.String str6 = myDataCenterInstanceConfig2.getIpAddress();
        java.lang.String str7 = myDataCenterInstanceConfig2.getHealthCheckUrl();
        java.lang.String str8 = myDataCenterInstanceConfig2.getStatusPageUrl();
        java.lang.String str9 = myDataCenterInstanceConfig2.getIpAddress();
        java.lang.String str10 = myDataCenterInstanceConfig2.getNamespace();
        java.lang.String str11 = myDataCenterInstanceConfig2.getStatusPageUrlPath();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "172.20.26.3" + "'", str6, "172.20.26.3");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "172.20.26.3" + "'", str9, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/Status" + "'", str11, "/Status");
    }

    @Test
    public void test01674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01674");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus24 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder21.setStatus(instanceStatus24);
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder21.setHealthCheckUrls("172.20.26.3", "", "http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager30 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager30.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig33 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int34 = myDataCenterInstanceConfig33.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo35 = myDataCenterInstanceConfig33.getDataCenterInfo();
        java.lang.String str36 = myDataCenterInstanceConfig33.getNamespace();
        boolean boolean37 = myDataCenterInstanceConfig33.isNonSecurePortEnabled();
        applicationInfoManager30.config = myDataCenterInstanceConfig33;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig39 = applicationInfoManager30.config;
        com.netflix.appinfo.InstanceInfo instanceInfo40 = applicationInfoManager30.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo41 = applicationInfoManager30.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType42 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo41.setActionType(actionType42);
        java.lang.String str44 = instanceInfo41.getAppGroupName();
        java.lang.String str45 = instanceInfo41.getAppName();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = instanceInfo41.getMetadata();
        com.netflix.appinfo.InstanceInfo.Builder builder47 = builder29.setMetadata(strMap46);
        com.netflix.appinfo.InstanceInfo.Builder builder49 = builder29.setLastDirtyTimestamp(1636105988194L);
        com.netflix.appinfo.InstanceInfo.Builder builder51 = builder49.setSecurePort((int) '4');
        com.netflix.appinfo.InstanceInfo.Builder builder53 = builder49.setIPAddr("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + instanceStatus24 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus24.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(applicationInfoManager30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig39);
        org.junit.Assert.assertNotNull(instanceInfo40);
        org.junit.Assert.assertNotNull(instanceInfo41);
        org.junit.Assert.assertTrue("'" + actionType42 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType42.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "UNKNOWN" + "'", str44, "UNKNOWN");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "UNKNOWN" + "'", str45, "UNKNOWN");
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
    }

    @Test
    public void test01675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01675");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo instanceInfo12 = builder6.build();
        com.netflix.appinfo.InstanceInfo.ActionType actionType13 = instanceInfo12.getActionType();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertNull(actionType13);
    }

    @Test
    public void test01676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01676");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str4 = myDataCenterInstanceConfig1.getHealthCheckUrl();
        java.lang.String str5 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        int int6 = myDataCenterInstanceConfig1.getSecurePort();
        java.lang.String str7 = myDataCenterInstanceConfig1.getVirtualHostName();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/Status" + "'", str5, "/Status");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 443 + "'", int6 == 443);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str7, "inesserver2.windows.cin.ufpe.br:80");
    }

    @Test
    public void test01677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01677");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager8 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int11 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        int int12 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager8.config = myDataCenterInstanceConfig10;
        java.lang.String str14 = myDataCenterInstanceConfig10.getIpAddress();
        java.lang.String str15 = myDataCenterInstanceConfig10.getHealthCheckUrl();
        java.lang.String str16 = myDataCenterInstanceConfig10.getStatusPageUrl();
        java.lang.String str17 = myDataCenterInstanceConfig10.getNamespace();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder2.setDataCenterInfo(dataCenterInfo18);
        com.netflix.appinfo.InstanceInfo instanceInfo20 = builder2.getRawInstance();
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder2.setAppGroupName("");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder22.setHomePageUrlForDeser("http://hi!:35/Status");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(applicationInfoManager8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 30 + "'", int12 == 30);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "172.20.26.3" + "'", str14, "172.20.26.3");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test01678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01678");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        java.lang.String str6 = myDataCenterInstanceConfig2.getHealthCheckUrlPath();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager7 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo8 = applicationInfoManager7.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int11 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo12 = myDataCenterInstanceConfig10.getDataCenterInfo();
        java.lang.String str13 = myDataCenterInstanceConfig10.getNamespace();
        boolean boolean14 = myDataCenterInstanceConfig10.isNonSecurePortEnabled();
        applicationInfoManager7.config = myDataCenterInstanceConfig10;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig16 = applicationInfoManager7.config;
        com.netflix.appinfo.InstanceInfo instanceInfo17 = applicationInfoManager7.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager7.instanceInfo;
        int int19 = instanceInfo18.getSecurePort();
        int int20 = instanceInfo18.getPort();
        int int21 = instanceInfo18.getCountryId();
        boolean boolean22 = instanceInfo18.isDirty();
        int int23 = instanceInfo18.getPort();
        java.lang.String str24 = instanceInfo18.getStatusPageUrl();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager25 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig2, instanceInfo18);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager26 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig28 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int29 = myDataCenterInstanceConfig28.getLeaseRenewalIntervalInSeconds();
        int int30 = myDataCenterInstanceConfig28.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager26.config = myDataCenterInstanceConfig28;
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager26.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig34 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int35 = myDataCenterInstanceConfig34.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo36 = myDataCenterInstanceConfig34.getDataCenterInfo();
        java.lang.String str37 = myDataCenterInstanceConfig34.getHealthCheckUrl();
        int int38 = myDataCenterInstanceConfig34.getLeaseExpirationDurationInSeconds();
        applicationInfoManager26.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig34);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig41 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int42 = myDataCenterInstanceConfig41.getLeaseRenewalIntervalInSeconds();
        int int43 = myDataCenterInstanceConfig41.getLeaseRenewalIntervalInSeconds();
        java.lang.String str44 = myDataCenterInstanceConfig41.getStatusPageUrlPath();
        boolean boolean45 = myDataCenterInstanceConfig41.getSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager46 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo47 = applicationInfoManager46.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig49 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int50 = myDataCenterInstanceConfig49.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo51 = myDataCenterInstanceConfig49.getDataCenterInfo();
        java.lang.String str52 = myDataCenterInstanceConfig49.getNamespace();
        boolean boolean53 = myDataCenterInstanceConfig49.isNonSecurePortEnabled();
        applicationInfoManager46.config = myDataCenterInstanceConfig49;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig55 = applicationInfoManager46.config;
        com.netflix.appinfo.InstanceInfo instanceInfo56 = applicationInfoManager46.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo57 = applicationInfoManager46.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType58 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo57.setActionType(actionType58);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager60 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo61 = applicationInfoManager60.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig63 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int64 = myDataCenterInstanceConfig63.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo65 = myDataCenterInstanceConfig63.getDataCenterInfo();
        java.lang.String str66 = myDataCenterInstanceConfig63.getNamespace();
        boolean boolean67 = myDataCenterInstanceConfig63.isNonSecurePortEnabled();
        applicationInfoManager60.config = myDataCenterInstanceConfig63;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig69 = applicationInfoManager60.config;
        com.netflix.appinfo.InstanceInfo instanceInfo70 = applicationInfoManager60.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo71 = applicationInfoManager60.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType72 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo71.setActionType(actionType72);
        instanceInfo57.setActionType(actionType72);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager75 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig41, instanceInfo57);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus77 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("inesserver2.windows.cin.ufpe.br:80");
        instanceInfo57.setOverriddenStatus(instanceStatus77);
        applicationInfoManager26.setInstanceStatus(instanceStatus77);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager80 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig82 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int83 = myDataCenterInstanceConfig82.getLeaseRenewalIntervalInSeconds();
        int int84 = myDataCenterInstanceConfig82.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager80.config = myDataCenterInstanceConfig82;
        java.lang.String str86 = myDataCenterInstanceConfig82.getHealthCheckUrlPath();
        java.lang.String str87 = myDataCenterInstanceConfig82.getNamespace();
        java.util.Map<java.lang.String, java.lang.String> strMap88 = myDataCenterInstanceConfig82.getMetadataMap();
        applicationInfoManager26.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig82);
        com.netflix.appinfo.InstanceInfo instanceInfo90 = applicationInfoManager26.instanceInfo;
        int int91 = instanceInfo90.getSecurePort();
        applicationInfoManager25.instanceInfo = instanceInfo90;
        com.netflix.appinfo.InstanceInfo instanceInfo93 = applicationInfoManager25.getInfo();
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager25;
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "/healthcheck" + "'", str6, "/healthcheck");
        org.junit.Assert.assertNotNull(applicationInfoManager7);
        org.junit.Assert.assertNotNull(instanceInfo8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig16);
        org.junit.Assert.assertNotNull(instanceInfo17);
        org.junit.Assert.assertNotNull(instanceInfo18);
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 443 + "'", int19 == 443);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 80 + "'", int20 == 80);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
// flaky:         org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 80 + "'", int23 == 80);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str24, "http://inesserver2.windows.cin.ufpe.br:80/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 30 + "'", int29 == 30);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 30 + "'", int30 == 30);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 30 + "'", int35 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 90 + "'", int38 == 90);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 30 + "'", int43 == 30);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "/Status" + "'", str44, "/Status");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager46);
        org.junit.Assert.assertNotNull(instanceInfo47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 30 + "'", int50 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig55);
        org.junit.Assert.assertNotNull(instanceInfo56);
        org.junit.Assert.assertNotNull(instanceInfo57);
        org.junit.Assert.assertTrue("'" + actionType58 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType58.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager60);
        org.junit.Assert.assertNotNull(instanceInfo61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 30 + "'", int64 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig69);
        org.junit.Assert.assertNotNull(instanceInfo70);
        org.junit.Assert.assertNotNull(instanceInfo71);
        org.junit.Assert.assertTrue("'" + actionType72 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType72.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + instanceStatus77 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus77.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(applicationInfoManager80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 30 + "'", int83 == 30);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 30 + "'", int84 == 30);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "/healthcheck" + "'", str86, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(instanceInfo90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 443 + "'", int91 == 443);
        org.junit.Assert.assertNotNull(instanceInfo93);
    }

    @Test
    public void test01679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01679");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder7.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder9.add("http://inesserver2.windows.cin.ufpe.br:80/Status", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager13 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig14 = applicationInfoManager13.config;
        com.netflix.appinfo.InstanceInfo instanceInfo15 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager16 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig14, instanceInfo15);
        com.netflix.appinfo.InstanceInfo instanceInfo17 = null;
        applicationInfoManager16.instanceInfo = instanceInfo17;
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager16.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager20 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig22 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int23 = myDataCenterInstanceConfig22.getLeaseRenewalIntervalInSeconds();
        int int24 = myDataCenterInstanceConfig22.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager20.config = myDataCenterInstanceConfig22;
        java.lang.String str26 = myDataCenterInstanceConfig22.getIpAddress();
        java.lang.String str27 = myDataCenterInstanceConfig22.getVirtualHostName();
        java.lang.String str29 = myDataCenterInstanceConfig22.getHostName(true);
        applicationInfoManager16.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig22);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus31 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        applicationInfoManager16.setInstanceStatus(instanceStatus31);
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder12.setStatus(instanceStatus31);
        com.netflix.appinfo.InstanceInfo.Builder builder35 = builder12.setLastDirtyTimestamp(1636105971573L);
        com.netflix.appinfo.InstanceInfo.Builder builder37 = builder12.setAppGroupName("HTTP://HI!:80/STATUS");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(applicationInfoManager13);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig14);
        org.junit.Assert.assertNull(instanceInfo19);
        org.junit.Assert.assertNotNull(applicationInfoManager20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 30 + "'", int23 == 30);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 30 + "'", int24 == 30);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "172.20.26.3" + "'", str26, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str27, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str29, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + instanceStatus31 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus31.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
    }

    @Test
    public void test01680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01680");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder18.setVIPAddressDeser("hi!");
        com.netflix.appinfo.LeaseInfo leaseInfo24 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder18.setLeaseInfo(leaseInfo24);
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder25.setHomePageUrlForDeser("/");
        com.netflix.appinfo.InstanceInfo.Builder builder28 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder28.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder28.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder28.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig35 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo36 = myDataCenterInstanceConfig35.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder37 = builder34.setDataCenterInfo(dataCenterInfo36);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig38 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo39 = myDataCenterInstanceConfig38.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder34.setDataCenterInfo(dataCenterInfo39);
        com.netflix.appinfo.InstanceInfo.Builder builder42 = builder34.setSecureVIPAddressDeser("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo43 = builder34.build();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager44 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo45 = applicationInfoManager44.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig47 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int48 = myDataCenterInstanceConfig47.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo49 = myDataCenterInstanceConfig47.getDataCenterInfo();
        java.lang.String str50 = myDataCenterInstanceConfig47.getNamespace();
        boolean boolean51 = myDataCenterInstanceConfig47.isNonSecurePortEnabled();
        applicationInfoManager44.config = myDataCenterInstanceConfig47;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig53 = applicationInfoManager44.config;
        com.netflix.appinfo.InstanceInfo instanceInfo54 = applicationInfoManager44.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo55 = applicationInfoManager44.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType56 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo55.setActionType(actionType56);
        com.netflix.appinfo.LeaseInfo leaseInfo58 = null;
        instanceInfo55.setLeaseInfo(leaseInfo58);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager60 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo61 = applicationInfoManager60.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig63 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int64 = myDataCenterInstanceConfig63.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo65 = myDataCenterInstanceConfig63.getDataCenterInfo();
        java.lang.String str66 = myDataCenterInstanceConfig63.getNamespace();
        boolean boolean67 = myDataCenterInstanceConfig63.isNonSecurePortEnabled();
        applicationInfoManager60.config = myDataCenterInstanceConfig63;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig69 = applicationInfoManager60.config;
        com.netflix.appinfo.InstanceInfo instanceInfo70 = applicationInfoManager60.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo71 = applicationInfoManager60.instanceInfo;
        int int72 = instanceInfo71.getSecurePort();
        boolean boolean73 = instanceInfo71.isDirty();
        java.lang.String str74 = instanceInfo71.getHostName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus75 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        instanceInfo71.setStatus(instanceStatus75);
        com.netflix.appinfo.InstanceInfo.PortType portType77 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean78 = instanceInfo71.isPortEnabled(portType77);
        boolean boolean79 = instanceInfo55.isPortEnabled(portType77);
        com.netflix.appinfo.InstanceInfo.Builder builder81 = builder34.enablePort(portType77, false);
        com.netflix.appinfo.InstanceInfo.Builder builder83 = builder25.enablePort(portType77, false);
        com.netflix.appinfo.InstanceInfo.Builder builder86 = builder25.setStatusPageUrl("na", "");
        com.netflix.appinfo.InstanceInfo.Builder builder89 = builder86.add("172.20.26.3", "/");
        com.netflix.appinfo.InstanceInfo.Builder builder91 = builder89.setHomePageUrlForDeser("http://hi!:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder93 = builder89.setHostName("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder95 = builder89.setVIPAddressDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder98 = builder89.add("/Status", "");
        com.netflix.appinfo.InstanceInfo instanceInfo99 = builder98.build();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(dataCenterInfo36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(dataCenterInfo39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(instanceInfo43);
        org.junit.Assert.assertNotNull(applicationInfoManager44);
        org.junit.Assert.assertNotNull(instanceInfo45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 30 + "'", int48 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig53);
        org.junit.Assert.assertNotNull(instanceInfo54);
        org.junit.Assert.assertNotNull(instanceInfo55);
        org.junit.Assert.assertTrue("'" + actionType56 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType56.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager60);
        org.junit.Assert.assertNotNull(instanceInfo61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 30 + "'", int64 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig69);
        org.junit.Assert.assertNotNull(instanceInfo70);
        org.junit.Assert.assertNotNull(instanceInfo71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 443 + "'", int72 == 443);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str74, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + instanceStatus75 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus75.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertTrue("'" + portType77 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType77.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertNotNull(builder95);
        org.junit.Assert.assertNotNull(builder98);
        org.junit.Assert.assertNotNull(instanceInfo99);
    }

    @Test
    public void test01681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01681");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str5 = myDataCenterInstanceConfig1.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str7 = myDataCenterInstanceConfig1.getASGName();
        java.lang.String str8 = myDataCenterInstanceConfig1.getSecureHealthCheckUrl();
        java.lang.String str9 = myDataCenterInstanceConfig1.getNamespace();
        java.lang.String str11 = myDataCenterInstanceConfig1.getHostName(false);
        java.lang.String str12 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str5, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str11, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/healthcheck" + "'", str12, "/healthcheck");
    }

    @Test
    public void test01682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01682");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder20.add("/healthcheck", "UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setSecureVIPAddress("172.20.26.3");
        com.netflix.appinfo.InstanceInfo instanceInfo26 = builder23.getRawInstance();
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder23.setNamespace("default");
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder28.add("", "");
        com.netflix.appinfo.InstanceInfo instanceInfo32 = builder28.build();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/Status" + "'", str17, "/Status");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(instanceInfo32);
    }

    @Test
    public void test01683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01683");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setCountryId(7002);
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder0.setHealthCheckUrlsForDeser("UNKNOWN", "UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder7.setStatusPageUrlForDeser("http://hi!:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder7.setHealthCheckUrlsForDeser("na", "");
        java.lang.Class<?> wildcardClass13 = builder12.getClass();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test01684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01684");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig12 = applicationInfoManager0.config;
        applicationInfoManager0.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus14 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        applicationInfoManager0.setInstanceStatus(instanceStatus14);
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig12);
        org.junit.Assert.assertTrue("'" + instanceStatus14 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus14.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
    }

    @Test
    public void test01685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01685");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder8.setSecurePort((int) '4');
        boolean boolean13 = builder8.isInitialized();
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder8.setNamespace("http://inesserver2.windows.cin.ufpe.br:10/Status");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(builder15);
    }

    @Test
    public void test01686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01686");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder7.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder9.add("http://inesserver2.windows.cin.ufpe.br:80/Status", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager13 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager13.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig16 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int17 = myDataCenterInstanceConfig16.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig16.getDataCenterInfo();
        java.lang.String str19 = myDataCenterInstanceConfig16.getNamespace();
        boolean boolean20 = myDataCenterInstanceConfig16.isNonSecurePortEnabled();
        applicationInfoManager13.config = myDataCenterInstanceConfig16;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig22 = applicationInfoManager13.config;
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager13.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo24 = applicationInfoManager13.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType25 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo24.setActionType(actionType25);
        java.lang.String str27 = instanceInfo24.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType28 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo24.setActionType(actionType28);
        java.lang.String str30 = instanceInfo24.getHostName();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo31 = instanceInfo24.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder9.setDataCenterInfo(dataCenterInfo31);
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder9.setNamespace("DEFAULT");
        com.netflix.appinfo.InstanceInfo.Builder builder36 = builder9.setAppName("unknown");
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder40 = builder9.setHealthCheckUrls("HTTP://HI!:80/STATUS", "/healthcheck", "HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:10/STATUS");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(applicationInfoManager13);
        org.junit.Assert.assertNotNull(instanceInfo14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig22);
        org.junit.Assert.assertNotNull(instanceInfo23);
        org.junit.Assert.assertNotNull(instanceInfo24);
        org.junit.Assert.assertTrue("'" + actionType25 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType25.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "HTTP://HI!:35/STATUS" + "'", str27, "HTTP://HI!:35/STATUS");
        org.junit.Assert.assertTrue("'" + actionType28 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType28.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str30, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
    }

    @Test
    public void test01687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01687");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setSecurePort(30);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager21 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo22 = applicationInfoManager21.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int25 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig24.getDataCenterInfo();
        java.lang.String str27 = myDataCenterInstanceConfig24.getNamespace();
        boolean boolean28 = myDataCenterInstanceConfig24.isNonSecurePortEnabled();
        applicationInfoManager21.config = myDataCenterInstanceConfig24;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig30 = applicationInfoManager21.config;
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager21.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager21.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType33 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo32.setActionType(actionType33);
        com.netflix.appinfo.LeaseInfo leaseInfo35 = null;
        instanceInfo32.setLeaseInfo(leaseInfo35);
        java.util.Set<java.lang.String> strSet37 = instanceInfo32.getHealthCheckUrls();
        java.lang.String str38 = instanceInfo32.getId();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager39 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo40 = applicationInfoManager39.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig42 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int43 = myDataCenterInstanceConfig42.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo44 = myDataCenterInstanceConfig42.getDataCenterInfo();
        java.lang.String str45 = myDataCenterInstanceConfig42.getNamespace();
        boolean boolean46 = myDataCenterInstanceConfig42.isNonSecurePortEnabled();
        applicationInfoManager39.config = myDataCenterInstanceConfig42;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig48 = applicationInfoManager39.config;
        com.netflix.appinfo.InstanceInfo instanceInfo49 = applicationInfoManager39.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo50 = applicationInfoManager39.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType51 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo50.setActionType(actionType51);
        instanceInfo32.setActionType(actionType51);
        com.netflix.appinfo.InstanceInfo.PortType portType54 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        boolean boolean55 = instanceInfo32.isPortEnabled(portType54);
        com.netflix.appinfo.InstanceInfo.Builder builder57 = builder20.enablePort(portType54, false);
        com.netflix.appinfo.InstanceInfo.Builder builder59 = builder20.setSID("DEFAULT");
        com.netflix.appinfo.InstanceInfo instanceInfo60 = builder20.build();
        java.lang.String[] strArray61 = new java.lang.String[] {};
        com.netflix.appinfo.InstanceInfo instanceInfo62 = null;
        java.lang.String str63 = com.netflix.appinfo.InstanceInfo.getZone(strArray61, instanceInfo62);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager64 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo65 = applicationInfoManager64.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig67 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int68 = myDataCenterInstanceConfig67.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo69 = myDataCenterInstanceConfig67.getDataCenterInfo();
        java.lang.String str70 = myDataCenterInstanceConfig67.getNamespace();
        boolean boolean71 = myDataCenterInstanceConfig67.isNonSecurePortEnabled();
        applicationInfoManager64.config = myDataCenterInstanceConfig67;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig73 = applicationInfoManager64.config;
        com.netflix.appinfo.InstanceInfo instanceInfo74 = applicationInfoManager64.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo75 = applicationInfoManager64.instanceInfo;
        int int76 = instanceInfo75.getSecurePort();
        int int77 = instanceInfo75.getPort();
        int int78 = instanceInfo75.getSecurePort();
        java.lang.String str79 = com.netflix.appinfo.InstanceInfo.getZone(strArray61, instanceInfo75);
        java.lang.String str80 = instanceInfo75.getIPAddr();
        com.netflix.appinfo.InstanceInfo.ActionType actionType81 = instanceInfo75.getActionType();
        instanceInfo60.setActionType(actionType81);
        com.netflix.appinfo.InstanceInfo instanceInfo83 = new com.netflix.appinfo.InstanceInfo(instanceInfo60);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(applicationInfoManager21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 30 + "'", int25 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertTrue("'" + actionType33 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType33.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str38, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager39);
        org.junit.Assert.assertNotNull(instanceInfo40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 30 + "'", int43 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig48);
        org.junit.Assert.assertNotNull(instanceInfo49);
        org.junit.Assert.assertNotNull(instanceInfo50);
        org.junit.Assert.assertTrue("'" + actionType51 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType51.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + portType54 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType54.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(instanceInfo60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "default" + "'", str63, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager64);
        org.junit.Assert.assertNotNull(instanceInfo65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 30 + "'", int68 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig73);
        org.junit.Assert.assertNotNull(instanceInfo74);
        org.junit.Assert.assertNotNull(instanceInfo75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 30 + "'", int76 == 30);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 80 + "'", int77 == 80);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 30 + "'", int78 == 30);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "default" + "'", str79, "default");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "172.20.26.3" + "'", str80, "172.20.26.3");
        org.junit.Assert.assertTrue("'" + actionType81 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType81.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
    }

    @Test
    public void test01688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01688");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        java.lang.String str4 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        java.lang.String str5 = myDataCenterInstanceConfig1.getHomePageUrlPath();
        java.lang.String str6 = myDataCenterInstanceConfig1.getNamespace();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = myDataCenterInstanceConfig1.getMetadataMap();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str9 = myDataCenterInstanceConfig1.getHealthCheckUrl();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/healthcheck" + "'", str4, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/" + "'", str5, "/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test01689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01689");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder2.setHealthCheckUrlsForDeser("unknown", "172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder10.setAppName("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setSecureVIPAddress("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder14.setHealthCheckUrlsForDeser("http://inesserver2.windows.cin.ufpe.br:80/Status", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo instanceInfo18 = builder14.build();
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder14.setSID("http://inesserver2.windows.cin.ufpe.br:80/");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test01690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01690");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/healthcheck");
        java.lang.String str4 = myDataCenterInstanceConfig3.getHomePageUrlPath();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig6 = new com.netflix.appinfo.MyDataCenterInstanceConfig("http://default:80/Status", dataCenterInfo5);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/", dataCenterInfo5);
        int int8 = myDataCenterInstanceConfig7.getSecurePort();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/" + "'", str4, "/");
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 443 + "'", int8 == 443);
    }

    @Test
    public void test01691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01691");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig3.getDataCenterInfo();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig3);
        boolean boolean10 = myDataCenterInstanceConfig3.getSecurePortEnabled();
        java.lang.String str11 = myDataCenterInstanceConfig3.getSecureHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo12 = myDataCenterInstanceConfig3.getDataCenterInfo();
        boolean boolean13 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        java.lang.String str14 = myDataCenterInstanceConfig3.getAppname();
        java.lang.String str16 = myDataCenterInstanceConfig3.getHostName(false);
        java.lang.String str17 = myDataCenterInstanceConfig3.getIpAddress();
        java.lang.String str18 = myDataCenterInstanceConfig3.getHealthCheckUrlPath();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(dataCenterInfo12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "unknown" + "'", str14, "unknown");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str16, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "172.20.26.3" + "'", str17, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/healthcheck" + "'", str18, "/healthcheck");
    }

    @Test
    public void test01692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01692");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        int int9 = myDataCenterInstanceConfig3.getLeaseExpirationDurationInSeconds();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = myDataCenterInstanceConfig3.getMetadataMap();
        java.lang.String str11 = myDataCenterInstanceConfig3.getHealthCheckUrl();
        java.lang.String str12 = myDataCenterInstanceConfig3.getASGName();
        com.netflix.appinfo.InstanceInfo.Builder builder13 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder13.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder13.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder13.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig20 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo21 = myDataCenterInstanceConfig20.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder19.setDataCenterInfo(dataCenterInfo21);
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder19.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo instanceInfo25 = builder24.getRawInstance();
        java.lang.String str26 = instanceInfo25.getSID();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager27 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig3, instanceInfo25);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager28 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager28.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig31 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int32 = myDataCenterInstanceConfig31.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo33 = myDataCenterInstanceConfig31.getDataCenterInfo();
        java.lang.String str34 = myDataCenterInstanceConfig31.getNamespace();
        boolean boolean35 = myDataCenterInstanceConfig31.isNonSecurePortEnabled();
        applicationInfoManager28.config = myDataCenterInstanceConfig31;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig37 = applicationInfoManager28.config;
        com.netflix.appinfo.InstanceInfo instanceInfo38 = applicationInfoManager28.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo39 = applicationInfoManager28.instanceInfo;
        java.lang.Boolean boolean40 = instanceInfo39.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus41 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo39.setOverriddenStatus(instanceStatus41);
        instanceInfo39.setLastDirtyTimestamp((java.lang.Long) (-1L));
        int int45 = instanceInfo39.getPort();
        java.lang.String str46 = instanceInfo39.getSID();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager47 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig49 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int50 = myDataCenterInstanceConfig49.getLeaseRenewalIntervalInSeconds();
        int int51 = myDataCenterInstanceConfig49.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager47.config = myDataCenterInstanceConfig49;
        java.lang.String str53 = myDataCenterInstanceConfig49.getIpAddress();
        java.lang.String str54 = myDataCenterInstanceConfig49.getHealthCheckUrlPath();
        int int55 = myDataCenterInstanceConfig49.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager56 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo57 = applicationInfoManager56.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig59 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int60 = myDataCenterInstanceConfig59.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo61 = myDataCenterInstanceConfig59.getDataCenterInfo();
        java.lang.String str62 = myDataCenterInstanceConfig59.getNamespace();
        boolean boolean63 = myDataCenterInstanceConfig59.isNonSecurePortEnabled();
        applicationInfoManager56.config = myDataCenterInstanceConfig59;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig65 = applicationInfoManager56.config;
        com.netflix.appinfo.InstanceInfo instanceInfo66 = applicationInfoManager56.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo67 = applicationInfoManager56.instanceInfo;
        int int68 = instanceInfo67.getSecurePort();
        int int69 = instanceInfo67.getPort();
        int int70 = instanceInfo67.getCountryId();
        boolean boolean71 = instanceInfo67.isDirty();
        int int72 = instanceInfo67.getPort();
        java.lang.String str73 = instanceInfo67.getASGName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager74 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig49, instanceInfo67);
        com.netflix.appinfo.InstanceInfo.PortType portType75 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        boolean boolean76 = instanceInfo67.isPortEnabled(portType75);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager77 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo78 = applicationInfoManager77.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig80 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int81 = myDataCenterInstanceConfig80.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo82 = myDataCenterInstanceConfig80.getDataCenterInfo();
        java.lang.String str83 = myDataCenterInstanceConfig80.getNamespace();
        boolean boolean84 = myDataCenterInstanceConfig80.isNonSecurePortEnabled();
        applicationInfoManager77.config = myDataCenterInstanceConfig80;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig86 = applicationInfoManager77.config;
        com.netflix.appinfo.InstanceInfo instanceInfo87 = applicationInfoManager77.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo88 = applicationInfoManager77.instanceInfo;
        int int89 = instanceInfo88.getSecurePort();
        boolean boolean90 = instanceInfo88.isDirty();
        java.lang.String str91 = instanceInfo88.getHostName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus92 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        instanceInfo88.setStatus(instanceStatus92);
        com.netflix.appinfo.InstanceInfo.PortType portType94 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean95 = instanceInfo88.isPortEnabled(portType94);
        boolean boolean96 = instanceInfo67.isPortEnabled(portType94);
        boolean boolean97 = instanceInfo39.isPortEnabled(portType94);
        boolean boolean98 = instanceInfo25.isPortEnabled(portType94);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 90 + "'", int9 == 90);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(dataCenterInfo21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "na" + "'", str26, "na");
        org.junit.Assert.assertNotNull(applicationInfoManager28);
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 30 + "'", int32 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig37);
        org.junit.Assert.assertNotNull(instanceInfo38);
        org.junit.Assert.assertNotNull(instanceInfo39);
        org.junit.Assert.assertEquals("'" + boolean40 + "' != '" + false + "'", boolean40, false);
        org.junit.Assert.assertTrue("'" + instanceStatus41 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus41.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 7001 + "'", int45 == 7001);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "na" + "'", str46, "na");
        org.junit.Assert.assertNotNull(applicationInfoManager47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 30 + "'", int50 == 30);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 30 + "'", int51 == 30);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "172.20.26.3" + "'", str53, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "/healthcheck" + "'", str54, "/healthcheck");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertNotNull(applicationInfoManager56);
        org.junit.Assert.assertNotNull(instanceInfo57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 30 + "'", int60 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig65);
        org.junit.Assert.assertNotNull(instanceInfo66);
        org.junit.Assert.assertNotNull(instanceInfo67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 7002 + "'", int68 == 7002);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 7001 + "'", int69 == 7001);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 7001 + "'", int72 == 7001);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + portType75 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType75.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(applicationInfoManager77);
        org.junit.Assert.assertNotNull(instanceInfo78);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 30 + "'", int81 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig86);
        org.junit.Assert.assertNotNull(instanceInfo87);
        org.junit.Assert.assertNotNull(instanceInfo88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 7002 + "'", int89 == 7002);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "172.20.26.3" + "'", str91, "172.20.26.3");
        org.junit.Assert.assertTrue("'" + instanceStatus92 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus92.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertTrue("'" + portType94 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType94.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test01693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01693");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo4 = myDataCenterInstanceConfig2.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig2.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo7 = myDataCenterInstanceConfig2.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo7);
        boolean boolean9 = myDataCenterInstanceConfig8.isInstanceEnabledOnit();
        java.lang.String str10 = myDataCenterInstanceConfig8.getStatusPageUrlPath();
        java.lang.String str11 = myDataCenterInstanceConfig8.getIpAddress();
        java.lang.String str12 = myDataCenterInstanceConfig8.getHomePageUrlPath();
        java.lang.String str13 = myDataCenterInstanceConfig8.getVirtualHostName();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str6, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/Status" + "'", str10, "/Status");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "172.20.26.3" + "'", str11, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/" + "'", str12, "/");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str13, "inesserver2.windows.cin.ufpe.br:80");
    }

    @Test
    public void test01694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01694");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder18.setVIPAddressDeser("hi!");
        com.netflix.appinfo.LeaseInfo leaseInfo24 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder18.setLeaseInfo(leaseInfo24);
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder25.setHomePageUrlForDeser("/");
        com.netflix.appinfo.InstanceInfo.Builder builder28 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder28.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder28.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder28.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig35 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo36 = myDataCenterInstanceConfig35.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder37 = builder34.setDataCenterInfo(dataCenterInfo36);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig38 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo39 = myDataCenterInstanceConfig38.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder34.setDataCenterInfo(dataCenterInfo39);
        com.netflix.appinfo.InstanceInfo.Builder builder42 = builder34.setSecureVIPAddressDeser("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo43 = builder34.build();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager44 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo45 = applicationInfoManager44.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig47 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int48 = myDataCenterInstanceConfig47.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo49 = myDataCenterInstanceConfig47.getDataCenterInfo();
        java.lang.String str50 = myDataCenterInstanceConfig47.getNamespace();
        boolean boolean51 = myDataCenterInstanceConfig47.isNonSecurePortEnabled();
        applicationInfoManager44.config = myDataCenterInstanceConfig47;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig53 = applicationInfoManager44.config;
        com.netflix.appinfo.InstanceInfo instanceInfo54 = applicationInfoManager44.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo55 = applicationInfoManager44.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType56 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo55.setActionType(actionType56);
        com.netflix.appinfo.LeaseInfo leaseInfo58 = null;
        instanceInfo55.setLeaseInfo(leaseInfo58);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager60 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo61 = applicationInfoManager60.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig63 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int64 = myDataCenterInstanceConfig63.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo65 = myDataCenterInstanceConfig63.getDataCenterInfo();
        java.lang.String str66 = myDataCenterInstanceConfig63.getNamespace();
        boolean boolean67 = myDataCenterInstanceConfig63.isNonSecurePortEnabled();
        applicationInfoManager60.config = myDataCenterInstanceConfig63;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig69 = applicationInfoManager60.config;
        com.netflix.appinfo.InstanceInfo instanceInfo70 = applicationInfoManager60.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo71 = applicationInfoManager60.instanceInfo;
        int int72 = instanceInfo71.getSecurePort();
        boolean boolean73 = instanceInfo71.isDirty();
        java.lang.String str74 = instanceInfo71.getHostName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus75 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        instanceInfo71.setStatus(instanceStatus75);
        com.netflix.appinfo.InstanceInfo.PortType portType77 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean78 = instanceInfo71.isPortEnabled(portType77);
        boolean boolean79 = instanceInfo55.isPortEnabled(portType77);
        com.netflix.appinfo.InstanceInfo.Builder builder81 = builder34.enablePort(portType77, false);
        com.netflix.appinfo.InstanceInfo.Builder builder83 = builder25.enablePort(portType77, false);
        com.netflix.appinfo.InstanceInfo.Builder builder85 = builder25.setASGName("na");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "172.20.26.3" + "'", str17, "172.20.26.3");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(dataCenterInfo36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(dataCenterInfo39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(instanceInfo43);
        org.junit.Assert.assertNotNull(applicationInfoManager44);
        org.junit.Assert.assertNotNull(instanceInfo45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 30 + "'", int48 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig53);
        org.junit.Assert.assertNotNull(instanceInfo54);
        org.junit.Assert.assertNotNull(instanceInfo55);
        org.junit.Assert.assertTrue("'" + actionType56 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType56.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager60);
        org.junit.Assert.assertNotNull(instanceInfo61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 30 + "'", int64 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig69);
        org.junit.Assert.assertNotNull(instanceInfo70);
        org.junit.Assert.assertNotNull(instanceInfo71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 7002 + "'", int72 == 7002);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "172.20.26.3" + "'", str74, "172.20.26.3");
        org.junit.Assert.assertTrue("'" + instanceStatus75 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus75.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertTrue("'" + portType77 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType77.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder85);
    }

    @Test
    public void test01695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01695");
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig0 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager1 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig4.getDataCenterInfo();
        java.lang.String str7 = myDataCenterInstanceConfig4.getNamespace();
        boolean boolean8 = myDataCenterInstanceConfig4.isNonSecurePortEnabled();
        applicationInfoManager1.config = myDataCenterInstanceConfig4;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig10 = applicationInfoManager1.config;
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager1.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager1.instanceInfo;
        int int13 = instanceInfo12.getSecurePort();
        boolean boolean14 = instanceInfo12.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig0, instanceInfo12);
        int int16 = instanceInfo12.getCountryId();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager17 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager17.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig20 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int21 = myDataCenterInstanceConfig20.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = myDataCenterInstanceConfig20.getDataCenterInfo();
        java.lang.String str23 = myDataCenterInstanceConfig20.getNamespace();
        boolean boolean24 = myDataCenterInstanceConfig20.isNonSecurePortEnabled();
        applicationInfoManager17.config = myDataCenterInstanceConfig20;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig26 = applicationInfoManager17.config;
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager17.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager17.instanceInfo;
        int int29 = instanceInfo28.getSecurePort();
        boolean boolean30 = instanceInfo28.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = new com.netflix.appinfo.InstanceInfo(instanceInfo28);
        com.netflix.appinfo.InstanceInfo instanceInfo32 = new com.netflix.appinfo.InstanceInfo(instanceInfo28);
        int int33 = instanceInfo28.getSecurePort();
        java.lang.String str34 = instanceInfo28.getSecureVipAddress();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus36 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("");
        instanceInfo28.setStatusWithoutDirty(instanceStatus36);
        instanceInfo12.setStatusWithoutDirty(instanceStatus36);
        java.lang.String str39 = instanceInfo12.getStatusPageUrl();
        long long40 = instanceInfo12.getLastUpdatedTimestamp();
        org.junit.Assert.assertNotNull(applicationInfoManager1);
        org.junit.Assert.assertNotNull(instanceInfo2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 7002 + "'", int13 == 7002);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(applicationInfoManager17);
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 30 + "'", int21 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 7002 + "'", int29 == 7002);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 7002 + "'", int33 == 7002);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "/healthcheck" + "'", str34, "/healthcheck");
        org.junit.Assert.assertTrue("'" + instanceStatus36 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus36.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNull(str39);
// flaky:         org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1636106053999L + "'", long40 == 1636106053999L);
    }

    @Test
    public void test01696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01696");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig12 = applicationInfoManager0.config;
        applicationInfoManager0.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig15 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int16 = myDataCenterInstanceConfig15.getLeaseRenewalIntervalInSeconds();
        int int17 = myDataCenterInstanceConfig15.getLeaseRenewalIntervalInSeconds();
        java.lang.String str18 = myDataCenterInstanceConfig15.getStatusPageUrlPath();
        boolean boolean19 = myDataCenterInstanceConfig15.getSecurePortEnabled();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager21 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig15, instanceInfo20);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig23 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int24 = myDataCenterInstanceConfig23.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = myDataCenterInstanceConfig23.getDataCenterInfo();
        java.lang.String str26 = myDataCenterInstanceConfig23.getNamespace();
        applicationInfoManager21.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig23);
        java.lang.String str28 = myDataCenterInstanceConfig23.getNamespace();
        applicationInfoManager0.config = myDataCenterInstanceConfig23;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig31 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int32 = myDataCenterInstanceConfig31.getLeaseRenewalIntervalInSeconds();
        boolean boolean33 = myDataCenterInstanceConfig31.isInstanceEnabledOnit();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo34 = myDataCenterInstanceConfig31.getDataCenterInfo();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = myDataCenterInstanceConfig31.getMetadataMap();
        applicationInfoManager0.registerAppMetadata(strMap35);
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig37 = null;
        // The following exception was thrown during execution in test generation
        try {
            applicationInfoManager0.initComponent(eurekaInstanceConfig37);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: Failed to initialize ApplicationInfoManager");
        } catch (java.lang.RuntimeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 30 + "'", int16 == 30);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/Status" + "'", str18, "/Status");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 30 + "'", int24 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 30 + "'", int32 == 30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(dataCenterInfo34);
        org.junit.Assert.assertNotNull(strMap35);
    }

    @Test
    public void test01697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01697");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        int int13 = instanceInfo11.getPort();
        int int14 = instanceInfo11.getCountryId();
        boolean boolean15 = instanceInfo11.isDirty();
        int int16 = instanceInfo11.getPort();
        int int17 = instanceInfo11.getPort();
        java.lang.String str18 = instanceInfo11.getHomePageUrl();
        java.lang.String[] strArray19 = new java.lang.String[] {};
        com.netflix.appinfo.InstanceInfo instanceInfo20 = null;
        java.lang.String str21 = com.netflix.appinfo.InstanceInfo.getZone(strArray19, instanceInfo20);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager22 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager22.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig25 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int26 = myDataCenterInstanceConfig25.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo27 = myDataCenterInstanceConfig25.getDataCenterInfo();
        java.lang.String str28 = myDataCenterInstanceConfig25.getNamespace();
        boolean boolean29 = myDataCenterInstanceConfig25.isNonSecurePortEnabled();
        applicationInfoManager22.config = myDataCenterInstanceConfig25;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig31 = applicationInfoManager22.config;
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager22.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo33 = applicationInfoManager22.instanceInfo;
        int int34 = instanceInfo33.getSecurePort();
        int int35 = instanceInfo33.getPort();
        int int36 = instanceInfo33.getSecurePort();
        java.lang.String str37 = com.netflix.appinfo.InstanceInfo.getZone(strArray19, instanceInfo33);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager38 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo39 = applicationInfoManager38.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig41 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int42 = myDataCenterInstanceConfig41.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo43 = myDataCenterInstanceConfig41.getDataCenterInfo();
        java.lang.String str44 = myDataCenterInstanceConfig41.getNamespace();
        boolean boolean45 = myDataCenterInstanceConfig41.isNonSecurePortEnabled();
        applicationInfoManager38.config = myDataCenterInstanceConfig41;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig47 = applicationInfoManager38.config;
        com.netflix.appinfo.InstanceInfo instanceInfo48 = applicationInfoManager38.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo49 = applicationInfoManager38.instanceInfo;
        int int50 = instanceInfo49.getSecurePort();
        boolean boolean51 = instanceInfo49.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo52 = new com.netflix.appinfo.InstanceInfo(instanceInfo49);
        com.netflix.appinfo.InstanceInfo.ActionType actionType53 = com.netflix.appinfo.InstanceInfo.ActionType.MODIFIED;
        instanceInfo49.setActionType(actionType53);
        instanceInfo33.setActionType(actionType53);
        instanceInfo11.setActionType(actionType53);
        int int57 = instanceInfo11.getPort();
        boolean boolean58 = instanceInfo11.isDirty();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 80 + "'", int13 == 80);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 80 + "'", int16 == 80);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 80 + "'", int17 == 80);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str18, "http://inesserver2.windows.cin.ufpe.br:80/");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "default" + "'", str21, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager22);
        org.junit.Assert.assertNotNull(instanceInfo23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 30 + "'", int26 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig31);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 443 + "'", int34 == 443);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 80 + "'", int35 == 80);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 443 + "'", int36 == 443);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "default" + "'", str37, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager38);
        org.junit.Assert.assertNotNull(instanceInfo39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig47);
        org.junit.Assert.assertNotNull(instanceInfo48);
        org.junit.Assert.assertNotNull(instanceInfo49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 443 + "'", int50 == 443);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + actionType53 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.MODIFIED + "'", actionType53.equals(com.netflix.appinfo.InstanceInfo.ActionType.MODIFIED));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 80 + "'", int57 == 80);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test01698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01698");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setIPAddr("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.LeaseInfo leaseInfo7 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setLeaseInfo(leaseInfo7);
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder6.setSecurePort((int) (short) 0);
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder10.setNamespace("UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder10.setPort((int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder17 = builder10.setHomePageUrl("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:10/STATUS", "/Status");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test01699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01699");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        boolean boolean13 = instanceInfo11.isDirty();
        boolean boolean14 = instanceInfo11.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo15 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        java.lang.String str16 = instanceInfo15.getVersion();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "unknown" + "'", str16, "unknown");
    }

    @Test
    public void test01700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01700");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder2.setHealthCheckUrlsForDeser("unknown", "172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder2.setAppName("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder2.setAppName("");
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder18 = builder14.setHealthCheckUrls("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:10/STATUS", "http:///:80/Status", "unknown");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test01701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01701");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        java.lang.Boolean boolean12 = instanceInfo11.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus13 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo11.setOverriddenStatus(instanceStatus13);
        instanceInfo11.setLastDirtyTimestamp((java.lang.Long) (-1L));
        com.netflix.appinfo.DataCenterInfo dataCenterInfo17 = instanceInfo11.getDataCenterInfo();
        instanceInfo11.setSID("default");
        long long20 = instanceInfo11.getLastUpdatedTimestamp();
        int int21 = instanceInfo11.getPort();
        java.lang.String str22 = instanceInfo11.getHomePageUrl();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + true + "'", boolean12, true);
        org.junit.Assert.assertTrue("'" + instanceStatus13 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus13.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(dataCenterInfo17);
// flaky:         org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1636106054202L + "'", long20 == 1636106054202L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 80 + "'", int21 == 80);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str22, "http://inesserver2.windows.cin.ufpe.br:80/");
    }

    @Test
    public void test01702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01702");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        int int4 = myDataCenterInstanceConfig1.getSecurePort();
        boolean boolean5 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        java.lang.String str6 = myDataCenterInstanceConfig1.getSecureHealthCheckUrl();
        java.lang.String str7 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        boolean boolean8 = myDataCenterInstanceConfig1.isInstanceEnabledOnit();
        boolean boolean9 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 443 + "'", int4 == 443);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/healthcheck" + "'", str7, "/healthcheck");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test01703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01703");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder18.add("na", "/");
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder18.add("/Status", "");
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder27.setASGName("http://default:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder27.setASGName("unknown");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
    }

    @Test
    public void test01704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01704");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        com.netflix.appinfo.InstanceInfo instanceInfo1 = null;
        java.lang.String str2 = com.netflix.appinfo.InstanceInfo.getZone(strArray0, instanceInfo1);
        com.netflix.appinfo.InstanceInfo instanceInfo3 = null;
        java.lang.String str4 = com.netflix.appinfo.InstanceInfo.getZone(strArray0, instanceInfo3);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager5 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo6 = applicationInfoManager5.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int9 = myDataCenterInstanceConfig8.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo10 = myDataCenterInstanceConfig8.getDataCenterInfo();
        java.lang.String str11 = myDataCenterInstanceConfig8.getNamespace();
        boolean boolean12 = myDataCenterInstanceConfig8.isNonSecurePortEnabled();
        applicationInfoManager5.config = myDataCenterInstanceConfig8;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig14 = applicationInfoManager5.config;
        com.netflix.appinfo.InstanceInfo instanceInfo15 = applicationInfoManager5.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo16 = applicationInfoManager5.instanceInfo;
        int int17 = instanceInfo16.getSecurePort();
        boolean boolean18 = instanceInfo16.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo19 = new com.netflix.appinfo.InstanceInfo(instanceInfo16);
        com.netflix.appinfo.InstanceInfo instanceInfo20 = new com.netflix.appinfo.InstanceInfo(instanceInfo16);
        java.lang.String str21 = instanceInfo16.getAppGroupName();
        int int22 = instanceInfo16.getCountryId();
        java.lang.String str23 = com.netflix.appinfo.InstanceInfo.getZone(strArray0, instanceInfo16);
        java.lang.String str24 = instanceInfo16.getHomePageUrl();
        instanceInfo16.setLastDirtyTimestamp((java.lang.Long) 1636106002439L);
        instanceInfo16.setIsCoordinatingDiscoveryServer();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "default" + "'", str2, "default");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "default" + "'", str4, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager5);
        org.junit.Assert.assertNotNull(instanceInfo6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 30 + "'", int9 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertNotNull(instanceInfo16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 443 + "'", int17 == 443);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UNKNOWN" + "'", str21, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "default" + "'", str23, "default");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str24, "http://inesserver2.windows.cin.ufpe.br:80/");
    }

    @Test
    public void test01705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01705");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = instanceInfo11.getStatusPageUrl();
        java.lang.String str15 = instanceInfo11.getVersion();
        instanceInfo11.setLastDirtyTimestamp((java.lang.Long) 10L);
        instanceInfo11.setLastDirtyTimestamp((java.lang.Long) 0L);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "/Status", "default", "inesserver2.windows.cin.ufpe.br:80", "default", "default" };
        com.netflix.appinfo.InstanceInfo instanceInfo27 = null;
        java.lang.String str28 = com.netflix.appinfo.InstanceInfo.getZone(strArray26, instanceInfo27);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager29 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager29.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig32 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int33 = myDataCenterInstanceConfig32.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo34 = myDataCenterInstanceConfig32.getDataCenterInfo();
        java.lang.String str35 = myDataCenterInstanceConfig32.getNamespace();
        boolean boolean36 = myDataCenterInstanceConfig32.isNonSecurePortEnabled();
        applicationInfoManager29.config = myDataCenterInstanceConfig32;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig38 = applicationInfoManager29.config;
        com.netflix.appinfo.InstanceInfo instanceInfo39 = applicationInfoManager29.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo40 = applicationInfoManager29.instanceInfo;
        int int41 = instanceInfo40.getSecurePort();
        java.lang.String str42 = instanceInfo40.getSID();
        instanceInfo40.setLastDirtyTimestamp((java.lang.Long) 0L);
        java.lang.String str45 = com.netflix.appinfo.InstanceInfo.getZone(strArray26, instanceInfo40);
        java.lang.String str46 = instanceInfo40.getId();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager47 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo48 = applicationInfoManager47.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig50 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int51 = myDataCenterInstanceConfig50.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo52 = myDataCenterInstanceConfig50.getDataCenterInfo();
        java.lang.String str53 = myDataCenterInstanceConfig50.getNamespace();
        boolean boolean54 = myDataCenterInstanceConfig50.isNonSecurePortEnabled();
        applicationInfoManager47.config = myDataCenterInstanceConfig50;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig56 = applicationInfoManager47.config;
        com.netflix.appinfo.InstanceInfo instanceInfo57 = applicationInfoManager47.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo58 = applicationInfoManager47.instanceInfo;
        java.lang.Boolean boolean59 = instanceInfo58.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus60 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo58.setOverriddenStatus(instanceStatus60);
        int int62 = instanceInfo58.getSecurePort();
        java.lang.String str63 = instanceInfo58.getHostName();
        java.util.Map<java.lang.String, java.lang.String> strMap64 = instanceInfo58.getMetadata();
        instanceInfo58.setIsDirty(false);
        com.netflix.appinfo.LeaseInfo leaseInfo67 = instanceInfo58.getLeaseInfo();
        instanceInfo40.setLeaseInfo(leaseInfo67);
        instanceInfo11.setLeaseInfo(leaseInfo67);
        long long70 = instanceInfo11.getLastUpdatedTimestamp();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig71 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager72 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo73 = applicationInfoManager72.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig75 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int76 = myDataCenterInstanceConfig75.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo77 = myDataCenterInstanceConfig75.getDataCenterInfo();
        java.lang.String str78 = myDataCenterInstanceConfig75.getNamespace();
        boolean boolean79 = myDataCenterInstanceConfig75.isNonSecurePortEnabled();
        applicationInfoManager72.config = myDataCenterInstanceConfig75;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig81 = applicationInfoManager72.config;
        com.netflix.appinfo.InstanceInfo instanceInfo82 = applicationInfoManager72.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo83 = applicationInfoManager72.instanceInfo;
        int int84 = instanceInfo83.getSecurePort();
        boolean boolean85 = instanceInfo83.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager86 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig71, instanceInfo83);
        instanceInfo83.setSID("unknown");
        java.lang.String str89 = instanceInfo83.getId();
        int int90 = instanceInfo83.getPort();
        java.lang.String str91 = instanceInfo83.getVIPAddress();
        com.netflix.appinfo.LeaseInfo leaseInfo92 = instanceInfo83.getLeaseInfo();
        instanceInfo11.setLeaseInfo(leaseInfo92);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "http://hi!:80/Status" + "'", str14, "http://hi!:80/Status");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "unknown" + "'", str15, "unknown");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(applicationInfoManager29);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 30 + "'", int33 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig38);
        org.junit.Assert.assertNotNull(instanceInfo39);
        org.junit.Assert.assertNotNull(instanceInfo40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 443 + "'", int41 == 443);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "default" + "'", str42, "default");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(applicationInfoManager47);
        org.junit.Assert.assertNotNull(instanceInfo48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 30 + "'", int51 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig56);
        org.junit.Assert.assertNotNull(instanceInfo57);
        org.junit.Assert.assertNotNull(instanceInfo58);
        org.junit.Assert.assertEquals("'" + boolean59 + "' != '" + true + "'", boolean59, true);
        org.junit.Assert.assertTrue("'" + instanceStatus60 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus60.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 443 + "'", int62 == 443);
// flaky:         org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNull(leaseInfo67);
// flaky:         org.junit.Assert.assertTrue("'" + long70 + "' != '" + 1636106054355L + "'", long70 == 1636106054355L);
        org.junit.Assert.assertNotNull(applicationInfoManager72);
        org.junit.Assert.assertNotNull(instanceInfo73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 30 + "'", int76 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig81);
        org.junit.Assert.assertNotNull(instanceInfo82);
        org.junit.Assert.assertNotNull(instanceInfo83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 443 + "'", int84 == 443);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str89 + "' != '" + "hi!" + "'", str89, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int90 + "' != '" + 443 + "'", int90 == 443);
// flaky:         org.junit.Assert.assertEquals("'" + str91 + "' != '" + "HI!" + "'", str91, "HI!");
        org.junit.Assert.assertNull(leaseInfo92);
    }

    @Test
    public void test01706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01706");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        boolean boolean2 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager4 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo5 = applicationInfoManager4.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int8 = myDataCenterInstanceConfig7.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo9 = myDataCenterInstanceConfig7.getDataCenterInfo();
        java.lang.String str10 = myDataCenterInstanceConfig7.getNamespace();
        boolean boolean11 = myDataCenterInstanceConfig7.isNonSecurePortEnabled();
        applicationInfoManager4.config = myDataCenterInstanceConfig7;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig13 = applicationInfoManager4.config;
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager4.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo15 = applicationInfoManager4.instanceInfo;
        int int16 = instanceInfo15.getSecurePort();
        instanceInfo15.setIsCoordinatingDiscoveryServer();
        int int18 = instanceInfo15.getSecurePort();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = instanceInfo15.getMetadata();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager20 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo15);
        java.lang.String str21 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(applicationInfoManager4);
        org.junit.Assert.assertNotNull(instanceInfo5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig13);
        org.junit.Assert.assertNotNull(instanceInfo14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 443 + "'", int16 == 443);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 443 + "'", int18 == 443);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "/healthcheck" + "'", str21, "/healthcheck");
    }

    @Test
    public void test01707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01707");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setSecurePort((-1));
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder4.setStatusPageUrlForDeser("UNKNOWN");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
    }

    @Test
    public void test01708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01708");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        com.netflix.appinfo.InstanceInfo.PortType portType13 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean14 = instanceInfo11.isPortEnabled(portType13);
        int int15 = instanceInfo11.getCountryId();
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        com.netflix.appinfo.InstanceInfo.Builder builder17 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        java.lang.Boolean boolean18 = instanceInfo11.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo instanceInfo19 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertTrue("'" + portType13 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType13.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + true + "'", boolean18, true);
    }

    @Test
    public void test01709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01709");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setCountryId(7002);
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder4.setSecurePort((int) (byte) 10);
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder4.setIPAddr("/");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder4.setCountryId((int) (byte) 100);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test01710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01710");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager1 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        int int5 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager1.config = myDataCenterInstanceConfig3;
        java.lang.String str7 = myDataCenterInstanceConfig3.getIpAddress();
        java.lang.String str8 = myDataCenterInstanceConfig3.getHealthCheckUrl();
        java.lang.String str9 = myDataCenterInstanceConfig3.getStatusPageUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo10 = myDataCenterInstanceConfig3.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig11 = new com.netflix.appinfo.MyDataCenterInstanceConfig("http://hi!:35/Status", dataCenterInfo10);
        java.lang.String str12 = myDataCenterInstanceConfig11.getIpAddress();
        org.junit.Assert.assertNotNull(applicationInfoManager1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "172.20.26.3" + "'", str7, "172.20.26.3");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(dataCenterInfo10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "172.20.26.3" + "'", str12, "172.20.26.3");
    }

    @Test
    public void test01711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01711");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig14 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str15 = myDataCenterInstanceConfig14.getIpAddress();
        java.lang.String str16 = myDataCenterInstanceConfig14.getASGName();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo17 = myDataCenterInstanceConfig14.getDataCenterInfo();
        java.lang.String str18 = myDataCenterInstanceConfig14.getAppGroupName();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig14);
        int int20 = myDataCenterInstanceConfig14.getLeaseRenewalIntervalInSeconds();
        boolean boolean21 = myDataCenterInstanceConfig14.isInstanceEnabledOnit();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "172.20.26.3" + "'", str15, "172.20.26.3");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(dataCenterInfo17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "unknown" + "'", str18, "unknown");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 30 + "'", int20 == 30);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test01712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01712");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int9 = myDataCenterInstanceConfig8.getLeaseRenewalIntervalInSeconds();
        int int10 = myDataCenterInstanceConfig8.getLeaseRenewalIntervalInSeconds();
        java.lang.String str11 = myDataCenterInstanceConfig8.getStatusPageUrlPath();
        boolean boolean12 = myDataCenterInstanceConfig8.getSecurePortEnabled();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = myDataCenterInstanceConfig8.getMetadataMap();
        applicationInfoManager0.config = myDataCenterInstanceConfig8;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig17 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int18 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        int int19 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager15.config = myDataCenterInstanceConfig17;
        java.lang.String str21 = myDataCenterInstanceConfig17.getHealthCheckUrlPath();
        java.lang.String str22 = myDataCenterInstanceConfig17.getNamespace();
        java.lang.String str23 = myDataCenterInstanceConfig17.getASGName();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig17);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig26 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int27 = myDataCenterInstanceConfig26.getLeaseRenewalIntervalInSeconds();
        java.lang.String str28 = myDataCenterInstanceConfig26.getVirtualHostName();
        java.lang.String str29 = myDataCenterInstanceConfig26.getASGName();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig26);
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig31 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager0.getInfo();
        instanceInfo32.setLastDirtyTimestamp((java.lang.Long) 1636106008135L);
        com.netflix.appinfo.InstanceInfo.Builder builder35 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder37 = builder35.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder37.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo41 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder42 = builder37.setLeaseInfo(leaseInfo41);
        com.netflix.appinfo.InstanceInfo.Builder builder44 = builder42.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder47 = builder44.add("http://inesserver2.windows.cin.ufpe.br:80/Status", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder49 = builder47.setSID("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder51 = builder47.setHomePageUrlForDeser("na");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager52 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo53 = applicationInfoManager52.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig55 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int56 = myDataCenterInstanceConfig55.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo57 = myDataCenterInstanceConfig55.getDataCenterInfo();
        java.lang.String str58 = myDataCenterInstanceConfig55.getNamespace();
        boolean boolean59 = myDataCenterInstanceConfig55.isNonSecurePortEnabled();
        applicationInfoManager52.config = myDataCenterInstanceConfig55;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig61 = applicationInfoManager52.config;
        com.netflix.appinfo.InstanceInfo instanceInfo62 = applicationInfoManager52.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo63 = applicationInfoManager52.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType64 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo63.setActionType(actionType64);
        com.netflix.appinfo.LeaseInfo leaseInfo66 = null;
        instanceInfo63.setLeaseInfo(leaseInfo66);
        java.util.Set<java.lang.String> strSet68 = instanceInfo63.getHealthCheckUrls();
        java.lang.String str69 = instanceInfo63.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder70 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo63);
        com.netflix.appinfo.InstanceInfo.Builder builder73 = builder70.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder75 = builder73.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus76 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        com.netflix.appinfo.InstanceInfo.Builder builder77 = builder73.setStatus(instanceStatus76);
        com.netflix.appinfo.InstanceInfo.Builder builder78 = builder47.setOverriddenStatus(instanceStatus76);
        boolean boolean79 = instanceInfo32.equals((java.lang.Object) builder78);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 30 + "'", int9 == 30);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/Status" + "'", str11, "/Status");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(applicationInfoManager15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 30 + "'", int18 == 30);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 30 + "'", int19 == 30);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "/healthcheck" + "'", str21, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 30 + "'", int27 == 30);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str28, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig31);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(applicationInfoManager52);
        org.junit.Assert.assertNotNull(instanceInfo53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 30 + "'", int56 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig61);
        org.junit.Assert.assertNotNull(instanceInfo62);
        org.junit.Assert.assertNotNull(instanceInfo63);
        org.junit.Assert.assertTrue("'" + actionType64 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType64.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str69, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + instanceStatus76 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus76.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test01713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01713");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrl();
        java.lang.String str6 = myDataCenterInstanceConfig1.getHostName(false);
        java.lang.String str7 = myDataCenterInstanceConfig1.getHomePageUrlPath();
        java.lang.String str8 = myDataCenterInstanceConfig1.getHealthCheckUrl();
        java.lang.String str9 = myDataCenterInstanceConfig1.getASGName();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str6, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/" + "'", str7, "/");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test01714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01714");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager18 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager18.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int22 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo23 = myDataCenterInstanceConfig21.getDataCenterInfo();
        java.lang.String str24 = myDataCenterInstanceConfig21.getNamespace();
        boolean boolean25 = myDataCenterInstanceConfig21.isNonSecurePortEnabled();
        applicationInfoManager18.config = myDataCenterInstanceConfig21;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig27 = applicationInfoManager18.config;
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager18.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager18.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType30 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo29.setActionType(actionType30);
        instanceInfo11.setActionType(actionType30);
        java.lang.String str33 = instanceInfo11.getSID();
        java.lang.String str34 = instanceInfo11.getVIPAddress();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager35 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo36 = applicationInfoManager35.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig38 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int39 = myDataCenterInstanceConfig38.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo40 = myDataCenterInstanceConfig38.getDataCenterInfo();
        java.lang.String str41 = myDataCenterInstanceConfig38.getNamespace();
        boolean boolean42 = myDataCenterInstanceConfig38.isNonSecurePortEnabled();
        applicationInfoManager35.config = myDataCenterInstanceConfig38;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig44 = applicationInfoManager35.config;
        com.netflix.appinfo.InstanceInfo instanceInfo45 = applicationInfoManager35.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo46 = applicationInfoManager35.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType47 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo46.setActionType(actionType47);
        com.netflix.appinfo.LeaseInfo leaseInfo49 = null;
        instanceInfo46.setLeaseInfo(leaseInfo49);
        java.util.Set<java.lang.String> strSet51 = instanceInfo46.getHealthCheckUrls();
        java.lang.String str52 = instanceInfo46.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder53 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo46);
        com.netflix.appinfo.InstanceInfo.Builder builder55 = builder53.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder58 = builder53.setHealthCheckUrlsForDeser("", "hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder61 = builder53.setStatusPageUrl("default", "");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager62 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo63 = applicationInfoManager62.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig65 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int66 = myDataCenterInstanceConfig65.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo67 = myDataCenterInstanceConfig65.getDataCenterInfo();
        java.lang.String str68 = myDataCenterInstanceConfig65.getNamespace();
        boolean boolean69 = myDataCenterInstanceConfig65.isNonSecurePortEnabled();
        applicationInfoManager62.config = myDataCenterInstanceConfig65;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig71 = applicationInfoManager62.config;
        com.netflix.appinfo.InstanceInfo instanceInfo72 = applicationInfoManager62.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo73 = applicationInfoManager62.instanceInfo;
        int int74 = instanceInfo73.getSecurePort();
        com.netflix.appinfo.InstanceInfo.PortType portType75 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean76 = instanceInfo73.isPortEnabled(portType75);
        com.netflix.appinfo.InstanceInfo.Builder builder78 = builder53.enablePort(portType75, true);
        boolean boolean79 = instanceInfo11.isPortEnabled(portType75);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 30 + "'", int22 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertTrue("'" + actionType30 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType30.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "na" + "'", str33, "na");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str34, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNotNull(applicationInfoManager35);
        org.junit.Assert.assertNotNull(instanceInfo36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 30 + "'", int39 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig44);
        org.junit.Assert.assertNotNull(instanceInfo45);
        org.junit.Assert.assertNotNull(instanceInfo46);
        org.junit.Assert.assertTrue("'" + actionType47 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType47.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str52, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(applicationInfoManager62);
        org.junit.Assert.assertNotNull(instanceInfo63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 30 + "'", int66 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig71);
        org.junit.Assert.assertNotNull(instanceInfo72);
        org.junit.Assert.assertNotNull(instanceInfo73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 443 + "'", int74 == 443);
        org.junit.Assert.assertTrue("'" + portType75 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType75.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test01715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01715");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager18 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager18.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int22 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo23 = myDataCenterInstanceConfig21.getDataCenterInfo();
        java.lang.String str24 = myDataCenterInstanceConfig21.getNamespace();
        boolean boolean25 = myDataCenterInstanceConfig21.isNonSecurePortEnabled();
        applicationInfoManager18.config = myDataCenterInstanceConfig21;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig27 = applicationInfoManager18.config;
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager18.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager18.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType30 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo29.setActionType(actionType30);
        instanceInfo11.setActionType(actionType30);
        com.netflix.appinfo.InstanceInfo.PortType portType33 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        boolean boolean34 = instanceInfo11.isPortEnabled(portType33);
        com.netflix.appinfo.InstanceInfo instanceInfo35 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        java.lang.String str36 = instanceInfo11.getVIPAddress();
        instanceInfo11.setIsDirty(true);
        int int39 = instanceInfo11.getSecurePort();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 30 + "'", int22 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertTrue("'" + actionType30 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType30.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + portType33 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType33.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str36, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 443 + "'", int39 == 443);
    }

    @Test
    public void test01716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01716");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setSecureVIPAddress("hi!");
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus27 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder23.setStatus(instanceStatus27);
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder28.setLastDirtyTimestamp((long) 10);
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder30.setHealthCheckUrlsForDeser("UNKNOWN", "/HEALTHCHECK");
        com.netflix.appinfo.InstanceInfo.Builder builder35 = builder33.setVIPAddressDeser("/healthcheck");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + instanceStatus27 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus27.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
    }

    @Test
    public void test01717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01717");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder6.setLastDirtyTimestamp((long) (short) 10);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder14.setNamespace("unknown");
        boolean boolean17 = builder14.isInitialized();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager18 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager18.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager18;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig22 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int23 = myDataCenterInstanceConfig22.getLeaseRenewalIntervalInSeconds();
        int int24 = myDataCenterInstanceConfig22.getLeaseRenewalIntervalInSeconds();
        java.lang.String str25 = myDataCenterInstanceConfig22.getStatusPageUrlPath();
        boolean boolean26 = myDataCenterInstanceConfig22.getSecurePortEnabled();
        com.netflix.appinfo.InstanceInfo instanceInfo27 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager28 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig22, instanceInfo27);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = myDataCenterInstanceConfig22.getMetadataMap();
        applicationInfoManager18.registerAppMetadata(strMap29);
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder14.setMetadata(strMap29);
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder13.setMetadata(strMap29);
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder32.setStatusPageUrlForDeser("DEFAULT");
        com.netflix.appinfo.InstanceInfo.Builder builder36 = builder34.setAppGroupName("http://inesserver2.windows.cin.ufpe.br:10/Status");
        boolean boolean37 = builder36.isInitialized();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 30 + "'", int23 == 30);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 30 + "'", int24 == 30);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/Status" + "'", str25, "/Status");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test01718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01718");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder8.setHomePageUrlForDeser("");
        com.netflix.appinfo.LeaseInfo leaseInfo13 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setLeaseInfo(leaseInfo13);
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder12.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder16.setSID("inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder16.setAppGroupName("inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test01719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01719");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        java.lang.String str4 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        com.netflix.appinfo.InstanceInfo instanceInfo5 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager6 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo5);
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig7 = applicationInfoManager6.config;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        int int11 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        java.lang.String str12 = myDataCenterInstanceConfig9.getStatusPageUrlPath();
        applicationInfoManager6.config = myDataCenterInstanceConfig9;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager6;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager6;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig17 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int18 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        boolean boolean19 = myDataCenterInstanceConfig17.isNonSecurePortEnabled();
        java.lang.String str20 = myDataCenterInstanceConfig17.getVirtualHostName();
        applicationInfoManager6.config = myDataCenterInstanceConfig17;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager22 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig23 = applicationInfoManager22.config;
        com.netflix.appinfo.InstanceInfo instanceInfo24 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager25 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig23, instanceInfo24);
        com.netflix.appinfo.InstanceInfo instanceInfo26 = null;
        applicationInfoManager25.instanceInfo = instanceInfo26;
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager25.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager29 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig31 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int32 = myDataCenterInstanceConfig31.getLeaseRenewalIntervalInSeconds();
        int int33 = myDataCenterInstanceConfig31.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager29.config = myDataCenterInstanceConfig31;
        java.lang.String str35 = myDataCenterInstanceConfig31.getIpAddress();
        java.lang.String str36 = myDataCenterInstanceConfig31.getVirtualHostName();
        java.lang.String str38 = myDataCenterInstanceConfig31.getHostName(true);
        applicationInfoManager25.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig31);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus40 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        applicationInfoManager25.setInstanceStatus(instanceStatus40);
        com.netflix.appinfo.InstanceInfo instanceInfo42 = applicationInfoManager25.getInfo();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager43 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig45 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int46 = myDataCenterInstanceConfig45.getLeaseRenewalIntervalInSeconds();
        int int47 = myDataCenterInstanceConfig45.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager43.config = myDataCenterInstanceConfig45;
        com.netflix.appinfo.InstanceInfo instanceInfo49 = applicationInfoManager43.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig51 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int52 = myDataCenterInstanceConfig51.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo53 = myDataCenterInstanceConfig51.getDataCenterInfo();
        java.lang.String str54 = myDataCenterInstanceConfig51.getHealthCheckUrl();
        int int55 = myDataCenterInstanceConfig51.getLeaseExpirationDurationInSeconds();
        applicationInfoManager43.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig51);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager57 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo58 = applicationInfoManager57.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig60 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int61 = myDataCenterInstanceConfig60.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo62 = myDataCenterInstanceConfig60.getDataCenterInfo();
        java.lang.String str63 = myDataCenterInstanceConfig60.getNamespace();
        boolean boolean64 = myDataCenterInstanceConfig60.isNonSecurePortEnabled();
        applicationInfoManager57.config = myDataCenterInstanceConfig60;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig66 = applicationInfoManager57.config;
        com.netflix.appinfo.InstanceInfo instanceInfo67 = applicationInfoManager57.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo68 = applicationInfoManager57.instanceInfo;
        java.lang.Boolean boolean69 = instanceInfo68.isCoordinatingDiscoveryServer();
        java.lang.String str70 = instanceInfo68.getVIPAddress();
        java.util.Map<java.lang.String, java.lang.String> strMap71 = instanceInfo68.getMetadata();
        applicationInfoManager43.registerAppMetadata(strMap71);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager73 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo74 = applicationInfoManager73.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig76 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int77 = myDataCenterInstanceConfig76.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo78 = myDataCenterInstanceConfig76.getDataCenterInfo();
        java.lang.String str79 = myDataCenterInstanceConfig76.getNamespace();
        boolean boolean80 = myDataCenterInstanceConfig76.isNonSecurePortEnabled();
        applicationInfoManager73.config = myDataCenterInstanceConfig76;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig82 = applicationInfoManager73.config;
        com.netflix.appinfo.InstanceInfo instanceInfo83 = applicationInfoManager73.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo84 = applicationInfoManager73.getInfo();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig85 = applicationInfoManager73.config;
        applicationInfoManager73.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.InstanceInfo instanceInfo87 = applicationInfoManager73.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig89 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int90 = myDataCenterInstanceConfig89.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo91 = myDataCenterInstanceConfig89.getDataCenterInfo();
        java.lang.String str93 = myDataCenterInstanceConfig89.getHostName(true);
        java.util.Map<java.lang.String, java.lang.String> strMap94 = myDataCenterInstanceConfig89.getMetadataMap();
        applicationInfoManager73.registerAppMetadata(strMap94);
        applicationInfoManager43.registerAppMetadata(strMap94);
        applicationInfoManager25.registerAppMetadata(strMap94);
        // The following exception was thrown during execution in test generation
        try {
            applicationInfoManager6.registerAppMetadata(strMap94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/healthcheck" + "'", str4, "/healthcheck");
        org.junit.Assert.assertNotNull(eurekaInstanceConfig7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/Status" + "'", str12, "/Status");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 30 + "'", int18 == 30);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str20, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNotNull(applicationInfoManager22);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig23);
        org.junit.Assert.assertNull(instanceInfo28);
        org.junit.Assert.assertNotNull(applicationInfoManager29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 30 + "'", int32 == 30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 30 + "'", int33 == 30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "172.20.26.3" + "'", str35, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str36, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str38, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + instanceStatus40 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus40.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(instanceInfo42);
        org.junit.Assert.assertNotNull(applicationInfoManager43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 30 + "'", int46 == 30);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 30 + "'", int47 == 30);
        org.junit.Assert.assertNotNull(instanceInfo49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 30 + "'", int52 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 90 + "'", int55 == 90);
        org.junit.Assert.assertNotNull(applicationInfoManager57);
        org.junit.Assert.assertNotNull(instanceInfo58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig66);
        org.junit.Assert.assertNotNull(instanceInfo67);
        org.junit.Assert.assertNotNull(instanceInfo68);
        org.junit.Assert.assertEquals("'" + boolean69 + "' != '" + false + "'", boolean69, false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str70, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(applicationInfoManager73);
        org.junit.Assert.assertNotNull(instanceInfo74);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 30 + "'", int77 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig82);
        org.junit.Assert.assertNotNull(instanceInfo83);
        org.junit.Assert.assertNotNull(instanceInfo84);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig85);
        org.junit.Assert.assertNotNull(instanceInfo87);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 30 + "'", int90 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo91);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str93, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(strMap94);
    }

    @Test
    public void test01720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01720");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("hi!");
        java.lang.String str2 = myDataCenterInstanceConfig1.getStatusPageUrl();
        java.lang.String str4 = myDataCenterInstanceConfig1.getHostName(true);
        java.lang.String str5 = myDataCenterInstanceConfig1.getHomePageUrlPath();
        int int6 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str4, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/" + "'", str5, "/");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 30 + "'", int6 == 30);
    }

    @Test
    public void test01721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01721");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        java.lang.String str4 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        com.netflix.appinfo.InstanceInfo instanceInfo5 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager6 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo5);
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager6;
        com.netflix.appinfo.InstanceInfo instanceInfo8 = applicationInfoManager6.getInfo();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager6.config;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/healthcheck" + "'", str4, "/healthcheck");
        org.junit.Assert.assertNull(instanceInfo8);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
    }

    @Test
    public void test01722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01722");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = null; // flaky: instanceInfo11.getStatusPageUrl();
        java.lang.String str15 = null; // flaky: instanceInfo11.getVersion();
// flaky:         instanceInfo11.setIsCoordinatingDiscoveryServer();
// flaky:         instanceInfo11.setSID("unknown");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str14, "http://inesserver2.windows.cin.ufpe.br:80/Status");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "unknown" + "'", str15, "unknown");
    }

    @Test
    public void test01723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01723");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("http://inesserver2.windows.cin.ufpe.br:80/", "default");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager6 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo7 = applicationInfoManager6.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig9.getDataCenterInfo();
        java.lang.String str12 = myDataCenterInstanceConfig9.getNamespace();
        boolean boolean13 = myDataCenterInstanceConfig9.isNonSecurePortEnabled();
        applicationInfoManager6.config = myDataCenterInstanceConfig9;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig15 = applicationInfoManager6.config;
        com.netflix.appinfo.InstanceInfo instanceInfo16 = applicationInfoManager6.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo17 = applicationInfoManager6.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType18 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo17.setActionType(actionType18);
        com.netflix.appinfo.LeaseInfo leaseInfo20 = null;
// flaky:         instanceInfo17.setLeaseInfo(leaseInfo20);
        java.lang.String str22 = null; // flaky: instanceInfo17.getSID();
        com.netflix.appinfo.InstanceInfo instanceInfo23 = null; // flaky: new com.netflix.appinfo.InstanceInfo(instanceInfo17);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager24 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager24.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig27 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int28 = myDataCenterInstanceConfig27.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig27.getDataCenterInfo();
        java.lang.String str30 = myDataCenterInstanceConfig27.getNamespace();
        boolean boolean31 = myDataCenterInstanceConfig27.isNonSecurePortEnabled();
        applicationInfoManager24.config = myDataCenterInstanceConfig27;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig33 = applicationInfoManager24.config;
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager24.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager24.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType36 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo35.setActionType(actionType36);
        com.netflix.appinfo.LeaseInfo leaseInfo38 = null;
// flaky:         instanceInfo35.setLeaseInfo(leaseInfo38);
        java.util.Set<java.lang.String> strSet40 = null; // flaky: instanceInfo35.getHealthCheckUrls();
        java.lang.String str41 = null; // flaky: instanceInfo35.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder42 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo35);
        com.netflix.appinfo.InstanceInfo.Builder builder45 = null; // flaky: builder42.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder47 = null; // flaky: builder42.setVIPAddressDeser("hi!");
        com.netflix.appinfo.LeaseInfo leaseInfo48 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder49 = null; // flaky: builder42.setLeaseInfo(leaseInfo48);
        com.netflix.appinfo.InstanceInfo.PortType portType50 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder52 = null; // flaky: builder42.enablePort(portType50, false);
        boolean boolean53 = false; // flaky: instanceInfo17.isPortEnabled(portType50);
        com.netflix.appinfo.InstanceInfo.Builder builder55 = builder2.enablePort(portType50, false);
        com.netflix.appinfo.InstanceInfo.Builder builder57 = builder2.setVIPAddress("");
        com.netflix.appinfo.InstanceInfo.Builder builder59 = builder2.setCountryId(7001);
        com.netflix.appinfo.InstanceInfo.Builder builder61 = builder59.setCountryId(7001);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(applicationInfoManager6);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig15);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo16);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo17);
        org.junit.Assert.assertTrue("'" + actionType18 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType18.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "unknown" + "'", str22, "unknown");
        org.junit.Assert.assertNotNull(applicationInfoManager24);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 30 + "'", int28 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig33);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo34);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertTrue("'" + actionType36 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType36.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertNotNull(strSet40);
// flaky:         org.junit.Assert.assertEquals("'" + str41 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str41, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertNotNull(builder45);
// flaky:         org.junit.Assert.assertNotNull(builder47);
// flaky:         org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + portType50 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType50.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
// flaky:         org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
    }

    @Test
    public void test01724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01724");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = 0; // flaky: instanceInfo11.getSecurePort();
        int int13 = 0; // flaky: instanceInfo11.getPort();
        int int14 = 0; // flaky: instanceInfo11.getCountryId();
        boolean boolean15 = false; // flaky: instanceInfo11.isDirty();
        int int16 = 0; // flaky: instanceInfo11.getPort();
        java.lang.String str17 = null; // flaky: instanceInfo11.getStatusPageUrl();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager18 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager18.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int22 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo23 = myDataCenterInstanceConfig21.getDataCenterInfo();
        java.lang.String str24 = myDataCenterInstanceConfig21.getNamespace();
        boolean boolean25 = myDataCenterInstanceConfig21.isNonSecurePortEnabled();
        applicationInfoManager18.config = myDataCenterInstanceConfig21;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig27 = applicationInfoManager18.config;
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager18.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager18.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType30 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo29.setActionType(actionType30);
        com.netflix.appinfo.LeaseInfo leaseInfo32 = null;
// flaky:         instanceInfo29.setLeaseInfo(leaseInfo32);
        java.util.Set<java.lang.String> strSet34 = null; // flaky: instanceInfo29.getHealthCheckUrls();
        java.lang.String str35 = null; // flaky: instanceInfo29.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder36 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo29);
        com.netflix.appinfo.InstanceInfo.ActionType actionType37 = null; // flaky: instanceInfo29.getActionType();
// flaky:         instanceInfo11.setActionType(actionType37);
        java.lang.String str39 = null; // flaky: instanceInfo11.getVersion();
// flaky:         instanceInfo11.setIsDirty(true);
        java.lang.String str42 = null; // flaky: instanceInfo11.getSID();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo43 = null; // flaky: instanceInfo11.getDataCenterInfo();
        java.lang.Class<?> wildcardClass44 = null; // flaky: instanceInfo11.getClass();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
// flaky:         org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "http://hi!:80/Status" + "'", str17, "http://hi!:80/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager18);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 30 + "'", int22 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig27);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo28);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertTrue("'" + actionType30 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType30.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertNotNull(strSet34);
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + actionType37 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType37.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "unknown" + "'", str39, "unknown");
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "na" + "'", str42, "na");
// flaky:         org.junit.Assert.assertNotNull(dataCenterInfo43);
// flaky:         org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test01725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01725");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str2 = myDataCenterInstanceConfig1.getIpAddress();
        java.lang.String str3 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        java.lang.String str4 = myDataCenterInstanceConfig1.getVirtualHostName();
        java.lang.String str5 = myDataCenterInstanceConfig1.getASGName();
        java.lang.String str6 = myDataCenterInstanceConfig1.getHealthCheckUrl();
        java.lang.String str7 = myDataCenterInstanceConfig1.getHomePageUrl();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "172.20.26.3" + "'", str2, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "/healthcheck" + "'", str3, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str4, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test01726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01726");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        boolean boolean2 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        java.lang.String str3 = myDataCenterInstanceConfig1.getHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo4 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str5 = myDataCenterInstanceConfig1.getHomePageUrlPath();
        java.lang.String str6 = myDataCenterInstanceConfig1.getStatusPageUrl();
        int int7 = myDataCenterInstanceConfig1.getSecurePort();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(dataCenterInfo4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/" + "'", str5, "/");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 443 + "'", int7 == 443);
    }

    @Test
    public void test01727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01727");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str2 = myDataCenterInstanceConfig1.getIpAddress();
        java.lang.String str3 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        java.lang.String str4 = myDataCenterInstanceConfig1.getHealthCheckUrl();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager5 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo6 = applicationInfoManager5.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int9 = myDataCenterInstanceConfig8.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo10 = myDataCenterInstanceConfig8.getDataCenterInfo();
        java.lang.String str11 = myDataCenterInstanceConfig8.getNamespace();
        boolean boolean12 = myDataCenterInstanceConfig8.isNonSecurePortEnabled();
        applicationInfoManager5.config = myDataCenterInstanceConfig8;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig14 = applicationInfoManager5.config;
        com.netflix.appinfo.InstanceInfo instanceInfo15 = applicationInfoManager5.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo16 = applicationInfoManager5.instanceInfo;
        int int17 = 0; // flaky: instanceInfo16.getSecurePort();
        boolean boolean18 = false; // flaky: instanceInfo16.isDirty();
        boolean boolean19 = false; // flaky: instanceInfo16.isDirty();
        java.lang.String str20 = null; // flaky: instanceInfo16.getVersion();
// flaky:         instanceInfo16.setIsCoordinatingDiscoveryServer();
        java.lang.String str22 = null; // flaky: instanceInfo16.getVersion();
        com.netflix.appinfo.InstanceInfo.PortType portType23 = null;
        boolean boolean24 = false; // flaky: instanceInfo16.isPortEnabled(portType23);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager25 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo16);
        java.lang.String str26 = null; // flaky: instanceInfo16.getIPAddr();
// flaky:         instanceInfo16.setIsDirty(true);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "172.20.26.3" + "'", str2, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "/healthcheck" + "'", str3, "/healthcheck");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(applicationInfoManager5);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 30 + "'", int9 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig14);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo15);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo16);
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 443 + "'", int17 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "unknown" + "'", str20, "unknown");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "unknown" + "'", str22, "unknown");
// flaky:         org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "172.20.26.3" + "'", str26, "172.20.26.3");
    }

    @Test
    public void test01728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01728");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setCountryId(7002);
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder4.setHealthCheckUrlsForDeser("http://hi!:80/Status", "inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager8 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo9 = applicationInfoManager8.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager8.getInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str13 = myDataCenterInstanceConfig12.getIpAddress();
        java.lang.String str14 = myDataCenterInstanceConfig12.getASGName();
        boolean boolean15 = myDataCenterInstanceConfig12.getSecurePortEnabled();
        java.lang.String str16 = myDataCenterInstanceConfig12.getStatusPageUrl();
        applicationInfoManager8.config = myDataCenterInstanceConfig12;
        java.lang.String str18 = myDataCenterInstanceConfig12.getStatusPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = myDataCenterInstanceConfig12.getMetadataMap();
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder4.setMetadata(strMap19);
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder20.setAppGroupName("/Status");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(applicationInfoManager8);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "172.20.26.3" + "'", str13, "172.20.26.3");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test01729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01729");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
// flaky:         instanceInfo11.setLeaseInfo(leaseInfo14);
        java.lang.String str16 = null; // flaky: instanceInfo11.getSID();
        com.netflix.appinfo.LeaseInfo leaseInfo17 = null; // flaky: instanceInfo11.getLeaseInfo();
// flaky:         instanceInfo11.setLastDirtyTimestamp((java.lang.Long) 1636105966016L);
        int int20 = 0; // flaky: instanceInfo11.getSecurePort();
        int int21 = 0; // flaky: instanceInfo11.getPort();
        int int22 = 0; // flaky: instanceInfo11.getPort();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "na" + "'", str16, "na");
        org.junit.Assert.assertNull(leaseInfo17);
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 443 + "'", int20 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 80 + "'", int21 == 80);
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 80 + "'", int22 == 80);
    }

    @Test
    public void test01730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01730");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        java.lang.String str4 = myDataCenterInstanceConfig1.getVirtualHostName();
        java.lang.String str5 = myDataCenterInstanceConfig1.getHomePageUrl();
        java.lang.String str7 = myDataCenterInstanceConfig1.getHostName(true);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager8 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo9 = applicationInfoManager8.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig11 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int12 = myDataCenterInstanceConfig11.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo13 = myDataCenterInstanceConfig11.getDataCenterInfo();
        java.lang.String str14 = myDataCenterInstanceConfig11.getNamespace();
        boolean boolean15 = myDataCenterInstanceConfig11.isNonSecurePortEnabled();
        applicationInfoManager8.config = myDataCenterInstanceConfig11;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig17 = applicationInfoManager8.config;
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager8.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager8.instanceInfo;
        int int20 = 0; // flaky: instanceInfo19.getSecurePort();
// flaky:         instanceInfo19.setIsCoordinatingDiscoveryServer();
        int int22 = 0; // flaky: instanceInfo19.getPort();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus23 = null; // flaky: instanceInfo19.getStatus();
        java.lang.String str24 = null; // flaky: instanceInfo19.getHostName();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = null; // flaky: new com.netflix.appinfo.InstanceInfo(instanceInfo19);
        int int26 = 0; // flaky: instanceInfo19.getPort();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager27 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig29 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int30 = myDataCenterInstanceConfig29.getLeaseRenewalIntervalInSeconds();
        int int31 = myDataCenterInstanceConfig29.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager27.config = myDataCenterInstanceConfig29;
        com.netflix.appinfo.InstanceInfo instanceInfo33 = applicationInfoManager27.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig35 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int36 = myDataCenterInstanceConfig35.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo37 = myDataCenterInstanceConfig35.getDataCenterInfo();
        java.lang.String str38 = myDataCenterInstanceConfig35.getHealthCheckUrl();
        int int39 = myDataCenterInstanceConfig35.getLeaseExpirationDurationInSeconds();
        applicationInfoManager27.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig35);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig42 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int43 = myDataCenterInstanceConfig42.getLeaseRenewalIntervalInSeconds();
        int int44 = myDataCenterInstanceConfig42.getLeaseRenewalIntervalInSeconds();
        java.lang.String str45 = myDataCenterInstanceConfig42.getStatusPageUrlPath();
        boolean boolean46 = myDataCenterInstanceConfig42.getSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager47 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo48 = applicationInfoManager47.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig50 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int51 = myDataCenterInstanceConfig50.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo52 = myDataCenterInstanceConfig50.getDataCenterInfo();
        java.lang.String str53 = myDataCenterInstanceConfig50.getNamespace();
        boolean boolean54 = myDataCenterInstanceConfig50.isNonSecurePortEnabled();
        applicationInfoManager47.config = myDataCenterInstanceConfig50;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig56 = applicationInfoManager47.config;
        com.netflix.appinfo.InstanceInfo instanceInfo57 = applicationInfoManager47.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo58 = applicationInfoManager47.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType59 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo58.setActionType(actionType59);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager61 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo62 = applicationInfoManager61.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig64 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int65 = myDataCenterInstanceConfig64.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo66 = myDataCenterInstanceConfig64.getDataCenterInfo();
        java.lang.String str67 = myDataCenterInstanceConfig64.getNamespace();
        boolean boolean68 = myDataCenterInstanceConfig64.isNonSecurePortEnabled();
        applicationInfoManager61.config = myDataCenterInstanceConfig64;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig70 = applicationInfoManager61.config;
        com.netflix.appinfo.InstanceInfo instanceInfo71 = applicationInfoManager61.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo72 = applicationInfoManager61.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType73 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo72.setActionType(actionType73);
        instanceInfo58.setActionType(actionType73);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager76 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig42, instanceInfo58);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus78 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("inesserver2.windows.cin.ufpe.br:80");
        instanceInfo58.setOverriddenStatus(instanceStatus78);
        applicationInfoManager27.setInstanceStatus(instanceStatus78);
// flaky:         instanceInfo19.setOverriddenStatus(instanceStatus78);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager82 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo19);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo83 = null; // flaky: instanceInfo19.getDataCenterInfo();
        java.util.Set<java.lang.String> strSet84 = null; // flaky: instanceInfo19.getHealthCheckUrls();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str4, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str7, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager8);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 30 + "'", int12 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig17);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo18);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo19);
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 7002 + "'", int20 == 7002);
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 7001 + "'", int22 == 7001);
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus23 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UP + "'", instanceStatus23.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UP));
        org.junit.Assert.assertNull(str24);
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 7001 + "'", int26 == 7001);
        org.junit.Assert.assertNotNull(applicationInfoManager27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 30 + "'", int30 == 30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 30 + "'", int31 == 30);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 30 + "'", int36 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 90 + "'", int39 == 90);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 30 + "'", int43 == 30);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 30 + "'", int44 == 30);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/Status" + "'", str45, "/Status");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager47);
        org.junit.Assert.assertNotNull(instanceInfo48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 30 + "'", int51 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig56);
        org.junit.Assert.assertNotNull(instanceInfo57);
        org.junit.Assert.assertNotNull(instanceInfo58);
        org.junit.Assert.assertTrue("'" + actionType59 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType59.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager61);
        org.junit.Assert.assertNotNull(instanceInfo62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 30 + "'", int65 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig70);
        org.junit.Assert.assertNotNull(instanceInfo71);
        org.junit.Assert.assertNotNull(instanceInfo72);
        org.junit.Assert.assertTrue("'" + actionType73 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType73.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + instanceStatus78 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus78.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNull(dataCenterInfo83);
// flaky:         org.junit.Assert.assertNotNull(strSet84);
    }

    @Test
    public void test01731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01731");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig1 = applicationInfoManager0.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager2 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        int int6 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager2.config = myDataCenterInstanceConfig4;
        java.lang.String str8 = myDataCenterInstanceConfig4.getIpAddress();
        java.lang.String str9 = myDataCenterInstanceConfig4.getVirtualHostName();
        java.lang.String str11 = myDataCenterInstanceConfig4.getHostName(true);
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig4);
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig1);
        org.junit.Assert.assertNotNull(applicationInfoManager2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 30 + "'", int6 == 30);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "172.20.26.3" + "'", str8, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str9, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str11, "inesserver2.windows.cin.ufpe.br");
    }

    @Test
    public void test01732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01732");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        com.netflix.appinfo.InstanceInfo instanceInfo1 = null;
        java.lang.String str2 = com.netflix.appinfo.InstanceInfo.getZone(strArray0, instanceInfo1);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager3 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo4 = applicationInfoManager3.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig6 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int7 = myDataCenterInstanceConfig6.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig6.getDataCenterInfo();
        java.lang.String str9 = myDataCenterInstanceConfig6.getNamespace();
        boolean boolean10 = myDataCenterInstanceConfig6.isNonSecurePortEnabled();
        applicationInfoManager3.config = myDataCenterInstanceConfig6;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig12 = applicationInfoManager3.config;
        com.netflix.appinfo.InstanceInfo instanceInfo13 = applicationInfoManager3.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager3.instanceInfo;
        java.lang.Boolean boolean15 = instanceInfo14.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus16 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo14.setOverriddenStatus(instanceStatus16);
        int int18 = instanceInfo14.getSecurePort();
        java.lang.String str19 = instanceInfo14.getHostName();
        java.lang.String str20 = instanceInfo14.getAppGroupName();
        java.lang.String str21 = instanceInfo14.getASGName();
        java.lang.String str22 = com.netflix.appinfo.InstanceInfo.getZone(strArray0, instanceInfo14);
        instanceInfo14.setIsDirty(false);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = instanceInfo14.getDataCenterInfo();
        java.util.Set<java.lang.String> strSet26 = instanceInfo14.getHealthCheckUrls();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "default" + "'", str2, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager3);
        org.junit.Assert.assertNotNull(instanceInfo4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 30 + "'", int7 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig12);
        org.junit.Assert.assertNotNull(instanceInfo13);
        org.junit.Assert.assertNotNull(instanceInfo14);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertTrue("'" + instanceStatus16 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus16.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 443 + "'", int18 == 443);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str19, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UNKNOWN" + "'", str20, "UNKNOWN");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "default" + "'", str22, "default");
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertNotNull(strSet26);
    }

    @Test
    public void test01733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01733");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo instanceInfo5 = builder0.build();
        instanceInfo5.setLastUpdatedTimestamp();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus7 = instanceInfo5.getStatus();
        java.lang.String str8 = instanceInfo5.getId();
        long long9 = instanceInfo5.getLastUpdatedTimestamp();
        instanceInfo5.setSID("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(instanceInfo5);
        org.junit.Assert.assertTrue("'" + instanceStatus7 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UP + "'", instanceStatus7.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UP));
        org.junit.Assert.assertNull(str8);
// flaky:         org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1636106055301L + "'", long9 == 1636106055301L);
    }

    @Test
    public void test01734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01734");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder18.setHealthCheckUrlsForDeser("", "hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder18.setStatusPageUrl("default", "");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager27 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager27.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig30 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int31 = myDataCenterInstanceConfig30.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo32 = myDataCenterInstanceConfig30.getDataCenterInfo();
        java.lang.String str33 = myDataCenterInstanceConfig30.getNamespace();
        boolean boolean34 = myDataCenterInstanceConfig30.isNonSecurePortEnabled();
        applicationInfoManager27.config = myDataCenterInstanceConfig30;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig36 = applicationInfoManager27.config;
        com.netflix.appinfo.InstanceInfo instanceInfo37 = applicationInfoManager27.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo38 = applicationInfoManager27.instanceInfo;
        int int39 = instanceInfo38.getSecurePort();
        com.netflix.appinfo.InstanceInfo.PortType portType40 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean41 = instanceInfo38.isPortEnabled(portType40);
        com.netflix.appinfo.InstanceInfo.Builder builder43 = builder18.enablePort(portType40, true);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig45 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int46 = myDataCenterInstanceConfig45.getLeaseRenewalIntervalInSeconds();
        boolean boolean47 = myDataCenterInstanceConfig45.isNonSecurePortEnabled();
        int int48 = myDataCenterInstanceConfig45.getLeaseRenewalIntervalInSeconds();
        int int49 = myDataCenterInstanceConfig45.getLeaseRenewalIntervalInSeconds();
        java.lang.String str50 = myDataCenterInstanceConfig45.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap51 = myDataCenterInstanceConfig45.getMetadataMap();
        com.netflix.appinfo.InstanceInfo.Builder builder52 = builder18.setMetadata(strMap51);
        com.netflix.appinfo.InstanceInfo.Builder builder54 = builder52.setVIPAddress("/");
        com.netflix.appinfo.InstanceInfo.Builder builder56 = builder54.setVIPAddress("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder58 = builder56.setCountryId((-1));
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(applicationInfoManager27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 30 + "'", int31 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig36);
        org.junit.Assert.assertNotNull(instanceInfo37);
        org.junit.Assert.assertNotNull(instanceInfo38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 443 + "'", int39 == 443);
        org.junit.Assert.assertTrue("'" + portType40 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType40.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
// flaky:         org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 30 + "'", int46 == 30);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 30 + "'", int48 == 30);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 30 + "'", int49 == 30);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
    }

    @Test
    public void test01735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01735");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.lang.String str16 = instanceInfo11.getSID();
        instanceInfo11.setSID("unknown");
        java.lang.String str19 = instanceInfo11.getAppName();
        java.lang.Boolean boolean20 = instanceInfo11.isCoordinatingDiscoveryServer();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "na" + "'", str16, "na");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UNKNOWN" + "'", str19, "UNKNOWN");
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + false + "'", boolean20, false);
    }

    @Test
    public void test01736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01736");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        java.lang.String str13 = instanceInfo11.getSID();
        java.util.Set<java.lang.String> strSet14 = instanceInfo11.getHealthCheckUrls();
        java.util.Set<java.lang.String> strSet15 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str16 = instanceInfo11.getASGName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus17 = instanceInfo11.getStatus();
        java.lang.String str18 = instanceInfo11.getVersion();
        instanceInfo11.setSID("DEFAULT");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "unknown" + "'", str13, "unknown");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + instanceStatus17 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING + "'", instanceStatus17.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "unknown" + "'", str18, "unknown");
    }

    @Test
    public void test01737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01737");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int9 = myDataCenterInstanceConfig8.getLeaseRenewalIntervalInSeconds();
        int int10 = myDataCenterInstanceConfig8.getLeaseRenewalIntervalInSeconds();
        java.lang.String str11 = myDataCenterInstanceConfig8.getStatusPageUrlPath();
        boolean boolean12 = myDataCenterInstanceConfig8.getSecurePortEnabled();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = myDataCenterInstanceConfig8.getMetadataMap();
        applicationInfoManager0.config = myDataCenterInstanceConfig8;
        java.lang.String str15 = myDataCenterInstanceConfig8.getAppGroupName();
        java.lang.String str16 = myDataCenterInstanceConfig8.getStatusPageUrl();
        java.lang.String str17 = myDataCenterInstanceConfig8.getASGName();
        boolean boolean18 = myDataCenterInstanceConfig8.isInstanceEnabledOnit();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 30 + "'", int9 == 30);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/Status" + "'", str11, "/Status");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "unknown" + "'", str15, "unknown");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test01738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01738");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setSecureVIPAddressDeser("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo15 = builder6.build();
        long long16 = instanceInfo15.getLastUpdatedTimestamp();
        java.lang.String str17 = instanceInfo15.getAppName();
        instanceInfo15.setLastDirtyTimestamp((java.lang.Long) 1636105972724L);
        java.lang.String str20 = instanceInfo15.getAppName();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(instanceInfo15);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1636106055470L + "'", long16 == 1636106055470L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "DEFAULT" + "'", str17, "DEFAULT");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "DEFAULT" + "'", str20, "DEFAULT");
    }

    @Test
    public void test01739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01739");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig1.getDataCenterInfo();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager4 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo5 = applicationInfoManager4.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int8 = myDataCenterInstanceConfig7.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo9 = myDataCenterInstanceConfig7.getDataCenterInfo();
        java.lang.String str10 = myDataCenterInstanceConfig7.getNamespace();
        boolean boolean11 = myDataCenterInstanceConfig7.isNonSecurePortEnabled();
        applicationInfoManager4.config = myDataCenterInstanceConfig7;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig13 = applicationInfoManager4.config;
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager4.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo15 = applicationInfoManager4.instanceInfo;
        int int16 = instanceInfo15.getSecurePort();
        boolean boolean17 = instanceInfo15.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo18 = new com.netflix.appinfo.InstanceInfo(instanceInfo15);
        com.netflix.appinfo.InstanceInfo instanceInfo19 = new com.netflix.appinfo.InstanceInfo(instanceInfo15);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager20 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo15);
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager20.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager22 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager22.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig25 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int26 = myDataCenterInstanceConfig25.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo27 = myDataCenterInstanceConfig25.getDataCenterInfo();
        java.lang.String str28 = myDataCenterInstanceConfig25.getNamespace();
        boolean boolean29 = myDataCenterInstanceConfig25.isNonSecurePortEnabled();
        applicationInfoManager22.config = myDataCenterInstanceConfig25;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig31 = applicationInfoManager22.config;
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager22.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo33 = applicationInfoManager22.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType34 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo33.setActionType(actionType34);
        com.netflix.appinfo.LeaseInfo leaseInfo36 = null;
        instanceInfo33.setLeaseInfo(leaseInfo36);
        java.util.Set<java.lang.String> strSet38 = instanceInfo33.getHealthCheckUrls();
        java.lang.String str39 = instanceInfo33.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder40 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo33);
        com.netflix.appinfo.InstanceInfo.Builder builder43 = builder40.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder46 = builder40.add("na", "/");
        com.netflix.appinfo.InstanceInfo.Builder builder49 = builder40.add("/Status", "");
        com.netflix.appinfo.InstanceInfo.Builder builder53 = builder40.setHealthCheckUrls("inesserver2.windows.cin.ufpe.br", "", "172.20.26.3");
        boolean boolean54 = instanceInfo21.equals((java.lang.Object) "");
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus55 = null;
        instanceInfo21.setStatusWithoutDirty(instanceStatus55);
        java.lang.String str57 = instanceInfo21.getId();
        com.netflix.appinfo.InstanceInfo.ActionType actionType58 = instanceInfo21.getActionType();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo3);
        org.junit.Assert.assertNotNull(applicationInfoManager4);
        org.junit.Assert.assertNotNull(instanceInfo5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig13);
        org.junit.Assert.assertNotNull(instanceInfo14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 443 + "'", int16 == 443);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertNotNull(applicationInfoManager22);
        org.junit.Assert.assertNotNull(instanceInfo23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 30 + "'", int26 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig31);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertTrue("'" + actionType34 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType34.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str39, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str57, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + actionType58 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType58.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
    }

    @Test
    public void test01740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01740");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.getInfo();
        java.lang.String[] strArray12 = new java.lang.String[] {};
        com.netflix.appinfo.InstanceInfo instanceInfo13 = null;
        java.lang.String str14 = com.netflix.appinfo.InstanceInfo.getZone(strArray12, instanceInfo13);
        com.netflix.appinfo.InstanceInfo instanceInfo15 = null;
        java.lang.String str16 = com.netflix.appinfo.InstanceInfo.getZone(strArray12, instanceInfo15);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager17 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager17.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig20 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int21 = myDataCenterInstanceConfig20.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = myDataCenterInstanceConfig20.getDataCenterInfo();
        java.lang.String str23 = myDataCenterInstanceConfig20.getNamespace();
        boolean boolean24 = myDataCenterInstanceConfig20.isNonSecurePortEnabled();
        applicationInfoManager17.config = myDataCenterInstanceConfig20;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig26 = applicationInfoManager17.config;
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager17.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager17.instanceInfo;
        int int29 = instanceInfo28.getSecurePort();
        boolean boolean30 = instanceInfo28.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = new com.netflix.appinfo.InstanceInfo(instanceInfo28);
        com.netflix.appinfo.InstanceInfo instanceInfo32 = new com.netflix.appinfo.InstanceInfo(instanceInfo28);
        java.lang.String str33 = instanceInfo28.getAppGroupName();
        int int34 = instanceInfo28.getCountryId();
        java.lang.String str35 = com.netflix.appinfo.InstanceInfo.getZone(strArray12, instanceInfo28);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus36 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo28.setStatus(instanceStatus36);
        applicationInfoManager0.setInstanceStatus(instanceStatus36);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager39 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo40 = applicationInfoManager39.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig42 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int43 = myDataCenterInstanceConfig42.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo44 = myDataCenterInstanceConfig42.getDataCenterInfo();
        java.lang.String str45 = myDataCenterInstanceConfig42.getNamespace();
        boolean boolean46 = myDataCenterInstanceConfig42.isNonSecurePortEnabled();
        applicationInfoManager39.config = myDataCenterInstanceConfig42;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig48 = applicationInfoManager39.config;
        com.netflix.appinfo.InstanceInfo instanceInfo49 = applicationInfoManager39.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo50 = applicationInfoManager39.instanceInfo;
        int int51 = instanceInfo50.getSecurePort();
        boolean boolean52 = instanceInfo50.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo53 = new com.netflix.appinfo.InstanceInfo(instanceInfo50);
        com.netflix.appinfo.InstanceInfo instanceInfo54 = new com.netflix.appinfo.InstanceInfo(instanceInfo50);
        java.lang.String str55 = instanceInfo50.getAppGroupName();
        int int56 = instanceInfo50.getCountryId();
        applicationInfoManager0.instanceInfo = instanceInfo50;
        java.lang.String str58 = instanceInfo50.getHomePageUrl();
        java.lang.String str59 = instanceInfo50.getVIPAddress();
        int int60 = instanceInfo50.getPort();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "default" + "'", str14, "default");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "default" + "'", str16, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager17);
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 30 + "'", int21 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 443 + "'", int29 == 443);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UNKNOWN" + "'", str33, "UNKNOWN");
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "default" + "'", str35, "default");
        org.junit.Assert.assertTrue("'" + instanceStatus36 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus36.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(applicationInfoManager39);
        org.junit.Assert.assertNotNull(instanceInfo40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 30 + "'", int43 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig48);
        org.junit.Assert.assertNotNull(instanceInfo49);
        org.junit.Assert.assertNotNull(instanceInfo50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 443 + "'", int51 == 443);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "UNKNOWN" + "'", str55, "UNKNOWN");
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str58, "http://inesserver2.windows.cin.ufpe.br:80/");
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str59, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 80 + "'", int60 == 80);
    }

    @Test
    public void test01741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01741");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = instanceInfo11.getAppGroupName();
        java.lang.String str15 = instanceInfo11.getAppName();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = instanceInfo11.getMetadata();
        java.lang.String str17 = instanceInfo11.getASGName();
        int int18 = instanceInfo11.getSecurePort();
        java.lang.String str19 = instanceInfo11.getAppName();
        java.lang.String str20 = instanceInfo11.getHostName();
        java.lang.String str21 = instanceInfo11.getAppName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UNKNOWN" + "'", str14, "UNKNOWN");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UNKNOWN" + "'", str15, "UNKNOWN");
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 443 + "'", int18 == 443);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UNKNOWN" + "'", str19, "UNKNOWN");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str20, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UNKNOWN" + "'", str21, "UNKNOWN");
    }

    @Test
    public void test01742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01742");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isInstanceEnabledOnit();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        java.lang.String str5 = myDataCenterInstanceConfig1.getIpAddress();
        java.lang.String str6 = myDataCenterInstanceConfig1.getIpAddress();
        boolean boolean7 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        java.lang.String str8 = myDataCenterInstanceConfig1.getAppname();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/Status" + "'", str4, "/Status");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "172.20.26.3" + "'", str5, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "172.20.26.3" + "'", str6, "172.20.26.3");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "unknown" + "'", str8, "unknown");
    }

    @Test
    public void test01743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01743");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str4 = myDataCenterInstanceConfig1.getNamespace();
        boolean boolean5 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str7 = myDataCenterInstanceConfig1.getAppname();
        java.lang.String str8 = myDataCenterInstanceConfig1.getStatusPageUrl();
        java.lang.String str9 = myDataCenterInstanceConfig1.getAppGroupName();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "unknown" + "'", str7, "unknown");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "unknown" + "'", str9, "unknown");
    }

    @Test
    public void test01744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01744");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus24 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder21.setStatus(instanceStatus24);
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder25.setHealthCheckUrlsForDeser("http://inesserver2.windows.cin.ufpe.br:80/Status", "unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder25.setVIPAddress("unknown");
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder33 = builder30.setStatusPageUrl("/", "HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS");
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
// flaky:         org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + instanceStatus24 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus24.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
    }

    @Test
    public void test01745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01745");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        boolean boolean9 = builder6.isInitialized();
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setASGName("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder11.setIPAddr("inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
    }

    @Test
    public void test01746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01746");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo instanceInfo12 = builder11.getRawInstance();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager13 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig15 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int16 = myDataCenterInstanceConfig15.getLeaseRenewalIntervalInSeconds();
        int int17 = myDataCenterInstanceConfig15.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager13.config = myDataCenterInstanceConfig15;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager13;
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus21 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("/Status");
        applicationInfoManager13.setInstanceStatus(instanceStatus21);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder11.setOverriddenStatus(instanceStatus21);
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setPort((int) (byte) 100);
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder23.setHealthCheckUrls("/healthcheck", "/", "/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo30 = builder29.getRawInstance();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertNotNull(applicationInfoManager13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 30 + "'", int16 == 30);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
        org.junit.Assert.assertTrue("'" + instanceStatus21 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus21.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(instanceInfo30);
    }

    @Test
    public void test01747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01747");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str3 = myDataCenterInstanceConfig1.getVirtualHostName();
        java.lang.String str4 = myDataCenterInstanceConfig1.getSecureHealthCheckUrl();
        java.lang.String str5 = myDataCenterInstanceConfig1.getHomePageUrlPath();
        java.lang.String str7 = myDataCenterInstanceConfig1.getHostName(false);
        java.lang.String str8 = myDataCenterInstanceConfig1.getAppname();
        java.lang.String str9 = myDataCenterInstanceConfig1.getASGName();
        java.lang.String str10 = myDataCenterInstanceConfig1.getHomePageUrlPath();
        java.lang.String str12 = myDataCenterInstanceConfig1.getHostName(false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str3, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/" + "'", str5, "/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str7, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "unknown" + "'", str8, "unknown");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/" + "'", str10, "/");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str12, "inesserver2.windows.cin.ufpe.br");
    }

    @Test
    public void test01748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01748");
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig0 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager1 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig4.getDataCenterInfo();
        java.lang.String str7 = myDataCenterInstanceConfig4.getNamespace();
        boolean boolean8 = myDataCenterInstanceConfig4.isNonSecurePortEnabled();
        applicationInfoManager1.config = myDataCenterInstanceConfig4;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig10 = applicationInfoManager1.config;
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager1.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager1.instanceInfo;
        int int13 = instanceInfo12.getSecurePort();
        boolean boolean14 = instanceInfo12.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig0, instanceInfo12);
        instanceInfo12.setSID("unknown");
        java.lang.String str18 = instanceInfo12.getSecureVipAddress();
        instanceInfo12.setLastDirtyTimestamp((java.lang.Long) 1636106025229L);
        org.junit.Assert.assertNotNull(applicationInfoManager1);
        org.junit.Assert.assertNotNull(instanceInfo2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 443 + "'", int13 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test01749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01749");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = instanceInfo11.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType15 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType15);
        java.lang.String str17 = instanceInfo11.getHostName();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = instanceInfo11.getDataCenterInfo();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = instanceInfo11.getMetadata();
        java.lang.String str20 = instanceInfo11.getHostName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "/" + "'", str14, "/");
        org.junit.Assert.assertTrue("'" + actionType15 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType15.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertNotNull(strMap19);
// flaky:         org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test01750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01750");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        java.lang.Boolean boolean12 = instanceInfo11.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus13 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo11.setOverriddenStatus(instanceStatus13);
        int int15 = instanceInfo11.getSecurePort();
        java.lang.String str16 = instanceInfo11.getHostName();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = instanceInfo11.getMetadata();
        instanceInfo11.setIsCoordinatingDiscoveryServer();
        java.lang.String str19 = instanceInfo11.getHostName();
        java.lang.String str20 = instanceInfo11.getVersion();
        java.lang.String str21 = instanceInfo11.getStatusPageUrl();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertTrue("'" + instanceStatus13 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus13.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 443 + "'", int15 == 443);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str16, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str19, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "unknown" + "'", str20, "unknown");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str21, "http://inesserver2.windows.cin.ufpe.br:80/Status");
    }

    @Test
    public void test01751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01751");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder7.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder9.add("http://inesserver2.windows.cin.ufpe.br:80/Status", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus14 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("na");
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder12.setStatus(instanceStatus14);
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder12.setStatusPageUrlForDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder12.setStatusPageUrlForDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder19.setHealthCheckUrlsForDeser("unknown", "DEFAULT");
        com.netflix.appinfo.InstanceInfo instanceInfo23 = builder22.getRawInstance();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + instanceStatus14 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus14.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(instanceInfo23);
    }

    @Test
    public void test01752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01752");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        com.netflix.appinfo.InstanceInfo instanceInfo1 = null;
        java.lang.String str2 = com.netflix.appinfo.InstanceInfo.getZone(strArray0, instanceInfo1);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager3 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo4 = applicationInfoManager3.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig6 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int7 = myDataCenterInstanceConfig6.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig6.getDataCenterInfo();
        java.lang.String str9 = myDataCenterInstanceConfig6.getNamespace();
        boolean boolean10 = myDataCenterInstanceConfig6.isNonSecurePortEnabled();
        applicationInfoManager3.config = myDataCenterInstanceConfig6;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig12 = applicationInfoManager3.config;
        com.netflix.appinfo.InstanceInfo instanceInfo13 = applicationInfoManager3.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager3.instanceInfo;
        java.lang.Boolean boolean15 = instanceInfo14.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus16 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo14.setOverriddenStatus(instanceStatus16);
        int int18 = instanceInfo14.getSecurePort();
        java.lang.String str19 = instanceInfo14.getHostName();
        java.lang.String str20 = instanceInfo14.getAppGroupName();
        java.lang.String str21 = instanceInfo14.getASGName();
        java.lang.String str22 = com.netflix.appinfo.InstanceInfo.getZone(strArray0, instanceInfo14);
        instanceInfo14.setIsDirty(false);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = instanceInfo14.getDataCenterInfo();
        java.lang.String str26 = instanceInfo14.getSID();
        java.lang.String str27 = instanceInfo14.getId();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "default" + "'", str2, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager3);
        org.junit.Assert.assertNotNull(instanceInfo4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 30 + "'", int7 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig12);
        org.junit.Assert.assertNotNull(instanceInfo13);
        org.junit.Assert.assertNotNull(instanceInfo14);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + true + "'", boolean15, true);
        org.junit.Assert.assertTrue("'" + instanceStatus16 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus16.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 443 + "'", int18 == 443);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str19, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UNKNOWN" + "'", str20, "UNKNOWN");
// flaky:         org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "default" + "'", str22, "default");
        org.junit.Assert.assertNotNull(dataCenterInfo25);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "na" + "'", str26, "na");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str27, "inesserver2.windows.cin.ufpe.br");
    }

    @Test
    public void test01753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01753");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str3 = myDataCenterInstanceConfig1.getNamespace();
        java.lang.String str4 = myDataCenterInstanceConfig1.getNamespace();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig1.getDataCenterInfo();
        boolean boolean6 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        boolean boolean7 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test01754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01754");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig6 = applicationInfoManager0.config;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        com.netflix.appinfo.InstanceInfo instanceInfo8 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo9 = new com.netflix.appinfo.InstanceInfo(instanceInfo8);
        java.lang.String str10 = instanceInfo9.getAppName();
        java.util.Set<java.lang.String> strSet11 = instanceInfo9.getHealthCheckUrls();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig6);
        org.junit.Assert.assertNotNull(instanceInfo8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UNKNOWN" + "'", str10, "UNKNOWN");
        org.junit.Assert.assertNotNull(strSet11);
    }

    @Test
    public void test01755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01755");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int11 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        int int12 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        java.lang.String str13 = myDataCenterInstanceConfig10.getStatusPageUrlPath();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig10);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig16 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int17 = myDataCenterInstanceConfig16.getLeaseRenewalIntervalInSeconds();
        int int18 = myDataCenterInstanceConfig16.getLeaseRenewalIntervalInSeconds();
        java.lang.String str19 = myDataCenterInstanceConfig16.getStatusPageUrlPath();
        boolean boolean20 = myDataCenterInstanceConfig16.getSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager21 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo22 = applicationInfoManager21.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int25 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig24.getDataCenterInfo();
        java.lang.String str27 = myDataCenterInstanceConfig24.getNamespace();
        boolean boolean28 = myDataCenterInstanceConfig24.isNonSecurePortEnabled();
        applicationInfoManager21.config = myDataCenterInstanceConfig24;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig30 = applicationInfoManager21.config;
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager21.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager21.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType33 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo32.setActionType(actionType33);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager35 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo36 = applicationInfoManager35.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig38 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int39 = myDataCenterInstanceConfig38.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo40 = myDataCenterInstanceConfig38.getDataCenterInfo();
        java.lang.String str41 = myDataCenterInstanceConfig38.getNamespace();
        boolean boolean42 = myDataCenterInstanceConfig38.isNonSecurePortEnabled();
        applicationInfoManager35.config = myDataCenterInstanceConfig38;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig44 = applicationInfoManager35.config;
        com.netflix.appinfo.InstanceInfo instanceInfo45 = applicationInfoManager35.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo46 = applicationInfoManager35.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType47 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo46.setActionType(actionType47);
        instanceInfo32.setActionType(actionType47);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager50 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig16, instanceInfo32);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus52 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("inesserver2.windows.cin.ufpe.br:80");
        instanceInfo32.setOverriddenStatus(instanceStatus52);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus55 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("/Status");
        instanceInfo32.setOverriddenStatus(instanceStatus55);
        applicationInfoManager0.setInstanceStatus(instanceStatus55);
        com.netflix.appinfo.InstanceInfo instanceInfo58 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 30 + "'", int12 == 30);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/Status" + "'", str13, "/Status");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 30 + "'", int18 == 30);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/Status" + "'", str19, "/Status");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 30 + "'", int25 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertTrue("'" + actionType33 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType33.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager35);
        org.junit.Assert.assertNotNull(instanceInfo36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 30 + "'", int39 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig44);
        org.junit.Assert.assertNotNull(instanceInfo45);
        org.junit.Assert.assertNotNull(instanceInfo46);
        org.junit.Assert.assertTrue("'" + actionType47 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType47.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + instanceStatus52 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus52.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertTrue("'" + instanceStatus55 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus55.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(instanceInfo58);
    }

    @Test
    public void test01756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01756");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        java.lang.String str4 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        java.lang.String str5 = myDataCenterInstanceConfig1.getHomePageUrlPath();
        java.lang.String str6 = myDataCenterInstanceConfig1.getNamespace();
        java.lang.String str7 = myDataCenterInstanceConfig1.getIpAddress();
        boolean boolean8 = myDataCenterInstanceConfig1.isInstanceEnabledOnit();
        java.lang.String str9 = myDataCenterInstanceConfig1.getVirtualHostName();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/healthcheck" + "'", str4, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/" + "'", str5, "/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "172.20.26.3" + "'", str7, "172.20.26.3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str9, "inesserver2.windows.cin.ufpe.br:80");
    }

    @Test
    public void test01757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01757");
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig0 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager1 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig4.getDataCenterInfo();
        java.lang.String str7 = myDataCenterInstanceConfig4.getNamespace();
        boolean boolean8 = myDataCenterInstanceConfig4.isNonSecurePortEnabled();
        applicationInfoManager1.config = myDataCenterInstanceConfig4;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig10 = applicationInfoManager1.config;
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager1.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType13 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo12.setActionType(actionType13);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig17 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int18 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        int int19 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager15.config = myDataCenterInstanceConfig17;
        java.lang.String str21 = myDataCenterInstanceConfig17.getHealthCheckUrlPath();
        boolean boolean22 = instanceInfo12.equals((java.lang.Object) str21);
        java.lang.Boolean boolean23 = instanceInfo12.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager24 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig0, instanceInfo12);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = null;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig27 = new com.netflix.appinfo.MyDataCenterInstanceConfig("", dataCenterInfo26);
        boolean boolean28 = myDataCenterInstanceConfig27.getSecurePortEnabled();
        java.lang.String str29 = myDataCenterInstanceConfig27.getHomePageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = myDataCenterInstanceConfig27.getMetadataMap();
        applicationInfoManager24.config = myDataCenterInstanceConfig27;
        com.netflix.appinfo.DataCenterInfo dataCenterInfo32 = myDataCenterInstanceConfig27.getDataCenterInfo();
        java.lang.String str33 = myDataCenterInstanceConfig27.getIpAddress();
        org.junit.Assert.assertNotNull(applicationInfoManager1);
        org.junit.Assert.assertNotNull(instanceInfo2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertTrue("'" + actionType13 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType13.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 30 + "'", int18 == 30);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 30 + "'", int19 == 30);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "/healthcheck" + "'", str21, "/healthcheck");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + false + "'", boolean23, false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(dataCenterInfo32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "172.20.26.3" + "'", str33, "172.20.26.3");
    }

    @Test
    public void test01758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01758");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder12.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder12.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder12.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo22 = builder21.build();
        int int23 = instanceInfo22.getPort();
        com.netflix.appinfo.InstanceInfo.ActionType actionType24 = instanceInfo22.getActionType();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 7001 + "'", int23 == 7001);
        org.junit.Assert.assertNull(actionType24);
    }

    @Test
    public void test01759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01759");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setAppName("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setNamespace("");
        com.netflix.appinfo.InstanceInfo instanceInfo11 = builder8.build();
        java.lang.String str12 = instanceInfo11.getVersion();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "unknown" + "'", str12, "unknown");
    }

    @Test
    public void test01760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01760");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str3 = myDataCenterInstanceConfig1.getSecureVirtualHostName();
        java.lang.String str4 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/healthcheck" + "'", str4, "/healthcheck");
    }

    @Test
    public void test01761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01761");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder2.setVIPAddress("/");
        boolean boolean5 = builder2.isInitialized();
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setAppGroupName("http://hi!:35/Status");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(builder7);
    }

    @Test
    public void test01762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01762");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        java.lang.String str6 = myDataCenterInstanceConfig2.getHealthCheckUrlPath();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = myDataCenterInstanceConfig2.getMetadataMap();
        java.lang.String str8 = myDataCenterInstanceConfig2.getIpAddress();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "/healthcheck" + "'", str6, "/healthcheck");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "172.20.26.3" + "'", str8, "172.20.26.3");
    }

    @Test
    public void test01763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01763");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder7.setASGName("inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder9.setHostName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder9.setSecureVIPAddressDeser("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder9.setASGName("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder15.setHostName("DEFAULT");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder15.setVIPAddressDeser("/HEALTHCHECK");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
    }

    @Test
    public void test01764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01764");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder6.setLastDirtyTimestamp((long) (short) 10);
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder13.setSecurePort((int) (short) -1);
        com.netflix.appinfo.InstanceInfo.ActionType actionType16 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder13.setActionType(actionType16);
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder17.setNamespace("http://default:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder17.setHealthCheckUrls("default", "", "http://default:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setVIPAddressDeser("unknown");
        com.netflix.appinfo.InstanceInfo instanceInfo26 = builder25.build();
        java.lang.String str27 = instanceInfo26.getHomePageUrl();
        java.lang.String str28 = instanceInfo26.getId();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + actionType16 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType16.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "172.20.26.3" + "'", str28, "172.20.26.3");
    }

    @Test
    public void test01765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01765");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("http://inesserver2.windows.cin.ufpe.br:80/", "default");
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setIPAddr("default");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
    }

    @Test
    public void test01766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01766");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder18.setHealthCheckUrlsForDeser("", "hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder18.setStatusPageUrl("default", "");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager27 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager27.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig30 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int31 = myDataCenterInstanceConfig30.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo32 = myDataCenterInstanceConfig30.getDataCenterInfo();
        java.lang.String str33 = myDataCenterInstanceConfig30.getNamespace();
        boolean boolean34 = myDataCenterInstanceConfig30.isNonSecurePortEnabled();
        applicationInfoManager27.config = myDataCenterInstanceConfig30;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig36 = applicationInfoManager27.config;
        com.netflix.appinfo.InstanceInfo instanceInfo37 = applicationInfoManager27.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo38 = applicationInfoManager27.instanceInfo;
        int int39 = instanceInfo38.getSecurePort();
        com.netflix.appinfo.InstanceInfo.PortType portType40 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean41 = instanceInfo38.isPortEnabled(portType40);
        com.netflix.appinfo.InstanceInfo.Builder builder43 = builder18.enablePort(portType40, true);
        com.netflix.appinfo.InstanceInfo.Builder builder46 = builder18.add("172.20.26.3", "unknown");
        com.netflix.appinfo.InstanceInfo instanceInfo47 = builder46.getRawInstance();
        instanceInfo47.setSID("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(applicationInfoManager27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 30 + "'", int31 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig36);
        org.junit.Assert.assertNotNull(instanceInfo37);
        org.junit.Assert.assertNotNull(instanceInfo38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 443 + "'", int39 == 443);
        org.junit.Assert.assertTrue("'" + portType40 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType40.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(instanceInfo47);
    }

    @Test
    public void test01767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01767");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        com.netflix.appinfo.InstanceInfo instanceInfo1 = null;
        java.lang.String str2 = com.netflix.appinfo.InstanceInfo.getZone(strArray0, instanceInfo1);
        com.netflix.appinfo.InstanceInfo instanceInfo3 = null;
        java.lang.String str4 = com.netflix.appinfo.InstanceInfo.getZone(strArray0, instanceInfo3);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager5 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo6 = applicationInfoManager5.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int9 = myDataCenterInstanceConfig8.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo10 = myDataCenterInstanceConfig8.getDataCenterInfo();
        java.lang.String str11 = myDataCenterInstanceConfig8.getNamespace();
        boolean boolean12 = myDataCenterInstanceConfig8.isNonSecurePortEnabled();
        applicationInfoManager5.config = myDataCenterInstanceConfig8;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig14 = applicationInfoManager5.config;
        com.netflix.appinfo.InstanceInfo instanceInfo15 = applicationInfoManager5.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo16 = applicationInfoManager5.instanceInfo;
        int int17 = instanceInfo16.getSecurePort();
        boolean boolean18 = instanceInfo16.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo19 = new com.netflix.appinfo.InstanceInfo(instanceInfo16);
        com.netflix.appinfo.InstanceInfo instanceInfo20 = new com.netflix.appinfo.InstanceInfo(instanceInfo16);
        java.lang.String str21 = instanceInfo16.getAppGroupName();
        int int22 = instanceInfo16.getCountryId();
        java.lang.String str23 = com.netflix.appinfo.InstanceInfo.getZone(strArray0, instanceInfo16);
        java.lang.String str24 = instanceInfo16.getHomePageUrl();
        java.lang.String str25 = instanceInfo16.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.Builder builder26 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder26.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder26.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder26.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig33 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo34 = myDataCenterInstanceConfig33.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder35 = builder32.setDataCenterInfo(dataCenterInfo34);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig36 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo37 = myDataCenterInstanceConfig36.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder32.setDataCenterInfo(dataCenterInfo37);
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder32.setNamespace("na");
        com.netflix.appinfo.InstanceInfo.Builder builder43 = builder32.add("unknown", "UNKNOWN");
        com.netflix.appinfo.LeaseInfo leaseInfo44 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder45 = builder43.setLeaseInfo(leaseInfo44);
        com.netflix.appinfo.InstanceInfo.Builder builder47 = builder43.setSecureVIPAddress("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo.Builder builder48 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder50 = builder48.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder52 = builder48.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder54 = builder48.setIPAddr("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo.Builder builder56 = builder48.setSecureVIPAddressDeser("");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager57 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo58 = applicationInfoManager57.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig60 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int61 = myDataCenterInstanceConfig60.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo62 = myDataCenterInstanceConfig60.getDataCenterInfo();
        java.lang.String str63 = myDataCenterInstanceConfig60.getNamespace();
        boolean boolean64 = myDataCenterInstanceConfig60.isNonSecurePortEnabled();
        applicationInfoManager57.config = myDataCenterInstanceConfig60;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig66 = applicationInfoManager57.config;
        com.netflix.appinfo.InstanceInfo instanceInfo67 = applicationInfoManager57.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo68 = applicationInfoManager57.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType69 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo68.setActionType(actionType69);
        com.netflix.appinfo.LeaseInfo leaseInfo71 = null;
        instanceInfo68.setLeaseInfo(leaseInfo71);
        java.util.Set<java.lang.String> strSet73 = instanceInfo68.getHealthCheckUrls();
        java.lang.String str74 = instanceInfo68.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder75 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo68);
        com.netflix.appinfo.InstanceInfo.Builder builder78 = builder75.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder80 = builder75.setVIPAddressDeser("hi!");
        com.netflix.appinfo.InstanceInfo.PortType portType81 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder83 = builder80.enablePort(portType81, false);
        com.netflix.appinfo.InstanceInfo.Builder builder85 = builder56.enablePort(portType81, true);
        com.netflix.appinfo.InstanceInfo.Builder builder87 = builder43.enablePort(portType81, false);
        boolean boolean88 = instanceInfo16.isPortEnabled(portType81);
        com.netflix.appinfo.InstanceInfo.Builder builder89 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo16);
        int int90 = instanceInfo16.getCountryId();
        java.lang.String str91 = instanceInfo16.getAppName();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "default" + "'", str2, "default");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "default" + "'", str4, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager5);
        org.junit.Assert.assertNotNull(instanceInfo6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 30 + "'", int9 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertNotNull(instanceInfo16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 443 + "'", int17 == 443);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UNKNOWN" + "'", str21, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "default" + "'", str23, "default");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str24, "http://inesserver2.windows.cin.ufpe.br:80/");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UNKNOWN" + "'", str25, "UNKNOWN");
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(dataCenterInfo34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(dataCenterInfo37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(applicationInfoManager57);
        org.junit.Assert.assertNotNull(instanceInfo58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig66);
        org.junit.Assert.assertNotNull(instanceInfo67);
        org.junit.Assert.assertNotNull(instanceInfo68);
        org.junit.Assert.assertTrue("'" + actionType69 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType69.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str74, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertTrue("'" + portType81 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType81.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "UNKNOWN" + "'", str91, "UNKNOWN");
    }

    @Test
    public void test01768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01768");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setSecureVIPAddressDeser("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo15 = builder6.build();
        java.lang.String str16 = instanceInfo15.getHostName();
        java.lang.String str17 = instanceInfo15.getIPAddr();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test01769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01769");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig1 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo2 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager3 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig1, instanceInfo2);
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig4 = applicationInfoManager3.config;
        com.netflix.appinfo.InstanceInfo instanceInfo5 = applicationInfoManager3.getInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig6 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo7 = myDataCenterInstanceConfig6.getDataCenterInfo();
        applicationInfoManager3.config = myDataCenterInstanceConfig6;
        java.lang.Class<?> wildcardClass9 = myDataCenterInstanceConfig6.getClass();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig1);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig4);
        org.junit.Assert.assertNull(instanceInfo5);
        org.junit.Assert.assertNotNull(dataCenterInfo7);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test01770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01770");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = null; // flaky: instanceInfo11.getVersion();
// flaky:         instanceInfo11.setLastUpdatedTimestamp();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "unknown" + "'", str14, "unknown");
    }

    @Test
    public void test01771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01771");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        java.lang.String str6 = myDataCenterInstanceConfig2.getIpAddress();
        java.lang.String str7 = myDataCenterInstanceConfig2.getHealthCheckUrl();
        java.lang.String str8 = myDataCenterInstanceConfig2.getStatusPageUrl();
        java.lang.String str9 = myDataCenterInstanceConfig2.getNamespace();
        boolean boolean10 = myDataCenterInstanceConfig2.isNonSecurePortEnabled();
        java.lang.String str11 = myDataCenterInstanceConfig2.getIpAddress();
        java.lang.String str12 = myDataCenterInstanceConfig2.getSecureHealthCheckUrl();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "172.20.26.3" + "'", str6, "172.20.26.3");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "172.20.26.3" + "'", str11, "172.20.26.3");
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test01772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01772");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "/Status", "default", "inesserver2.windows.cin.ufpe.br:80", "default", "default" };
        com.netflix.appinfo.InstanceInfo instanceInfo7 = null;
        java.lang.String str8 = com.netflix.appinfo.InstanceInfo.getZone(strArray6, instanceInfo7);
        com.netflix.appinfo.InstanceInfo instanceInfo9 = null;
        java.lang.String str10 = com.netflix.appinfo.InstanceInfo.getZone(strArray6, instanceInfo9);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder11.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder11.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder11.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig18 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig18.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder17.setDataCenterInfo(dataCenterInfo19);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = myDataCenterInstanceConfig21.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder17.setDataCenterInfo(dataCenterInfo22);
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder17.setNamespace("na");
        com.netflix.appinfo.InstanceInfo instanceInfo26 = builder17.build();
        int int27 = instanceInfo26.getSecurePort();
        instanceInfo26.setSID("http://inesserver2.windows.cin.ufpe.br:80/Status");
        int int30 = instanceInfo26.getPort();
        java.lang.String str31 = com.netflix.appinfo.InstanceInfo.getZone(strArray6, instanceInfo26);
        java.lang.String str32 = instanceInfo26.getHomePageUrl();
        java.lang.String str33 = instanceInfo26.getAppGroupName();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 7002 + "'", int27 == 7002);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 7001 + "'", int30 == 7001);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/" + "'", str33, "/");
    }

    @Test
    public void test01773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01773");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        int int4 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        int int5 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str6 = myDataCenterInstanceConfig1.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = myDataCenterInstanceConfig1.getMetadataMap();
        com.netflix.appinfo.InstanceInfo.Builder builder8 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder8.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder8.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig15 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo16 = myDataCenterInstanceConfig15.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder14.setDataCenterInfo(dataCenterInfo16);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig18 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig18.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder14.setDataCenterInfo(dataCenterInfo19);
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder14.setNamespace("na");
        com.netflix.appinfo.InstanceInfo instanceInfo23 = builder14.build();
        int int24 = instanceInfo23.getSecurePort();
        instanceInfo23.setSID("http://inesserver2.windows.cin.ufpe.br:80/Status");
        java.lang.String str27 = instanceInfo23.getSecureVipAddress();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager28 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo23);
        boolean boolean29 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        int int30 = myDataCenterInstanceConfig1.getNonSecurePort();
        java.lang.Class<?> wildcardClass31 = myDataCenterInstanceConfig1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(dataCenterInfo16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(instanceInfo23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 7002 + "'", int24 == 7002);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/healthcheck" + "'", str27, "/healthcheck");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 80 + "'", int30 == 80);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test01774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01774");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager8 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int11 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        int int12 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager8.config = myDataCenterInstanceConfig10;
        java.lang.String str14 = myDataCenterInstanceConfig10.getIpAddress();
        java.lang.String str15 = myDataCenterInstanceConfig10.getHealthCheckUrl();
        java.lang.String str16 = myDataCenterInstanceConfig10.getStatusPageUrl();
        java.lang.String str17 = myDataCenterInstanceConfig10.getNamespace();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder2.setDataCenterInfo(dataCenterInfo18);
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder23 = builder2.setHealthCheckUrls("HTTP://HI!:80/STATUS", "", "HTTP://HI!:80/STATUS");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(applicationInfoManager8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 30 + "'", int12 == 30);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "172.20.26.3" + "'", str14, "172.20.26.3");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertNotNull(builder19);
    }

    @Test
    public void test01775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01775");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        int int13 = instanceInfo11.getPort();
        int int14 = instanceInfo11.getSecurePort();
        java.lang.Boolean boolean15 = instanceInfo11.isCoordinatingDiscoveryServer();
        long long16 = instanceInfo11.getLastUpdatedTimestamp();
        java.lang.String str17 = instanceInfo11.getSID();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7002 + "'", int12 == 7002);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 7001 + "'", int13 == 7001);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 7002 + "'", int14 == 7002);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1636106056669L + "'", long16 == 1636106056669L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str17, "http://inesserver2.windows.cin.ufpe.br:80/Status");
    }

    @Test
    public void test01776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01776");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig6 = applicationInfoManager0.config;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        com.netflix.appinfo.InstanceInfo instanceInfo8 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo9 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig10 = applicationInfoManager0.config;
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig6);
        org.junit.Assert.assertNotNull(instanceInfo8);
        org.junit.Assert.assertNotNull(instanceInfo9);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig10);
    }

    @Test
    public void test01777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01777");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo instanceInfo11 = builder10.build();
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder10.setVIPAddressDeser("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder10.setASGName("");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder15.setAppName("/HEALTHCHECK");
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder15.setHealthCheckUrlsForDeser("http://hi!:80/Status", "HTTP://HI!:80/STATUS");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test01778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01778");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder18.setHealthCheckUrlsForDeser("", "hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setLastDirtyTimestamp((long) 443);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager26 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager26.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig29 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int30 = myDataCenterInstanceConfig29.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo31 = myDataCenterInstanceConfig29.getDataCenterInfo();
        java.lang.String str32 = myDataCenterInstanceConfig29.getNamespace();
        boolean boolean33 = myDataCenterInstanceConfig29.isNonSecurePortEnabled();
        applicationInfoManager26.config = myDataCenterInstanceConfig29;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig35 = applicationInfoManager26.config;
        com.netflix.appinfo.InstanceInfo instanceInfo36 = applicationInfoManager26.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo37 = applicationInfoManager26.instanceInfo;
        java.lang.Boolean boolean38 = instanceInfo37.isCoordinatingDiscoveryServer();
        java.lang.String str39 = instanceInfo37.getVIPAddress();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus40 = instanceInfo37.getOverriddenStatus();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo41 = instanceInfo37.getDataCenterInfo();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager42 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo43 = applicationInfoManager42.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig45 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int46 = myDataCenterInstanceConfig45.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo47 = myDataCenterInstanceConfig45.getDataCenterInfo();
        java.lang.String str48 = myDataCenterInstanceConfig45.getNamespace();
        boolean boolean49 = myDataCenterInstanceConfig45.isNonSecurePortEnabled();
        applicationInfoManager42.config = myDataCenterInstanceConfig45;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig51 = applicationInfoManager42.config;
        com.netflix.appinfo.InstanceInfo instanceInfo52 = applicationInfoManager42.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo53 = applicationInfoManager42.instanceInfo;
        int int54 = instanceInfo53.getSecurePort();
        boolean boolean55 = instanceInfo53.isDirty();
        java.lang.String str56 = instanceInfo53.getHostName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType57 = instanceInfo53.getActionType();
        boolean boolean58 = instanceInfo53.isDirty();
        boolean boolean59 = instanceInfo53.isDirty();
        int int60 = instanceInfo53.getPort();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus62 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("/Status");
        instanceInfo53.setStatusWithoutDirty(instanceStatus62);
        instanceInfo37.setOverriddenStatus(instanceStatus62);
        com.netflix.appinfo.InstanceInfo.Builder builder65 = builder25.setOverriddenStatus(instanceStatus62);
        com.netflix.appinfo.InstanceInfo.Builder builder67 = builder25.setIPAddr("HI!");
        com.netflix.appinfo.InstanceInfo.Builder builder69 = builder67.setPort((int) '#');
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(applicationInfoManager26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 30 + "'", int30 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig35);
        org.junit.Assert.assertNotNull(instanceInfo36);
        org.junit.Assert.assertNotNull(instanceInfo37);
        org.junit.Assert.assertEquals("'" + boolean38 + "' != '" + false + "'", boolean38, false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + instanceStatus40 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus40.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
// flaky:         org.junit.Assert.assertNull(dataCenterInfo41);
        org.junit.Assert.assertNotNull(applicationInfoManager42);
        org.junit.Assert.assertNotNull(instanceInfo43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 30 + "'", int46 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig51);
        org.junit.Assert.assertNotNull(instanceInfo52);
        org.junit.Assert.assertNotNull(instanceInfo53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 7002 + "'", int54 == 7002);
// flaky:         org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + actionType57 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType57.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 7001 + "'", int60 == 7001);
        org.junit.Assert.assertTrue("'" + instanceStatus62 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus62.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder69);
    }

    @Test
    public void test01779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01779");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo instanceInfo5 = builder0.build();
        boolean boolean6 = builder0.isInitialized();
        com.netflix.appinfo.InstanceInfo instanceInfo7 = builder0.getRawInstance();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder0.setSID("/");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder0.add("172.20.26.3", "UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder13.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder13.setCountryId(7002);
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder17.setSecurePort((int) (byte) 10);
        com.netflix.appinfo.InstanceInfo.PortType portType20 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder17.enablePort(portType20, false);
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder0.enablePort(portType20, true);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager25 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig27 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int28 = myDataCenterInstanceConfig27.getLeaseRenewalIntervalInSeconds();
        int int29 = myDataCenterInstanceConfig27.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager25.config = myDataCenterInstanceConfig27;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig31 = applicationInfoManager25.config;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig32 = applicationInfoManager25.config;
        com.netflix.appinfo.InstanceInfo instanceInfo33 = applicationInfoManager25.getInfo();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus34 = instanceInfo33.getStatus();
        com.netflix.appinfo.InstanceInfo.Builder builder35 = builder0.setStatus(instanceStatus34);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(instanceInfo5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(instanceInfo7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + portType20 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType20.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(applicationInfoManager25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 30 + "'", int28 == 30);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 30 + "'", int29 == 30);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig31);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertTrue("'" + instanceStatus34 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus34.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder35);
    }

    @Test
    public void test01780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01780");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager6 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo7 = applicationInfoManager6.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig9.getDataCenterInfo();
        java.lang.String str12 = myDataCenterInstanceConfig9.getNamespace();
        boolean boolean13 = myDataCenterInstanceConfig9.isNonSecurePortEnabled();
        applicationInfoManager6.config = myDataCenterInstanceConfig9;
        int int15 = myDataCenterInstanceConfig9.getLeaseExpirationDurationInSeconds();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = myDataCenterInstanceConfig9.getMetadataMap();
        java.lang.String str17 = myDataCenterInstanceConfig9.getVirtualHostName();
        java.lang.String str18 = myDataCenterInstanceConfig9.getHealthCheckUrl();
        java.lang.String str19 = myDataCenterInstanceConfig9.getStatusPageUrlPath();
        java.lang.String str21 = myDataCenterInstanceConfig9.getHostName(true);
        applicationInfoManager0.config = myDataCenterInstanceConfig9;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int25 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        boolean boolean26 = myDataCenterInstanceConfig24.isNonSecurePortEnabled();
        int int27 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        int int28 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig24);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(applicationInfoManager6);
        org.junit.Assert.assertNotNull(instanceInfo7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 90 + "'", int15 == 90);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str17, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/Status" + "'", str19, "/Status");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str21, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 30 + "'", int25 == 30);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 30 + "'", int27 == 30);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 30 + "'", int28 == 30);
    }

    @Test
    public void test01781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01781");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        boolean boolean9 = builder6.isInitialized();
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setVIPAddress("na");
        com.netflix.appinfo.InstanceInfo instanceInfo12 = builder11.getRawInstance();
        java.lang.Boolean boolean13 = instanceInfo12.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus14 = instanceInfo12.getOverriddenStatus();
        instanceInfo12.setSID("DEFAULT");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertTrue("'" + instanceStatus14 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus14.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
    }

    @Test
    public void test01782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01782");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager2 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        int int6 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager2.config = myDataCenterInstanceConfig4;
        java.lang.String str8 = myDataCenterInstanceConfig4.getIpAddress();
        java.lang.String str9 = myDataCenterInstanceConfig4.getHealthCheckUrl();
        java.lang.String str10 = myDataCenterInstanceConfig4.getStatusPageUrl();
        java.lang.String str11 = myDataCenterInstanceConfig4.getNamespace();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo12 = myDataCenterInstanceConfig4.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig13 = new com.netflix.appinfo.MyDataCenterInstanceConfig("na", dataCenterInfo12);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig14 = new com.netflix.appinfo.MyDataCenterInstanceConfig("http://hi!:35/Status", dataCenterInfo12);
        org.junit.Assert.assertNotNull(applicationInfoManager2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 30 + "'", int6 == 30);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "172.20.26.3" + "'", str8, "172.20.26.3");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(dataCenterInfo12);
    }

    @Test
    public void test01783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01783");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder12.setSecureVIPAddressDeser("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder16.add("na", "/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder16.setCountryId((int) (short) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder16.setSecurePort((int) (short) 0);
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder16.setVIPAddress("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder16.setHomePageUrlForDeser("eureka.");
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder16.setHostName("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
    }

    @Test
    public void test01784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01784");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager0.getInfo();
        java.lang.String str13 = instanceInfo12.getSID();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo14 = instanceInfo12.getDataCenterInfo();
        java.lang.String str15 = instanceInfo12.getVersion();
        java.lang.String str16 = instanceInfo12.getId();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "na" + "'", str13, "na");
        org.junit.Assert.assertNotNull(dataCenterInfo14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "unknown" + "'", str15, "unknown");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str16, "inesserver2.windows.cin.ufpe.br");
    }

    @Test
    public void test01785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01785");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = instanceInfo11.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType15 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType15);
        java.lang.String str17 = instanceInfo11.getHostName();
        int int18 = instanceInfo11.getPort();
        java.lang.String str19 = instanceInfo11.getStatusPageUrl();
        com.netflix.appinfo.LeaseInfo leaseInfo20 = instanceInfo11.getLeaseInfo();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "/" + "'", str14, "/");
        org.junit.Assert.assertTrue("'" + actionType15 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType15.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 7001 + "'", int18 == 7001);
// flaky:         org.junit.Assert.assertNull(str19);
// flaky:         org.junit.Assert.assertNull(leaseInfo20);
    }

    @Test
    public void test01786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01786");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        int int13 = instanceInfo11.getPort();
        int int14 = instanceInfo11.getCountryId();
        boolean boolean15 = instanceInfo11.isDirty();
        int int16 = instanceInfo11.getPort();
        java.lang.String str17 = instanceInfo11.getStatusPageUrl();
        java.lang.String[] strArray18 = new java.lang.String[] {};
        com.netflix.appinfo.InstanceInfo instanceInfo19 = null;
        java.lang.String str20 = com.netflix.appinfo.InstanceInfo.getZone(strArray18, instanceInfo19);
        com.netflix.appinfo.InstanceInfo instanceInfo21 = null;
        java.lang.String str22 = com.netflix.appinfo.InstanceInfo.getZone(strArray18, instanceInfo21);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager23 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo24 = applicationInfoManager23.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig26 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int27 = myDataCenterInstanceConfig26.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo28 = myDataCenterInstanceConfig26.getDataCenterInfo();
        java.lang.String str29 = myDataCenterInstanceConfig26.getNamespace();
        boolean boolean30 = myDataCenterInstanceConfig26.isNonSecurePortEnabled();
        applicationInfoManager23.config = myDataCenterInstanceConfig26;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig32 = applicationInfoManager23.config;
        com.netflix.appinfo.InstanceInfo instanceInfo33 = applicationInfoManager23.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager23.instanceInfo;
        java.lang.String str35 = instanceInfo34.getHomePageUrl();
        java.lang.String str36 = instanceInfo34.getId();
        java.lang.String str37 = com.netflix.appinfo.InstanceInfo.getZone(strArray18, instanceInfo34);
        boolean boolean38 = instanceInfo11.equals((java.lang.Object) instanceInfo34);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus39 = instanceInfo11.getOverriddenStatus();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7002 + "'", int12 == 7002);
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 7001 + "'", int13 == 7001);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
// flaky:         org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 7001 + "'", int16 == 7001);
// flaky:         org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "default" + "'", str20, "default");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "default" + "'", str22, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager23);
        org.junit.Assert.assertNotNull(instanceInfo24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 30 + "'", int27 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertNotNull(instanceInfo34);
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str36, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "default" + "'", str37, "default");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + instanceStatus39 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus39.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
    }

    @Test
    public void test01787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01787");
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig0 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager1 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig4.getDataCenterInfo();
        java.lang.String str7 = myDataCenterInstanceConfig4.getNamespace();
        boolean boolean8 = myDataCenterInstanceConfig4.isNonSecurePortEnabled();
        applicationInfoManager1.config = myDataCenterInstanceConfig4;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig10 = applicationInfoManager1.config;
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager1.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager1.instanceInfo;
        int int13 = instanceInfo12.getSecurePort();
        boolean boolean14 = instanceInfo12.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig0, instanceInfo12);
        java.lang.String str16 = instanceInfo12.getHostName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus17 = instanceInfo12.getOverriddenStatus();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder20.setHealthCheckUrlsForDeser("http://inesserver2.windows.cin.ufpe.br:80/", "default");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setSID("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder25.setAppName("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager28 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager28.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig31 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int32 = myDataCenterInstanceConfig31.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo33 = myDataCenterInstanceConfig31.getDataCenterInfo();
        java.lang.String str34 = myDataCenterInstanceConfig31.getNamespace();
        boolean boolean35 = myDataCenterInstanceConfig31.isNonSecurePortEnabled();
        applicationInfoManager28.config = myDataCenterInstanceConfig31;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig37 = applicationInfoManager28.config;
        com.netflix.appinfo.InstanceInfo instanceInfo38 = applicationInfoManager28.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo39 = applicationInfoManager28.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType40 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo39.setActionType(actionType40);
        com.netflix.appinfo.LeaseInfo leaseInfo42 = null;
        instanceInfo39.setLeaseInfo(leaseInfo42);
        java.util.Set<java.lang.String> strSet44 = instanceInfo39.getHealthCheckUrls();
        java.lang.String str45 = instanceInfo39.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder46 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo39);
        com.netflix.appinfo.InstanceInfo.Builder builder48 = builder46.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder50 = builder46.setHomePageUrlForDeser("");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager51 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo52 = applicationInfoManager51.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig54 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int55 = myDataCenterInstanceConfig54.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo56 = myDataCenterInstanceConfig54.getDataCenterInfo();
        java.lang.String str57 = myDataCenterInstanceConfig54.getNamespace();
        boolean boolean58 = myDataCenterInstanceConfig54.isNonSecurePortEnabled();
        applicationInfoManager51.config = myDataCenterInstanceConfig54;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig60 = applicationInfoManager51.config;
        com.netflix.appinfo.InstanceInfo instanceInfo61 = applicationInfoManager51.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo62 = applicationInfoManager51.instanceInfo;
        int int63 = instanceInfo62.getSecurePort();
        boolean boolean64 = instanceInfo62.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager65 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo66 = applicationInfoManager65.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig68 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int69 = myDataCenterInstanceConfig68.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo70 = myDataCenterInstanceConfig68.getDataCenterInfo();
        java.lang.String str71 = myDataCenterInstanceConfig68.getNamespace();
        boolean boolean72 = myDataCenterInstanceConfig68.isNonSecurePortEnabled();
        applicationInfoManager65.config = myDataCenterInstanceConfig68;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig74 = applicationInfoManager65.config;
        com.netflix.appinfo.InstanceInfo instanceInfo75 = applicationInfoManager65.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo76 = applicationInfoManager65.instanceInfo;
        int int77 = instanceInfo76.getSecurePort();
        com.netflix.appinfo.InstanceInfo.PortType portType78 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean79 = instanceInfo76.isPortEnabled(portType78);
        boolean boolean80 = instanceInfo62.isPortEnabled(portType78);
        com.netflix.appinfo.InstanceInfo.Builder builder82 = builder46.enablePort(portType78, true);
        com.netflix.appinfo.InstanceInfo.Builder builder84 = builder27.enablePort(portType78, true);
        boolean boolean85 = instanceInfo12.isPortEnabled(portType78);
        org.junit.Assert.assertNotNull(applicationInfoManager1);
        org.junit.Assert.assertNotNull(instanceInfo2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 443 + "'", int13 == 443);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str16, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + instanceStatus17 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus17.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(applicationInfoManager28);
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 30 + "'", int32 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig37);
        org.junit.Assert.assertNotNull(instanceInfo38);
        org.junit.Assert.assertNotNull(instanceInfo39);
        org.junit.Assert.assertTrue("'" + actionType40 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType40.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str45, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(applicationInfoManager51);
        org.junit.Assert.assertNotNull(instanceInfo52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig60);
        org.junit.Assert.assertNotNull(instanceInfo61);
        org.junit.Assert.assertNotNull(instanceInfo62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 443 + "'", int63 == 443);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager65);
        org.junit.Assert.assertNotNull(instanceInfo66);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 30 + "'", int69 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig74);
        org.junit.Assert.assertNotNull(instanceInfo75);
        org.junit.Assert.assertNotNull(instanceInfo76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 443 + "'", int77 == 443);
        org.junit.Assert.assertTrue("'" + portType78 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType78.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test01788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01788");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder7.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder9.setVIPAddressDeser("/");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder11.setASGName("na");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager14 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo15 = applicationInfoManager14.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig17 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int18 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig17.getDataCenterInfo();
        java.lang.String str20 = myDataCenterInstanceConfig17.getNamespace();
        boolean boolean21 = myDataCenterInstanceConfig17.isNonSecurePortEnabled();
        applicationInfoManager14.config = myDataCenterInstanceConfig17;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig23 = applicationInfoManager14.config;
        com.netflix.appinfo.InstanceInfo instanceInfo24 = applicationInfoManager14.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager14.instanceInfo;
        int int26 = instanceInfo25.getSecurePort();
        boolean boolean27 = instanceInfo25.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = new com.netflix.appinfo.InstanceInfo(instanceInfo25);
        java.lang.String str29 = instanceInfo28.getVersion();
        instanceInfo28.setLastUpdatedTimestamp();
        java.lang.String str31 = instanceInfo28.getAppName();
        java.lang.String str32 = instanceInfo28.getSID();
        java.lang.String str33 = instanceInfo28.getASGName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager34 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager34.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig37 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int38 = myDataCenterInstanceConfig37.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo39 = myDataCenterInstanceConfig37.getDataCenterInfo();
        java.lang.String str40 = myDataCenterInstanceConfig37.getNamespace();
        boolean boolean41 = myDataCenterInstanceConfig37.isNonSecurePortEnabled();
        applicationInfoManager34.config = myDataCenterInstanceConfig37;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig43 = applicationInfoManager34.config;
        com.netflix.appinfo.InstanceInfo instanceInfo44 = applicationInfoManager34.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo45 = applicationInfoManager34.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType46 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo45.setActionType(actionType46);
        java.lang.String str48 = instanceInfo45.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType49 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo45.setActionType(actionType49);
        instanceInfo28.setActionType(actionType49);
        com.netflix.appinfo.InstanceInfo.Builder builder52 = builder11.setActionType(actionType49);
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder56 = builder11.setHealthCheckUrls("172.20.26.3", "/HEALTHCHECK", "/Status");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(applicationInfoManager14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 30 + "'", int18 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig23);
        org.junit.Assert.assertNotNull(instanceInfo24);
        org.junit.Assert.assertNotNull(instanceInfo25);
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 30 + "'", int26 == 30);
// flaky:         org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "unknown" + "'", str29, "unknown");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "UNKNOWN" + "'", str31, "UNKNOWN");
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "unknown" + "'", str32, "unknown");
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/healthcheck" + "'", str33, "/healthcheck");
        org.junit.Assert.assertNotNull(applicationInfoManager34);
        org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 30 + "'", int38 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig43);
        org.junit.Assert.assertNotNull(instanceInfo44);
        org.junit.Assert.assertNotNull(instanceInfo45);
        org.junit.Assert.assertTrue("'" + actionType46 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType46.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "UNKNOWN" + "'", str48, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + actionType49 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType49.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(builder52);
    }

    @Test
    public void test01789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01789");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.add("inesserver2.windows.cin.ufpe.br:80", "/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setLastDirtyTimestamp(1636105974704L);
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder14.setStatusPageUrlForDeser("/HEALTHCHECK");
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder16.setAppGroupName("UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setHomePageUrlForDeser("http://inesserver2.windows.cin.ufpe.br:80/");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test01790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01790");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo instanceInfo12 = builder11.getRawInstance();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager13 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig15 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int16 = myDataCenterInstanceConfig15.getLeaseRenewalIntervalInSeconds();
        int int17 = myDataCenterInstanceConfig15.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager13.config = myDataCenterInstanceConfig15;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager13;
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus21 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("/Status");
        applicationInfoManager13.setInstanceStatus(instanceStatus21);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder11.setOverriddenStatus(instanceStatus21);
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder11.setLastDirtyTimestamp(1636105984190L);
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder11.setHealthCheckUrls("UNKNOWN", "http://hi!:80/Status", "");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertNotNull(applicationInfoManager13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 30 + "'", int16 == 30);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
        org.junit.Assert.assertTrue("'" + instanceStatus21 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus21.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder29);
    }

    @Test
    public void test01791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01791");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str5 = myDataCenterInstanceConfig4.getIpAddress();
        java.lang.String str6 = myDataCenterInstanceConfig4.getASGName();
        boolean boolean7 = myDataCenterInstanceConfig4.getSecurePortEnabled();
        java.lang.String str8 = myDataCenterInstanceConfig4.getStatusPageUrl();
        applicationInfoManager0.config = myDataCenterInstanceConfig4;
        java.lang.String str10 = myDataCenterInstanceConfig4.getStatusPageUrl();
        java.lang.String str11 = myDataCenterInstanceConfig4.getNamespace();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertNotNull(instanceInfo2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "172.20.26.3" + "'", str5, "172.20.26.3");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test01792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01792");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        boolean boolean9 = builder6.isInitialized();
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setVIPAddress("na");
        com.netflix.appinfo.InstanceInfo instanceInfo12 = builder11.getRawInstance();
        java.lang.Boolean boolean13 = instanceInfo12.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.LeaseInfo leaseInfo14 = instanceInfo12.getLeaseInfo();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus15 = instanceInfo12.getStatus();
        instanceInfo12.setIsCoordinatingDiscoveryServer();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNull(leaseInfo14);
        org.junit.Assert.assertTrue("'" + instanceStatus15 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UP + "'", instanceStatus15.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UP));
    }

    @Test
    public void test01793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01793");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        boolean boolean2 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        java.lang.String str3 = myDataCenterInstanceConfig1.getHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo4 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig1.getHostName(false);
        java.lang.String str7 = myDataCenterInstanceConfig1.getStatusPageUrl();
        java.lang.String str8 = myDataCenterInstanceConfig1.getHomePageUrlPath();
        int int9 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str10 = myDataCenterInstanceConfig1.getAppGroupName();
        java.lang.String str11 = myDataCenterInstanceConfig1.getVirtualHostName();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(dataCenterInfo4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str6, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/" + "'", str8, "/");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 30 + "'", int9 == 30);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "unknown" + "'", str10, "unknown");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str11, "inesserver2.windows.cin.ufpe.br:80");
    }

    @Test
    public void test01794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01794");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        int int9 = myDataCenterInstanceConfig3.getLeaseExpirationDurationInSeconds();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = myDataCenterInstanceConfig3.getMetadataMap();
        java.lang.String str11 = myDataCenterInstanceConfig3.getHomePageUrlPath();
        java.lang.String str12 = myDataCenterInstanceConfig3.getStatusPageUrl();
        int int13 = myDataCenterInstanceConfig3.getNonSecurePort();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 90 + "'", int9 == 90);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/" + "'", str11, "/");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 80 + "'", int13 == 80);
    }

    @Test
    public void test01795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01795");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig1 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo2 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager3 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig1, instanceInfo2);
        com.netflix.appinfo.InstanceInfo instanceInfo4 = null;
        applicationInfoManager3.instanceInfo = instanceInfo4;
        com.netflix.appinfo.InstanceInfo instanceInfo6 = applicationInfoManager3.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager7 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        int int11 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager7.config = myDataCenterInstanceConfig9;
        java.lang.String str13 = myDataCenterInstanceConfig9.getIpAddress();
        java.lang.String str14 = myDataCenterInstanceConfig9.getVirtualHostName();
        java.lang.String str16 = myDataCenterInstanceConfig9.getHostName(true);
        applicationInfoManager3.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig9);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus18 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        applicationInfoManager3.setInstanceStatus(instanceStatus18);
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager3;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig22 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int23 = myDataCenterInstanceConfig22.getLeaseRenewalIntervalInSeconds();
        int int24 = myDataCenterInstanceConfig22.getLeaseRenewalIntervalInSeconds();
        java.lang.String str25 = myDataCenterInstanceConfig22.getStatusPageUrlPath();
        boolean boolean26 = myDataCenterInstanceConfig22.getSecurePortEnabled();
        com.netflix.appinfo.InstanceInfo instanceInfo27 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager28 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig22, instanceInfo27);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig30 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.util.Map<java.lang.String, java.lang.String> strMap31 = myDataCenterInstanceConfig30.getMetadataMap();
        java.lang.String str32 = myDataCenterInstanceConfig30.getHealthCheckUrlPath();
        int int33 = myDataCenterInstanceConfig30.getLeaseRenewalIntervalInSeconds();
        java.lang.String str35 = myDataCenterInstanceConfig30.getHostName(true);
        applicationInfoManager28.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig30);
        java.lang.String str37 = myDataCenterInstanceConfig30.getAppGroupName();
        applicationInfoManager3.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig30);
        com.netflix.appinfo.InstanceInfo instanceInfo39 = applicationInfoManager3.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo40 = applicationInfoManager3.getInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig42 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int43 = myDataCenterInstanceConfig42.getLeaseRenewalIntervalInSeconds();
        boolean boolean44 = myDataCenterInstanceConfig42.isNonSecurePortEnabled();
        java.lang.String str45 = myDataCenterInstanceConfig42.getHealthCheckUrlPath();
        com.netflix.appinfo.InstanceInfo instanceInfo46 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager47 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig42, instanceInfo46);
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig48 = applicationInfoManager47.config;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig50 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int51 = myDataCenterInstanceConfig50.getLeaseRenewalIntervalInSeconds();
        int int52 = myDataCenterInstanceConfig50.getLeaseRenewalIntervalInSeconds();
        java.lang.String str53 = myDataCenterInstanceConfig50.getStatusPageUrlPath();
        applicationInfoManager47.config = myDataCenterInstanceConfig50;
        java.lang.String str56 = myDataCenterInstanceConfig50.getHostName(false);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo57 = myDataCenterInstanceConfig50.getDataCenterInfo();
        applicationInfoManager3.config = myDataCenterInstanceConfig50;
        java.lang.String str59 = myDataCenterInstanceConfig50.getSecureHealthCheckUrl();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig1);
        org.junit.Assert.assertNull(instanceInfo6);
        org.junit.Assert.assertNotNull(applicationInfoManager7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "172.20.26.3" + "'", str13, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str14, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str16, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + instanceStatus18 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus18.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 30 + "'", int23 == 30);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 30 + "'", int24 == 30);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/Status" + "'", str25, "/Status");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "/healthcheck" + "'", str32, "/healthcheck");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 30 + "'", int33 == 30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str35, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "unknown" + "'", str37, "unknown");
        org.junit.Assert.assertNotNull(instanceInfo39);
        org.junit.Assert.assertNotNull(instanceInfo40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 30 + "'", int43 == 30);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/healthcheck" + "'", str45, "/healthcheck");
        org.junit.Assert.assertNotNull(eurekaInstanceConfig48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 30 + "'", int51 == 30);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 30 + "'", int52 == 30);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "/Status" + "'", str53, "/Status");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str56, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo57);
        org.junit.Assert.assertNull(str59);
    }

    @Test
    public void test01796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01796");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder7.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder9.add("http://inesserver2.windows.cin.ufpe.br:80/Status", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setSecureVIPAddressDeser("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder14.add("http:///:80/Status", "na");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
    }

    @Test
    public void test01797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01797");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("hi!");
        java.lang.String str2 = myDataCenterInstanceConfig1.getStatusPageUrl();
        java.lang.String str4 = myDataCenterInstanceConfig1.getHostName(true);
        java.lang.String str5 = myDataCenterInstanceConfig1.getHomePageUrl();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str4, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test01798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01798");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
// flaky:         instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = null; // flaky: instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = null; // flaky: instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = null; // flaky: builder18.setSecurePort(30);
        com.netflix.appinfo.InstanceInfo.Builder builder22 = null; // flaky: builder20.setAppGroupName("");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = null; // flaky: builder22.setSecureVIPAddressDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder26 = null; // flaky: builder22.setVIPAddress("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig28 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int29 = myDataCenterInstanceConfig28.getLeaseRenewalIntervalInSeconds();
        int int30 = myDataCenterInstanceConfig28.getLeaseRenewalIntervalInSeconds();
        java.lang.String str31 = myDataCenterInstanceConfig28.getStatusPageUrlPath();
        boolean boolean32 = myDataCenterInstanceConfig28.getSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo33 = myDataCenterInstanceConfig28.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder34 = null; // flaky: builder22.setDataCenterInfo(dataCenterInfo33);
        com.netflix.appinfo.InstanceInfo.Builder builder37 = null; // flaky: builder34.add("HTTP://HI!:80/STATUS", "http:///:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder38 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder38.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder42 = builder38.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder44 = builder38.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig45 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo46 = myDataCenterInstanceConfig45.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder47 = builder44.setDataCenterInfo(dataCenterInfo46);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig48 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo49 = myDataCenterInstanceConfig48.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder50 = builder44.setDataCenterInfo(dataCenterInfo49);
        com.netflix.appinfo.InstanceInfo.Builder builder52 = builder44.setNamespace("na");
        com.netflix.appinfo.InstanceInfo.Builder builder55 = builder44.add("unknown", "UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder57 = builder55.setSecureVIPAddress("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager58 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo59 = applicationInfoManager58.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig61 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int62 = myDataCenterInstanceConfig61.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo63 = myDataCenterInstanceConfig61.getDataCenterInfo();
        java.lang.String str64 = myDataCenterInstanceConfig61.getNamespace();
        boolean boolean65 = myDataCenterInstanceConfig61.isNonSecurePortEnabled();
        applicationInfoManager58.config = myDataCenterInstanceConfig61;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig67 = applicationInfoManager58.config;
        com.netflix.appinfo.InstanceInfo instanceInfo68 = applicationInfoManager58.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo69 = applicationInfoManager58.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType70 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo69.setActionType(actionType70);
        com.netflix.appinfo.LeaseInfo leaseInfo72 = null;
// flaky:         instanceInfo69.setLeaseInfo(leaseInfo72);
        java.util.Set<java.lang.String> strSet74 = null; // flaky: instanceInfo69.getHealthCheckUrls();
        java.lang.String str75 = null; // flaky: instanceInfo69.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder76 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo69);
        com.netflix.appinfo.InstanceInfo.Builder builder78 = null; // flaky: builder76.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder81 = null; // flaky: builder76.setHealthCheckUrlsForDeser("", "hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder83 = null; // flaky: builder81.setLastDirtyTimestamp((long) 443);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus84 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        com.netflix.appinfo.InstanceInfo.Builder builder85 = null; // flaky: builder81.setStatus(instanceStatus84);
        com.netflix.appinfo.InstanceInfo.Builder builder86 = builder57.setStatus(instanceStatus84);
        com.netflix.appinfo.InstanceInfo.Builder builder87 = null; // flaky: builder34.setStatus(instanceStatus84);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertNotNull(strSet16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertNotNull(builder20);
// flaky:         org.junit.Assert.assertNotNull(builder22);
// flaky:         org.junit.Assert.assertNotNull(builder24);
// flaky:         org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 30 + "'", int29 == 30);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 30 + "'", int30 == 30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/Status" + "'", str31, "/Status");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(dataCenterInfo33);
// flaky:         org.junit.Assert.assertNotNull(builder34);
// flaky:         org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(dataCenterInfo46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(dataCenterInfo49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(applicationInfoManager58);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 30 + "'", int62 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig67);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo68);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo69);
        org.junit.Assert.assertTrue("'" + actionType70 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType70.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertNotNull(strSet74);
// flaky:         org.junit.Assert.assertEquals("'" + str75 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str75, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertNotNull(builder78);
// flaky:         org.junit.Assert.assertNotNull(builder81);
// flaky:         org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertTrue("'" + instanceStatus84 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus84.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
// flaky:         org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
// flaky:         org.junit.Assert.assertNotNull(builder87);
    }

    @Test
    public void test01799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01799");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = null; // flaky: instanceInfo11.getAppGroupName();
        int int15 = 0; // flaky: instanceInfo11.getPort();
        java.lang.String str16 = null; // flaky: instanceInfo11.getAppName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus17 = null; // flaky: instanceInfo11.getOverriddenStatus();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager18 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager18.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int22 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo23 = myDataCenterInstanceConfig21.getDataCenterInfo();
        java.lang.String str24 = myDataCenterInstanceConfig21.getNamespace();
        boolean boolean25 = myDataCenterInstanceConfig21.isNonSecurePortEnabled();
        applicationInfoManager18.config = myDataCenterInstanceConfig21;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig27 = applicationInfoManager18.config;
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager18.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager18.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType30 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo29.setActionType(actionType30);
        com.netflix.appinfo.LeaseInfo leaseInfo32 = null;
// flaky:         instanceInfo29.setLeaseInfo(leaseInfo32);
        java.util.Set<java.lang.String> strSet34 = null; // flaky: instanceInfo29.getHealthCheckUrls();
        java.lang.String str35 = null; // flaky: instanceInfo29.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder36 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo29);
        com.netflix.appinfo.InstanceInfo.Builder builder39 = null; // flaky: builder36.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder41 = null; // flaky: builder36.setVIPAddressDeser("hi!");
        com.netflix.appinfo.LeaseInfo leaseInfo42 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder43 = null; // flaky: builder36.setLeaseInfo(leaseInfo42);
        com.netflix.appinfo.InstanceInfo.PortType portType44 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder46 = null; // flaky: builder36.enablePort(portType44, false);
        boolean boolean47 = false; // flaky: instanceInfo11.isPortEnabled(portType44);
        java.lang.String str48 = null; // flaky: instanceInfo11.getVersion();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null; // flaky: instanceInfo11.getMetadata();
        com.netflix.appinfo.InstanceInfo.Builder builder50 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 80 + "'", int15 == 80);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UNKNOWN" + "'", str16, "UNKNOWN");
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus17 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus17.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(applicationInfoManager18);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 30 + "'", int22 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig27);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo28);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertTrue("'" + actionType30 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType30.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertNotNull(strSet34);
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str35, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertNotNull(builder39);
// flaky:         org.junit.Assert.assertNotNull(builder41);
// flaky:         org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + portType44 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType44.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
// flaky:         org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "unknown" + "'", str48, "unknown");
// flaky:         org.junit.Assert.assertNotNull(strMap49);
    }

    @Test
    public void test01800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01800");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
// flaky:         instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = null; // flaky: instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = null; // flaky: instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = null; // flaky: builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = null; // flaky: builder21.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus24 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        com.netflix.appinfo.InstanceInfo.Builder builder25 = null; // flaky: builder21.setStatus(instanceStatus24);
        com.netflix.appinfo.InstanceInfo.Builder builder29 = null; // flaky: builder21.setHealthCheckUrls("172.20.26.3", "", "http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager30 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager30.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig33 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int34 = myDataCenterInstanceConfig33.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo35 = myDataCenterInstanceConfig33.getDataCenterInfo();
        java.lang.String str36 = myDataCenterInstanceConfig33.getNamespace();
        boolean boolean37 = myDataCenterInstanceConfig33.isNonSecurePortEnabled();
        applicationInfoManager30.config = myDataCenterInstanceConfig33;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig39 = applicationInfoManager30.config;
        com.netflix.appinfo.InstanceInfo instanceInfo40 = applicationInfoManager30.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo41 = applicationInfoManager30.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType42 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo41.setActionType(actionType42);
        java.lang.String str44 = null; // flaky: instanceInfo41.getAppGroupName();
        java.lang.String str45 = null; // flaky: instanceInfo41.getAppName();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null; // flaky: instanceInfo41.getMetadata();
        com.netflix.appinfo.InstanceInfo.Builder builder47 = null; // flaky: builder29.setMetadata(strMap46);
        com.netflix.appinfo.InstanceInfo.Builder builder50 = null; // flaky: builder29.setHealthCheckUrlsForDeser("", "http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo.Builder builder54 = null; // flaky: builder50.setHealthCheckUrls("default", "http://hi!:80/Status", "http:///:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder56 = null; // flaky: builder50.setIPAddr("/");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertNotNull(strSet16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertNotNull(builder21);
// flaky:         org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + instanceStatus24 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus24.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
// flaky:         org.junit.Assert.assertNotNull(builder25);
// flaky:         org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(applicationInfoManager30);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig39);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo40);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo41);
        org.junit.Assert.assertTrue("'" + actionType42 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType42.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "UNKNOWN" + "'", str45, "UNKNOWN");
// flaky:         org.junit.Assert.assertNotNull(strMap46);
// flaky:         org.junit.Assert.assertNotNull(builder47);
// flaky:         org.junit.Assert.assertNotNull(builder50);
// flaky:         org.junit.Assert.assertNotNull(builder54);
// flaky:         org.junit.Assert.assertNotNull(builder56);
    }

    @Test
    public void test01801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01801");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig3.getDataCenterInfo();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig3);
        boolean boolean10 = myDataCenterInstanceConfig3.getSecurePortEnabled();
        java.lang.String str11 = myDataCenterInstanceConfig3.getSecureHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo12 = myDataCenterInstanceConfig3.getDataCenterInfo();
        boolean boolean13 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        java.lang.String str14 = myDataCenterInstanceConfig3.getIpAddress();
        java.lang.String str15 = myDataCenterInstanceConfig3.getHealthCheckUrlPath();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(dataCenterInfo12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "172.20.26.3" + "'", str14, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "/healthcheck" + "'", str15, "/healthcheck");
    }

    @Test
    public void test01802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01802");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        boolean boolean13 = instanceInfo11.isDirty();
        java.lang.String str14 = instanceInfo11.getHostName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType15 = instanceInfo11.getActionType();
        boolean boolean16 = instanceInfo11.isDirty();
        boolean boolean17 = instanceInfo11.isDirty();
        int int18 = instanceInfo11.getPort();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus20 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("/Status");
        instanceInfo11.setStatusWithoutDirty(instanceStatus20);
        java.lang.String str22 = instanceInfo11.getAppName();
        java.lang.String str23 = instanceInfo11.getStatusPageUrl();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7002 + "'", int12 == 7002);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(actionType15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 7001 + "'", int18 == 7001);
        org.junit.Assert.assertTrue("'" + instanceStatus20 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus20.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "DEFAULT" + "'", str22, "DEFAULT");
// flaky:         org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test01803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01803");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager18 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager18.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int22 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo23 = myDataCenterInstanceConfig21.getDataCenterInfo();
        java.lang.String str24 = myDataCenterInstanceConfig21.getNamespace();
        boolean boolean25 = myDataCenterInstanceConfig21.isNonSecurePortEnabled();
        applicationInfoManager18.config = myDataCenterInstanceConfig21;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig27 = applicationInfoManager18.config;
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager18.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager18.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType30 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo29.setActionType(actionType30);
        instanceInfo11.setActionType(actionType30);
        java.lang.String str33 = instanceInfo11.getSID();
        java.lang.String str34 = instanceInfo11.getId();
        java.lang.String str35 = instanceInfo11.getId();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 30 + "'", int22 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertTrue("'" + actionType30 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType30.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "na" + "'", str33, "na");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str34, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str35, "inesserver2.windows.cin.ufpe.br");
    }

    @Test
    public void test01804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01804");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        com.netflix.appinfo.InstanceInfo instanceInfo6 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int9 = myDataCenterInstanceConfig8.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo10 = myDataCenterInstanceConfig8.getDataCenterInfo();
        java.lang.String str11 = myDataCenterInstanceConfig8.getHealthCheckUrl();
        int int12 = myDataCenterInstanceConfig8.getLeaseExpirationDurationInSeconds();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig8);
        java.lang.String str14 = myDataCenterInstanceConfig8.getIpAddress();
        java.lang.String str15 = myDataCenterInstanceConfig8.getAppGroupName();
        java.lang.String str17 = myDataCenterInstanceConfig8.getHostName(true);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(instanceInfo6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 30 + "'", int9 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 90 + "'", int12 == 90);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "172.20.26.3" + "'", str14, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "unknown" + "'", str15, "unknown");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
    }

    @Test
    public void test01805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01805");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        boolean boolean13 = instanceInfo11.isDirty();
        java.lang.String str14 = instanceInfo11.getHostName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus15 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        instanceInfo11.setStatus(instanceStatus15);
        com.netflix.appinfo.InstanceInfo.PortType portType17 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean18 = instanceInfo11.isPortEnabled(portType17);
        instanceInfo11.setIsDirty(false);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str14, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + instanceStatus15 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus15.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertTrue("'" + portType17 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType17.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test01806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01806");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str2 = myDataCenterInstanceConfig1.getIpAddress();
        java.lang.String str3 = myDataCenterInstanceConfig1.getASGName();
        java.lang.String str4 = myDataCenterInstanceConfig1.getAppname();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = myDataCenterInstanceConfig1.getMetadataMap();
        java.lang.String str6 = myDataCenterInstanceConfig1.getHealthCheckUrl();
        java.lang.String str7 = myDataCenterInstanceConfig1.getHealthCheckUrl();
        java.lang.String str8 = myDataCenterInstanceConfig1.getHomePageUrl();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "172.20.26.3" + "'", str2, "172.20.26.3");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "unknown" + "'", str4, "unknown");
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test01807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01807");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo4 = myDataCenterInstanceConfig2.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig5 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo4);
        java.lang.String str6 = myDataCenterInstanceConfig5.getAppname();
        java.lang.String str7 = myDataCenterInstanceConfig5.getNamespace();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig8 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager9 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager9.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int13 = myDataCenterInstanceConfig12.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo14 = myDataCenterInstanceConfig12.getDataCenterInfo();
        java.lang.String str15 = myDataCenterInstanceConfig12.getNamespace();
        boolean boolean16 = myDataCenterInstanceConfig12.isNonSecurePortEnabled();
        applicationInfoManager9.config = myDataCenterInstanceConfig12;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig18 = applicationInfoManager9.config;
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager9.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager9.instanceInfo;
        int int21 = instanceInfo20.getSecurePort();
        boolean boolean22 = instanceInfo20.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager23 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig8, instanceInfo20);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager24 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig5, instanceInfo20);
        int int25 = instanceInfo20.getCountryId();
        java.util.Set<java.lang.String> strSet26 = instanceInfo20.getHealthCheckUrls();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager27 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager27.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig30 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int31 = myDataCenterInstanceConfig30.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo32 = myDataCenterInstanceConfig30.getDataCenterInfo();
        int int33 = myDataCenterInstanceConfig30.getLeaseExpirationDurationInSeconds();
        java.lang.String str34 = myDataCenterInstanceConfig30.getHomePageUrlPath();
        applicationInfoManager27.config = myDataCenterInstanceConfig30;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig36 = applicationInfoManager27.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager37 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo38 = applicationInfoManager37.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig40 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int41 = myDataCenterInstanceConfig40.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo42 = myDataCenterInstanceConfig40.getDataCenterInfo();
        java.lang.String str43 = myDataCenterInstanceConfig40.getNamespace();
        boolean boolean44 = myDataCenterInstanceConfig40.isNonSecurePortEnabled();
        applicationInfoManager37.config = myDataCenterInstanceConfig40;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig46 = applicationInfoManager37.config;
        com.netflix.appinfo.InstanceInfo instanceInfo47 = applicationInfoManager37.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo48 = applicationInfoManager37.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType49 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo48.setActionType(actionType49);
        applicationInfoManager27.instanceInfo = instanceInfo48;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager52 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo53 = applicationInfoManager52.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig55 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int56 = myDataCenterInstanceConfig55.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo57 = myDataCenterInstanceConfig55.getDataCenterInfo();
        java.lang.String str58 = myDataCenterInstanceConfig55.getNamespace();
        boolean boolean59 = myDataCenterInstanceConfig55.isNonSecurePortEnabled();
        applicationInfoManager52.config = myDataCenterInstanceConfig55;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig61 = applicationInfoManager52.config;
        com.netflix.appinfo.InstanceInfo instanceInfo62 = applicationInfoManager52.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo63 = applicationInfoManager52.instanceInfo;
        int int64 = instanceInfo63.getSecurePort();
        java.lang.String str65 = instanceInfo63.getSID();
        java.util.Set<java.lang.String> strSet66 = instanceInfo63.getHealthCheckUrls();
        java.util.Set<java.lang.String> strSet67 = instanceInfo63.getHealthCheckUrls();
        java.lang.String str68 = instanceInfo63.getASGName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus69 = instanceInfo63.getStatus();
        applicationInfoManager27.setInstanceStatus(instanceStatus69);
        instanceInfo20.setStatus(instanceStatus69);
        java.util.Set<java.lang.String> strSet72 = instanceInfo20.getHealthCheckUrls();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "unknown" + "'", str6, "unknown");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/Status" + "'", str7, "/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 30 + "'", int13 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertNotNull(instanceInfo20);
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(applicationInfoManager27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 30 + "'", int31 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 90 + "'", int33 == 90);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "/" + "'", str34, "/");
        org.junit.Assert.assertNotNull(eurekaInstanceConfig36);
        org.junit.Assert.assertNotNull(applicationInfoManager37);
        org.junit.Assert.assertNotNull(instanceInfo38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 30 + "'", int41 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig46);
        org.junit.Assert.assertNotNull(instanceInfo47);
        org.junit.Assert.assertNotNull(instanceInfo48);
        org.junit.Assert.assertTrue("'" + actionType49 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType49.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager52);
        org.junit.Assert.assertNotNull(instanceInfo53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 30 + "'", int56 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig61);
        org.junit.Assert.assertNotNull(instanceInfo62);
        org.junit.Assert.assertNotNull(instanceInfo63);
// flaky:         org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "na" + "'", str65, "na");
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertNotNull(strSet67);
// flaky:         org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertTrue("'" + instanceStatus69 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus69.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(strSet72);
    }

    @Test
    public void test01808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01808");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setVIPAddress("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder21.setLastDirtyTimestamp(1636106000286L);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
    }

    @Test
    public void test01809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01809");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = instanceInfo11.getVersion();
        java.lang.String str15 = instanceInfo11.getIPAddr();
        instanceInfo11.setLastUpdatedTimestamp();
        instanceInfo11.setSID("http://hi!:80/Status");
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus19 = instanceInfo11.getOverriddenStatus();
        int int20 = instanceInfo11.getPort();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "unknown" + "'", str14, "unknown");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "172.20.26.3" + "'", str15, "172.20.26.3");
        org.junit.Assert.assertTrue("'" + instanceStatus19 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus19.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 80 + "'", int20 == 80);
    }

    @Test
    public void test01810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01810");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        int int13 = instanceInfo11.getPort();
        int int14 = instanceInfo11.getCountryId();
        boolean boolean15 = instanceInfo11.isDirty();
        instanceInfo11.setIsDirty(false);
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder19 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test01811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01811");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        java.lang.String str4 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        com.netflix.appinfo.InstanceInfo instanceInfo5 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager6 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo5);
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig7 = applicationInfoManager6.config;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        int int11 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        java.lang.String str12 = myDataCenterInstanceConfig9.getStatusPageUrlPath();
        applicationInfoManager6.config = myDataCenterInstanceConfig9;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager6;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager6;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig17 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int18 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        boolean boolean19 = myDataCenterInstanceConfig17.isNonSecurePortEnabled();
        int int20 = myDataCenterInstanceConfig17.getSecurePort();
        boolean boolean21 = myDataCenterInstanceConfig17.getSecurePortEnabled();
        applicationInfoManager6.config = myDataCenterInstanceConfig17;
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager6.instanceInfo;
        // The following exception was thrown during execution in test generation
        try {
            applicationInfoManager6.refreshDataCenterInfoIfRequired();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/healthcheck" + "'", str4, "/healthcheck");
        org.junit.Assert.assertNotNull(eurekaInstanceConfig7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/Status" + "'", str12, "/Status");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 30 + "'", int18 == 30);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 443 + "'", int20 == 443);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(instanceInfo23);
    }

    @Test
    public void test01812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01812");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setNamespace("na");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder6.add("unknown", "UNKNOWN");
        com.netflix.appinfo.LeaseInfo leaseInfo18 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder17.setLeaseInfo(leaseInfo18);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder17.setIPAddr("default");
        boolean boolean22 = builder17.isInitialized();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test01813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01813");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str4 = myDataCenterInstanceConfig1.getNamespace();
        boolean boolean5 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig1.getDataCenterInfo();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo7 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str8 = myDataCenterInstanceConfig1.getAppname();
        java.lang.String str9 = myDataCenterInstanceConfig1.getSecureVirtualHostName();
        java.lang.String str10 = myDataCenterInstanceConfig1.getHealthCheckUrl();
        java.lang.String str11 = myDataCenterInstanceConfig1.getSecureVirtualHostName();
        java.lang.String str13 = myDataCenterInstanceConfig1.getHostName(false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertNotNull(dataCenterInfo7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "unknown" + "'", str8, "unknown");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str13, "inesserver2.windows.cin.ufpe.br");
    }

    @Test
    public void test01814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01814");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
// flaky:         instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = null; // flaky: instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = null; // flaky: instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = null; // flaky: builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = null; // flaky: builder21.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = null; // flaky: builder21.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo instanceInfo26 = null; // flaky: builder25.build();
// flaky:         instanceInfo26.setLastUpdatedTimestamp();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertNotNull(strSet16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertNotNull(builder21);
// flaky:         org.junit.Assert.assertNotNull(builder23);
// flaky:         org.junit.Assert.assertNotNull(builder25);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo26);
    }

    @Test
    public void test01815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01815");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        int int4 = myDataCenterInstanceConfig1.getSecurePort();
        java.lang.String str5 = myDataCenterInstanceConfig1.getAppGroupName();
        java.lang.String str6 = myDataCenterInstanceConfig1.getASGName();
        java.lang.String str7 = myDataCenterInstanceConfig1.getASGName();
        int int8 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder9.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder9.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder9.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig16 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo17 = myDataCenterInstanceConfig16.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder15.setDataCenterInfo(dataCenterInfo17);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo20 = myDataCenterInstanceConfig19.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder15.setDataCenterInfo(dataCenterInfo20);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder21.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder21.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder21.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo31 = builder30.build();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager32 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo31);
        java.lang.String str33 = instanceInfo31.getId();
        instanceInfo31.setIsCoordinatingDiscoveryServer();
        java.lang.String str35 = instanceInfo31.getIPAddr();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 443 + "'", int4 == 443);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "unknown" + "'", str5, "unknown");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(dataCenterInfo17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(dataCenterInfo20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test01816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01816");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig1 = applicationInfoManager0.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager2 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        int int6 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager2.config = myDataCenterInstanceConfig4;
        java.lang.String str8 = myDataCenterInstanceConfig4.getIpAddress();
        java.lang.String str9 = myDataCenterInstanceConfig4.getVirtualHostName();
        java.lang.String str11 = myDataCenterInstanceConfig4.getHostName(true);
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig4);
        java.lang.String str13 = myDataCenterInstanceConfig4.getSecureVirtualHostName();
        java.lang.String str14 = myDataCenterInstanceConfig4.getStatusPageUrlPath();
        java.lang.String str15 = myDataCenterInstanceConfig4.getAppname();
        java.lang.String str16 = myDataCenterInstanceConfig4.getHomePageUrlPath();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig1);
        org.junit.Assert.assertNotNull(applicationInfoManager2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 30 + "'", int6 == 30);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "172.20.26.3" + "'", str8, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str9, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str11, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "/Status" + "'", str14, "/Status");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "unknown" + "'", str15, "unknown");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/" + "'", str16, "/");
    }

    @Test
    public void test01817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01817");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig3.getDataCenterInfo();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig3);
        boolean boolean10 = myDataCenterInstanceConfig3.getSecurePortEnabled();
        java.lang.String str11 = myDataCenterInstanceConfig3.getSecureHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo12 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str13 = myDataCenterInstanceConfig3.getAppGroupName();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo14 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str15 = myDataCenterInstanceConfig3.getIpAddress();
        java.lang.String str16 = myDataCenterInstanceConfig3.getHomePageUrl();
        boolean boolean17 = myDataCenterInstanceConfig3.getSecurePortEnabled();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(dataCenterInfo12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "unknown" + "'", str13, "unknown");
        org.junit.Assert.assertNotNull(dataCenterInfo14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "172.20.26.3" + "'", str15, "172.20.26.3");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test01818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01818");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder3 = builder0.setHealthCheckUrlsForDeser("/healthcheck", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder0.setNamespace("/Status");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int8 = myDataCenterInstanceConfig7.getLeaseRenewalIntervalInSeconds();
        boolean boolean9 = myDataCenterInstanceConfig7.isInstanceEnabledOnit();
        java.lang.String str10 = myDataCenterInstanceConfig7.getStatusPageUrlPath();
        java.lang.String str11 = myDataCenterInstanceConfig7.getAppGroupName();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo12 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder5.setDataCenterInfo(dataCenterInfo12);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder14.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder14.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder14.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = myDataCenterInstanceConfig21.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder20.setDataCenterInfo(dataCenterInfo22);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = myDataCenterInstanceConfig24.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder20.setDataCenterInfo(dataCenterInfo25);
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder20.setNamespace("na");
        com.netflix.appinfo.InstanceInfo instanceInfo29 = builder20.build();
        int int30 = instanceInfo29.getSecurePort();
        boolean boolean31 = instanceInfo29.isDirty();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus32 = instanceInfo29.getOverriddenStatus();
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder13.setOverriddenStatus(instanceStatus32);
        com.netflix.appinfo.InstanceInfo.Builder builder36 = builder13.setHealthCheckUrlsForDeser("http://inesserver2.windows.cin.ufpe.br:80/Status", "/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder13.setIPAddr("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo39 = builder13.getRawInstance();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/Status" + "'", str10, "/Status");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "unknown" + "'", str11, "unknown");
        org.junit.Assert.assertNotNull(dataCenterInfo12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 7002 + "'", int30 == 7002);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + instanceStatus32 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus32.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(instanceInfo39);
    }

    @Test
    public void test01819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01819");
        com.netflix.appinfo.InstanceInfo.Builder builder1 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder3 = builder1.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder1.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder1.setSID("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder7.setHealthCheckUrlsForDeser("/", "default");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig14 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int15 = myDataCenterInstanceConfig14.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo16 = myDataCenterInstanceConfig14.getDataCenterInfo();
        java.lang.String str18 = myDataCenterInstanceConfig14.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig14.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig20 = new com.netflix.appinfo.MyDataCenterInstanceConfig("UNKNOWN", dataCenterInfo19);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo19);
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder10.setDataCenterInfo(dataCenterInfo19);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig23 = new com.netflix.appinfo.MyDataCenterInstanceConfig("eureka.", dataCenterInfo19);
        java.lang.String str24 = myDataCenterInstanceConfig23.getAppGroupName();
        java.lang.String str25 = myDataCenterInstanceConfig23.getHomePageUrl();
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 30 + "'", int15 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str18, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "unknown" + "'", str24, "unknown");
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test01820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01820");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        java.lang.String str5 = myDataCenterInstanceConfig3.getVirtualHostName();
        java.lang.String str6 = myDataCenterInstanceConfig3.getASGName();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig10 = applicationInfoManager0.config;
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str5, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig10);
    }

    @Test
    public void test01821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01821");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder8.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder8.setCountryId((-1));
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder8.setHostName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo17 = builder16.getRawInstance();
        int int18 = instanceInfo17.getSecurePort();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = instanceInfo17.getMetadata();
        java.lang.String str20 = instanceInfo17.getHomePageUrl();
        java.lang.String str21 = instanceInfo17.getAppName();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(instanceInfo17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 7002 + "'", int18 == 7002);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "DEFAULT" + "'", str21, "DEFAULT");
    }

    @Test
    public void test01822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01822");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder12.setSecureVIPAddressDeser("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder16.add("na", "/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder16.setCountryId((int) (short) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder16.setSecurePort((int) (short) 0);
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setVIPAddress("inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder23.setSecurePort((int) (short) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder27.setSecureVIPAddress("INESSERVER2.WINDOWS.CIN.UFPE.BR");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
    }

    @Test
    public void test01823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01823");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig13 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int14 = myDataCenterInstanceConfig13.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo15 = myDataCenterInstanceConfig13.getDataCenterInfo();
        java.lang.String str17 = myDataCenterInstanceConfig13.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig13.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo18);
        java.lang.String str20 = myDataCenterInstanceConfig19.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = myDataCenterInstanceConfig19.getMetadataMap();
        applicationInfoManager0.registerAppMetadata(strMap21);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager23 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo24 = applicationInfoManager23.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig26 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int27 = myDataCenterInstanceConfig26.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo28 = myDataCenterInstanceConfig26.getDataCenterInfo();
        java.lang.String str29 = myDataCenterInstanceConfig26.getNamespace();
        boolean boolean30 = myDataCenterInstanceConfig26.isNonSecurePortEnabled();
        applicationInfoManager23.config = myDataCenterInstanceConfig26;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig32 = applicationInfoManager23.config;
        com.netflix.appinfo.InstanceInfo instanceInfo33 = applicationInfoManager23.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager23.instanceInfo;
        java.lang.Boolean boolean35 = instanceInfo34.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus36 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo34.setOverriddenStatus(instanceStatus36);
        applicationInfoManager0.setInstanceStatus(instanceStatus36);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo40 = null;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig41 = new com.netflix.appinfo.MyDataCenterInstanceConfig("", dataCenterInfo40);
        boolean boolean42 = myDataCenterInstanceConfig41.getSecurePortEnabled();
        java.lang.String str43 = myDataCenterInstanceConfig41.getHomePageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = myDataCenterInstanceConfig41.getMetadataMap();
        applicationInfoManager0.registerAppMetadata(strMap44);
        com.netflix.appinfo.InstanceInfo instanceInfo46 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager47 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo48 = applicationInfoManager47.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo49 = applicationInfoManager47.getInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig51 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str52 = myDataCenterInstanceConfig51.getIpAddress();
        java.lang.String str53 = myDataCenterInstanceConfig51.getASGName();
        boolean boolean54 = myDataCenterInstanceConfig51.getSecurePortEnabled();
        java.lang.String str55 = myDataCenterInstanceConfig51.getStatusPageUrl();
        applicationInfoManager47.config = myDataCenterInstanceConfig51;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig58 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int59 = myDataCenterInstanceConfig58.getLeaseRenewalIntervalInSeconds();
        java.lang.String str60 = myDataCenterInstanceConfig58.getNamespace();
        java.lang.String str61 = myDataCenterInstanceConfig58.getNamespace();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo62 = myDataCenterInstanceConfig58.getDataCenterInfo();
        java.util.Map<java.lang.String, java.lang.String> strMap63 = myDataCenterInstanceConfig58.getMetadataMap();
        applicationInfoManager47.registerAppMetadata(strMap63);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager65 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo66 = applicationInfoManager65.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig68 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int69 = myDataCenterInstanceConfig68.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo70 = myDataCenterInstanceConfig68.getDataCenterInfo();
        java.lang.String str71 = myDataCenterInstanceConfig68.getNamespace();
        boolean boolean72 = myDataCenterInstanceConfig68.isNonSecurePortEnabled();
        applicationInfoManager65.config = myDataCenterInstanceConfig68;
        int int74 = myDataCenterInstanceConfig68.getLeaseExpirationDurationInSeconds();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = myDataCenterInstanceConfig68.getMetadataMap();
        java.lang.String str76 = myDataCenterInstanceConfig68.getVirtualHostName();
        java.lang.String str77 = myDataCenterInstanceConfig68.getHealthCheckUrl();
        java.lang.String str78 = myDataCenterInstanceConfig68.getStatusPageUrlPath();
        java.lang.String str80 = myDataCenterInstanceConfig68.getHostName(true);
        java.util.Map<java.lang.String, java.lang.String> strMap81 = myDataCenterInstanceConfig68.getMetadataMap();
        applicationInfoManager47.registerAppMetadata(strMap81);
        applicationInfoManager0.registerAppMetadata(strMap81);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 30 + "'", int14 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(applicationInfoManager23);
        org.junit.Assert.assertNotNull(instanceInfo24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 30 + "'", int27 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertNotNull(instanceInfo34);
// flaky:         org.junit.Assert.assertEquals("'" + boolean35 + "' != '" + true + "'", boolean35, true);
        org.junit.Assert.assertTrue("'" + instanceStatus36 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus36.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(instanceInfo46);
        org.junit.Assert.assertNotNull(applicationInfoManager47);
        org.junit.Assert.assertNotNull(instanceInfo48);
        org.junit.Assert.assertNotNull(instanceInfo49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "172.20.26.3" + "'", str52, "172.20.26.3");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 30 + "'", int59 == 30);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(dataCenterInfo62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(applicationInfoManager65);
        org.junit.Assert.assertNotNull(instanceInfo66);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 30 + "'", int69 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 90 + "'", int74 == 90);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str76, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/Status" + "'", str78, "/Status");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str80, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(strMap81);
    }

    @Test
    public void test01824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01824");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig12 = applicationInfoManager0.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager13 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager13.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig16 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int17 = myDataCenterInstanceConfig16.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig16.getDataCenterInfo();
        java.lang.String str19 = myDataCenterInstanceConfig16.getNamespace();
        boolean boolean20 = myDataCenterInstanceConfig16.isNonSecurePortEnabled();
        applicationInfoManager13.config = myDataCenterInstanceConfig16;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig22 = applicationInfoManager13.config;
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager13.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo24 = applicationInfoManager13.instanceInfo;
        java.lang.Boolean boolean25 = instanceInfo24.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus26 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo24.setOverriddenStatus(instanceStatus26);
        applicationInfoManager0.instanceInfo = instanceInfo24;
        java.lang.String str29 = instanceInfo24.getHostName();
        instanceInfo24.setSID("");
        java.lang.String str32 = instanceInfo24.getHostName();
        java.lang.String str33 = instanceInfo24.getIPAddr();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig12);
        org.junit.Assert.assertNotNull(applicationInfoManager13);
        org.junit.Assert.assertNotNull(instanceInfo14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig22);
        org.junit.Assert.assertNotNull(instanceInfo23);
        org.junit.Assert.assertNotNull(instanceInfo24);
// flaky:         org.junit.Assert.assertEquals("'" + boolean25 + "' != '" + true + "'", boolean25, true);
        org.junit.Assert.assertTrue("'" + instanceStatus26 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus26.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "http://default:80/Status" + "'", str29, "http://default:80/Status");
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "http://default:80/Status" + "'", str32, "http://default:80/Status");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "172.20.26.3" + "'", str33, "172.20.26.3");
    }

    @Test
    public void test01825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01825");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder18.setVIPAddressDeser("hi!");
        com.netflix.appinfo.LeaseInfo leaseInfo24 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder18.setLeaseInfo(leaseInfo24);
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder25.setHomePageUrlForDeser("/");
        com.netflix.appinfo.InstanceInfo.Builder builder28 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder28.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder28.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder28.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig35 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo36 = myDataCenterInstanceConfig35.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder37 = builder34.setDataCenterInfo(dataCenterInfo36);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig38 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo39 = myDataCenterInstanceConfig38.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder34.setDataCenterInfo(dataCenterInfo39);
        com.netflix.appinfo.InstanceInfo.Builder builder42 = builder34.setSecureVIPAddressDeser("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo43 = builder34.build();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager44 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo45 = applicationInfoManager44.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig47 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int48 = myDataCenterInstanceConfig47.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo49 = myDataCenterInstanceConfig47.getDataCenterInfo();
        java.lang.String str50 = myDataCenterInstanceConfig47.getNamespace();
        boolean boolean51 = myDataCenterInstanceConfig47.isNonSecurePortEnabled();
        applicationInfoManager44.config = myDataCenterInstanceConfig47;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig53 = applicationInfoManager44.config;
        com.netflix.appinfo.InstanceInfo instanceInfo54 = applicationInfoManager44.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo55 = applicationInfoManager44.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType56 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo55.setActionType(actionType56);
        com.netflix.appinfo.LeaseInfo leaseInfo58 = null;
        instanceInfo55.setLeaseInfo(leaseInfo58);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager60 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo61 = applicationInfoManager60.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig63 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int64 = myDataCenterInstanceConfig63.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo65 = myDataCenterInstanceConfig63.getDataCenterInfo();
        java.lang.String str66 = myDataCenterInstanceConfig63.getNamespace();
        boolean boolean67 = myDataCenterInstanceConfig63.isNonSecurePortEnabled();
        applicationInfoManager60.config = myDataCenterInstanceConfig63;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig69 = applicationInfoManager60.config;
        com.netflix.appinfo.InstanceInfo instanceInfo70 = applicationInfoManager60.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo71 = applicationInfoManager60.instanceInfo;
        int int72 = instanceInfo71.getSecurePort();
        boolean boolean73 = instanceInfo71.isDirty();
        java.lang.String str74 = instanceInfo71.getHostName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus75 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        instanceInfo71.setStatus(instanceStatus75);
        com.netflix.appinfo.InstanceInfo.PortType portType77 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean78 = instanceInfo71.isPortEnabled(portType77);
        boolean boolean79 = instanceInfo55.isPortEnabled(portType77);
        com.netflix.appinfo.InstanceInfo.Builder builder81 = builder34.enablePort(portType77, false);
        com.netflix.appinfo.InstanceInfo.Builder builder83 = builder25.enablePort(portType77, false);
        com.netflix.appinfo.InstanceInfo.Builder builder86 = builder25.setStatusPageUrl("na", "");
        com.netflix.appinfo.InstanceInfo.Builder builder89 = builder86.add("172.20.26.3", "/");
        com.netflix.appinfo.InstanceInfo.Builder builder91 = builder89.setHomePageUrlForDeser("http://hi!:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder93 = builder91.setAppGroupName("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder95 = builder91.setHomePageUrlForDeser("http://default:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder97 = builder95.setSecureVIPAddress("HI!");
        com.netflix.appinfo.InstanceInfo.Builder builder99 = builder97.setStatusPageUrlForDeser("http://hi!:35/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "http://default:80/Status" + "'", str17, "http://default:80/Status");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(dataCenterInfo36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(dataCenterInfo39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(instanceInfo43);
        org.junit.Assert.assertNotNull(applicationInfoManager44);
        org.junit.Assert.assertNotNull(instanceInfo45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 30 + "'", int48 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig53);
        org.junit.Assert.assertNotNull(instanceInfo54);
        org.junit.Assert.assertNotNull(instanceInfo55);
        org.junit.Assert.assertTrue("'" + actionType56 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType56.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager60);
        org.junit.Assert.assertNotNull(instanceInfo61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 30 + "'", int64 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig69);
        org.junit.Assert.assertNotNull(instanceInfo70);
        org.junit.Assert.assertNotNull(instanceInfo71);
// flaky:         org.junit.Assert.assertTrue("'" + int72 + "' != '" + 30 + "'", int72 == 30);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str74 + "' != '" + "http://default:80/Status" + "'", str74, "http://default:80/Status");
        org.junit.Assert.assertTrue("'" + instanceStatus75 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus75.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertTrue("'" + portType77 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType77.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertNotNull(builder95);
        org.junit.Assert.assertNotNull(builder97);
        org.junit.Assert.assertNotNull(builder99);
    }

    @Test
    public void test01826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01826");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setSecurePort(30);
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder20.setAppGroupName("");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig27 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int28 = myDataCenterInstanceConfig27.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig27.getDataCenterInfo();
        java.lang.String str31 = myDataCenterInstanceConfig27.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo32 = myDataCenterInstanceConfig27.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig33 = new com.netflix.appinfo.MyDataCenterInstanceConfig("UNKNOWN", dataCenterInfo32);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig34 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo32);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig35 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo32);
        java.lang.String str36 = myDataCenterInstanceConfig35.getHomePageUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo37 = myDataCenterInstanceConfig35.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder22.setDataCenterInfo(dataCenterInfo37);
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder38.setSecureVIPAddressDeser("eureka.");
        boolean boolean41 = builder40.isInitialized();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "http://default:80/Status" + "'", str17, "http://default:80/Status");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 30 + "'", int28 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str31, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(dataCenterInfo37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test01827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01827");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig1 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo2 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager3 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig1, instanceInfo2);
        com.netflix.appinfo.InstanceInfo instanceInfo4 = null;
        applicationInfoManager3.instanceInfo = instanceInfo4;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int8 = myDataCenterInstanceConfig7.getLeaseRenewalIntervalInSeconds();
        boolean boolean9 = myDataCenterInstanceConfig7.isNonSecurePortEnabled();
        int int10 = myDataCenterInstanceConfig7.getSecurePort();
        java.lang.String str11 = myDataCenterInstanceConfig7.getAppGroupName();
        java.lang.String str12 = myDataCenterInstanceConfig7.getASGName();
        java.lang.String str13 = myDataCenterInstanceConfig7.getASGName();
        int int14 = myDataCenterInstanceConfig7.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.InstanceInfo.Builder builder15 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder15.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder15.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder15.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig22 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo23 = myDataCenterInstanceConfig22.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder21.setDataCenterInfo(dataCenterInfo23);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig25 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig25.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder21.setDataCenterInfo(dataCenterInfo26);
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder27.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder27.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder27.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder36 = builder27.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo37 = builder36.build();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager38 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig7, instanceInfo37);
        applicationInfoManager38.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig41 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int42 = myDataCenterInstanceConfig41.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo43 = myDataCenterInstanceConfig41.getDataCenterInfo();
        java.lang.String str44 = myDataCenterInstanceConfig41.getHealthCheckUrl();
        applicationInfoManager38.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig41);
        applicationInfoManager3.config = myDataCenterInstanceConfig41;
        boolean boolean47 = myDataCenterInstanceConfig41.isNonSecurePortEnabled();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 443 + "'", int10 == 443);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "unknown" + "'", str11, "unknown");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 30 + "'", int14 == 30);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(dataCenterInfo23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(instanceInfo37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test01828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01828");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str3 = myDataCenterInstanceConfig1.getSecureVirtualHostName();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = myDataCenterInstanceConfig1.getMetadataMap();
        java.lang.String str5 = myDataCenterInstanceConfig1.getStatusPageUrl();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test01829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01829");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder8.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder8.setCountryId((-1));
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder8.setHostName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder16.setSID("");
        java.lang.Class<?> wildcardClass19 = builder16.getClass();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test01830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01830");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        java.lang.Boolean boolean12 = instanceInfo11.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus13 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo11.setOverriddenStatus(instanceStatus13);
        instanceInfo11.setLastDirtyTimestamp((java.lang.Long) (-1L));
        int int17 = instanceInfo11.getPort();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder18.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder18.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig25 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig25.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder24.setDataCenterInfo(dataCenterInfo26);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig28 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig28.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder24.setDataCenterInfo(dataCenterInfo29);
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder24.setNamespace("na");
        com.netflix.appinfo.InstanceInfo instanceInfo33 = builder24.build();
        boolean boolean34 = builder24.isInitialized();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager35 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo36 = applicationInfoManager35.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig38 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int39 = myDataCenterInstanceConfig38.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo40 = myDataCenterInstanceConfig38.getDataCenterInfo();
        java.lang.String str41 = myDataCenterInstanceConfig38.getNamespace();
        boolean boolean42 = myDataCenterInstanceConfig38.isNonSecurePortEnabled();
        applicationInfoManager35.config = myDataCenterInstanceConfig38;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig44 = applicationInfoManager35.config;
        com.netflix.appinfo.InstanceInfo instanceInfo45 = applicationInfoManager35.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo46 = applicationInfoManager35.instanceInfo;
        java.lang.Boolean boolean47 = instanceInfo46.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus48 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo46.setOverriddenStatus(instanceStatus48);
        com.netflix.appinfo.InstanceInfo.Builder builder50 = builder24.setStatus(instanceStatus48);
        instanceInfo11.setOverriddenStatus(instanceStatus48);
        instanceInfo11.setLastDirtyTimestamp((java.lang.Long) 1636106011732L);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertTrue("'" + instanceStatus13 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus13.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 80 + "'", int17 == 80);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(applicationInfoManager35);
        org.junit.Assert.assertNotNull(instanceInfo36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 30 + "'", int39 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig44);
        org.junit.Assert.assertNotNull(instanceInfo45);
        org.junit.Assert.assertNotNull(instanceInfo46);
        org.junit.Assert.assertEquals("'" + boolean47 + "' != '" + false + "'", boolean47, false);
        org.junit.Assert.assertTrue("'" + instanceStatus48 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus48.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(builder50);
    }

    @Test
    public void test01831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01831");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        com.netflix.appinfo.InstanceInfo instanceInfo6 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int9 = myDataCenterInstanceConfig8.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo10 = myDataCenterInstanceConfig8.getDataCenterInfo();
        java.lang.String str11 = myDataCenterInstanceConfig8.getHealthCheckUrl();
        int int12 = myDataCenterInstanceConfig8.getLeaseExpirationDurationInSeconds();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig15 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int16 = myDataCenterInstanceConfig15.getLeaseRenewalIntervalInSeconds();
        int int17 = myDataCenterInstanceConfig15.getLeaseRenewalIntervalInSeconds();
        java.lang.String str18 = myDataCenterInstanceConfig15.getStatusPageUrlPath();
        boolean boolean19 = myDataCenterInstanceConfig15.getSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager20 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager20.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig23 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int24 = myDataCenterInstanceConfig23.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = myDataCenterInstanceConfig23.getDataCenterInfo();
        java.lang.String str26 = myDataCenterInstanceConfig23.getNamespace();
        boolean boolean27 = myDataCenterInstanceConfig23.isNonSecurePortEnabled();
        applicationInfoManager20.config = myDataCenterInstanceConfig23;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig29 = applicationInfoManager20.config;
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager20.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager20.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType32 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo31.setActionType(actionType32);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager34 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager34.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig37 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int38 = myDataCenterInstanceConfig37.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo39 = myDataCenterInstanceConfig37.getDataCenterInfo();
        java.lang.String str40 = myDataCenterInstanceConfig37.getNamespace();
        boolean boolean41 = myDataCenterInstanceConfig37.isNonSecurePortEnabled();
        applicationInfoManager34.config = myDataCenterInstanceConfig37;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig43 = applicationInfoManager34.config;
        com.netflix.appinfo.InstanceInfo instanceInfo44 = applicationInfoManager34.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo45 = applicationInfoManager34.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType46 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo45.setActionType(actionType46);
        instanceInfo31.setActionType(actionType46);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager49 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig15, instanceInfo31);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus51 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("inesserver2.windows.cin.ufpe.br:80");
        instanceInfo31.setOverriddenStatus(instanceStatus51);
        applicationInfoManager0.setInstanceStatus(instanceStatus51);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager54 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig56 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int57 = myDataCenterInstanceConfig56.getLeaseRenewalIntervalInSeconds();
        int int58 = myDataCenterInstanceConfig56.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager54.config = myDataCenterInstanceConfig56;
        java.lang.String str60 = myDataCenterInstanceConfig56.getHealthCheckUrlPath();
        java.lang.String str61 = myDataCenterInstanceConfig56.getNamespace();
        java.util.Map<java.lang.String, java.lang.String> strMap62 = myDataCenterInstanceConfig56.getMetadataMap();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig56);
        com.netflix.appinfo.InstanceInfo instanceInfo64 = applicationInfoManager0.instanceInfo;
        int int65 = instanceInfo64.getSecurePort();
        java.lang.String str66 = instanceInfo64.getASGName();
        instanceInfo64.setLastUpdatedTimestamp();
        java.lang.String str68 = instanceInfo64.getStatusPageUrl();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(instanceInfo6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 30 + "'", int9 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 90 + "'", int12 == 90);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 30 + "'", int16 == 30);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/Status" + "'", str18, "/Status");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager20);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 30 + "'", int24 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig29);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertTrue("'" + actionType32 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType32.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager34);
        org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 30 + "'", int38 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig43);
        org.junit.Assert.assertNotNull(instanceInfo44);
        org.junit.Assert.assertNotNull(instanceInfo45);
        org.junit.Assert.assertTrue("'" + actionType46 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType46.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + instanceStatus51 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus51.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(applicationInfoManager54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 30 + "'", int57 == 30);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 30 + "'", int58 == 30);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "/healthcheck" + "'", str60, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(instanceInfo64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 443 + "'", int65 == 443);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str68, "http://inesserver2.windows.cin.ufpe.br:80/Status");
    }

    @Test
    public void test01832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01832");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder23.setStatusPageUrl("inesserver2.windows.cin.ufpe.br:80", "hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder26.setCountryId(0);
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder28.setHostName("");
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus31 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder30.setStatus(instanceStatus31);
        com.netflix.appinfo.InstanceInfo instanceInfo33 = builder32.getRawInstance();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo34 = instanceInfo33.getDataCenterInfo();
        com.netflix.appinfo.LeaseInfo leaseInfo35 = instanceInfo33.getLeaseInfo();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertNotNull(dataCenterInfo34);
        org.junit.Assert.assertNull(leaseInfo35);
    }

    @Test
    public void test01833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01833");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str2 = myDataCenterInstanceConfig1.getIpAddress();
        java.lang.String str3 = myDataCenterInstanceConfig1.getASGName();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo4 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str5 = myDataCenterInstanceConfig1.getAppGroupName();
        java.lang.String str6 = myDataCenterInstanceConfig1.getHealthCheckUrl();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "172.20.26.3" + "'", str2, "172.20.26.3");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(dataCenterInfo4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "unknown" + "'", str5, "unknown");
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test01834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01834");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setNamespace("na");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder6.add("unknown", "UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder17.setSecureVIPAddress("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager20 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager20.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig23 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int24 = myDataCenterInstanceConfig23.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = myDataCenterInstanceConfig23.getDataCenterInfo();
        java.lang.String str26 = myDataCenterInstanceConfig23.getNamespace();
        boolean boolean27 = myDataCenterInstanceConfig23.isNonSecurePortEnabled();
        applicationInfoManager20.config = myDataCenterInstanceConfig23;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig29 = applicationInfoManager20.config;
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager20.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager20.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType32 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo31.setActionType(actionType32);
        com.netflix.appinfo.LeaseInfo leaseInfo34 = null;
        instanceInfo31.setLeaseInfo(leaseInfo34);
        java.util.Set<java.lang.String> strSet36 = instanceInfo31.getHealthCheckUrls();
        java.lang.String str37 = instanceInfo31.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder38 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo31);
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder38.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder43 = builder38.setHealthCheckUrlsForDeser("", "hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder45 = builder43.setLastDirtyTimestamp((long) 443);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus46 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        com.netflix.appinfo.InstanceInfo.Builder builder47 = builder43.setStatus(instanceStatus46);
        com.netflix.appinfo.InstanceInfo.Builder builder48 = builder19.setStatus(instanceStatus46);
        com.netflix.appinfo.InstanceInfo.Builder builder51 = builder48.setHealthCheckUrlsForDeser("", "http://default:80/Status");
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder54 = builder48.setStatusPageUrl("na", "http://hi!:80/Status");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(applicationInfoManager20);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 30 + "'", int24 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig29);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertTrue("'" + actionType32 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType32.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet36);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str37, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + instanceStatus46 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus46.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder51);
    }

    @Test
    public void test01835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01835");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder18.setVIPAddressDeser("hi!");
        com.netflix.appinfo.LeaseInfo leaseInfo24 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder18.setLeaseInfo(leaseInfo24);
        com.netflix.appinfo.InstanceInfo.PortType portType26 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder18.enablePort(portType26, false);
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder18.setHealthCheckUrls("/healthcheck", "unknown", "inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder18.setAppName("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo.Builder builder35 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder37 = builder35.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder39 = builder35.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder41 = builder35.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig42 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo43 = myDataCenterInstanceConfig42.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder44 = builder41.setDataCenterInfo(dataCenterInfo43);
        com.netflix.appinfo.InstanceInfo.Builder builder46 = builder41.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo instanceInfo47 = builder46.getRawInstance();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager48 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig50 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int51 = myDataCenterInstanceConfig50.getLeaseRenewalIntervalInSeconds();
        int int52 = myDataCenterInstanceConfig50.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager48.config = myDataCenterInstanceConfig50;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager48;
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus56 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("/Status");
        applicationInfoManager48.setInstanceStatus(instanceStatus56);
        com.netflix.appinfo.InstanceInfo.Builder builder58 = builder46.setOverriddenStatus(instanceStatus56);
        com.netflix.appinfo.InstanceInfo.Builder builder60 = builder58.setPort((int) (byte) 100);
        com.netflix.appinfo.InstanceInfo.Builder builder62 = builder58.setHomePageUrlForDeser("na");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager63 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo64 = applicationInfoManager63.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig66 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int67 = myDataCenterInstanceConfig66.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo68 = myDataCenterInstanceConfig66.getDataCenterInfo();
        java.lang.String str69 = myDataCenterInstanceConfig66.getNamespace();
        boolean boolean70 = myDataCenterInstanceConfig66.isNonSecurePortEnabled();
        applicationInfoManager63.config = myDataCenterInstanceConfig66;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig72 = applicationInfoManager63.config;
        com.netflix.appinfo.InstanceInfo instanceInfo73 = applicationInfoManager63.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo74 = applicationInfoManager63.instanceInfo;
        int int75 = instanceInfo74.getSecurePort();
        boolean boolean76 = instanceInfo74.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo77 = new com.netflix.appinfo.InstanceInfo(instanceInfo74);
        java.lang.String str78 = instanceInfo77.getHostName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType79 = instanceInfo77.getActionType();
        com.netflix.appinfo.InstanceInfo.Builder builder80 = builder58.setActionType(actionType79);
        com.netflix.appinfo.InstanceInfo.Builder builder81 = builder18.setActionType(actionType79);
        com.netflix.appinfo.InstanceInfo.Builder builder83 = builder18.setAppGroupName("");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + portType26 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType26.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(dataCenterInfo43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(instanceInfo47);
        org.junit.Assert.assertNotNull(applicationInfoManager48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 30 + "'", int51 == 30);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 30 + "'", int52 == 30);
        org.junit.Assert.assertTrue("'" + instanceStatus56 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus56.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(applicationInfoManager63);
        org.junit.Assert.assertNotNull(instanceInfo64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 30 + "'", int67 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig72);
        org.junit.Assert.assertNotNull(instanceInfo73);
        org.junit.Assert.assertNotNull(instanceInfo74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 443 + "'", int75 == 443);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str78 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str78, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + actionType79 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType79.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder83);
    }

    @Test
    public void test01836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01836");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = instanceInfo11.getVersion();
        java.lang.String str15 = instanceInfo11.getIPAddr();
        instanceInfo11.setLastUpdatedTimestamp();
        java.lang.String str17 = instanceInfo11.getVersion();
        boolean boolean18 = instanceInfo11.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager19 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager19.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig22 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int23 = myDataCenterInstanceConfig22.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo24 = myDataCenterInstanceConfig22.getDataCenterInfo();
        java.lang.String str25 = myDataCenterInstanceConfig22.getNamespace();
        boolean boolean26 = myDataCenterInstanceConfig22.isNonSecurePortEnabled();
        applicationInfoManager19.config = myDataCenterInstanceConfig22;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig28 = applicationInfoManager19.config;
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager19.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager19.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType31 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo30.setActionType(actionType31);
        java.lang.String str33 = instanceInfo30.getVersion();
        java.lang.String str34 = instanceInfo30.getIPAddr();
        instanceInfo30.setLastUpdatedTimestamp();
        java.lang.String str36 = instanceInfo30.getVersion();
        java.lang.String str37 = instanceInfo30.getHomePageUrl();
        int int38 = instanceInfo30.getCountryId();
        java.lang.String str39 = instanceInfo30.getVIPAddress();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager40 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo41 = applicationInfoManager40.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig43 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int44 = myDataCenterInstanceConfig43.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo45 = myDataCenterInstanceConfig43.getDataCenterInfo();
        java.lang.String str46 = myDataCenterInstanceConfig43.getNamespace();
        boolean boolean47 = myDataCenterInstanceConfig43.isNonSecurePortEnabled();
        applicationInfoManager40.config = myDataCenterInstanceConfig43;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig49 = applicationInfoManager40.config;
        com.netflix.appinfo.InstanceInfo instanceInfo50 = applicationInfoManager40.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo51 = applicationInfoManager40.instanceInfo;
        int int52 = instanceInfo51.getSecurePort();
        boolean boolean53 = instanceInfo51.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo54 = new com.netflix.appinfo.InstanceInfo(instanceInfo51);
        java.lang.String str55 = instanceInfo54.getHostName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus56 = instanceInfo54.getStatus();
        instanceInfo30.setOverriddenStatus(instanceStatus56);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo58 = instanceInfo30.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.ActionType actionType59 = instanceInfo30.getActionType();
        instanceInfo11.setActionType(actionType59);
        java.lang.String str61 = instanceInfo11.getStatusPageUrl();
        long long62 = instanceInfo11.getLastUpdatedTimestamp();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "unknown" + "'", str14, "unknown");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "172.20.26.3" + "'", str15, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "unknown" + "'", str17, "unknown");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(applicationInfoManager19);
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 30 + "'", int23 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig28);
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertTrue("'" + actionType31 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType31.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "unknown" + "'", str33, "unknown");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "172.20.26.3" + "'", str34, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "unknown" + "'", str36, "unknown");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str37, "http://inesserver2.windows.cin.ufpe.br:80/");
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(applicationInfoManager40);
        org.junit.Assert.assertNotNull(instanceInfo41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 30 + "'", int44 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig49);
        org.junit.Assert.assertNotNull(instanceInfo50);
        org.junit.Assert.assertNotNull(instanceInfo51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 443 + "'", int52 == 443);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str55, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + instanceStatus56 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus56.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(dataCenterInfo58);
        org.junit.Assert.assertTrue("'" + actionType59 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType59.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str61 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str61, "http://inesserver2.windows.cin.ufpe.br:80/Status");
// flaky:         org.junit.Assert.assertTrue("'" + long62 + "' != '" + 1636106058821L + "'", long62 == 1636106058821L);
    }

    @Test
    public void test01837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01837");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        java.lang.String str4 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        com.netflix.appinfo.InstanceInfo instanceInfo5 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager6 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo5);
        java.lang.String str8 = myDataCenterInstanceConfig1.getHostName(false);
        java.lang.String str9 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        boolean boolean10 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/healthcheck" + "'", str4, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str8, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/Status" + "'", str9, "/Status");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test01838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01838");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        int int3 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        boolean boolean5 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = myDataCenterInstanceConfig1.getMetadataMap();
        boolean boolean7 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/Status" + "'", str4, "/Status");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test01839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01839");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder8.setSecurePort((int) '4');
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setSecurePort((int) ' ');
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder14.add("/", "unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder17.setStatusPageUrlForDeser("HTTP://HI!:80/STATUS");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder17.setAppName("eureka.");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder21.add("default", "HTTP://HI!:80/STATUS");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test01840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01840");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        java.lang.Boolean boolean12 = null; // flaky: instanceInfo11.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus13 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
// flaky:         instanceInfo11.setOverriddenStatus(instanceStatus13);
// flaky:         instanceInfo11.setLastDirtyTimestamp((java.lang.Long) 1636105964629L);
// flaky:         instanceInfo11.setSID("inesserver2.windows.cin.ufpe.br");
        java.lang.String str19 = null; // flaky: instanceInfo11.getVersion();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertTrue("'" + instanceStatus13 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus13.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "unknown" + "'", str19, "unknown");
    }

    @Test
    public void test01841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01841");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
// flaky:         instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = null; // flaky: instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = null; // flaky: instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = null; // flaky: builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = null; // flaky: builder20.add("/healthcheck", "UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = null; // flaky: builder23.setSecureVIPAddress("172.20.26.3");
        com.netflix.appinfo.InstanceInfo instanceInfo26 = null; // flaky: builder23.getRawInstance();
        com.netflix.appinfo.InstanceInfo.Builder builder28 = null; // flaky: builder23.setNamespace("default");
        com.netflix.appinfo.InstanceInfo.Builder builder31 = null; // flaky: builder28.add("", "");
        com.netflix.appinfo.InstanceInfo instanceInfo32 = null; // flaky: builder31.build();
        com.netflix.appinfo.InstanceInfo.Builder builder34 = null; // flaky: builder31.setHomePageUrlForDeser("inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(str17);
// flaky:         org.junit.Assert.assertNotNull(builder20);
// flaky:         org.junit.Assert.assertNotNull(builder23);
// flaky:         org.junit.Assert.assertNotNull(builder25);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo26);
// flaky:         org.junit.Assert.assertNotNull(builder28);
// flaky:         org.junit.Assert.assertNotNull(builder31);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo32);
// flaky:         org.junit.Assert.assertNotNull(builder34);
    }

    @Test
    public void test01842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01842");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = 0; // flaky: instanceInfo11.getSecurePort();
        boolean boolean13 = false; // flaky: instanceInfo11.isDirty();
        java.lang.String str14 = null; // flaky: instanceInfo11.getHostName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType15 = null; // flaky: instanceInfo11.getActionType();
        java.lang.String str16 = null; // flaky: instanceInfo11.getHostName();
        java.lang.String str17 = null; // flaky: instanceInfo11.getASGName();
        java.lang.String str18 = null; // flaky: instanceInfo11.getHostName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7002 + "'", int12 == 7002);
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str14);
// flaky:         org.junit.Assert.assertTrue("'" + actionType15 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType15.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test01843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01843");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("hi!");
        java.lang.String str2 = myDataCenterInstanceConfig1.getStatusPageUrl();
        java.lang.String str3 = myDataCenterInstanceConfig1.getSecureHealthCheckUrl();
        java.lang.Class<?> wildcardClass4 = myDataCenterInstanceConfig1.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test01844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01844");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
// flaky:         instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = null; // flaky: instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = null; // flaky: instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = null; // flaky: builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.PortType portType21 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder23 = null; // flaky: builder18.enablePort(portType21, true);
        com.netflix.appinfo.InstanceInfo.Builder builder25 = null; // flaky: builder23.setCountryId(0);
        com.netflix.appinfo.InstanceInfo.Builder builder27 = null; // flaky: builder25.setAppGroupName("http://hi!:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder29 = null; // flaky: builder25.setNamespace("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder33 = null; // flaky: builder25.setHealthCheckUrls("default", "http:///:80/Status", "na");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertNotNull(strSet16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + portType21 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType21.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
// flaky:         org.junit.Assert.assertNotNull(builder23);
// flaky:         org.junit.Assert.assertNotNull(builder25);
// flaky:         org.junit.Assert.assertNotNull(builder27);
// flaky:         org.junit.Assert.assertNotNull(builder29);
// flaky:         org.junit.Assert.assertNotNull(builder33);
    }

    @Test
    public void test01845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01845");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = null; // flaky: instanceInfo11.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.Builder builder15 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder17 = null; // flaky: builder15.setLastDirtyTimestamp(1636105997181L);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = null; // flaky: builder17.setHealthCheckUrlsForDeser("172.20.26.3", "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UNKNOWN" + "'", str14, "UNKNOWN");
// flaky:         org.junit.Assert.assertNotNull(builder17);
// flaky:         org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test01846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01846");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig6 = applicationInfoManager0.config;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        com.netflix.appinfo.InstanceInfo instanceInfo8 = applicationInfoManager0.instanceInfo;
// flaky:         instanceInfo8.setIsDirty(false);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager11 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager11.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig14 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int15 = myDataCenterInstanceConfig14.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo16 = myDataCenterInstanceConfig14.getDataCenterInfo();
        java.lang.String str17 = myDataCenterInstanceConfig14.getNamespace();
        boolean boolean18 = myDataCenterInstanceConfig14.isNonSecurePortEnabled();
        applicationInfoManager11.config = myDataCenterInstanceConfig14;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig20 = applicationInfoManager11.config;
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager11.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo22 = applicationInfoManager11.getInfo();
        java.lang.String[] strArray23 = new java.lang.String[] {};
        com.netflix.appinfo.InstanceInfo instanceInfo24 = null;
        java.lang.String str25 = com.netflix.appinfo.InstanceInfo.getZone(strArray23, instanceInfo24);
        com.netflix.appinfo.InstanceInfo instanceInfo26 = null;
        java.lang.String str27 = com.netflix.appinfo.InstanceInfo.getZone(strArray23, instanceInfo26);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager28 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager28.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig31 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int32 = myDataCenterInstanceConfig31.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo33 = myDataCenterInstanceConfig31.getDataCenterInfo();
        java.lang.String str34 = myDataCenterInstanceConfig31.getNamespace();
        boolean boolean35 = myDataCenterInstanceConfig31.isNonSecurePortEnabled();
        applicationInfoManager28.config = myDataCenterInstanceConfig31;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig37 = applicationInfoManager28.config;
        com.netflix.appinfo.InstanceInfo instanceInfo38 = applicationInfoManager28.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo39 = applicationInfoManager28.instanceInfo;
        int int40 = 0; // flaky: instanceInfo39.getSecurePort();
        boolean boolean41 = false; // flaky: instanceInfo39.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo42 = null; // flaky: new com.netflix.appinfo.InstanceInfo(instanceInfo39);
        com.netflix.appinfo.InstanceInfo instanceInfo43 = null; // flaky: new com.netflix.appinfo.InstanceInfo(instanceInfo39);
        java.lang.String str44 = null; // flaky: instanceInfo39.getAppGroupName();
        int int45 = 0; // flaky: instanceInfo39.getCountryId();
        java.lang.String str46 = com.netflix.appinfo.InstanceInfo.getZone(strArray23, instanceInfo39);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus47 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
// flaky:         instanceInfo39.setStatus(instanceStatus47);
// flaky:         applicationInfoManager11.setInstanceStatus(instanceStatus47);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager50 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo51 = applicationInfoManager50.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig53 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int54 = myDataCenterInstanceConfig53.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo55 = myDataCenterInstanceConfig53.getDataCenterInfo();
        java.lang.String str56 = myDataCenterInstanceConfig53.getNamespace();
        boolean boolean57 = myDataCenterInstanceConfig53.isNonSecurePortEnabled();
        applicationInfoManager50.config = myDataCenterInstanceConfig53;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig59 = applicationInfoManager50.config;
        com.netflix.appinfo.InstanceInfo instanceInfo60 = applicationInfoManager50.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig63 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int64 = myDataCenterInstanceConfig63.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo65 = myDataCenterInstanceConfig63.getDataCenterInfo();
        java.lang.String str67 = myDataCenterInstanceConfig63.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo68 = myDataCenterInstanceConfig63.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig69 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo68);
        java.lang.String str70 = myDataCenterInstanceConfig69.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap71 = myDataCenterInstanceConfig69.getMetadataMap();
// flaky:         applicationInfoManager50.registerAppMetadata(strMap71);
        com.netflix.appinfo.InstanceInfo instanceInfo73 = applicationInfoManager50.instanceInfo;
        com.netflix.appinfo.InstanceInfo.Builder builder74 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo73);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus76 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("inesserver2.windows.cin.ufpe.br");
// flaky:         instanceInfo73.setStatusWithoutDirty(instanceStatus76);
// flaky:         applicationInfoManager11.setInstanceStatus(instanceStatus76);
// flaky:         instanceInfo8.setOverriddenStatus(instanceStatus76);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig6);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo8);
        org.junit.Assert.assertNotNull(applicationInfoManager11);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 30 + "'", int15 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig20);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo21);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "default" + "'", str25, "default");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "default" + "'", str27, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager28);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 30 + "'", int32 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig37);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo38);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo39);
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 443 + "'", int40 == 443);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "UNKNOWN" + "'", str44, "UNKNOWN");
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "default" + "'", str46, "default");
        org.junit.Assert.assertTrue("'" + instanceStatus47 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus47.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(applicationInfoManager50);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 30 + "'", int54 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig59);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo60);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 30 + "'", int64 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str67, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(strMap71);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo73);
        org.junit.Assert.assertTrue("'" + instanceStatus76 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus76.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
    }

    @Test
    public void test01847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01847");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder8.setHomePageUrlForDeser("");
        com.netflix.appinfo.LeaseInfo leaseInfo13 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setLeaseInfo(leaseInfo13);
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder14.setSecureVIPAddressDeser("eureka.");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager17 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager17.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig20 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int21 = myDataCenterInstanceConfig20.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = myDataCenterInstanceConfig20.getDataCenterInfo();
        java.lang.String str23 = myDataCenterInstanceConfig20.getNamespace();
        boolean boolean24 = myDataCenterInstanceConfig20.isNonSecurePortEnabled();
        applicationInfoManager17.config = myDataCenterInstanceConfig20;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig26 = applicationInfoManager17.config;
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager17.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager17.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType29 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo28.setActionType(actionType29);
        java.lang.String str31 = null; // flaky: instanceInfo28.getVersion();
        java.lang.String str32 = null; // flaky: instanceInfo28.getIPAddr();
// flaky:         instanceInfo28.setLastUpdatedTimestamp();
        java.lang.String str34 = null; // flaky: instanceInfo28.getVersion();
        java.lang.String str35 = null; // flaky: instanceInfo28.getHomePageUrl();
        int int36 = 0; // flaky: instanceInfo28.getCountryId();
        java.lang.String str37 = null; // flaky: instanceInfo28.getVIPAddress();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager38 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo39 = applicationInfoManager38.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig41 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int42 = myDataCenterInstanceConfig41.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo43 = myDataCenterInstanceConfig41.getDataCenterInfo();
        java.lang.String str44 = myDataCenterInstanceConfig41.getNamespace();
        boolean boolean45 = myDataCenterInstanceConfig41.isNonSecurePortEnabled();
        applicationInfoManager38.config = myDataCenterInstanceConfig41;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig47 = applicationInfoManager38.config;
        com.netflix.appinfo.InstanceInfo instanceInfo48 = applicationInfoManager38.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo49 = applicationInfoManager38.instanceInfo;
        int int50 = 0; // flaky: instanceInfo49.getSecurePort();
        boolean boolean51 = false; // flaky: instanceInfo49.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo52 = null; // flaky: new com.netflix.appinfo.InstanceInfo(instanceInfo49);
        java.lang.String str53 = null; // flaky: instanceInfo52.getHostName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus54 = null; // flaky: instanceInfo52.getStatus();
// flaky:         instanceInfo28.setOverriddenStatus(instanceStatus54);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo56 = null; // flaky: instanceInfo28.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.ActionType actionType57 = null; // flaky: instanceInfo28.getActionType();
        java.lang.String str58 = null; // flaky: instanceInfo28.getVIPAddress();
        com.netflix.appinfo.InstanceInfo.Builder builder59 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder61 = builder59.setNamespace("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder63 = builder59.setCountryId(7002);
        com.netflix.appinfo.InstanceInfo.Builder builder66 = builder63.setHealthCheckUrlsForDeser("http://hi!:80/Status", "inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager67 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig69 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int70 = myDataCenterInstanceConfig69.getLeaseRenewalIntervalInSeconds();
        int int71 = myDataCenterInstanceConfig69.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager67.config = myDataCenterInstanceConfig69;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig73 = applicationInfoManager67.config;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig74 = applicationInfoManager67.config;
// flaky:         applicationInfoManager67.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager76 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo77 = applicationInfoManager76.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig79 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int80 = myDataCenterInstanceConfig79.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo81 = myDataCenterInstanceConfig79.getDataCenterInfo();
        java.lang.String str82 = myDataCenterInstanceConfig79.getNamespace();
        boolean boolean83 = myDataCenterInstanceConfig79.isNonSecurePortEnabled();
        applicationInfoManager76.config = myDataCenterInstanceConfig79;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig85 = applicationInfoManager76.config;
        com.netflix.appinfo.InstanceInfo instanceInfo86 = applicationInfoManager76.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo87 = applicationInfoManager76.instanceInfo;
        int int88 = 0; // flaky: instanceInfo87.getSecurePort();
        boolean boolean89 = false; // flaky: instanceInfo87.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo90 = null; // flaky: new com.netflix.appinfo.InstanceInfo(instanceInfo87);
        com.netflix.appinfo.InstanceInfo instanceInfo91 = null; // flaky: new com.netflix.appinfo.InstanceInfo(instanceInfo87);
        java.lang.String str92 = null; // flaky: instanceInfo87.getAppGroupName();
        int int93 = 0; // flaky: instanceInfo87.getCountryId();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus94 = null; // flaky: instanceInfo87.getStatus();
// flaky:         applicationInfoManager67.setInstanceStatus(instanceStatus94);
        com.netflix.appinfo.InstanceInfo.Builder builder96 = builder66.setOverriddenStatus(instanceStatus94);
// flaky:         instanceInfo28.setOverriddenStatus(instanceStatus94);
        com.netflix.appinfo.InstanceInfo.Builder builder98 = builder16.setStatus(instanceStatus94);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(applicationInfoManager17);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 30 + "'", int21 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig26);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo27);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertTrue("'" + actionType29 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType29.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "unknown" + "'", str31, "unknown");
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "172.20.26.3" + "'", str32, "172.20.26.3");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "unknown" + "'", str34, "unknown");
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str35, "http://inesserver2.windows.cin.ufpe.br:80/");
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str37, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNotNull(applicationInfoManager38);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig47);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo48);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo49);
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 443 + "'", int50 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str53, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus54 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus54.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
// flaky:         org.junit.Assert.assertNotNull(dataCenterInfo56);
// flaky:         org.junit.Assert.assertTrue("'" + actionType57 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType57.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str58 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str58, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(applicationInfoManager67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 30 + "'", int70 == 30);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 30 + "'", int71 == 30);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig73);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig74);
        org.junit.Assert.assertNotNull(applicationInfoManager76);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo77);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 30 + "'", int80 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig85);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo86);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo87);
// flaky:         org.junit.Assert.assertTrue("'" + int88 + "' != '" + 443 + "'", int88 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str92 + "' != '" + "UNKNOWN" + "'", str92, "UNKNOWN");
// flaky:         org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus94 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus94.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder96);
        org.junit.Assert.assertNotNull(builder98);
    }

    @Test
    public void test01848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01848");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo instanceInfo12 = builder11.getRawInstance();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager13 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager13.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig16 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int17 = myDataCenterInstanceConfig16.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig16.getDataCenterInfo();
        java.lang.String str19 = myDataCenterInstanceConfig16.getNamespace();
        boolean boolean20 = myDataCenterInstanceConfig16.isNonSecurePortEnabled();
        applicationInfoManager13.config = myDataCenterInstanceConfig16;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig22 = applicationInfoManager13.config;
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager13.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig26 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int27 = myDataCenterInstanceConfig26.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo28 = myDataCenterInstanceConfig26.getDataCenterInfo();
        java.lang.String str30 = myDataCenterInstanceConfig26.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo31 = myDataCenterInstanceConfig26.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig32 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo31);
        java.lang.String str33 = myDataCenterInstanceConfig32.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = myDataCenterInstanceConfig32.getMetadataMap();
// flaky:         applicationInfoManager13.registerAppMetadata(strMap34);
        com.netflix.appinfo.InstanceInfo instanceInfo36 = applicationInfoManager13.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo37 = applicationInfoManager13.getInfo();
        java.util.Set<java.lang.String> strSet38 = null; // flaky: instanceInfo37.getHealthCheckUrls();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager39 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo40 = applicationInfoManager39.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig42 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int43 = myDataCenterInstanceConfig42.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo44 = myDataCenterInstanceConfig42.getDataCenterInfo();
        java.lang.String str45 = myDataCenterInstanceConfig42.getNamespace();
        boolean boolean46 = myDataCenterInstanceConfig42.isNonSecurePortEnabled();
        applicationInfoManager39.config = myDataCenterInstanceConfig42;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig48 = applicationInfoManager39.config;
        com.netflix.appinfo.InstanceInfo instanceInfo49 = applicationInfoManager39.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo50 = applicationInfoManager39.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType51 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo50.setActionType(actionType51);
        com.netflix.appinfo.LeaseInfo leaseInfo53 = null;
// flaky:         instanceInfo50.setLeaseInfo(leaseInfo53);
        java.util.Set<java.lang.String> strSet55 = null; // flaky: instanceInfo50.getHealthCheckUrls();
        java.lang.String str56 = null; // flaky: instanceInfo50.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder57 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo50);
        com.netflix.appinfo.InstanceInfo.Builder builder60 = null; // flaky: builder57.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder62 = null; // flaky: builder57.setVIPAddressDeser("hi!");
        com.netflix.appinfo.InstanceInfo.PortType portType63 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder65 = null; // flaky: builder62.enablePort(portType63, false);
        boolean boolean66 = false; // flaky: instanceInfo37.isPortEnabled(portType63);
        boolean boolean67 = instanceInfo12.isPortEnabled(portType63);
        com.netflix.appinfo.InstanceInfo instanceInfo68 = new com.netflix.appinfo.InstanceInfo(instanceInfo12);
        java.lang.String str69 = instanceInfo68.getId();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertNotNull(applicationInfoManager13);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig22);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 30 + "'", int27 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str30, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strMap34);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo36);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo37);
// flaky:         org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(applicationInfoManager39);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 30 + "'", int43 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig48);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo49);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo50);
        org.junit.Assert.assertTrue("'" + actionType51 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType51.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertNotNull(strSet55);
// flaky:         org.junit.Assert.assertEquals("'" + str56 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str56, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertNotNull(builder60);
// flaky:         org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + portType63 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType63.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
// flaky:         org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "172.20.26.3" + "'", str69, "172.20.26.3");
    }

    @Test
    public void test01849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01849");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isInstanceEnabledOnit();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        java.lang.Class<?> wildcardClass5 = myDataCenterInstanceConfig1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/Status" + "'", str4, "/Status");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test01850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01850");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig1.getDataCenterInfo();
        int int4 = myDataCenterInstanceConfig1.getSecurePort();
        java.lang.String str6 = myDataCenterInstanceConfig1.getHostName(true);
        boolean boolean7 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        java.lang.String str8 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 443 + "'", int4 == 443);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str6, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/healthcheck" + "'", str8, "/healthcheck");
    }

    @Test
    public void test01851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01851");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig6 = applicationInfoManager0.config;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig7 = applicationInfoManager0.config;
// flaky:         applicationInfoManager0.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager9 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager9.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int13 = myDataCenterInstanceConfig12.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo14 = myDataCenterInstanceConfig12.getDataCenterInfo();
        java.lang.String str15 = myDataCenterInstanceConfig12.getNamespace();
        boolean boolean16 = myDataCenterInstanceConfig12.isNonSecurePortEnabled();
        applicationInfoManager9.config = myDataCenterInstanceConfig12;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig18 = applicationInfoManager9.config;
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager9.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager9.instanceInfo;
        int int21 = 0; // flaky: instanceInfo20.getSecurePort();
        boolean boolean22 = false; // flaky: instanceInfo20.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo23 = null; // flaky: new com.netflix.appinfo.InstanceInfo(instanceInfo20);
        com.netflix.appinfo.InstanceInfo instanceInfo24 = null; // flaky: new com.netflix.appinfo.InstanceInfo(instanceInfo20);
        java.lang.String str25 = null; // flaky: instanceInfo20.getAppGroupName();
        int int26 = 0; // flaky: instanceInfo20.getCountryId();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus27 = null; // flaky: instanceInfo20.getStatus();
// flaky:         applicationInfoManager0.setInstanceStatus(instanceStatus27);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig30 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str31 = myDataCenterInstanceConfig30.getIpAddress();
        java.lang.String str32 = myDataCenterInstanceConfig30.getASGName();
        boolean boolean33 = myDataCenterInstanceConfig30.getSecurePortEnabled();
        int int34 = myDataCenterInstanceConfig30.getLeaseExpirationDurationInSeconds();
        int int35 = myDataCenterInstanceConfig30.getNonSecurePort();
        java.lang.String str36 = myDataCenterInstanceConfig30.getStatusPageUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo37 = myDataCenterInstanceConfig30.getDataCenterInfo();
        java.lang.String str38 = myDataCenterInstanceConfig30.getIpAddress();
        applicationInfoManager0.config = myDataCenterInstanceConfig30;
        java.lang.String str40 = myDataCenterInstanceConfig30.getVirtualHostName();
        java.lang.String str41 = myDataCenterInstanceConfig30.getStatusPageUrl();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig6);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig7);
        org.junit.Assert.assertNotNull(applicationInfoManager9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 30 + "'", int13 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig18);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo19);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo20);
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 443 + "'", int21 == 443);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UNKNOWN" + "'", str25, "UNKNOWN");
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus27 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus27.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "172.20.26.3" + "'", str31, "172.20.26.3");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 90 + "'", int34 == 90);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 80 + "'", int35 == 80);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(dataCenterInfo37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "172.20.26.3" + "'", str38, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str40, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test01852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01852");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        java.lang.String str6 = myDataCenterInstanceConfig2.getIpAddress();
        java.lang.String str7 = myDataCenterInstanceConfig2.getHealthCheckUrlPath();
        int int8 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager9 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager9.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int13 = myDataCenterInstanceConfig12.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo14 = myDataCenterInstanceConfig12.getDataCenterInfo();
        java.lang.String str15 = myDataCenterInstanceConfig12.getNamespace();
        boolean boolean16 = myDataCenterInstanceConfig12.isNonSecurePortEnabled();
        applicationInfoManager9.config = myDataCenterInstanceConfig12;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig18 = applicationInfoManager9.config;
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager9.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager9.instanceInfo;
        int int21 = 0; // flaky: instanceInfo20.getSecurePort();
        int int22 = 0; // flaky: instanceInfo20.getPort();
        int int23 = 0; // flaky: instanceInfo20.getCountryId();
        boolean boolean24 = false; // flaky: instanceInfo20.isDirty();
        int int25 = 0; // flaky: instanceInfo20.getPort();
        java.lang.String str26 = null; // flaky: instanceInfo20.getASGName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager27 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig2, instanceInfo20);
        java.lang.String str28 = null; // flaky: instanceInfo20.getASGName();
        boolean boolean29 = false; // flaky: instanceInfo20.isDirty();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "172.20.26.3" + "'", str6, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/healthcheck" + "'", str7, "/healthcheck");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
        org.junit.Assert.assertNotNull(applicationInfoManager9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 30 + "'", int13 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig18);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo19);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo20);
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 443 + "'", int21 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 80 + "'", int22 == 80);
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
// flaky:         org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 80 + "'", int25 == 80);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/healthcheck" + "'", str26, "/healthcheck");
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "/healthcheck" + "'", str28, "/healthcheck");
// flaky:         org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test01853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01853");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig4.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo6);
        java.lang.String str8 = myDataCenterInstanceConfig7.getAppname();
        java.lang.String str9 = myDataCenterInstanceConfig7.getNamespace();
        applicationInfoManager0.config = myDataCenterInstanceConfig7;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager12 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo13 = applicationInfoManager12.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig15 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int16 = myDataCenterInstanceConfig15.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo17 = myDataCenterInstanceConfig15.getDataCenterInfo();
        java.lang.String str18 = myDataCenterInstanceConfig15.getNamespace();
        boolean boolean19 = myDataCenterInstanceConfig15.isNonSecurePortEnabled();
        applicationInfoManager12.config = myDataCenterInstanceConfig15;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig21 = applicationInfoManager12.config;
        com.netflix.appinfo.InstanceInfo instanceInfo22 = applicationInfoManager12.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager12.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType24 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo23.setActionType(actionType24);
        com.netflix.appinfo.LeaseInfo leaseInfo26 = null;
// flaky:         instanceInfo23.setLeaseInfo(leaseInfo26);
        java.util.Set<java.lang.String> strSet28 = null; // flaky: instanceInfo23.getHealthCheckUrls();
        java.lang.String str29 = null; // flaky: instanceInfo23.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder30 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo23);
        com.netflix.appinfo.InstanceInfo.Builder builder32 = null; // flaky: builder30.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder34 = null; // flaky: builder30.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder36 = null; // flaky: builder34.setSecureVIPAddress("http://hi!:80/Status");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig38 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int39 = myDataCenterInstanceConfig38.getLeaseRenewalIntervalInSeconds();
        int int40 = myDataCenterInstanceConfig38.getLeaseRenewalIntervalInSeconds();
        java.lang.String str41 = myDataCenterInstanceConfig38.getStatusPageUrlPath();
        boolean boolean42 = myDataCenterInstanceConfig38.getSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager43 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo44 = applicationInfoManager43.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig46 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int47 = myDataCenterInstanceConfig46.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo48 = myDataCenterInstanceConfig46.getDataCenterInfo();
        java.lang.String str49 = myDataCenterInstanceConfig46.getNamespace();
        boolean boolean50 = myDataCenterInstanceConfig46.isNonSecurePortEnabled();
        applicationInfoManager43.config = myDataCenterInstanceConfig46;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig52 = applicationInfoManager43.config;
        com.netflix.appinfo.InstanceInfo instanceInfo53 = applicationInfoManager43.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo54 = applicationInfoManager43.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType55 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo54.setActionType(actionType55);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager57 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo58 = applicationInfoManager57.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig60 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int61 = myDataCenterInstanceConfig60.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo62 = myDataCenterInstanceConfig60.getDataCenterInfo();
        java.lang.String str63 = myDataCenterInstanceConfig60.getNamespace();
        boolean boolean64 = myDataCenterInstanceConfig60.isNonSecurePortEnabled();
        applicationInfoManager57.config = myDataCenterInstanceConfig60;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig66 = applicationInfoManager57.config;
        com.netflix.appinfo.InstanceInfo instanceInfo67 = applicationInfoManager57.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo68 = applicationInfoManager57.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType69 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo68.setActionType(actionType69);
// flaky:         instanceInfo54.setActionType(actionType69);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager72 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig38, instanceInfo54);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus74 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("inesserver2.windows.cin.ufpe.br:80");
// flaky:         instanceInfo54.setOverriddenStatus(instanceStatus74);
        com.netflix.appinfo.InstanceInfo.Builder builder76 = null; // flaky: builder34.setStatus(instanceStatus74);
// flaky:         applicationInfoManager0.setInstanceStatus(instanceStatus74);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig79 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/healthcheck");
        java.lang.String str80 = myDataCenterInstanceConfig79.getHomePageUrlPath();
        java.lang.String str81 = myDataCenterInstanceConfig79.getHomePageUrl();
        java.lang.String str82 = myDataCenterInstanceConfig79.getHomePageUrlPath();
        java.lang.String str83 = myDataCenterInstanceConfig79.getNamespace();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig79);
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig85 = applicationInfoManager0.config;
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "unknown" + "'", str8, "unknown");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/Status" + "'", str9, "/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager12);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 30 + "'", int16 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig21);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo22);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo23);
        org.junit.Assert.assertTrue("'" + actionType24 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType24.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertNotNull(strSet28);
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str29, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertNotNull(builder32);
// flaky:         org.junit.Assert.assertNotNull(builder34);
// flaky:         org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 30 + "'", int39 == 30);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 30 + "'", int40 == 30);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/Status" + "'", str41, "/Status");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager43);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 30 + "'", int47 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig52);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo53);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo54);
        org.junit.Assert.assertTrue("'" + actionType55 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType55.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager57);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig66);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo67);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo68);
        org.junit.Assert.assertTrue("'" + actionType69 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType69.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + instanceStatus74 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus74.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
// flaky:         org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "/" + "'", str80, "/");
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "/" + "'", str82, "/");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "/healthcheck" + "'", str83, "/healthcheck");
        org.junit.Assert.assertNotNull(eurekaInstanceConfig85);
    }

    @Test
    public void test01854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01854");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("hi!");
        java.lang.String str2 = myDataCenterInstanceConfig1.getStatusPageUrl();
        java.lang.String str4 = myDataCenterInstanceConfig1.getHostName(true);
        int int5 = myDataCenterInstanceConfig1.getSecurePort();
        java.lang.String str6 = myDataCenterInstanceConfig1.getAppname();
        java.lang.String str7 = myDataCenterInstanceConfig1.getIpAddress();
        boolean boolean8 = myDataCenterInstanceConfig1.isInstanceEnabledOnit();
        boolean boolean9 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str4, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 443 + "'", int5 == 443);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "unknown" + "'", str6, "unknown");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "172.20.26.3" + "'", str7, "172.20.26.3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test01855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01855");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder2.setHealthCheckUrlsForDeser("unknown", "172.20.26.3");
        com.netflix.appinfo.LeaseInfo leaseInfo11 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder2.setLeaseInfo(leaseInfo11);
        boolean boolean13 = builder12.isInitialized();
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder12.setSID("http://hi!:35/Status");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(builder15);
    }

    @Test
    public void test01856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01856");
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig0 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager1 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig4.getDataCenterInfo();
        java.lang.String str7 = myDataCenterInstanceConfig4.getNamespace();
        boolean boolean8 = myDataCenterInstanceConfig4.isNonSecurePortEnabled();
        applicationInfoManager1.config = myDataCenterInstanceConfig4;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig10 = applicationInfoManager1.config;
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig14 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int15 = myDataCenterInstanceConfig14.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo16 = myDataCenterInstanceConfig14.getDataCenterInfo();
        java.lang.String str18 = myDataCenterInstanceConfig14.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig14.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig20 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo19);
        java.lang.String str21 = myDataCenterInstanceConfig20.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = myDataCenterInstanceConfig20.getMetadataMap();
// flaky:         applicationInfoManager1.registerAppMetadata(strMap22);
        com.netflix.appinfo.InstanceInfo instanceInfo24 = applicationInfoManager1.instanceInfo;
        java.lang.String str25 = null; // flaky: instanceInfo24.getStatusPageUrl();
        java.lang.String str26 = null; // flaky: instanceInfo24.getId();
        java.lang.String str27 = null; // flaky: instanceInfo24.getSecureVipAddress();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager28 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig0, instanceInfo24);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager29 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager29.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig32 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int33 = myDataCenterInstanceConfig32.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo34 = myDataCenterInstanceConfig32.getDataCenterInfo();
        java.lang.String str35 = myDataCenterInstanceConfig32.getNamespace();
        boolean boolean36 = myDataCenterInstanceConfig32.isNonSecurePortEnabled();
        applicationInfoManager29.config = myDataCenterInstanceConfig32;
        int int38 = myDataCenterInstanceConfig32.getLeaseExpirationDurationInSeconds();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = myDataCenterInstanceConfig32.getMetadataMap();
// flaky:         applicationInfoManager28.registerAppMetadata(strMap39);
        com.netflix.appinfo.InstanceInfo instanceInfo41 = applicationInfoManager28.instanceInfo;
        java.lang.String str42 = null; // flaky: instanceInfo41.getHostName();
        java.lang.Boolean boolean43 = null; // flaky: instanceInfo41.isCoordinatingDiscoveryServer();
        org.junit.Assert.assertNotNull(applicationInfoManager1);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 30 + "'", int15 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str18, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strMap22);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo24);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str25, "http://inesserver2.windows.cin.ufpe.br:80/Status");
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str26, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(applicationInfoManager29);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 30 + "'", int33 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 90 + "'", int38 == 90);
        org.junit.Assert.assertNotNull(strMap39);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo41);
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str42, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertEquals("'" + boolean43 + "' != '" + false + "'", boolean43, false);
    }

    @Test
    public void test01857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01857");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder6.setLastDirtyTimestamp((long) (short) 10);
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder13.setSecurePort((int) (byte) 100);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
    }

    @Test
    public void test01858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01858");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int9 = myDataCenterInstanceConfig8.getLeaseRenewalIntervalInSeconds();
        int int10 = myDataCenterInstanceConfig8.getLeaseRenewalIntervalInSeconds();
        java.lang.String str11 = myDataCenterInstanceConfig8.getStatusPageUrlPath();
        boolean boolean12 = myDataCenterInstanceConfig8.getSecurePortEnabled();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = myDataCenterInstanceConfig8.getMetadataMap();
        applicationInfoManager0.config = myDataCenterInstanceConfig8;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig17 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int18 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig17.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig20 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo19);
        java.lang.String str21 = myDataCenterInstanceConfig20.getAppname();
        java.lang.String str22 = myDataCenterInstanceConfig20.getNamespace();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig23 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager24 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager24.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig27 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int28 = myDataCenterInstanceConfig27.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig27.getDataCenterInfo();
        java.lang.String str30 = myDataCenterInstanceConfig27.getNamespace();
        boolean boolean31 = myDataCenterInstanceConfig27.isNonSecurePortEnabled();
        applicationInfoManager24.config = myDataCenterInstanceConfig27;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig33 = applicationInfoManager24.config;
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager24.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager24.instanceInfo;
        int int36 = 0; // flaky: instanceInfo35.getSecurePort();
        boolean boolean37 = false; // flaky: instanceInfo35.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager38 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig23, instanceInfo35);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager39 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig20, instanceInfo35);
        java.lang.String str40 = null; // flaky: instanceInfo35.getHomePageUrl();
        applicationInfoManager0.instanceInfo = instanceInfo35;
        com.netflix.appinfo.InstanceInfo instanceInfo42 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager43 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo44 = applicationInfoManager43.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig46 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int47 = myDataCenterInstanceConfig46.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo48 = myDataCenterInstanceConfig46.getDataCenterInfo();
        java.lang.String str49 = myDataCenterInstanceConfig46.getNamespace();
        boolean boolean50 = myDataCenterInstanceConfig46.isNonSecurePortEnabled();
        applicationInfoManager43.config = myDataCenterInstanceConfig46;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig52 = applicationInfoManager43.config;
        com.netflix.appinfo.InstanceInfo instanceInfo53 = applicationInfoManager43.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo54 = applicationInfoManager43.instanceInfo;
        java.lang.Boolean boolean55 = null; // flaky: instanceInfo54.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus56 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
// flaky:         instanceInfo54.setOverriddenStatus(instanceStatus56);
        int int58 = 0; // flaky: instanceInfo54.getSecurePort();
        java.lang.String str59 = null; // flaky: instanceInfo54.getHostName();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = null; // flaky: instanceInfo54.getMetadata();
// flaky:         instanceInfo54.setIsDirty(false);
        applicationInfoManager0.instanceInfo = instanceInfo54;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig64 = applicationInfoManager0.config;
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 30 + "'", int9 == 30);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/Status" + "'", str11, "/Status");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 30 + "'", int18 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "unknown" + "'", str21, "unknown");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "/Status" + "'", str22, "/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager24);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 30 + "'", int28 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig33);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo34);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo35);
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 443 + "'", int36 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str40, "http://inesserver2.windows.cin.ufpe.br:80/");
// flaky:         org.junit.Assert.assertNotNull(instanceInfo42);
        org.junit.Assert.assertNotNull(applicationInfoManager43);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 30 + "'", int47 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig52);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo53);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo54);
// flaky:         org.junit.Assert.assertEquals("'" + boolean55 + "' != '" + false + "'", boolean55, false);
        org.junit.Assert.assertTrue("'" + instanceStatus56 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus56.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 443 + "'", int58 == 443);
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str59, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig64);
    }

    @Test
    public void test01859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01859");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder3 = builder0.setHealthCheckUrlsForDeser("/healthcheck", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder0.setNamespace("/Status");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int8 = myDataCenterInstanceConfig7.getLeaseRenewalIntervalInSeconds();
        boolean boolean9 = myDataCenterInstanceConfig7.isInstanceEnabledOnit();
        java.lang.String str10 = myDataCenterInstanceConfig7.getStatusPageUrlPath();
        java.lang.String str11 = myDataCenterInstanceConfig7.getAppGroupName();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo12 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder5.setDataCenterInfo(dataCenterInfo12);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder14.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder14.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder14.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = myDataCenterInstanceConfig21.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder20.setDataCenterInfo(dataCenterInfo22);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = myDataCenterInstanceConfig24.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder20.setDataCenterInfo(dataCenterInfo25);
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder20.setNamespace("na");
        com.netflix.appinfo.InstanceInfo instanceInfo29 = builder20.build();
        int int30 = instanceInfo29.getSecurePort();
        boolean boolean31 = instanceInfo29.isDirty();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus32 = instanceInfo29.getOverriddenStatus();
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder13.setOverriddenStatus(instanceStatus32);
        com.netflix.appinfo.InstanceInfo.Builder builder36 = builder13.setHealthCheckUrlsForDeser("http://hi!:80/Status", "UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder13.setSecurePort(32);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/Status" + "'", str10, "/Status");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "unknown" + "'", str11, "unknown");
        org.junit.Assert.assertNotNull(dataCenterInfo12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 7002 + "'", int30 == 7002);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + instanceStatus32 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus32.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
    }

    @Test
    public void test01860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01860");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        java.lang.Boolean boolean12 = null; // flaky: instanceInfo11.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus13 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
// flaky:         instanceInfo11.setOverriddenStatus(instanceStatus13);
// flaky:         instanceInfo11.setLastDirtyTimestamp((java.lang.Long) (-1L));
        int int17 = 0; // flaky: instanceInfo11.getPort();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder18.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder18.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig25 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig25.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder24.setDataCenterInfo(dataCenterInfo26);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig28 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig28.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder24.setDataCenterInfo(dataCenterInfo29);
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder24.setNamespace("na");
        com.netflix.appinfo.InstanceInfo instanceInfo33 = builder24.build();
        boolean boolean34 = builder24.isInitialized();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager35 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo36 = applicationInfoManager35.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig38 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int39 = myDataCenterInstanceConfig38.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo40 = myDataCenterInstanceConfig38.getDataCenterInfo();
        java.lang.String str41 = myDataCenterInstanceConfig38.getNamespace();
        boolean boolean42 = myDataCenterInstanceConfig38.isNonSecurePortEnabled();
        applicationInfoManager35.config = myDataCenterInstanceConfig38;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig44 = applicationInfoManager35.config;
        com.netflix.appinfo.InstanceInfo instanceInfo45 = applicationInfoManager35.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo46 = applicationInfoManager35.instanceInfo;
        java.lang.Boolean boolean47 = null; // flaky: instanceInfo46.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus48 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
// flaky:         instanceInfo46.setOverriddenStatus(instanceStatus48);
        com.netflix.appinfo.InstanceInfo.Builder builder50 = builder24.setStatus(instanceStatus48);
// flaky:         instanceInfo11.setOverriddenStatus(instanceStatus48);
        java.lang.String str52 = null; // flaky: instanceInfo11.getSecureVipAddress();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null; // flaky: instanceInfo11.getMetadata();
// flaky:         instanceInfo11.setLastDirtyTimestamp((java.lang.Long) 1636106021372L);
        java.util.Map<java.lang.String, java.lang.String> strMap56 = null; // flaky: instanceInfo11.getMetadata();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertTrue("'" + instanceStatus13 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus13.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 80 + "'", int17 == 80);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(applicationInfoManager35);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 30 + "'", int39 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig44);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo45);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo46);
// flaky:         org.junit.Assert.assertEquals("'" + boolean47 + "' != '" + false + "'", boolean47, false);
        org.junit.Assert.assertTrue("'" + instanceStatus48 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus48.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(str52);
// flaky:         org.junit.Assert.assertNotNull(strMap53);
// flaky:         org.junit.Assert.assertNotNull(strMap56);
    }

    @Test
    public void test01861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01861");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/healthcheck");
        java.lang.String str2 = myDataCenterInstanceConfig1.getHomePageUrlPath();
        int int3 = myDataCenterInstanceConfig1.getLeaseExpirationDurationInSeconds();
        java.lang.String str4 = myDataCenterInstanceConfig1.getSecureVirtualHostName();
        java.lang.String str5 = myDataCenterInstanceConfig1.getAppGroupName();
        int int6 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/" + "'", str2, "/");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 90 + "'", int3 == 90);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "unknown" + "'", str5, "unknown");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 30 + "'", int6 == 30);
    }

    @Test
    public void test01862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01862");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder7.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder9.add("http://inesserver2.windows.cin.ufpe.br:80/Status", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder9.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder9.setSecureVIPAddress("hi!");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager17 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager17.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig20 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int21 = myDataCenterInstanceConfig20.getLeaseRenewalIntervalInSeconds();
        java.lang.String str22 = myDataCenterInstanceConfig20.getVirtualHostName();
        java.lang.String str23 = myDataCenterInstanceConfig20.getASGName();
        boolean boolean24 = myDataCenterInstanceConfig20.isNonSecurePortEnabled();
        applicationInfoManager17.config = myDataCenterInstanceConfig20;
        java.lang.String str26 = myDataCenterInstanceConfig20.getAppname();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo27 = myDataCenterInstanceConfig20.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder9.setDataCenterInfo(dataCenterInfo27);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(applicationInfoManager17);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 30 + "'", int21 == 30);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str22, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "unknown" + "'", str26, "unknown");
        org.junit.Assert.assertNotNull(dataCenterInfo27);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test01863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01863");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        java.lang.String str6 = myDataCenterInstanceConfig2.getIpAddress();
        java.lang.String str7 = myDataCenterInstanceConfig2.getVirtualHostName();
        java.lang.String str9 = myDataCenterInstanceConfig2.getHostName(true);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager10 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager10.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig13 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int14 = myDataCenterInstanceConfig13.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo15 = myDataCenterInstanceConfig13.getDataCenterInfo();
        java.lang.String str16 = myDataCenterInstanceConfig13.getNamespace();
        boolean boolean17 = myDataCenterInstanceConfig13.isNonSecurePortEnabled();
        applicationInfoManager10.config = myDataCenterInstanceConfig13;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig19 = applicationInfoManager10.config;
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager10.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager10.instanceInfo;
        java.lang.Boolean boolean22 = null; // flaky: instanceInfo21.isCoordinatingDiscoveryServer();
        java.lang.String str23 = null; // flaky: instanceInfo21.getVIPAddress();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager24 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig2, instanceInfo21);
        java.lang.String str25 = myDataCenterInstanceConfig2.getNamespace();
        java.lang.String str26 = myDataCenterInstanceConfig2.getHealthCheckUrl();
        java.lang.String str27 = myDataCenterInstanceConfig2.getVirtualHostName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "172.20.26.3" + "'", str6, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str7, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str9, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 30 + "'", int14 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig19);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo20);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo21);
// flaky:         org.junit.Assert.assertEquals("'" + boolean22 + "' != '" + false + "'", boolean22, false);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str23, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str27, "inesserver2.windows.cin.ufpe.br:80");
    }

    @Test
    public void test01864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01864");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = 0; // flaky: instanceInfo11.getSecurePort();
        boolean boolean13 = false; // flaky: instanceInfo11.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = null; // flaky: new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        com.netflix.appinfo.InstanceInfo instanceInfo15 = null; // flaky: new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        int int16 = 0; // flaky: instanceInfo11.getSecurePort();
        java.lang.String str17 = null; // flaky: instanceInfo11.getStatusPageUrl();
        java.lang.String str18 = null; // flaky: instanceInfo11.getASGName();
// flaky:         instanceInfo11.setIsDirty(false);
// flaky:         instanceInfo11.setIsCoordinatingDiscoveryServer();
        int int22 = 0; // flaky: instanceInfo11.getPort();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 443 + "'", int16 == 443);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str17, "http://inesserver2.windows.cin.ufpe.br:80/Status");
        org.junit.Assert.assertNull(str18);
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 80 + "'", int22 == 80);
    }

    @Test
    public void test01865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01865");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder8.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder8.setCountryId((-1));
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder8.setCountryId((-1));
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder16.setHomePageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder16.setAppName("/Status");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test01866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01866");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig13 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int14 = myDataCenterInstanceConfig13.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo15 = myDataCenterInstanceConfig13.getDataCenterInfo();
        java.lang.String str17 = myDataCenterInstanceConfig13.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig13.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo18);
        java.lang.String str20 = myDataCenterInstanceConfig19.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = myDataCenterInstanceConfig19.getMetadataMap();
// flaky:         applicationInfoManager0.registerAppMetadata(strMap21);
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager0.instanceInfo;
        java.lang.String str24 = null; // flaky: instanceInfo23.getSecureVipAddress();
// flaky:         instanceInfo23.setLastDirtyTimestamp((java.lang.Long) 1636105966187L);
        java.lang.String str27 = null; // flaky: instanceInfo23.getId();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 30 + "'", int14 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo23);
        org.junit.Assert.assertNull(str24);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str27, "inesserver2.windows.cin.ufpe.br");
    }

    @Test
    public void test01867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01867");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
// flaky:         instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = null; // flaky: instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = null; // flaky: instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = null; // flaky: builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.PortType portType21 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder23 = null; // flaky: builder18.enablePort(portType21, true);
        com.netflix.appinfo.InstanceInfo.Builder builder25 = null; // flaky: builder23.setCountryId(0);
        com.netflix.appinfo.InstanceInfo.Builder builder27 = null; // flaky: builder25.setAppGroupName("http://hi!:80/Status");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager28 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager28.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig31 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int32 = myDataCenterInstanceConfig31.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo33 = myDataCenterInstanceConfig31.getDataCenterInfo();
        java.lang.String str34 = myDataCenterInstanceConfig31.getNamespace();
        boolean boolean35 = myDataCenterInstanceConfig31.isNonSecurePortEnabled();
        applicationInfoManager28.config = myDataCenterInstanceConfig31;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig37 = applicationInfoManager28.config;
        com.netflix.appinfo.InstanceInfo instanceInfo38 = applicationInfoManager28.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo39 = applicationInfoManager28.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType40 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo39.setActionType(actionType40);
        java.lang.String str42 = null; // flaky: instanceInfo39.getStatusPageUrl();
        com.netflix.appinfo.InstanceInfo instanceInfo43 = null; // flaky: new com.netflix.appinfo.InstanceInfo(instanceInfo39);
        int int44 = 0; // flaky: instanceInfo43.getSecurePort();
        java.lang.String str45 = null; // flaky: instanceInfo43.getSID();
        java.lang.String[] strArray46 = new java.lang.String[] {};
        com.netflix.appinfo.InstanceInfo instanceInfo47 = null;
        java.lang.String str48 = com.netflix.appinfo.InstanceInfo.getZone(strArray46, instanceInfo47);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager49 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo50 = applicationInfoManager49.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig52 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int53 = myDataCenterInstanceConfig52.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo54 = myDataCenterInstanceConfig52.getDataCenterInfo();
        java.lang.String str55 = myDataCenterInstanceConfig52.getNamespace();
        boolean boolean56 = myDataCenterInstanceConfig52.isNonSecurePortEnabled();
        applicationInfoManager49.config = myDataCenterInstanceConfig52;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig58 = applicationInfoManager49.config;
        com.netflix.appinfo.InstanceInfo instanceInfo59 = applicationInfoManager49.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo60 = applicationInfoManager49.instanceInfo;
        int int61 = 0; // flaky: instanceInfo60.getSecurePort();
        int int62 = 0; // flaky: instanceInfo60.getPort();
        int int63 = 0; // flaky: instanceInfo60.getSecurePort();
        java.lang.String str64 = com.netflix.appinfo.InstanceInfo.getZone(strArray46, instanceInfo60);
        java.lang.String str65 = null; // flaky: instanceInfo60.getIPAddr();
        com.netflix.appinfo.InstanceInfo.ActionType actionType66 = null; // flaky: instanceInfo60.getActionType();
// flaky:         instanceInfo43.setActionType(actionType66);
        com.netflix.appinfo.InstanceInfo.Builder builder68 = null; // flaky: builder27.setActionType(actionType66);
        com.netflix.appinfo.InstanceInfo.Builder builder70 = null; // flaky: builder27.setNamespace("default");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertNotNull(strSet16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + portType21 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType21.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
// flaky:         org.junit.Assert.assertNotNull(builder23);
// flaky:         org.junit.Assert.assertNotNull(builder25);
// flaky:         org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(applicationInfoManager28);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 30 + "'", int32 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig37);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo38);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo39);
        org.junit.Assert.assertTrue("'" + actionType40 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType40.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str42, "http://inesserver2.windows.cin.ufpe.br:80/Status");
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 443 + "'", int44 == 443);
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "na" + "'", str45, "na");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "default" + "'", str48, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager49);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 30 + "'", int53 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig58);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo59);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo60);
// flaky:         org.junit.Assert.assertTrue("'" + int61 + "' != '" + 443 + "'", int61 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + int62 + "' != '" + 80 + "'", int62 == 80);
// flaky:         org.junit.Assert.assertTrue("'" + int63 + "' != '" + 443 + "'", int63 == 443);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "default" + "'", str64, "default");
// flaky:         org.junit.Assert.assertEquals("'" + str65 + "' != '" + "172.20.26.3" + "'", str65, "172.20.26.3");
// flaky:         org.junit.Assert.assertTrue("'" + actionType66 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType66.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertNotNull(builder68);
// flaky:         org.junit.Assert.assertNotNull(builder70);
    }

    @Test
    public void test01868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01868");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
// flaky:         instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = null; // flaky: instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = null; // flaky: instanceInfo11.getId();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager18 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager18.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int22 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo23 = myDataCenterInstanceConfig21.getDataCenterInfo();
        java.lang.String str24 = myDataCenterInstanceConfig21.getNamespace();
        boolean boolean25 = myDataCenterInstanceConfig21.isNonSecurePortEnabled();
        applicationInfoManager18.config = myDataCenterInstanceConfig21;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig27 = applicationInfoManager18.config;
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager18.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager18.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType30 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo29.setActionType(actionType30);
// flaky:         instanceInfo11.setActionType(actionType30);
        java.lang.String str33 = null; // flaky: instanceInfo11.getSID();
        com.netflix.appinfo.InstanceInfo.ActionType actionType34 = null; // flaky: instanceInfo11.getActionType();
        com.netflix.appinfo.InstanceInfo.ActionType actionType35 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo11.setActionType(actionType35);
        java.lang.String str37 = null; // flaky: instanceInfo11.getId();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertNotNull(strSet16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager18);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 30 + "'", int22 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig27);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo28);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertTrue("'" + actionType30 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType30.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "na" + "'", str33, "na");
// flaky:         org.junit.Assert.assertTrue("'" + actionType34 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType34.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + actionType35 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType35.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str37, "inesserver2.windows.cin.ufpe.br");
    }

    @Test
    public void test01869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01869");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
// flaky:         instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = null; // flaky: instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = null; // flaky: instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = null; // flaky: builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = null; // flaky: builder20.add("/healthcheck", "UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = null; // flaky: builder23.setSecureVIPAddress("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder27 = null; // flaky: builder23.setSecureVIPAddress("HI!");
        com.netflix.appinfo.InstanceInfo.Builder builder30 = null; // flaky: builder23.setStatusPageUrl("hi!", "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertNotNull(strSet16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertNotNull(builder20);
// flaky:         org.junit.Assert.assertNotNull(builder23);
// flaky:         org.junit.Assert.assertNotNull(builder25);
// flaky:         org.junit.Assert.assertNotNull(builder27);
// flaky:         org.junit.Assert.assertNotNull(builder30);
    }

    @Test
    public void test01870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01870");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        java.lang.String str5 = myDataCenterInstanceConfig3.getVirtualHostName();
        java.lang.String str6 = myDataCenterInstanceConfig3.getASGName();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        java.lang.String str9 = myDataCenterInstanceConfig3.getAppname();
        int int10 = myDataCenterInstanceConfig3.getNonSecurePort();
        java.lang.String str11 = myDataCenterInstanceConfig3.getHomePageUrlPath();
        int int12 = myDataCenterInstanceConfig3.getLeaseExpirationDurationInSeconds();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str5, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "unknown" + "'", str9, "unknown");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 80 + "'", int10 == 80);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/" + "'", str11, "/");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 90 + "'", int12 == 90);
    }

    @Test
    public void test01871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01871");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig1 = applicationInfoManager0.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager2 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        int int6 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager2.config = myDataCenterInstanceConfig4;
        java.lang.String str8 = myDataCenterInstanceConfig4.getIpAddress();
        java.lang.String str9 = myDataCenterInstanceConfig4.getVirtualHostName();
        java.lang.String str11 = myDataCenterInstanceConfig4.getHostName(true);
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig4);
        com.netflix.appinfo.InstanceInfo instanceInfo13 = applicationInfoManager0.instanceInfo;
        java.lang.String str14 = instanceInfo13.getVIPAddress();
        com.netflix.appinfo.InstanceInfo instanceInfo15 = new com.netflix.appinfo.InstanceInfo(instanceInfo13);
        java.lang.String str16 = instanceInfo15.getStatusPageUrl();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig1);
        org.junit.Assert.assertNotNull(applicationInfoManager2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 30 + "'", int6 == 30);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "172.20.26.3" + "'", str8, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str9, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str11, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(instanceInfo13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str14, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str16, "http://inesserver2.windows.cin.ufpe.br:80/Status");
    }

    @Test
    public void test01872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01872");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str2 = myDataCenterInstanceConfig1.getIpAddress();
        java.lang.String str3 = myDataCenterInstanceConfig1.getASGName();
        boolean boolean4 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        int int5 = myDataCenterInstanceConfig1.getLeaseExpirationDurationInSeconds();
        int int6 = myDataCenterInstanceConfig1.getNonSecurePort();
        java.lang.String str7 = myDataCenterInstanceConfig1.getStatusPageUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str9 = myDataCenterInstanceConfig1.getIpAddress();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo10 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str11 = myDataCenterInstanceConfig1.getASGName();
        java.lang.String str12 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "172.20.26.3" + "'", str2, "172.20.26.3");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 90 + "'", int5 == 90);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 80 + "'", int6 == 80);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "172.20.26.3" + "'", str9, "172.20.26.3");
        org.junit.Assert.assertNotNull(dataCenterInfo10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/healthcheck" + "'", str12, "/healthcheck");
    }

    @Test
    public void test01873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01873");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder8.setSecurePort((int) '4');
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder8.setAppName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder14.setSecureVIPAddress("http://hi!:35/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder16.add("172.20.26.3", "/healthcheck");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder19);
    }

    @Test
    public void test01874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01874");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        boolean boolean13 = instanceInfo11.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        com.netflix.appinfo.InstanceInfo instanceInfo15 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        int int16 = instanceInfo11.getSecurePort();
        java.lang.String str17 = instanceInfo11.getSecureVipAddress();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus19 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("");
        instanceInfo11.setStatusWithoutDirty(instanceStatus19);
        com.netflix.appinfo.InstanceInfo instanceInfo21 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        java.lang.String str22 = instanceInfo11.getHostName();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig23 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager24 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager24.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig27 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int28 = myDataCenterInstanceConfig27.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig27.getDataCenterInfo();
        java.lang.String str30 = myDataCenterInstanceConfig27.getNamespace();
        boolean boolean31 = myDataCenterInstanceConfig27.isNonSecurePortEnabled();
        applicationInfoManager24.config = myDataCenterInstanceConfig27;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig33 = applicationInfoManager24.config;
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager24.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager24.instanceInfo;
        int int36 = instanceInfo35.getSecurePort();
        boolean boolean37 = instanceInfo35.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager38 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig23, instanceInfo35);
        instanceInfo35.setSID("unknown");
        java.lang.String str41 = instanceInfo35.getId();
        int int42 = instanceInfo35.getPort();
        java.lang.String str43 = instanceInfo35.getVIPAddress();
        com.netflix.appinfo.LeaseInfo leaseInfo44 = instanceInfo35.getLeaseInfo();
        instanceInfo11.setLeaseInfo(leaseInfo44);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 443 + "'", int16 == 443);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + instanceStatus19 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus19.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str22, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 30 + "'", int28 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 443 + "'", int36 == 443);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str41, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 80 + "'", int42 == 80);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str43, "inesserver2.windows.cin.ufpe.br:80");
// flaky:         org.junit.Assert.assertNull(leaseInfo44);
    }

    @Test
    public void test01875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01875");
        java.lang.String[] strArray0 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager1 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig4.getDataCenterInfo();
        java.lang.String str7 = myDataCenterInstanceConfig4.getNamespace();
        boolean boolean8 = myDataCenterInstanceConfig4.isNonSecurePortEnabled();
        applicationInfoManager1.config = myDataCenterInstanceConfig4;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig10 = applicationInfoManager1.config;
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager1.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager1.instanceInfo;
        int int13 = instanceInfo12.getSecurePort();
        boolean boolean14 = instanceInfo12.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo15 = new com.netflix.appinfo.InstanceInfo(instanceInfo12);
        com.netflix.appinfo.InstanceInfo.ActionType actionType16 = com.netflix.appinfo.InstanceInfo.ActionType.MODIFIED;
        instanceInfo12.setActionType(actionType16);
        java.lang.String str18 = com.netflix.appinfo.InstanceInfo.getZone(strArray0, instanceInfo12);
        java.lang.String str19 = instanceInfo12.getAppName();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = instanceInfo12.getMetadata();
        org.junit.Assert.assertNotNull(applicationInfoManager1);
        org.junit.Assert.assertNotNull(instanceInfo2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(instanceInfo12);
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 7002 + "'", int13 == 7002);
// flaky:         org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + actionType16 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.MODIFIED + "'", actionType16.equals(com.netflix.appinfo.InstanceInfo.ActionType.MODIFIED));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "default" + "'", str18, "default");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS" + "'", str19, "HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS");
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test01876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01876");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder12.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder12.setHomePageUrlForDeser("");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager20 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager20.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig23 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int24 = myDataCenterInstanceConfig23.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = myDataCenterInstanceConfig23.getDataCenterInfo();
        java.lang.String str26 = myDataCenterInstanceConfig23.getNamespace();
        boolean boolean27 = myDataCenterInstanceConfig23.isNonSecurePortEnabled();
        applicationInfoManager20.config = myDataCenterInstanceConfig23;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig29 = applicationInfoManager20.config;
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager20.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager20.instanceInfo;
        java.lang.Boolean boolean32 = instanceInfo31.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus33 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo31.setOverriddenStatus(instanceStatus33);
        int int35 = instanceInfo31.getSecurePort();
        java.lang.String str36 = instanceInfo31.getHostName();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = instanceInfo31.getMetadata();
        com.netflix.appinfo.InstanceInfo.Builder builder38 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo31);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus40 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("http://inesserver2.windows.cin.ufpe.br:80/");
        instanceInfo31.setStatus(instanceStatus40);
        com.netflix.appinfo.InstanceInfo.Builder builder42 = builder19.setStatus(instanceStatus40);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager43 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo44 = applicationInfoManager43.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig46 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int47 = myDataCenterInstanceConfig46.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo48 = myDataCenterInstanceConfig46.getDataCenterInfo();
        java.lang.String str49 = myDataCenterInstanceConfig46.getNamespace();
        boolean boolean50 = myDataCenterInstanceConfig46.isNonSecurePortEnabled();
        applicationInfoManager43.config = myDataCenterInstanceConfig46;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig52 = applicationInfoManager43.config;
        com.netflix.appinfo.InstanceInfo instanceInfo53 = applicationInfoManager43.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo54 = applicationInfoManager43.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType55 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo54.setActionType(actionType55);
        com.netflix.appinfo.LeaseInfo leaseInfo57 = null;
        instanceInfo54.setLeaseInfo(leaseInfo57);
        java.util.Set<java.lang.String> strSet59 = instanceInfo54.getHealthCheckUrls();
        java.lang.String str60 = instanceInfo54.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder61 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo54);
        com.netflix.appinfo.InstanceInfo.Builder builder63 = builder61.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder66 = builder61.setHealthCheckUrlsForDeser("", "hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder68 = builder66.setLastDirtyTimestamp((long) 443);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus69 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        com.netflix.appinfo.InstanceInfo.Builder builder70 = builder66.setStatus(instanceStatus69);
        com.netflix.appinfo.InstanceInfo.Builder builder71 = builder19.setStatus(instanceStatus69);
        com.netflix.appinfo.InstanceInfo.Builder builder73 = builder19.setIPAddr("eureka.");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(applicationInfoManager20);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 30 + "'", int24 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig29);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertTrue("'" + instanceStatus33 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus33.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
// flaky:         org.junit.Assert.assertTrue("'" + int35 + "' != '" + 7002 + "'", int35 == 7002);
// flaky:         org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertTrue("'" + instanceStatus40 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus40.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(applicationInfoManager43);
        org.junit.Assert.assertNotNull(instanceInfo44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 30 + "'", int47 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig52);
        org.junit.Assert.assertNotNull(instanceInfo53);
        org.junit.Assert.assertNotNull(instanceInfo54);
        org.junit.Assert.assertTrue("'" + actionType55 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType55.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet59);
// flaky:         org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertTrue("'" + instanceStatus69 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus69.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder73);
    }

    @Test
    public void test01877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01877");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig3.getDataCenterInfo();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig3);
        boolean boolean10 = myDataCenterInstanceConfig3.getSecurePortEnabled();
        java.lang.String str11 = myDataCenterInstanceConfig3.getSecureHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo12 = myDataCenterInstanceConfig3.getDataCenterInfo();
        boolean boolean13 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        java.lang.String str14 = myDataCenterInstanceConfig3.getHealthCheckUrl();
        java.lang.String str15 = myDataCenterInstanceConfig3.getIpAddress();
        boolean boolean16 = myDataCenterInstanceConfig3.isInstanceEnabledOnit();
        java.lang.String str17 = myDataCenterInstanceConfig3.getHealthCheckUrlPath();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(dataCenterInfo12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "172.20.26.3" + "'", str15, "172.20.26.3");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/healthcheck" + "'", str17, "/healthcheck");
    }

    @Test
    public void test01878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01878");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        boolean boolean13 = instanceInfo11.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        java.lang.String str15 = instanceInfo11.getHomePageUrl();
        instanceInfo11.setIsDirty(true);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str15, "http://inesserver2.windows.cin.ufpe.br:80/");
    }

    @Test
    public void test01879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01879");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig1.getDataCenterInfo();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager4 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo5 = applicationInfoManager4.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int8 = myDataCenterInstanceConfig7.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo9 = myDataCenterInstanceConfig7.getDataCenterInfo();
        java.lang.String str10 = myDataCenterInstanceConfig7.getNamespace();
        boolean boolean11 = myDataCenterInstanceConfig7.isNonSecurePortEnabled();
        applicationInfoManager4.config = myDataCenterInstanceConfig7;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig13 = applicationInfoManager4.config;
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager4.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo15 = applicationInfoManager4.instanceInfo;
        int int16 = instanceInfo15.getSecurePort();
        boolean boolean17 = instanceInfo15.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo18 = new com.netflix.appinfo.InstanceInfo(instanceInfo15);
        com.netflix.appinfo.InstanceInfo instanceInfo19 = new com.netflix.appinfo.InstanceInfo(instanceInfo15);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager20 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo15);
        java.lang.String str21 = myDataCenterInstanceConfig1.getAppGroupName();
        java.lang.String str22 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo3);
        org.junit.Assert.assertNotNull(applicationInfoManager4);
        org.junit.Assert.assertNotNull(instanceInfo5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig13);
        org.junit.Assert.assertNotNull(instanceInfo14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 443 + "'", int16 == 443);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "unknown" + "'", str21, "unknown");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "/healthcheck" + "'", str22, "/healthcheck");
    }

    @Test
    public void test01880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01880");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder3 = builder0.setHealthCheckUrlsForDeser("/healthcheck", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder0.setNamespace("/Status");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int8 = myDataCenterInstanceConfig7.getLeaseRenewalIntervalInSeconds();
        boolean boolean9 = myDataCenterInstanceConfig7.isInstanceEnabledOnit();
        java.lang.String str10 = myDataCenterInstanceConfig7.getStatusPageUrlPath();
        java.lang.String str11 = myDataCenterInstanceConfig7.getAppGroupName();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo12 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder5.setDataCenterInfo(dataCenterInfo12);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder14.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder14.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder14.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = myDataCenterInstanceConfig21.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder20.setDataCenterInfo(dataCenterInfo22);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = myDataCenterInstanceConfig24.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder20.setDataCenterInfo(dataCenterInfo25);
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder20.setNamespace("na");
        com.netflix.appinfo.InstanceInfo instanceInfo29 = builder20.build();
        int int30 = instanceInfo29.getSecurePort();
        boolean boolean31 = instanceInfo29.isDirty();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus32 = instanceInfo29.getOverriddenStatus();
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder13.setOverriddenStatus(instanceStatus32);
        com.netflix.appinfo.InstanceInfo.Builder builder36 = builder13.setHealthCheckUrlsForDeser("http://inesserver2.windows.cin.ufpe.br:80/Status", "/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder36.setVIPAddress("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder36.setVIPAddressDeser("default");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/Status" + "'", str10, "/Status");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "unknown" + "'", str11, "unknown");
        org.junit.Assert.assertNotNull(dataCenterInfo12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 7002 + "'", int30 == 7002);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + instanceStatus32 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus32.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
    }

    @Test
    public void test01881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01881");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        int int3 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        boolean boolean5 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager6 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo7 = applicationInfoManager6.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig9.getDataCenterInfo();
        java.lang.String str12 = myDataCenterInstanceConfig9.getNamespace();
        boolean boolean13 = myDataCenterInstanceConfig9.isNonSecurePortEnabled();
        applicationInfoManager6.config = myDataCenterInstanceConfig9;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig15 = applicationInfoManager6.config;
        com.netflix.appinfo.InstanceInfo instanceInfo16 = applicationInfoManager6.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo17 = applicationInfoManager6.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType18 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo17.setActionType(actionType18);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager20 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager20.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig23 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int24 = myDataCenterInstanceConfig23.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = myDataCenterInstanceConfig23.getDataCenterInfo();
        java.lang.String str26 = myDataCenterInstanceConfig23.getNamespace();
        boolean boolean27 = myDataCenterInstanceConfig23.isNonSecurePortEnabled();
        applicationInfoManager20.config = myDataCenterInstanceConfig23;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig29 = applicationInfoManager20.config;
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager20.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager20.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType32 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo31.setActionType(actionType32);
        instanceInfo17.setActionType(actionType32);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager35 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo17);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus37 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("inesserver2.windows.cin.ufpe.br:80");
        instanceInfo17.setOverriddenStatus(instanceStatus37);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus40 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("/Status");
        instanceInfo17.setOverriddenStatus(instanceStatus40);
        java.lang.String str42 = instanceInfo17.getAppGroupName();
        int int43 = instanceInfo17.getPort();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager44 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo45 = applicationInfoManager44.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig47 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int48 = myDataCenterInstanceConfig47.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo49 = myDataCenterInstanceConfig47.getDataCenterInfo();
        java.lang.String str50 = myDataCenterInstanceConfig47.getNamespace();
        boolean boolean51 = myDataCenterInstanceConfig47.isNonSecurePortEnabled();
        applicationInfoManager44.config = myDataCenterInstanceConfig47;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig53 = applicationInfoManager44.config;
        com.netflix.appinfo.InstanceInfo instanceInfo54 = applicationInfoManager44.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo55 = applicationInfoManager44.instanceInfo;
        int int56 = instanceInfo55.getSecurePort();
        boolean boolean57 = instanceInfo55.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo58 = new com.netflix.appinfo.InstanceInfo(instanceInfo55);
        com.netflix.appinfo.InstanceInfo.ActionType actionType59 = com.netflix.appinfo.InstanceInfo.ActionType.MODIFIED;
        instanceInfo55.setActionType(actionType59);
        instanceInfo17.setActionType(actionType59);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/Status" + "'", str4, "/Status");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager6);
        org.junit.Assert.assertNotNull(instanceInfo7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig15);
        org.junit.Assert.assertNotNull(instanceInfo16);
        org.junit.Assert.assertNotNull(instanceInfo17);
        org.junit.Assert.assertTrue("'" + actionType18 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType18.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager20);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 30 + "'", int24 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig29);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertTrue("'" + actionType32 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType32.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + instanceStatus37 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus37.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertTrue("'" + instanceStatus40 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus40.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UNKNOWN" + "'", str42, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 80 + "'", int43 == 80);
        org.junit.Assert.assertNotNull(applicationInfoManager44);
        org.junit.Assert.assertNotNull(instanceInfo45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 30 + "'", int48 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig53);
        org.junit.Assert.assertNotNull(instanceInfo54);
        org.junit.Assert.assertNotNull(instanceInfo55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 443 + "'", int56 == 443);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + actionType59 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.MODIFIED + "'", actionType59.equals(com.netflix.appinfo.InstanceInfo.ActionType.MODIFIED));
    }

    @Test
    public void test01882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01882");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        java.lang.Boolean boolean12 = instanceInfo11.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus13 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo11.setOverriddenStatus(instanceStatus13);
        instanceInfo11.setLastDirtyTimestamp((java.lang.Long) (-1L));
        int int17 = instanceInfo11.getPort();
        int int18 = instanceInfo11.getSecurePort();
        instanceInfo11.setLastDirtyTimestamp((java.lang.Long) 1636106054253L);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertTrue("'" + instanceStatus13 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus13.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 80 + "'", int17 == 80);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 443 + "'", int18 == 443);
    }

    @Test
    public void test01883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01883");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder7.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder9.add("http://inesserver2.windows.cin.ufpe.br:80/Status", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder9.setCountryId(0);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test01884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01884");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str5 = myDataCenterInstanceConfig4.getIpAddress();
        java.lang.String str6 = myDataCenterInstanceConfig4.getASGName();
        boolean boolean7 = myDataCenterInstanceConfig4.getSecurePortEnabled();
        java.lang.String str8 = myDataCenterInstanceConfig4.getStatusPageUrl();
        applicationInfoManager0.config = myDataCenterInstanceConfig4;
        java.lang.String str10 = myDataCenterInstanceConfig4.getSecureVirtualHostName();
        java.lang.String str11 = myDataCenterInstanceConfig4.getASGName();
        java.lang.String str12 = myDataCenterInstanceConfig4.getStatusPageUrl();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertNotNull(instanceInfo2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "172.20.26.3" + "'", str5, "172.20.26.3");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test01885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01885");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str3 = myDataCenterInstanceConfig1.getNamespace();
        java.lang.String str4 = myDataCenterInstanceConfig1.getNamespace();
        java.lang.String str5 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        int int6 = myDataCenterInstanceConfig1.getLeaseExpirationDurationInSeconds();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/healthcheck" + "'", str5, "/healthcheck");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 90 + "'", int6 == 90);
    }

    @Test
    public void test01886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01886");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder12.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder12.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo instanceInfo20 = builder12.build();
        com.netflix.appinfo.InstanceInfo instanceInfo21 = builder12.getRawInstance();
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder12.setSecureVIPAddress("hi!");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertNotNull(builder23);
    }

    @Test
    public void test01887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01887");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isInstanceEnabledOnit();
        java.lang.String str4 = myDataCenterInstanceConfig1.getIpAddress();
        int int5 = myDataCenterInstanceConfig1.getSecurePort();
        int int6 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        int int7 = myDataCenterInstanceConfig1.getSecurePort();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "172.20.26.3" + "'", str4, "172.20.26.3");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 443 + "'", int5 == 443);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 30 + "'", int6 == 30);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 443 + "'", int7 == 443);
    }

    @Test
    public void test01888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01888");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig1 = applicationInfoManager0.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager2 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        int int6 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager2.config = myDataCenterInstanceConfig4;
        java.lang.String str8 = myDataCenterInstanceConfig4.getIpAddress();
        java.lang.String str9 = myDataCenterInstanceConfig4.getVirtualHostName();
        java.lang.String str11 = myDataCenterInstanceConfig4.getHostName(true);
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig4);
        com.netflix.appinfo.InstanceInfo instanceInfo13 = applicationInfoManager0.instanceInfo;
        java.lang.String str14 = instanceInfo13.getVIPAddress();
        com.netflix.appinfo.InstanceInfo instanceInfo15 = new com.netflix.appinfo.InstanceInfo(instanceInfo13);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager16 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo17 = applicationInfoManager16.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int20 = myDataCenterInstanceConfig19.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo21 = myDataCenterInstanceConfig19.getDataCenterInfo();
        java.lang.String str22 = myDataCenterInstanceConfig19.getNamespace();
        boolean boolean23 = myDataCenterInstanceConfig19.isNonSecurePortEnabled();
        applicationInfoManager16.config = myDataCenterInstanceConfig19;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig26 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int27 = myDataCenterInstanceConfig26.getLeaseRenewalIntervalInSeconds();
        int int28 = myDataCenterInstanceConfig26.getLeaseRenewalIntervalInSeconds();
        java.lang.String str29 = myDataCenterInstanceConfig26.getStatusPageUrlPath();
        applicationInfoManager16.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig26);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig32 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str33 = myDataCenterInstanceConfig32.getVirtualHostName();
        java.lang.String str34 = myDataCenterInstanceConfig32.getAppGroupName();
        applicationInfoManager16.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig32);
        com.netflix.appinfo.InstanceInfo.Builder builder36 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder36.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder36.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder42 = builder36.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig43 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo44 = myDataCenterInstanceConfig43.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder45 = builder42.setDataCenterInfo(dataCenterInfo44);
        com.netflix.appinfo.InstanceInfo.Builder builder47 = builder42.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder49 = builder42.setLastDirtyTimestamp((long) (short) 10);
        com.netflix.appinfo.InstanceInfo.Builder builder51 = builder49.setSecurePort((int) (short) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder53 = builder51.setSecureVIPAddressDeser("");
        boolean boolean54 = builder51.isInitialized();
        com.netflix.appinfo.InstanceInfo.Builder builder55 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder57 = builder55.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder59 = builder55.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder61 = builder55.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder63 = builder61.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder65 = builder63.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder67 = builder63.setHomePageUrlForDeser("");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager68 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo69 = applicationInfoManager68.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig71 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int72 = myDataCenterInstanceConfig71.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo73 = myDataCenterInstanceConfig71.getDataCenterInfo();
        java.lang.String str74 = myDataCenterInstanceConfig71.getNamespace();
        boolean boolean75 = myDataCenterInstanceConfig71.isNonSecurePortEnabled();
        applicationInfoManager68.config = myDataCenterInstanceConfig71;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig77 = applicationInfoManager68.config;
        com.netflix.appinfo.InstanceInfo instanceInfo78 = applicationInfoManager68.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo79 = applicationInfoManager68.instanceInfo;
        int int80 = instanceInfo79.getSecurePort();
        boolean boolean81 = instanceInfo79.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo82 = new com.netflix.appinfo.InstanceInfo(instanceInfo79);
        com.netflix.appinfo.InstanceInfo instanceInfo83 = new com.netflix.appinfo.InstanceInfo(instanceInfo79);
        java.lang.String str84 = instanceInfo79.getAppGroupName();
        int int85 = instanceInfo79.getCountryId();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus86 = instanceInfo79.getStatus();
        com.netflix.appinfo.InstanceInfo.Builder builder87 = builder67.setStatus(instanceStatus86);
        com.netflix.appinfo.InstanceInfo.Builder builder88 = builder51.setOverriddenStatus(instanceStatus86);
        applicationInfoManager16.setInstanceStatus(instanceStatus86);
        com.netflix.appinfo.InstanceInfo instanceInfo90 = applicationInfoManager16.instanceInfo;
        com.netflix.appinfo.LeaseInfo leaseInfo91 = instanceInfo90.getLeaseInfo();
        instanceInfo13.setLeaseInfo(leaseInfo91);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig1);
        org.junit.Assert.assertNotNull(applicationInfoManager2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 30 + "'", int6 == 30);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "172.20.26.3" + "'", str8, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str9, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str11, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(instanceInfo13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str14, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNotNull(applicationInfoManager16);
        org.junit.Assert.assertNotNull(instanceInfo17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 30 + "'", int20 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 30 + "'", int27 == 30);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 30 + "'", int28 == 30);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "/Status" + "'", str29, "/Status");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str33, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "unknown" + "'", str34, "unknown");
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(dataCenterInfo44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(applicationInfoManager68);
        org.junit.Assert.assertNotNull(instanceInfo69);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 30 + "'", int72 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig77);
        org.junit.Assert.assertNotNull(instanceInfo78);
        org.junit.Assert.assertNotNull(instanceInfo79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 443 + "'", int80 == 443);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "UNKNOWN" + "'", str84, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertTrue("'" + instanceStatus86 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING + "'", instanceStatus86.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING));
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(instanceInfo90);
        org.junit.Assert.assertNotNull(leaseInfo91);
    }

    @Test
    public void test01889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01889");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig1 = applicationInfoManager0.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager2 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        int int6 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager2.config = myDataCenterInstanceConfig4;
        java.lang.String str8 = myDataCenterInstanceConfig4.getIpAddress();
        java.lang.String str9 = myDataCenterInstanceConfig4.getVirtualHostName();
        java.lang.String str11 = myDataCenterInstanceConfig4.getHostName(true);
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig4);
        com.netflix.appinfo.InstanceInfo instanceInfo13 = applicationInfoManager0.instanceInfo;
        instanceInfo13.setIsCoordinatingDiscoveryServer();
        long long15 = instanceInfo13.getLastUpdatedTimestamp();
        com.netflix.appinfo.InstanceInfo instanceInfo16 = new com.netflix.appinfo.InstanceInfo(instanceInfo13);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig18 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int19 = myDataCenterInstanceConfig18.getLeaseRenewalIntervalInSeconds();
        int int20 = myDataCenterInstanceConfig18.getLeaseRenewalIntervalInSeconds();
        java.lang.String str21 = myDataCenterInstanceConfig18.getStatusPageUrlPath();
        boolean boolean22 = myDataCenterInstanceConfig18.getSecurePortEnabled();
        java.lang.String str23 = myDataCenterInstanceConfig18.getHealthCheckUrl();
        java.lang.String str24 = myDataCenterInstanceConfig18.getHomePageUrl();
        boolean boolean25 = instanceInfo13.equals((java.lang.Object) str24);
        java.lang.Class<?> wildcardClass26 = instanceInfo13.getClass();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig1);
        org.junit.Assert.assertNotNull(applicationInfoManager2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 30 + "'", int6 == 30);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "172.20.26.3" + "'", str8, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str9, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str11, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(instanceInfo13);
// flaky:         org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1636106060866L + "'", long15 == 1636106060866L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 30 + "'", int19 == 30);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 30 + "'", int20 == 30);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "/Status" + "'", str21, "/Status");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test01890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01890");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setNamespace("na");
        com.netflix.appinfo.InstanceInfo instanceInfo15 = builder6.build();
        int int16 = instanceInfo15.getSecurePort();
        instanceInfo15.setSID("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = instanceInfo15.getDataCenterInfo();
        long long20 = instanceInfo15.getLastUpdatedTimestamp();
        java.lang.String str21 = instanceInfo15.getAppGroupName();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 7002 + "'", int16 == 7002);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
// flaky:         org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1636106060924L + "'", long20 == 1636106060924L);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "/" + "'", str21, "/");
    }

    @Test
    public void test01891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01891");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig13 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int14 = myDataCenterInstanceConfig13.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo15 = myDataCenterInstanceConfig13.getDataCenterInfo();
        java.lang.String str17 = myDataCenterInstanceConfig13.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig13.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo18);
        java.lang.String str20 = myDataCenterInstanceConfig19.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = myDataCenterInstanceConfig19.getMetadataMap();
        applicationInfoManager0.registerAppMetadata(strMap21);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager23 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo24 = applicationInfoManager23.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig26 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int27 = myDataCenterInstanceConfig26.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo28 = myDataCenterInstanceConfig26.getDataCenterInfo();
        java.lang.String str29 = myDataCenterInstanceConfig26.getNamespace();
        boolean boolean30 = myDataCenterInstanceConfig26.isNonSecurePortEnabled();
        applicationInfoManager23.config = myDataCenterInstanceConfig26;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig32 = applicationInfoManager23.config;
        com.netflix.appinfo.InstanceInfo instanceInfo33 = applicationInfoManager23.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager23.instanceInfo;
        java.lang.Boolean boolean35 = instanceInfo34.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus36 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo34.setOverriddenStatus(instanceStatus36);
        applicationInfoManager0.setInstanceStatus(instanceStatus36);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo40 = null;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig41 = new com.netflix.appinfo.MyDataCenterInstanceConfig("", dataCenterInfo40);
        boolean boolean42 = myDataCenterInstanceConfig41.getSecurePortEnabled();
        java.lang.String str43 = myDataCenterInstanceConfig41.getHomePageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = myDataCenterInstanceConfig41.getMetadataMap();
        applicationInfoManager0.registerAppMetadata(strMap44);
        com.netflix.appinfo.InstanceInfo instanceInfo46 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig48 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/healthcheck");
        java.lang.String str49 = myDataCenterInstanceConfig48.getHomePageUrlPath();
        java.lang.String str50 = myDataCenterInstanceConfig48.getHomePageUrl();
        java.lang.String str51 = myDataCenterInstanceConfig48.getSecureHealthCheckUrl();
        int int52 = myDataCenterInstanceConfig48.getSecurePort();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo53 = myDataCenterInstanceConfig48.getDataCenterInfo();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig48);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 30 + "'", int14 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(applicationInfoManager23);
        org.junit.Assert.assertNotNull(instanceInfo24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 30 + "'", int27 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertEquals("'" + boolean35 + "' != '" + true + "'", boolean35, true);
        org.junit.Assert.assertTrue("'" + instanceStatus36 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus36.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(instanceInfo46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "/" + "'", str49, "/");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 443 + "'", int52 == 443);
        org.junit.Assert.assertNotNull(dataCenterInfo53);
    }

    @Test
    public void test01892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01892");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig6 = applicationInfoManager0.config;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig7 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo8 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder9.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder9.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder9.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder15.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder17.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder17.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder17.setCountryId((-1));
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager24 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager24.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig27 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int28 = myDataCenterInstanceConfig27.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig27.getDataCenterInfo();
        java.lang.String str30 = myDataCenterInstanceConfig27.getNamespace();
        boolean boolean31 = myDataCenterInstanceConfig27.isNonSecurePortEnabled();
        applicationInfoManager24.config = myDataCenterInstanceConfig27;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig33 = applicationInfoManager24.config;
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager24.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager24.instanceInfo;
        java.lang.Boolean boolean36 = instanceInfo35.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus37 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo35.setOverriddenStatus(instanceStatus37);
        int int39 = instanceInfo35.getSecurePort();
        java.lang.String str40 = instanceInfo35.getHostName();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = instanceInfo35.getMetadata();
        instanceInfo35.setIsDirty(false);
        com.netflix.appinfo.LeaseInfo leaseInfo44 = instanceInfo35.getLeaseInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder45 = builder17.setLeaseInfo(leaseInfo44);
        instanceInfo8.setLeaseInfo(leaseInfo44);
        java.lang.Boolean boolean47 = instanceInfo8.isCoordinatingDiscoveryServer();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig6);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig7);
        org.junit.Assert.assertNotNull(instanceInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(applicationInfoManager24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 30 + "'", int28 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + false + "'", boolean36, false);
        org.junit.Assert.assertTrue("'" + instanceStatus37 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus37.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 443 + "'", int39 == 443);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str40, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(leaseInfo44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertEquals("'" + boolean47 + "' != '" + false + "'", boolean47, false);
    }

    @Test
    public void test01893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01893");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder18.add("na", "/");
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder18.setASGName("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder26.setHealthCheckUrls("HTTP://HI!:80/STATUS", "/", "/HEALTHCHECK");
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder26.setHomePageUrlForDeser("UNKNOWN");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
    }

    @Test
    public void test01894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01894");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig12 = applicationInfoManager0.config;
        applicationInfoManager0.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig16 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int17 = myDataCenterInstanceConfig16.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig16.getDataCenterInfo();
        java.lang.String str20 = myDataCenterInstanceConfig16.getHostName(true);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = myDataCenterInstanceConfig16.getMetadataMap();
        applicationInfoManager0.registerAppMetadata(strMap21);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager23 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo24 = applicationInfoManager23.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig26 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int27 = myDataCenterInstanceConfig26.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo28 = myDataCenterInstanceConfig26.getDataCenterInfo();
        java.lang.String str29 = myDataCenterInstanceConfig26.getNamespace();
        boolean boolean30 = myDataCenterInstanceConfig26.isNonSecurePortEnabled();
        applicationInfoManager23.config = myDataCenterInstanceConfig26;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig32 = applicationInfoManager23.config;
        com.netflix.appinfo.InstanceInfo instanceInfo33 = applicationInfoManager23.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager23.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType35 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo34.setActionType(actionType35);
        com.netflix.appinfo.LeaseInfo leaseInfo37 = null;
        instanceInfo34.setLeaseInfo(leaseInfo37);
        int int39 = instanceInfo34.getSecurePort();
        instanceInfo34.setIsCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus41 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        instanceInfo34.setStatusWithoutDirty(instanceStatus41);
        applicationInfoManager0.setInstanceStatus(instanceStatus41);
        com.netflix.appinfo.InstanceInfo.Builder builder45 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder47 = builder45.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder49 = builder45.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder51 = builder45.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig52 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo53 = myDataCenterInstanceConfig52.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder54 = builder51.setDataCenterInfo(dataCenterInfo53);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig55 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo56 = myDataCenterInstanceConfig55.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder57 = builder51.setDataCenterInfo(dataCenterInfo56);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig58 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo56);
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig58);
        java.lang.String str60 = myDataCenterInstanceConfig58.getSecureHealthCheckUrl();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig12);
        org.junit.Assert.assertNotNull(instanceInfo14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str20, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(applicationInfoManager23);
        org.junit.Assert.assertNotNull(instanceInfo24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 30 + "'", int27 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertTrue("'" + actionType35 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType35.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 443 + "'", int39 == 443);
        org.junit.Assert.assertTrue("'" + instanceStatus41 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus41.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(dataCenterInfo53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(dataCenterInfo56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(str60);
    }

    @Test
    public void test01895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01895");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo4 = myDataCenterInstanceConfig2.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig5 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo4);
        java.lang.String str6 = myDataCenterInstanceConfig5.getAppname();
        java.lang.String str7 = myDataCenterInstanceConfig5.getNamespace();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig8 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager9 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager9.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int13 = myDataCenterInstanceConfig12.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo14 = myDataCenterInstanceConfig12.getDataCenterInfo();
        java.lang.String str15 = myDataCenterInstanceConfig12.getNamespace();
        boolean boolean16 = myDataCenterInstanceConfig12.isNonSecurePortEnabled();
        applicationInfoManager9.config = myDataCenterInstanceConfig12;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig18 = applicationInfoManager9.config;
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager9.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager9.instanceInfo;
        int int21 = instanceInfo20.getSecurePort();
        boolean boolean22 = instanceInfo20.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager23 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig8, instanceInfo20);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager24 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig5, instanceInfo20);
        java.lang.String str25 = instanceInfo20.getHomePageUrl();
        long long26 = instanceInfo20.getLastUpdatedTimestamp();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus27 = null;
        instanceInfo20.setOverriddenStatus(instanceStatus27);
        instanceInfo20.setLastUpdatedTimestamp();
        boolean boolean30 = instanceInfo20.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager31 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager31.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig34 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int35 = myDataCenterInstanceConfig34.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo36 = myDataCenterInstanceConfig34.getDataCenterInfo();
        java.lang.String str37 = myDataCenterInstanceConfig34.getNamespace();
        boolean boolean38 = myDataCenterInstanceConfig34.isNonSecurePortEnabled();
        applicationInfoManager31.config = myDataCenterInstanceConfig34;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig41 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int42 = myDataCenterInstanceConfig41.getLeaseRenewalIntervalInSeconds();
        int int43 = myDataCenterInstanceConfig41.getLeaseRenewalIntervalInSeconds();
        java.lang.String str44 = myDataCenterInstanceConfig41.getStatusPageUrlPath();
        applicationInfoManager31.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig41);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig47 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int48 = myDataCenterInstanceConfig47.getLeaseRenewalIntervalInSeconds();
        int int49 = myDataCenterInstanceConfig47.getLeaseRenewalIntervalInSeconds();
        java.lang.String str50 = myDataCenterInstanceConfig47.getStatusPageUrlPath();
        boolean boolean51 = myDataCenterInstanceConfig47.getSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager52 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo53 = applicationInfoManager52.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig55 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int56 = myDataCenterInstanceConfig55.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo57 = myDataCenterInstanceConfig55.getDataCenterInfo();
        java.lang.String str58 = myDataCenterInstanceConfig55.getNamespace();
        boolean boolean59 = myDataCenterInstanceConfig55.isNonSecurePortEnabled();
        applicationInfoManager52.config = myDataCenterInstanceConfig55;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig61 = applicationInfoManager52.config;
        com.netflix.appinfo.InstanceInfo instanceInfo62 = applicationInfoManager52.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo63 = applicationInfoManager52.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType64 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo63.setActionType(actionType64);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager66 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo67 = applicationInfoManager66.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig69 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int70 = myDataCenterInstanceConfig69.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo71 = myDataCenterInstanceConfig69.getDataCenterInfo();
        java.lang.String str72 = myDataCenterInstanceConfig69.getNamespace();
        boolean boolean73 = myDataCenterInstanceConfig69.isNonSecurePortEnabled();
        applicationInfoManager66.config = myDataCenterInstanceConfig69;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig75 = applicationInfoManager66.config;
        com.netflix.appinfo.InstanceInfo instanceInfo76 = applicationInfoManager66.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo77 = applicationInfoManager66.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType78 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo77.setActionType(actionType78);
        instanceInfo63.setActionType(actionType78);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager81 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig47, instanceInfo63);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus83 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("inesserver2.windows.cin.ufpe.br:80");
        instanceInfo63.setOverriddenStatus(instanceStatus83);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus86 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("/Status");
        instanceInfo63.setOverriddenStatus(instanceStatus86);
        applicationInfoManager31.setInstanceStatus(instanceStatus86);
        applicationInfoManager31.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.InstanceInfo instanceInfo90 = applicationInfoManager31.instanceInfo;
        java.lang.String str91 = instanceInfo90.getHomePageUrl();
        com.netflix.appinfo.LeaseInfo leaseInfo92 = instanceInfo90.getLeaseInfo();
        instanceInfo20.setLeaseInfo(leaseInfo92);
        instanceInfo20.setSID("http://inesserver2.windows.cin.ufpe.br:10/Status");
        java.lang.String str96 = instanceInfo20.getVIPAddress();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "unknown" + "'", str6, "unknown");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/Status" + "'", str7, "/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 30 + "'", int13 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 443 + "'", int21 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str25, "http://inesserver2.windows.cin.ufpe.br:80/");
// flaky:         org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1636106061040L + "'", long26 == 1636106061040L);
// flaky:         org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(applicationInfoManager31);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 30 + "'", int35 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 30 + "'", int43 == 30);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "/Status" + "'", str44, "/Status");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 30 + "'", int48 == 30);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 30 + "'", int49 == 30);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "/Status" + "'", str50, "/Status");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager52);
        org.junit.Assert.assertNotNull(instanceInfo53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 30 + "'", int56 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig61);
        org.junit.Assert.assertNotNull(instanceInfo62);
        org.junit.Assert.assertNotNull(instanceInfo63);
        org.junit.Assert.assertTrue("'" + actionType64 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType64.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager66);
        org.junit.Assert.assertNotNull(instanceInfo67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 30 + "'", int70 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig75);
        org.junit.Assert.assertNotNull(instanceInfo76);
        org.junit.Assert.assertNotNull(instanceInfo77);
        org.junit.Assert.assertTrue("'" + actionType78 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType78.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + instanceStatus83 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus83.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertTrue("'" + instanceStatus86 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus86.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(instanceInfo90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str91, "http://inesserver2.windows.cin.ufpe.br:80/");
        org.junit.Assert.assertNotNull(leaseInfo92);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str96, "inesserver2.windows.cin.ufpe.br:80");
    }

    @Test
    public void test01896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01896");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        java.lang.Boolean boolean12 = instanceInfo11.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus13 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo11.setOverriddenStatus(instanceStatus13);
        int int15 = instanceInfo11.getSecurePort();
        java.lang.String str16 = instanceInfo11.getHostName();
        java.lang.String str17 = instanceInfo11.getAppGroupName();
        java.lang.String str18 = instanceInfo11.getAppName();
        java.lang.String str19 = instanceInfo11.getAppGroupName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertTrue("'" + instanceStatus13 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus13.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 443 + "'", int15 == 443);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str16, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UNKNOWN" + "'", str17, "UNKNOWN");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UNKNOWN" + "'", str18, "UNKNOWN");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UNKNOWN" + "'", str19, "UNKNOWN");
    }

    @Test
    public void test01897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01897");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setNamespace("na");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder6.add("unknown", "UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder6.setSecureVIPAddressDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder6.setHostName("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setAppGroupName("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setHomePageUrlForDeser("http://default:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder25.setASGName("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder27.setNamespace("DEFAULT");
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder29.setSecureVIPAddress("http://hi!:35/Status");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
    }

    @Test
    public void test01898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01898");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager1 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig4.getDataCenterInfo();
        java.lang.String str7 = myDataCenterInstanceConfig4.getNamespace();
        boolean boolean8 = myDataCenterInstanceConfig4.isNonSecurePortEnabled();
        applicationInfoManager1.config = myDataCenterInstanceConfig4;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig10 = applicationInfoManager1.config;
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager1.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType13 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo12.setActionType(actionType13);
        com.netflix.appinfo.LeaseInfo leaseInfo15 = null;
        instanceInfo12.setLeaseInfo(leaseInfo15);
        java.util.Set<java.lang.String> strSet17 = instanceInfo12.getHealthCheckUrls();
        java.lang.String str18 = instanceInfo12.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder19 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo12);
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder19.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder19.setVIPAddressDeser("hi!");
        com.netflix.appinfo.LeaseInfo leaseInfo25 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder19.setLeaseInfo(leaseInfo25);
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder26.setHomePageUrlForDeser("/");
        com.netflix.appinfo.InstanceInfo.Builder builder29 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder29.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder29.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder35 = builder29.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig36 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo37 = myDataCenterInstanceConfig36.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder35.setDataCenterInfo(dataCenterInfo37);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig39 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo40 = myDataCenterInstanceConfig39.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder41 = builder35.setDataCenterInfo(dataCenterInfo40);
        com.netflix.appinfo.InstanceInfo.Builder builder43 = builder35.setSecureVIPAddressDeser("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo44 = builder35.build();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager45 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo46 = applicationInfoManager45.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig48 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int49 = myDataCenterInstanceConfig48.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo50 = myDataCenterInstanceConfig48.getDataCenterInfo();
        java.lang.String str51 = myDataCenterInstanceConfig48.getNamespace();
        boolean boolean52 = myDataCenterInstanceConfig48.isNonSecurePortEnabled();
        applicationInfoManager45.config = myDataCenterInstanceConfig48;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig54 = applicationInfoManager45.config;
        com.netflix.appinfo.InstanceInfo instanceInfo55 = applicationInfoManager45.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo56 = applicationInfoManager45.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType57 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo56.setActionType(actionType57);
        com.netflix.appinfo.LeaseInfo leaseInfo59 = null;
        instanceInfo56.setLeaseInfo(leaseInfo59);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager61 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo62 = applicationInfoManager61.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig64 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int65 = myDataCenterInstanceConfig64.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo66 = myDataCenterInstanceConfig64.getDataCenterInfo();
        java.lang.String str67 = myDataCenterInstanceConfig64.getNamespace();
        boolean boolean68 = myDataCenterInstanceConfig64.isNonSecurePortEnabled();
        applicationInfoManager61.config = myDataCenterInstanceConfig64;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig70 = applicationInfoManager61.config;
        com.netflix.appinfo.InstanceInfo instanceInfo71 = applicationInfoManager61.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo72 = applicationInfoManager61.instanceInfo;
        int int73 = instanceInfo72.getSecurePort();
        boolean boolean74 = instanceInfo72.isDirty();
        java.lang.String str75 = instanceInfo72.getHostName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus76 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        instanceInfo72.setStatus(instanceStatus76);
        com.netflix.appinfo.InstanceInfo.PortType portType78 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean79 = instanceInfo72.isPortEnabled(portType78);
        boolean boolean80 = instanceInfo56.isPortEnabled(portType78);
        com.netflix.appinfo.InstanceInfo.Builder builder82 = builder35.enablePort(portType78, false);
        com.netflix.appinfo.InstanceInfo.Builder builder84 = builder26.enablePort(portType78, false);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig88 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int89 = myDataCenterInstanceConfig88.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo90 = myDataCenterInstanceConfig88.getDataCenterInfo();
        java.lang.String str92 = myDataCenterInstanceConfig88.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo93 = myDataCenterInstanceConfig88.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig94 = new com.netflix.appinfo.MyDataCenterInstanceConfig("UNKNOWN", dataCenterInfo93);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig95 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo93);
        com.netflix.appinfo.InstanceInfo.Builder builder96 = builder84.setDataCenterInfo(dataCenterInfo93);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig97 = new com.netflix.appinfo.MyDataCenterInstanceConfig("HI!", dataCenterInfo93);
        java.lang.String str98 = myDataCenterInstanceConfig97.getAppGroupName();
        org.junit.Assert.assertNotNull(applicationInfoManager1);
        org.junit.Assert.assertNotNull(instanceInfo2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertTrue("'" + actionType13 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType13.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str18, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(dataCenterInfo37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(dataCenterInfo40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(instanceInfo44);
        org.junit.Assert.assertNotNull(applicationInfoManager45);
        org.junit.Assert.assertNotNull(instanceInfo46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 30 + "'", int49 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig54);
        org.junit.Assert.assertNotNull(instanceInfo55);
        org.junit.Assert.assertNotNull(instanceInfo56);
        org.junit.Assert.assertTrue("'" + actionType57 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType57.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager61);
        org.junit.Assert.assertNotNull(instanceInfo62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 30 + "'", int65 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig70);
        org.junit.Assert.assertNotNull(instanceInfo71);
        org.junit.Assert.assertNotNull(instanceInfo72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 443 + "'", int73 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str75, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + instanceStatus76 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus76.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertTrue("'" + portType78 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType78.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 30 + "'", int89 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo90);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str92, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo93);
        org.junit.Assert.assertNotNull(builder96);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "unknown" + "'", str98, "unknown");
    }

    @Test
    public void test01899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01899");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder12.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder12.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder12.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder21.add("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS", "http://default:80/Status");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager25 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager25;
        applicationInfoManager25.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager25.getInfo();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager29 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager29.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig32 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int33 = myDataCenterInstanceConfig32.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo34 = myDataCenterInstanceConfig32.getDataCenterInfo();
        java.lang.String str35 = myDataCenterInstanceConfig32.getNamespace();
        boolean boolean36 = myDataCenterInstanceConfig32.isNonSecurePortEnabled();
        applicationInfoManager29.config = myDataCenterInstanceConfig32;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig38 = applicationInfoManager29.config;
        com.netflix.appinfo.InstanceInfo instanceInfo39 = applicationInfoManager29.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo40 = applicationInfoManager29.instanceInfo;
        int int41 = instanceInfo40.getSecurePort();
        instanceInfo40.setIsCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus43 = com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN;
        instanceInfo40.setOverriddenStatus(instanceStatus43);
        instanceInfo28.setStatusWithoutDirty(instanceStatus43);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus46 = instanceInfo28.getStatus();
        com.netflix.appinfo.InstanceInfo.Builder builder47 = builder21.setStatus(instanceStatus46);
        com.netflix.appinfo.InstanceInfo.Builder builder49 = builder47.setVIPAddressDeser("inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(applicationInfoManager25);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertNotNull(applicationInfoManager29);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 30 + "'", int33 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig38);
        org.junit.Assert.assertNotNull(instanceInfo39);
        org.junit.Assert.assertNotNull(instanceInfo40);
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + 7002 + "'", int41 == 7002);
        org.junit.Assert.assertTrue("'" + instanceStatus43 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus43.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertTrue("'" + instanceStatus46 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus46.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
    }

    @Test
    public void test01900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01900");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.lang.String str16 = instanceInfo11.getSID();
        instanceInfo11.setSID("unknown");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager19 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager19.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig22 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int23 = myDataCenterInstanceConfig22.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo24 = myDataCenterInstanceConfig22.getDataCenterInfo();
        java.lang.String str25 = myDataCenterInstanceConfig22.getNamespace();
        boolean boolean26 = myDataCenterInstanceConfig22.isNonSecurePortEnabled();
        applicationInfoManager19.config = myDataCenterInstanceConfig22;
        int int28 = myDataCenterInstanceConfig22.getLeaseExpirationDurationInSeconds();
        java.lang.String str29 = myDataCenterInstanceConfig22.getHomePageUrl();
        java.lang.String str30 = myDataCenterInstanceConfig22.getVirtualHostName();
        boolean boolean31 = instanceInfo11.equals((java.lang.Object) str30);
        int int32 = instanceInfo11.getPort();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "na" + "'", str16, "na");
        org.junit.Assert.assertNotNull(applicationInfoManager19);
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 30 + "'", int23 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 90 + "'", int28 == 90);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str30, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 80 + "'", int32 == 80);
    }

    @Test
    public void test01901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01901");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        boolean boolean13 = instanceInfo11.isDirty();
        java.lang.String str14 = instanceInfo11.getHostName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType15 = instanceInfo11.getActionType();
        boolean boolean16 = instanceInfo11.isDirty();
        boolean boolean17 = instanceInfo11.isDirty();
        int int18 = instanceInfo11.getPort();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus20 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("/Status");
        instanceInfo11.setStatusWithoutDirty(instanceStatus20);
        java.lang.String str22 = instanceInfo11.getAppName();
        java.lang.String str23 = instanceInfo11.getAppGroupName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str14, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + actionType15 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType15.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 80 + "'", int18 == 80);
        org.junit.Assert.assertTrue("'" + instanceStatus20 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus20.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UNKNOWN" + "'", str22, "UNKNOWN");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UNKNOWN" + "'", str23, "UNKNOWN");
    }

    @Test
    public void test01902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01902");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder6.setLastDirtyTimestamp((long) (short) 10);
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder6.setSecureVIPAddressDeser("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder15.setHealthCheckUrlsForDeser("/healthcheck", "/");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder19.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder19.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder19.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig26 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo27 = myDataCenterInstanceConfig26.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder25.setDataCenterInfo(dataCenterInfo27);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig29 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo30 = myDataCenterInstanceConfig29.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder25.setDataCenterInfo(dataCenterInfo30);
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder25.setNamespace("na");
        com.netflix.appinfo.InstanceInfo instanceInfo34 = builder25.build();
        java.lang.String str35 = instanceInfo34.getVersion();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager36 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo37 = applicationInfoManager36.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig39 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int40 = myDataCenterInstanceConfig39.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo41 = myDataCenterInstanceConfig39.getDataCenterInfo();
        java.lang.String str42 = myDataCenterInstanceConfig39.getNamespace();
        boolean boolean43 = myDataCenterInstanceConfig39.isNonSecurePortEnabled();
        applicationInfoManager36.config = myDataCenterInstanceConfig39;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig45 = applicationInfoManager36.config;
        com.netflix.appinfo.InstanceInfo instanceInfo46 = applicationInfoManager36.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo47 = applicationInfoManager36.instanceInfo;
        int int48 = instanceInfo47.getSecurePort();
        boolean boolean49 = instanceInfo47.isDirty();
        boolean boolean50 = instanceInfo47.isDirty();
        java.lang.String str51 = instanceInfo47.getVersion();
        instanceInfo47.setIsCoordinatingDiscoveryServer();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager53 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo54 = applicationInfoManager53.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig56 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int57 = myDataCenterInstanceConfig56.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo58 = myDataCenterInstanceConfig56.getDataCenterInfo();
        java.lang.String str59 = myDataCenterInstanceConfig56.getNamespace();
        boolean boolean60 = myDataCenterInstanceConfig56.isNonSecurePortEnabled();
        applicationInfoManager53.config = myDataCenterInstanceConfig56;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig62 = applicationInfoManager53.config;
        com.netflix.appinfo.InstanceInfo instanceInfo63 = applicationInfoManager53.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo64 = applicationInfoManager53.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType65 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo64.setActionType(actionType65);
        com.netflix.appinfo.LeaseInfo leaseInfo67 = null;
        instanceInfo64.setLeaseInfo(leaseInfo67);
        java.util.Set<java.lang.String> strSet69 = instanceInfo64.getHealthCheckUrls();
        java.lang.String str70 = instanceInfo64.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder71 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo64);
        com.netflix.appinfo.InstanceInfo.Builder builder73 = builder71.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.PortType portType74 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder76 = builder71.enablePort(portType74, true);
        boolean boolean77 = instanceInfo47.isPortEnabled(portType74);
        boolean boolean78 = instanceInfo34.isPortEnabled(portType74);
        com.netflix.appinfo.InstanceInfo.Builder builder80 = builder18.enablePort(portType74, false);
        com.netflix.appinfo.InstanceInfo.Builder builder82 = builder80.setSID("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(dataCenterInfo27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(dataCenterInfo30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "unknown" + "'", str35, "unknown");
        org.junit.Assert.assertNotNull(applicationInfoManager36);
        org.junit.Assert.assertNotNull(instanceInfo37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 30 + "'", int40 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig45);
        org.junit.Assert.assertNotNull(instanceInfo46);
        org.junit.Assert.assertNotNull(instanceInfo47);
// flaky:         org.junit.Assert.assertTrue("'" + int48 + "' != '" + 7002 + "'", int48 == 7002);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "unknown" + "'", str51, "unknown");
        org.junit.Assert.assertNotNull(applicationInfoManager53);
        org.junit.Assert.assertNotNull(instanceInfo54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 30 + "'", int57 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig62);
        org.junit.Assert.assertNotNull(instanceInfo63);
        org.junit.Assert.assertNotNull(instanceInfo64);
        org.junit.Assert.assertTrue("'" + actionType65 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType65.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet69);
// flaky:         org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertTrue("'" + portType74 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType74.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder82);
    }

    @Test
    public void test01903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01903");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        java.lang.String str4 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = myDataCenterInstanceConfig1.getMetadataMap();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/healthcheck" + "'", str4, "/healthcheck");
        org.junit.Assert.assertNotNull(strMap5);
    }

    @Test
    public void test01904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01904");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder18.add("na", "/");
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder18.add("/Status", "");
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder18.setHealthCheckUrls("inesserver2.windows.cin.ufpe.br", "", "172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder18.setHealthCheckUrlsForDeser("/Status", "");
        com.netflix.appinfo.InstanceInfo.Builder builder37 = builder18.setStatusPageUrl("inesserver2.windows.cin.ufpe.br", "");
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder37.setHomePageUrl("http://inesserver2.windows.cin.ufpe.br:80/", "http://default:80/Status");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig42 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        java.lang.String str43 = myDataCenterInstanceConfig42.getASGName();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = myDataCenterInstanceConfig42.getMetadataMap();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo45 = myDataCenterInstanceConfig42.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig46 = new com.netflix.appinfo.MyDataCenterInstanceConfig("na", dataCenterInfo45);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = myDataCenterInstanceConfig46.getMetadataMap();
        com.netflix.appinfo.InstanceInfo.Builder builder48 = builder40.setMetadata(strMap47);
        com.netflix.appinfo.InstanceInfo.Builder builder50 = builder48.setSecurePort((int) (short) -1);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(dataCenterInfo45);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
    }

    @Test
    public void test01905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01905");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig1 = applicationInfoManager0.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager2 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        int int6 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager2.config = myDataCenterInstanceConfig4;
        java.lang.String str8 = myDataCenterInstanceConfig4.getIpAddress();
        java.lang.String str9 = myDataCenterInstanceConfig4.getVirtualHostName();
        java.lang.String str11 = myDataCenterInstanceConfig4.getHostName(true);
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig4);
        com.netflix.appinfo.InstanceInfo instanceInfo13 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder15 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo14);
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder15.setASGName("DEFAULT");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder17.setLastDirtyTimestamp(1636106005466L);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder19.setCountryId(80);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig1);
        org.junit.Assert.assertNotNull(applicationInfoManager2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 30 + "'", int6 == 30);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "172.20.26.3" + "'", str8, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str9, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str11, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(instanceInfo13);
        org.junit.Assert.assertNotNull(instanceInfo14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
    }

    @Test
    public void test01906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01906");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        java.lang.String str4 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        com.netflix.appinfo.InstanceInfo instanceInfo5 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager6 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo5);
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig7 = applicationInfoManager6.config;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        int int11 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        java.lang.String str12 = myDataCenterInstanceConfig9.getStatusPageUrlPath();
        applicationInfoManager6.config = myDataCenterInstanceConfig9;
        java.lang.String str14 = myDataCenterInstanceConfig9.getIpAddress();
        java.lang.String str15 = myDataCenterInstanceConfig9.getStatusPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = myDataCenterInstanceConfig9.getMetadataMap();
        int int17 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/healthcheck" + "'", str4, "/healthcheck");
        org.junit.Assert.assertNotNull(eurekaInstanceConfig7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/Status" + "'", str12, "/Status");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "172.20.26.3" + "'", str14, "172.20.26.3");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
    }

    @Test
    public void test01907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01907");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        java.lang.String str6 = myDataCenterInstanceConfig2.getHealthCheckUrlPath();
        java.lang.String str7 = myDataCenterInstanceConfig2.getHomePageUrl();
        int int8 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int9 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "/healthcheck" + "'", str6, "/healthcheck");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 30 + "'", int9 == 30);
    }

    @Test
    public void test01908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01908");
        com.netflix.appinfo.InstanceInfo instanceInfo0 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder1 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo0);
        com.netflix.appinfo.InstanceInfo.Builder builder3 = builder1.setNamespace("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder1.setNamespace("/");
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder7 = builder1.setSID("default");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
    }

    @Test
    public void test01909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01909");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = 0; // flaky: instanceInfo11.getSecurePort();
        com.netflix.appinfo.InstanceInfo.PortType portType13 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean14 = false; // flaky: instanceInfo11.isPortEnabled(portType13);
        java.lang.String str15 = null; // flaky: instanceInfo11.getVIPAddress();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager16 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo17 = applicationInfoManager16.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int20 = myDataCenterInstanceConfig19.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo21 = myDataCenterInstanceConfig19.getDataCenterInfo();
        java.lang.String str22 = myDataCenterInstanceConfig19.getNamespace();
        boolean boolean23 = myDataCenterInstanceConfig19.isNonSecurePortEnabled();
        applicationInfoManager16.config = myDataCenterInstanceConfig19;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig25 = applicationInfoManager16.config;
        com.netflix.appinfo.InstanceInfo instanceInfo26 = applicationInfoManager16.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager16.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType28 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
// flaky:         instanceInfo27.setActionType(actionType28);
// flaky:         instanceInfo11.setActionType(actionType28);
        java.lang.String str31 = null; // flaky: instanceInfo11.getSecureVipAddress();
        java.lang.String str32 = null; // flaky: instanceInfo11.getVersion();
        java.lang.String str33 = null; // flaky: instanceInfo11.getStatusPageUrl();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo10);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertTrue("'" + portType13 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType13.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str15, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNotNull(applicationInfoManager16);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 30 + "'", int20 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig25);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo26);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertTrue("'" + actionType28 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType28.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNull(str31);
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "unknown" + "'", str32, "unknown");
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str33, "http://inesserver2.windows.cin.ufpe.br:80/Status");
    }

    @Test
    public void test01910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01910");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        int int6 = myDataCenterInstanceConfig3.getLeaseExpirationDurationInSeconds();
        java.lang.String str7 = myDataCenterInstanceConfig3.getHomePageUrlPath();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = myDataCenterInstanceConfig3.getMetadataMap();
        int int10 = myDataCenterInstanceConfig3.getSecurePort();
        java.lang.String str11 = myDataCenterInstanceConfig3.getNamespace();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 90 + "'", int6 == 90);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/" + "'", str7, "/");
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 443 + "'", int10 == 443);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test01911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01911");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig1 = applicationInfoManager0.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager2 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        int int6 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager2.config = myDataCenterInstanceConfig4;
        java.lang.String str8 = myDataCenterInstanceConfig4.getIpAddress();
        java.lang.String str9 = myDataCenterInstanceConfig4.getVirtualHostName();
        java.lang.String str11 = myDataCenterInstanceConfig4.getHostName(true);
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig4);
        com.netflix.appinfo.InstanceInfo instanceInfo13 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager14 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo15 = applicationInfoManager14.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig17 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int18 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig17.getDataCenterInfo();
        java.lang.String str20 = myDataCenterInstanceConfig17.getNamespace();
        boolean boolean21 = myDataCenterInstanceConfig17.isNonSecurePortEnabled();
        applicationInfoManager14.config = myDataCenterInstanceConfig17;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig23 = applicationInfoManager14.config;
        com.netflix.appinfo.InstanceInfo instanceInfo24 = applicationInfoManager14.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager14.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType26 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo25.setActionType(actionType26);
        com.netflix.appinfo.LeaseInfo leaseInfo28 = null;
        instanceInfo25.setLeaseInfo(leaseInfo28);
        java.util.Set<java.lang.String> strSet30 = instanceInfo25.getHealthCheckUrls();
        java.lang.String str31 = instanceInfo25.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder32 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo25);
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder32.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder37 = builder32.setHealthCheckUrlsForDeser("", "hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder39 = builder37.setLastDirtyTimestamp((long) 443);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus40 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        com.netflix.appinfo.InstanceInfo.Builder builder41 = builder37.setStatus(instanceStatus40);
        applicationInfoManager0.setInstanceStatus(instanceStatus40);
        applicationInfoManager0.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager0;
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig1);
        org.junit.Assert.assertNotNull(applicationInfoManager2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 30 + "'", int6 == 30);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "172.20.26.3" + "'", str8, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str9, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str11, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(instanceInfo13);
        org.junit.Assert.assertNotNull(applicationInfoManager14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 30 + "'", int18 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig23);
        org.junit.Assert.assertNotNull(instanceInfo24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertTrue("'" + actionType26 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType26.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str31, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + instanceStatus40 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus40.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(builder41);
    }

    @Test
    public void test01912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01912");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo instanceInfo5 = builder0.getRawInstance();
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder0.setNamespace("UNKNOWN");
        com.netflix.appinfo.InstanceInfo instanceInfo8 = builder7.getRawInstance();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager9 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager9.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int13 = myDataCenterInstanceConfig12.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo14 = myDataCenterInstanceConfig12.getDataCenterInfo();
        java.lang.String str15 = myDataCenterInstanceConfig12.getNamespace();
        boolean boolean16 = myDataCenterInstanceConfig12.isNonSecurePortEnabled();
        applicationInfoManager9.config = myDataCenterInstanceConfig12;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int20 = myDataCenterInstanceConfig19.getLeaseRenewalIntervalInSeconds();
        int int21 = myDataCenterInstanceConfig19.getLeaseRenewalIntervalInSeconds();
        java.lang.String str22 = myDataCenterInstanceConfig19.getStatusPageUrlPath();
        applicationInfoManager9.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig19);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig25 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str26 = myDataCenterInstanceConfig25.getVirtualHostName();
        java.lang.String str27 = myDataCenterInstanceConfig25.getAppGroupName();
        applicationInfoManager9.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig25);
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager9.getInfo();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus30 = instanceInfo29.getStatus();
        instanceInfo8.setOverriddenStatus(instanceStatus30);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(instanceInfo5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(instanceInfo8);
        org.junit.Assert.assertNotNull(applicationInfoManager9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 30 + "'", int13 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 30 + "'", int20 == 30);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 30 + "'", int21 == 30);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "/Status" + "'", str22, "/Status");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str26, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "unknown" + "'", str27, "unknown");
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertTrue("'" + instanceStatus30 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING + "'", instanceStatus30.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING));
    }

    @Test
    public void test01913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01913");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig13 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int14 = myDataCenterInstanceConfig13.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo15 = myDataCenterInstanceConfig13.getDataCenterInfo();
        java.lang.String str17 = myDataCenterInstanceConfig13.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig13.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo18);
        java.lang.String str20 = myDataCenterInstanceConfig19.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = myDataCenterInstanceConfig19.getMetadataMap();
        applicationInfoManager0.registerAppMetadata(strMap21);
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo24 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager0.instanceInfo;
        instanceInfo25.setSID("http://hi!:80/Status");
        java.lang.String str28 = instanceInfo25.getIPAddr();
        java.lang.String str29 = instanceInfo25.getAppGroupName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 30 + "'", int14 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(instanceInfo23);
        org.junit.Assert.assertNotNull(instanceInfo24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "172.20.26.3" + "'", str28, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UNKNOWN" + "'", str29, "UNKNOWN");
    }

    @Test
    public void test01914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01914");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        java.lang.String str4 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        com.netflix.appinfo.InstanceInfo instanceInfo5 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager6 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo5);
        com.netflix.appinfo.InstanceInfo instanceInfo7 = applicationInfoManager6.instanceInfo;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/healthcheck" + "'", str4, "/healthcheck");
        org.junit.Assert.assertNull(instanceInfo7);
    }

    @Test
    public void test01915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01915");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setSecureVIPAddressDeser("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo15 = builder6.build();
        instanceInfo15.setSID("na");
        java.lang.String str18 = instanceInfo15.getAppGroupName();
        java.lang.String str19 = instanceInfo15.getId();
        java.lang.String str20 = instanceInfo15.getAppGroupName();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/" + "'", str18, "/");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "/" + "'", str20, "/");
    }

    @Test
    public void test01916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01916");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig1 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo2 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager3 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig1, instanceInfo2);
        com.netflix.appinfo.InstanceInfo instanceInfo4 = null;
        applicationInfoManager3.instanceInfo = instanceInfo4;
        com.netflix.appinfo.InstanceInfo instanceInfo6 = applicationInfoManager3.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager7 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        int int11 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager7.config = myDataCenterInstanceConfig9;
        java.lang.String str13 = myDataCenterInstanceConfig9.getIpAddress();
        java.lang.String str14 = myDataCenterInstanceConfig9.getVirtualHostName();
        java.lang.String str16 = myDataCenterInstanceConfig9.getHostName(true);
        applicationInfoManager3.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig9);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus18 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        applicationInfoManager3.setInstanceStatus(instanceStatus18);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int22 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        java.lang.String str23 = myDataCenterInstanceConfig21.getVirtualHostName();
        java.lang.String str25 = myDataCenterInstanceConfig21.getHostName(false);
        applicationInfoManager3.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig21);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager27 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig29 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int30 = myDataCenterInstanceConfig29.getLeaseRenewalIntervalInSeconds();
        int int31 = myDataCenterInstanceConfig29.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager27.config = myDataCenterInstanceConfig29;
        java.lang.String str33 = myDataCenterInstanceConfig29.getHealthCheckUrlPath();
        java.lang.String str34 = myDataCenterInstanceConfig29.getNamespace();
        java.lang.String str35 = myDataCenterInstanceConfig29.getASGName();
        java.lang.String str36 = myDataCenterInstanceConfig29.getAppname();
        java.lang.String str37 = myDataCenterInstanceConfig29.getStatusPageUrl();
        applicationInfoManager3.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig29);
        boolean boolean39 = myDataCenterInstanceConfig29.isNonSecurePortEnabled();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig1);
        org.junit.Assert.assertNull(instanceInfo6);
        org.junit.Assert.assertNotNull(applicationInfoManager7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "172.20.26.3" + "'", str13, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str14, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str16, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + instanceStatus18 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus18.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 30 + "'", int22 == 30);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str23, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str25, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 30 + "'", int30 == 30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 30 + "'", int31 == 30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/healthcheck" + "'", str33, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "unknown" + "'", str36, "unknown");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test01917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01917");
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig0 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager1 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo2 = applicationInfoManager1.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig4.getDataCenterInfo();
        java.lang.String str7 = myDataCenterInstanceConfig4.getNamespace();
        boolean boolean8 = myDataCenterInstanceConfig4.isNonSecurePortEnabled();
        applicationInfoManager1.config = myDataCenterInstanceConfig4;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig10 = applicationInfoManager1.config;
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager1.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager1.instanceInfo;
        int int13 = instanceInfo12.getSecurePort();
        boolean boolean14 = instanceInfo12.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig0, instanceInfo12);
        java.lang.Boolean boolean16 = instanceInfo12.isCoordinatingDiscoveryServer();
        java.lang.String str17 = instanceInfo12.getVersion();
        org.junit.Assert.assertNotNull(applicationInfoManager1);
        org.junit.Assert.assertNotNull(instanceInfo2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 443 + "'", int13 == 443);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + false + "'", boolean16, false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "unknown" + "'", str17, "unknown");
    }

    @Test
    public void test01918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01918");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder2.setHealthCheckUrlsForDeser("unknown", "172.20.26.3");
        com.netflix.appinfo.LeaseInfo leaseInfo11 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder2.setLeaseInfo(leaseInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder2.setSecureVIPAddress("UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder2.setCountryId(97);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test01919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01919");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        boolean boolean13 = instanceInfo11.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        long long15 = instanceInfo14.getLastUpdatedTimestamp();
        java.lang.Boolean boolean16 = instanceInfo14.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.ActionType actionType17 = instanceInfo14.getActionType();
        long long18 = instanceInfo14.getLastUpdatedTimestamp();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1636106061795L + "'", long15 == 1636106061795L);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + false + "'", boolean16, false);
// flaky:         org.junit.Assert.assertTrue("'" + actionType17 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType17.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1636106061795L + "'", long18 == 1636106061795L);
    }

    @Test
    public void test01920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01920");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        boolean boolean13 = instanceInfo11.isDirty();
        boolean boolean14 = instanceInfo11.isDirty();
        java.lang.String str15 = instanceInfo11.getVersion();
        instanceInfo11.setIsCoordinatingDiscoveryServer();
        java.lang.String str17 = instanceInfo11.getVersion();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder18.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder18.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig25 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig25.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder24.setDataCenterInfo(dataCenterInfo26);
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder24.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder24.setLastDirtyTimestamp((long) (short) 10);
        com.netflix.appinfo.InstanceInfo.Builder builder33 = builder31.setSecurePort((int) (short) -1);
        com.netflix.appinfo.InstanceInfo.ActionType actionType34 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        com.netflix.appinfo.InstanceInfo.Builder builder35 = builder31.setActionType(actionType34);
        instanceInfo11.setActionType(actionType34);
        int int37 = instanceInfo11.getPort();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "unknown" + "'", str15, "unknown");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "unknown" + "'", str17, "unknown");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + actionType34 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType34.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 80 + "'", int37 == 80);
    }

    @Test
    public void test01921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01921");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder18.add("na", "/");
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder18.add("/Status", "");
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder27.setAppGroupName("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder27.setCountryId((int) '#');
        java.lang.Class<?> wildcardClass32 = builder31.getClass();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test01922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01922");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS");
    }

    @Test
    public void test01923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01923");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus24 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder21.setStatus(instanceStatus24);
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder21.setHealthCheckUrls("172.20.26.3", "", "http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager30 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager30.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig33 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int34 = myDataCenterInstanceConfig33.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo35 = myDataCenterInstanceConfig33.getDataCenterInfo();
        java.lang.String str36 = myDataCenterInstanceConfig33.getNamespace();
        boolean boolean37 = myDataCenterInstanceConfig33.isNonSecurePortEnabled();
        applicationInfoManager30.config = myDataCenterInstanceConfig33;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig39 = applicationInfoManager30.config;
        com.netflix.appinfo.InstanceInfo instanceInfo40 = applicationInfoManager30.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo41 = applicationInfoManager30.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType42 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo41.setActionType(actionType42);
        java.lang.String str44 = instanceInfo41.getAppGroupName();
        java.lang.String str45 = instanceInfo41.getAppName();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = instanceInfo41.getMetadata();
        com.netflix.appinfo.InstanceInfo.Builder builder47 = builder29.setMetadata(strMap46);
        com.netflix.appinfo.InstanceInfo.Builder builder50 = builder29.setHealthCheckUrlsForDeser("", "http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo.Builder builder53 = builder50.setStatusPageUrl("inesserver2.windows.cin.ufpe.br:80", "");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + instanceStatus24 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus24.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(applicationInfoManager30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig39);
        org.junit.Assert.assertNotNull(instanceInfo40);
        org.junit.Assert.assertNotNull(instanceInfo41);
        org.junit.Assert.assertTrue("'" + actionType42 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType42.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "UNKNOWN" + "'", str44, "UNKNOWN");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "UNKNOWN" + "'", str45, "UNKNOWN");
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder53);
    }

    @Test
    public void test01924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01924");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = instanceInfo11.getVersion();
        java.lang.String str15 = instanceInfo11.getIPAddr();
        instanceInfo11.setLastUpdatedTimestamp();
        java.lang.String str17 = instanceInfo11.getVersion();
        java.lang.String str18 = instanceInfo11.getHomePageUrl();
        int int19 = instanceInfo11.getCountryId();
        java.lang.String str20 = instanceInfo11.getVIPAddress();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager21 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo22 = applicationInfoManager21.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int25 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig24.getDataCenterInfo();
        java.lang.String str27 = myDataCenterInstanceConfig24.getNamespace();
        boolean boolean28 = myDataCenterInstanceConfig24.isNonSecurePortEnabled();
        applicationInfoManager21.config = myDataCenterInstanceConfig24;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig30 = applicationInfoManager21.config;
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager21.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager21.instanceInfo;
        int int33 = instanceInfo32.getSecurePort();
        boolean boolean34 = instanceInfo32.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = new com.netflix.appinfo.InstanceInfo(instanceInfo32);
        java.lang.String str36 = instanceInfo35.getHostName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus37 = instanceInfo35.getStatus();
        instanceInfo11.setOverriddenStatus(instanceStatus37);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo39 = instanceInfo11.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.ActionType actionType40 = instanceInfo11.getActionType();
        java.lang.String str41 = instanceInfo11.getVIPAddress();
        java.lang.Boolean boolean42 = instanceInfo11.isCoordinatingDiscoveryServer();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "unknown" + "'", str14, "unknown");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "172.20.26.3" + "'", str15, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "unknown" + "'", str17, "unknown");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str18, "http://inesserver2.windows.cin.ufpe.br:80/");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 35 + "'", int19 == 35);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str20, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNotNull(applicationInfoManager21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 30 + "'", int25 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 443 + "'", int33 == 443);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str36, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + instanceStatus37 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus37.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(dataCenterInfo39);
        org.junit.Assert.assertTrue("'" + actionType40 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType40.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str41, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + boolean42 + "' != '" + true + "'", boolean42, true);
    }

    @Test
    public void test01925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01925");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        java.lang.String str13 = instanceInfo11.getSID();
        java.util.Set<java.lang.String> strSet14 = instanceInfo11.getHealthCheckUrls();
        java.util.Set<java.lang.String> strSet15 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str16 = instanceInfo11.getASGName();
        java.lang.String str17 = instanceInfo11.getHostName();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int20 = myDataCenterInstanceConfig19.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo21 = myDataCenterInstanceConfig19.getDataCenterInfo();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager22 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager22.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig25 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int26 = myDataCenterInstanceConfig25.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo27 = myDataCenterInstanceConfig25.getDataCenterInfo();
        java.lang.String str28 = myDataCenterInstanceConfig25.getNamespace();
        boolean boolean29 = myDataCenterInstanceConfig25.isNonSecurePortEnabled();
        applicationInfoManager22.config = myDataCenterInstanceConfig25;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig31 = applicationInfoManager22.config;
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager22.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo33 = applicationInfoManager22.instanceInfo;
        int int34 = instanceInfo33.getSecurePort();
        boolean boolean35 = instanceInfo33.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo36 = new com.netflix.appinfo.InstanceInfo(instanceInfo33);
        com.netflix.appinfo.InstanceInfo instanceInfo37 = new com.netflix.appinfo.InstanceInfo(instanceInfo33);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager38 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig19, instanceInfo33);
        com.netflix.appinfo.InstanceInfo instanceInfo39 = applicationInfoManager38.instanceInfo;
        java.lang.String str40 = instanceInfo39.getSecureVipAddress();
        java.lang.String str41 = instanceInfo39.getHomePageUrl();
        instanceInfo39.setIsCoordinatingDiscoveryServer();
        java.lang.String str43 = instanceInfo39.getHostName();
        long long44 = instanceInfo39.getLastUpdatedTimestamp();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager45 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig47 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int48 = myDataCenterInstanceConfig47.getLeaseRenewalIntervalInSeconds();
        int int49 = myDataCenterInstanceConfig47.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager45.config = myDataCenterInstanceConfig47;
        java.lang.String str51 = myDataCenterInstanceConfig47.getIpAddress();
        java.lang.String str52 = myDataCenterInstanceConfig47.getVirtualHostName();
        boolean boolean53 = myDataCenterInstanceConfig47.isNonSecurePortEnabled();
        java.lang.String str54 = myDataCenterInstanceConfig47.getAppGroupName();
        java.lang.String str55 = myDataCenterInstanceConfig47.getHomePageUrl();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager56 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo57 = applicationInfoManager56.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig59 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int60 = myDataCenterInstanceConfig59.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo61 = myDataCenterInstanceConfig59.getDataCenterInfo();
        java.lang.String str62 = myDataCenterInstanceConfig59.getNamespace();
        boolean boolean63 = myDataCenterInstanceConfig59.isNonSecurePortEnabled();
        applicationInfoManager56.config = myDataCenterInstanceConfig59;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig65 = applicationInfoManager56.config;
        com.netflix.appinfo.InstanceInfo instanceInfo66 = applicationInfoManager56.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo67 = applicationInfoManager56.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType68 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo67.setActionType(actionType68);
        java.lang.String str70 = instanceInfo67.getVersion();
        java.lang.String str71 = instanceInfo67.getIPAddr();
        instanceInfo67.setLastUpdatedTimestamp();
        java.lang.String str73 = instanceInfo67.getVersion();
        boolean boolean74 = instanceInfo67.isDirty();
        int int75 = instanceInfo67.getSecurePort();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager76 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig47, instanceInfo67);
        com.netflix.appinfo.InstanceInfo.Builder builder77 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder79 = builder77.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder82 = builder79.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo83 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder84 = builder79.setLeaseInfo(leaseInfo83);
        com.netflix.appinfo.InstanceInfo.Builder builder86 = builder79.setSecurePort(10);
        com.netflix.appinfo.InstanceInfo.Builder builder88 = builder86.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo instanceInfo89 = builder86.getRawInstance();
        java.util.Set<java.lang.String> strSet90 = instanceInfo89.getHealthCheckUrls();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus91 = instanceInfo89.getStatus();
        applicationInfoManager76.setInstanceStatus(instanceStatus91);
        instanceInfo39.setStatus(instanceStatus91);
        instanceInfo11.setStatus(instanceStatus91);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "na" + "'", str13, "na");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/healthcheck" + "'", str16, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 30 + "'", int20 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo21);
        org.junit.Assert.assertNotNull(applicationInfoManager22);
        org.junit.Assert.assertNotNull(instanceInfo23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 30 + "'", int26 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig31);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 443 + "'", int34 == 443);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(instanceInfo39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str41, "http://inesserver2.windows.cin.ufpe.br:80/");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str43, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1636106061935L + "'", long44 == 1636106061935L);
        org.junit.Assert.assertNotNull(applicationInfoManager45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 30 + "'", int48 == 30);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 30 + "'", int49 == 30);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "172.20.26.3" + "'", str51, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str52, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "unknown" + "'", str54, "unknown");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(applicationInfoManager56);
        org.junit.Assert.assertNotNull(instanceInfo57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 30 + "'", int60 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig65);
        org.junit.Assert.assertNotNull(instanceInfo66);
        org.junit.Assert.assertNotNull(instanceInfo67);
        org.junit.Assert.assertTrue("'" + actionType68 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType68.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "unknown" + "'", str70, "unknown");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "172.20.26.3" + "'", str71, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "unknown" + "'", str73, "unknown");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 443 + "'", int75 == 443);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(instanceInfo89);
        org.junit.Assert.assertNotNull(strSet90);
        org.junit.Assert.assertTrue("'" + instanceStatus91 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UP + "'", instanceStatus91.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UP));
    }

    @Test
    public void test01926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01926");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str4 = myDataCenterInstanceConfig1.getHealthCheckUrl();
        java.lang.String str5 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        int int6 = myDataCenterInstanceConfig1.getSecurePort();
        java.lang.String str7 = myDataCenterInstanceConfig1.getHomePageUrl();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/Status" + "'", str5, "/Status");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 443 + "'", int6 == 443);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test01927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01927");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig13 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int14 = myDataCenterInstanceConfig13.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo15 = myDataCenterInstanceConfig13.getDataCenterInfo();
        java.lang.String str17 = myDataCenterInstanceConfig13.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig13.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo18);
        java.lang.String str20 = myDataCenterInstanceConfig19.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = myDataCenterInstanceConfig19.getMetadataMap();
        applicationInfoManager0.registerAppMetadata(strMap21);
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.Builder builder24 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo23);
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder24.setNamespace("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder24.setNamespace("HTTP://INESSERVER2.WINDOWS.CIN.UFPE.BR:80/STATUS");
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder28.setAppName("/");
        boolean boolean31 = builder30.isInitialized();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 30 + "'", int14 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(instanceInfo23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test01928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01928");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        java.lang.String str6 = myDataCenterInstanceConfig2.getIpAddress();
        java.lang.String str7 = myDataCenterInstanceConfig2.getHealthCheckUrlPath();
        int int8 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager9 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager9.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int13 = myDataCenterInstanceConfig12.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo14 = myDataCenterInstanceConfig12.getDataCenterInfo();
        java.lang.String str15 = myDataCenterInstanceConfig12.getNamespace();
        boolean boolean16 = myDataCenterInstanceConfig12.isNonSecurePortEnabled();
        applicationInfoManager9.config = myDataCenterInstanceConfig12;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig18 = applicationInfoManager9.config;
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager9.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager9.instanceInfo;
        int int21 = instanceInfo20.getSecurePort();
        int int22 = instanceInfo20.getPort();
        int int23 = instanceInfo20.getCountryId();
        boolean boolean24 = instanceInfo20.isDirty();
        int int25 = instanceInfo20.getPort();
        java.lang.String str26 = instanceInfo20.getASGName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager27 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig2, instanceInfo20);
        java.lang.String str28 = instanceInfo20.getStatusPageUrl();
        java.lang.String str29 = instanceInfo20.getId();
        int int30 = instanceInfo20.getCountryId();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "172.20.26.3" + "'", str6, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/healthcheck" + "'", str7, "/healthcheck");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
        org.junit.Assert.assertNotNull(applicationInfoManager9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 30 + "'", int13 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 443 + "'", int21 == 443);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 80 + "'", int22 == 80);
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
// flaky:         org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 80 + "'", int25 == 80);
// flaky:         org.junit.Assert.assertNull(str26);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str28, "http://inesserver2.windows.cin.ufpe.br:80/Status");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str29, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
    }

    @Test
    public void test01929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01929");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig1 = applicationInfoManager0.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager2 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        int int6 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager2.config = myDataCenterInstanceConfig4;
        java.lang.String str8 = myDataCenterInstanceConfig4.getIpAddress();
        java.lang.String str9 = myDataCenterInstanceConfig4.getVirtualHostName();
        java.lang.String str11 = myDataCenterInstanceConfig4.getHostName(true);
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig4);
        com.netflix.appinfo.InstanceInfo instanceInfo13 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig15 = applicationInfoManager0.config;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig16 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo17 = applicationInfoManager0.getInfo();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
// flaky:         org.junit.Assert.assertNull(eurekaInstanceConfig1);
        org.junit.Assert.assertNotNull(applicationInfoManager2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 30 + "'", int6 == 30);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "172.20.26.3" + "'", str8, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str9, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str11, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(instanceInfo13);
        org.junit.Assert.assertNotNull(instanceInfo14);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig15);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig16);
        org.junit.Assert.assertNotNull(instanceInfo17);
    }

    @Test
    public void test01930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01930");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        java.lang.String str6 = myDataCenterInstanceConfig2.getHealthCheckUrlPath();
        java.lang.String str7 = myDataCenterInstanceConfig2.getNamespace();
        java.lang.String str8 = myDataCenterInstanceConfig2.getASGName();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo9 = myDataCenterInstanceConfig2.getDataCenterInfo();
        java.lang.String str10 = myDataCenterInstanceConfig2.getSecureVirtualHostName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "/healthcheck" + "'", str6, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(dataCenterInfo9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test01931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01931");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        int int3 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        boolean boolean5 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        com.netflix.appinfo.InstanceInfo instanceInfo6 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager7 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo6);
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager7;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int11 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        boolean boolean12 = myDataCenterInstanceConfig10.isInstanceEnabledOnit();
        java.lang.String str13 = myDataCenterInstanceConfig10.getIpAddress();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = myDataCenterInstanceConfig10.getMetadataMap();
        java.lang.String str15 = myDataCenterInstanceConfig10.getAppGroupName();
        java.lang.String str16 = myDataCenterInstanceConfig10.getAppGroupName();
        applicationInfoManager7.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig10);
        boolean boolean18 = myDataCenterInstanceConfig10.getSecurePortEnabled();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/Status" + "'", str4, "/Status");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "172.20.26.3" + "'", str13, "172.20.26.3");
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "unknown" + "'", str15, "unknown");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "unknown" + "'", str16, "unknown");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test01932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01932");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        com.netflix.appinfo.InstanceInfo instanceInfo1 = null;
        java.lang.String str2 = com.netflix.appinfo.InstanceInfo.getZone(strArray0, instanceInfo1);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager3 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo4 = applicationInfoManager3.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig6 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int7 = myDataCenterInstanceConfig6.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig6.getDataCenterInfo();
        java.lang.String str9 = myDataCenterInstanceConfig6.getNamespace();
        boolean boolean10 = myDataCenterInstanceConfig6.isNonSecurePortEnabled();
        applicationInfoManager3.config = myDataCenterInstanceConfig6;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig12 = applicationInfoManager3.config;
        com.netflix.appinfo.InstanceInfo instanceInfo13 = applicationInfoManager3.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager3.instanceInfo;
        java.lang.Boolean boolean15 = instanceInfo14.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus16 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo14.setOverriddenStatus(instanceStatus16);
        int int18 = instanceInfo14.getSecurePort();
        java.lang.String str19 = instanceInfo14.getHostName();
        java.lang.String str20 = instanceInfo14.getAppGroupName();
        java.lang.String str21 = instanceInfo14.getASGName();
        java.lang.String str22 = com.netflix.appinfo.InstanceInfo.getZone(strArray0, instanceInfo14);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus23 = instanceInfo14.getOverriddenStatus();
        java.lang.Boolean boolean24 = instanceInfo14.isCoordinatingDiscoveryServer();
        instanceInfo14.setLastDirtyTimestamp((java.lang.Long) 1636106036271L);
        int int27 = instanceInfo14.getSecurePort();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "default" + "'", str2, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager3);
        org.junit.Assert.assertNotNull(instanceInfo4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 30 + "'", int7 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig12);
        org.junit.Assert.assertNotNull(instanceInfo13);
        org.junit.Assert.assertNotNull(instanceInfo14);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertTrue("'" + instanceStatus16 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus16.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 443 + "'", int18 == 443);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str19, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UNKNOWN" + "'", str20, "UNKNOWN");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "default" + "'", str22, "default");
        org.junit.Assert.assertTrue("'" + instanceStatus23 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus23.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertEquals("'" + boolean24 + "' != '" + false + "'", boolean24, false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 443 + "'", int27 == 443);
    }

    @Test
    public void test01933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01933");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder18.setHealthCheckUrlsForDeser("", "hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setLastDirtyTimestamp((long) 443);
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder25.setIPAddr("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder27.setHealthCheckUrlsForDeser("inesserver2.windows.cin.ufpe.br", "DEFAULT");
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder30.setASGName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder30.setStatusPageUrlForDeser("inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager35 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo36 = applicationInfoManager35.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig38 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int39 = myDataCenterInstanceConfig38.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo40 = myDataCenterInstanceConfig38.getDataCenterInfo();
        java.lang.String str41 = myDataCenterInstanceConfig38.getNamespace();
        boolean boolean42 = myDataCenterInstanceConfig38.isNonSecurePortEnabled();
        applicationInfoManager35.config = myDataCenterInstanceConfig38;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig44 = applicationInfoManager35.config;
        com.netflix.appinfo.InstanceInfo instanceInfo45 = applicationInfoManager35.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo46 = applicationInfoManager35.instanceInfo;
        int int47 = instanceInfo46.getSecurePort();
        int int48 = instanceInfo46.getPort();
        int int49 = instanceInfo46.getCountryId();
        boolean boolean50 = instanceInfo46.isDirty();
        int int51 = instanceInfo46.getPort();
        java.lang.String str52 = instanceInfo46.getStatusPageUrl();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager53 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo54 = applicationInfoManager53.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig56 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int57 = myDataCenterInstanceConfig56.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo58 = myDataCenterInstanceConfig56.getDataCenterInfo();
        java.lang.String str59 = myDataCenterInstanceConfig56.getNamespace();
        boolean boolean60 = myDataCenterInstanceConfig56.isNonSecurePortEnabled();
        applicationInfoManager53.config = myDataCenterInstanceConfig56;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig62 = applicationInfoManager53.config;
        com.netflix.appinfo.InstanceInfo instanceInfo63 = applicationInfoManager53.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo64 = applicationInfoManager53.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType65 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo64.setActionType(actionType65);
        com.netflix.appinfo.LeaseInfo leaseInfo67 = null;
        instanceInfo64.setLeaseInfo(leaseInfo67);
        java.util.Set<java.lang.String> strSet69 = instanceInfo64.getHealthCheckUrls();
        java.lang.String str70 = instanceInfo64.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder71 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo64);
        com.netflix.appinfo.InstanceInfo.ActionType actionType72 = instanceInfo64.getActionType();
        instanceInfo46.setActionType(actionType72);
        java.lang.String str74 = instanceInfo46.getVersion();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus75 = instanceInfo46.getStatus();
        com.netflix.appinfo.InstanceInfo.Builder builder76 = builder30.setStatus(instanceStatus75);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(applicationInfoManager35);
        org.junit.Assert.assertNotNull(instanceInfo36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 30 + "'", int39 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig44);
        org.junit.Assert.assertNotNull(instanceInfo45);
        org.junit.Assert.assertNotNull(instanceInfo46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 443 + "'", int47 == 443);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 80 + "'", int48 == 80);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 80 + "'", int51 == 80);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str52, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNotNull(applicationInfoManager53);
        org.junit.Assert.assertNotNull(instanceInfo54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 30 + "'", int57 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig62);
        org.junit.Assert.assertNotNull(instanceInfo63);
        org.junit.Assert.assertNotNull(instanceInfo64);
        org.junit.Assert.assertTrue("'" + actionType65 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType65.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str70, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + actionType72 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType72.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "unknown" + "'", str74, "unknown");
        org.junit.Assert.assertTrue("'" + instanceStatus75 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING + "'", instanceStatus75.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING));
        org.junit.Assert.assertNotNull(builder76);
    }

    @Test
    public void test01934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01934");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig11 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int12 = myDataCenterInstanceConfig11.getLeaseRenewalIntervalInSeconds();
        int int13 = myDataCenterInstanceConfig11.getLeaseRenewalIntervalInSeconds();
        java.lang.String str14 = myDataCenterInstanceConfig11.getStatusPageUrlPath();
        boolean boolean15 = myDataCenterInstanceConfig11.getSecurePortEnabled();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = myDataCenterInstanceConfig11.getMetadataMap();
        boolean boolean17 = myDataCenterInstanceConfig11.isInstanceEnabledOnit();
        int int18 = myDataCenterInstanceConfig11.getSecurePort();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig11);
        applicationInfoManager0.refreshDataCenterInfoIfRequired();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 30 + "'", int12 == 30);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 30 + "'", int13 == 30);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "/Status" + "'", str14, "/Status");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 443 + "'", int18 == 443);
    }

    @Test
    public void test01935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01935");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager18 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager18.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int22 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo23 = myDataCenterInstanceConfig21.getDataCenterInfo();
        java.lang.String str24 = myDataCenterInstanceConfig21.getNamespace();
        boolean boolean25 = myDataCenterInstanceConfig21.isNonSecurePortEnabled();
        applicationInfoManager18.config = myDataCenterInstanceConfig21;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig27 = applicationInfoManager18.config;
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager18.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager18.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType30 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo29.setActionType(actionType30);
        instanceInfo11.setActionType(actionType30);
        com.netflix.appinfo.InstanceInfo.PortType portType33 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        boolean boolean34 = instanceInfo11.isPortEnabled(portType33);
        com.netflix.appinfo.InstanceInfo instanceInfo35 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo36 = instanceInfo35.getDataCenterInfo();
        java.lang.String str37 = instanceInfo35.getASGName();
        com.netflix.appinfo.InstanceInfo instanceInfo38 = new com.netflix.appinfo.InstanceInfo(instanceInfo35);
        java.lang.String str39 = instanceInfo35.getAppGroupName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 30 + "'", int22 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertTrue("'" + actionType30 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType30.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + portType33 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType33.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "UNKNOWN" + "'", str39, "UNKNOWN");
    }

    @Test
    public void test01936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01936");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo4 = myDataCenterInstanceConfig2.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig5 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo4);
        java.lang.String str6 = myDataCenterInstanceConfig5.getAppname();
        java.lang.String str7 = myDataCenterInstanceConfig5.getNamespace();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig8 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager9 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager9.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int13 = myDataCenterInstanceConfig12.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo14 = myDataCenterInstanceConfig12.getDataCenterInfo();
        java.lang.String str15 = myDataCenterInstanceConfig12.getNamespace();
        boolean boolean16 = myDataCenterInstanceConfig12.isNonSecurePortEnabled();
        applicationInfoManager9.config = myDataCenterInstanceConfig12;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig18 = applicationInfoManager9.config;
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager9.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager9.instanceInfo;
        int int21 = instanceInfo20.getSecurePort();
        boolean boolean22 = instanceInfo20.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager23 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig8, instanceInfo20);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager24 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig5, instanceInfo20);
        instanceInfo20.setLastDirtyTimestamp((java.lang.Long) 100L);
        java.lang.String str27 = instanceInfo20.getSecureVipAddress();
        java.lang.String[] strArray28 = new java.lang.String[] {};
        com.netflix.appinfo.InstanceInfo instanceInfo29 = null;
        java.lang.String str30 = com.netflix.appinfo.InstanceInfo.getZone(strArray28, instanceInfo29);
        com.netflix.appinfo.InstanceInfo instanceInfo31 = null;
        java.lang.String str32 = com.netflix.appinfo.InstanceInfo.getZone(strArray28, instanceInfo31);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager33 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager33.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig36 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int37 = myDataCenterInstanceConfig36.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo38 = myDataCenterInstanceConfig36.getDataCenterInfo();
        java.lang.String str39 = myDataCenterInstanceConfig36.getNamespace();
        boolean boolean40 = myDataCenterInstanceConfig36.isNonSecurePortEnabled();
        applicationInfoManager33.config = myDataCenterInstanceConfig36;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig42 = applicationInfoManager33.config;
        com.netflix.appinfo.InstanceInfo instanceInfo43 = applicationInfoManager33.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo44 = applicationInfoManager33.instanceInfo;
        int int45 = instanceInfo44.getSecurePort();
        boolean boolean46 = instanceInfo44.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo47 = new com.netflix.appinfo.InstanceInfo(instanceInfo44);
        com.netflix.appinfo.InstanceInfo instanceInfo48 = new com.netflix.appinfo.InstanceInfo(instanceInfo44);
        java.lang.String str49 = instanceInfo44.getAppGroupName();
        int int50 = instanceInfo44.getCountryId();
        java.lang.String str51 = com.netflix.appinfo.InstanceInfo.getZone(strArray28, instanceInfo44);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager52 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo53 = applicationInfoManager52.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig55 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int56 = myDataCenterInstanceConfig55.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo57 = myDataCenterInstanceConfig55.getDataCenterInfo();
        java.lang.String str58 = myDataCenterInstanceConfig55.getNamespace();
        boolean boolean59 = myDataCenterInstanceConfig55.isNonSecurePortEnabled();
        applicationInfoManager52.config = myDataCenterInstanceConfig55;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig61 = applicationInfoManager52.config;
        com.netflix.appinfo.InstanceInfo instanceInfo62 = applicationInfoManager52.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo63 = applicationInfoManager52.instanceInfo;
        java.lang.Boolean boolean64 = instanceInfo63.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus65 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo63.setOverriddenStatus(instanceStatus65);
        instanceInfo63.setLastDirtyTimestamp((java.lang.Long) (-1L));
        int int69 = instanceInfo63.getPort();
        java.lang.String str70 = com.netflix.appinfo.InstanceInfo.getZone(strArray28, instanceInfo63);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager71 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo72 = applicationInfoManager71.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig74 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int75 = myDataCenterInstanceConfig74.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo76 = myDataCenterInstanceConfig74.getDataCenterInfo();
        java.lang.String str77 = myDataCenterInstanceConfig74.getNamespace();
        boolean boolean78 = myDataCenterInstanceConfig74.isNonSecurePortEnabled();
        applicationInfoManager71.config = myDataCenterInstanceConfig74;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig80 = applicationInfoManager71.config;
        com.netflix.appinfo.InstanceInfo instanceInfo81 = applicationInfoManager71.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo82 = applicationInfoManager71.instanceInfo;
        java.lang.Boolean boolean83 = instanceInfo82.isCoordinatingDiscoveryServer();
        java.lang.String str84 = instanceInfo82.getVIPAddress();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus85 = instanceInfo82.getOverriddenStatus();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo86 = instanceInfo82.getDataCenterInfo();
        java.lang.Boolean boolean87 = instanceInfo82.isCoordinatingDiscoveryServer();
        int int88 = instanceInfo82.getPort();
        java.lang.String str89 = com.netflix.appinfo.InstanceInfo.getZone(strArray28, instanceInfo82);
        boolean boolean90 = instanceInfo20.equals((java.lang.Object) str89);
        java.lang.String str91 = instanceInfo20.getIPAddr();
        java.lang.String str92 = instanceInfo20.getVIPAddress();
        boolean boolean93 = instanceInfo20.isDirty();
        java.util.Map<java.lang.String, java.lang.String> strMap94 = instanceInfo20.getMetadata();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "unknown" + "'", str6, "unknown");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/Status" + "'", str7, "/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 30 + "'", int13 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 443 + "'", int21 == 443);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "default" + "'", str30, "default");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "default" + "'", str32, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 30 + "'", int37 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig42);
        org.junit.Assert.assertNotNull(instanceInfo43);
        org.junit.Assert.assertNotNull(instanceInfo44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 443 + "'", int45 == 443);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "UNKNOWN" + "'", str49, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "default" + "'", str51, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager52);
        org.junit.Assert.assertNotNull(instanceInfo53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 30 + "'", int56 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig61);
        org.junit.Assert.assertNotNull(instanceInfo62);
        org.junit.Assert.assertNotNull(instanceInfo63);
        org.junit.Assert.assertEquals("'" + boolean64 + "' != '" + false + "'", boolean64, false);
        org.junit.Assert.assertTrue("'" + instanceStatus65 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus65.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 80 + "'", int69 == 80);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "default" + "'", str70, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager71);
        org.junit.Assert.assertNotNull(instanceInfo72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 30 + "'", int75 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig80);
        org.junit.Assert.assertNotNull(instanceInfo81);
        org.junit.Assert.assertNotNull(instanceInfo82);
        org.junit.Assert.assertEquals("'" + boolean83 + "' != '" + false + "'", boolean83, false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str84, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertTrue("'" + instanceStatus85 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus85.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(dataCenterInfo86);
        org.junit.Assert.assertEquals("'" + boolean87 + "' != '" + false + "'", boolean87, false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 80 + "'", int88 == 80);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "default" + "'", str89, "default");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "172.20.26.3" + "'", str91, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str92, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(strMap94);
    }

    @Test
    public void test01937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01937");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder18.add("na", "/");
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder18.add("/Status", "");
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder18.setHealthCheckUrls("inesserver2.windows.cin.ufpe.br", "", "172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder18.setHealthCheckUrlsForDeser("/Status", "");
        com.netflix.appinfo.InstanceInfo.Builder builder36 = builder18.setStatusPageUrlForDeser("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder36.setVIPAddressDeser("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder38.setIPAddr("http://default:80/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
    }

    @Test
    public void test01938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01938");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder8.setHomePageUrlForDeser("");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager13 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager13.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig16 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int17 = myDataCenterInstanceConfig16.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig16.getDataCenterInfo();
        java.lang.String str19 = myDataCenterInstanceConfig16.getNamespace();
        boolean boolean20 = myDataCenterInstanceConfig16.isNonSecurePortEnabled();
        applicationInfoManager13.config = myDataCenterInstanceConfig16;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig22 = applicationInfoManager13.config;
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager13.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo24 = applicationInfoManager13.instanceInfo;
        int int25 = instanceInfo24.getSecurePort();
        boolean boolean26 = instanceInfo24.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo27 = new com.netflix.appinfo.InstanceInfo(instanceInfo24);
        com.netflix.appinfo.InstanceInfo instanceInfo28 = new com.netflix.appinfo.InstanceInfo(instanceInfo24);
        java.lang.String str29 = instanceInfo24.getAppGroupName();
        int int30 = instanceInfo24.getCountryId();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus31 = instanceInfo24.getStatus();
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder12.setStatus(instanceStatus31);
        com.netflix.appinfo.InstanceInfo instanceInfo33 = builder12.build();
        instanceInfo33.setIsCoordinatingDiscoveryServer();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(applicationInfoManager13);
        org.junit.Assert.assertNotNull(instanceInfo14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 30 + "'", int17 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig22);
        org.junit.Assert.assertNotNull(instanceInfo23);
        org.junit.Assert.assertNotNull(instanceInfo24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 443 + "'", int25 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UNKNOWN" + "'", str29, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + instanceStatus31 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING + "'", instanceStatus31.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(instanceInfo33);
    }

    @Test
    public void test01939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01939");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig1 = applicationInfoManager0.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager2 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        int int6 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager2.config = myDataCenterInstanceConfig4;
        java.lang.String str8 = myDataCenterInstanceConfig4.getIpAddress();
        java.lang.String str9 = myDataCenterInstanceConfig4.getVirtualHostName();
        java.lang.String str11 = myDataCenterInstanceConfig4.getHostName(true);
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig4);
        com.netflix.appinfo.InstanceInfo instanceInfo13 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder15 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo14);
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder15.setSecureVIPAddressDeser("");
        boolean boolean18 = builder15.isInitialized();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig1);
        org.junit.Assert.assertNotNull(applicationInfoManager2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 30 + "'", int6 == 30);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "172.20.26.3" + "'", str8, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str9, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str11, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(instanceInfo13);
        org.junit.Assert.assertNotNull(instanceInfo14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test01940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01940");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder7.setASGName("inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder9.setVIPAddressDeser("UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder11.setAppGroupName("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder13.setHomePageUrlForDeser("UNKNOWN");
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder18 = builder15.setHomePageUrl("/Status", "unknown");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
    }

    @Test
    public void test01941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01941");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrl();
        java.lang.String str6 = myDataCenterInstanceConfig1.getHostName(false);
        java.lang.String str7 = myDataCenterInstanceConfig1.getHomePageUrlPath();
        boolean boolean8 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        java.lang.String str9 = myDataCenterInstanceConfig1.getHealthCheckUrlPath();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str6, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/" + "'", str7, "/");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/healthcheck" + "'", str9, "/healthcheck");
    }

    @Test
    public void test01942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01942");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        java.lang.String str4 = myDataCenterInstanceConfig1.getVirtualHostName();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig1.getDataCenterInfo();
        boolean boolean6 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str4, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test01943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01943");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig1 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo2 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager3 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig1, instanceInfo2);
        com.netflix.appinfo.InstanceInfo instanceInfo4 = null;
        applicationInfoManager3.instanceInfo = instanceInfo4;
        com.netflix.appinfo.InstanceInfo instanceInfo6 = applicationInfoManager3.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager7 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        int int11 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager7.config = myDataCenterInstanceConfig9;
        java.lang.String str13 = myDataCenterInstanceConfig9.getIpAddress();
        java.lang.String str14 = myDataCenterInstanceConfig9.getVirtualHostName();
        java.lang.String str16 = myDataCenterInstanceConfig9.getHostName(true);
        applicationInfoManager3.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig9);
        java.lang.String str18 = myDataCenterInstanceConfig9.getStatusPageUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig9.getDataCenterInfo();
        boolean boolean20 = myDataCenterInstanceConfig9.getSecurePortEnabled();
        java.lang.String str21 = myDataCenterInstanceConfig9.getStatusPageUrlPath();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig1);
        org.junit.Assert.assertNull(instanceInfo6);
        org.junit.Assert.assertNotNull(applicationInfoManager7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "172.20.26.3" + "'", str13, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str14, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str16, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "/Status" + "'", str21, "/Status");
    }

    @Test
    public void test01944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01944");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        com.netflix.appinfo.InstanceInfo instanceInfo6 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager7 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig9 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int10 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        int int11 = myDataCenterInstanceConfig9.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager7.config = myDataCenterInstanceConfig9;
        java.lang.String str13 = myDataCenterInstanceConfig9.getIpAddress();
        java.lang.String str14 = myDataCenterInstanceConfig9.getVirtualHostName();
        java.lang.String str16 = myDataCenterInstanceConfig9.getHostName(true);
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig9);
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager0.getInfo();
        java.lang.String str19 = instanceInfo18.getVIPAddress();
        instanceInfo18.setLastDirtyTimestamp((java.lang.Long) 1636105991133L);
        java.lang.String str22 = instanceInfo18.getVersion();
        com.netflix.appinfo.InstanceInfo.ActionType actionType23 = instanceInfo18.getActionType();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(instanceInfo6);
        org.junit.Assert.assertNotNull(applicationInfoManager7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 30 + "'", int10 == 30);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "172.20.26.3" + "'", str13, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str14, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str16, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str19, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "unknown" + "'", str22, "unknown");
        org.junit.Assert.assertNull(actionType23);
    }

    @Test
    public void test01945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01945");
        com.netflix.appinfo.DataCenterInfo dataCenterInfo1 = null;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("", dataCenterInfo1);
        int int3 = myDataCenterInstanceConfig2.getLeaseExpirationDurationInSeconds();
        java.lang.String str4 = myDataCenterInstanceConfig2.getAppname();
        java.lang.String str5 = myDataCenterInstanceConfig2.getStatusPageUrlPath();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig2.getDataCenterInfo();
        int int7 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 90 + "'", int3 == 90);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "unknown" + "'", str4, "unknown");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/Status" + "'", str5, "/Status");
        org.junit.Assert.assertNull(dataCenterInfo6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 30 + "'", int7 == 30);
    }

    @Test
    public void test01946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01946");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        java.lang.String str13 = instanceInfo11.getSID();
        java.util.Set<java.lang.String> strSet14 = instanceInfo11.getHealthCheckUrls();
        java.util.Set<java.lang.String> strSet15 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str16 = instanceInfo11.getASGName();
        instanceInfo11.setLastUpdatedTimestamp();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = instanceInfo11.getDataCenterInfo();
        java.lang.String str19 = instanceInfo11.getId();
        instanceInfo11.setIsDirty(true);
        com.netflix.appinfo.InstanceInfo.Builder builder22 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder22.setPort((int) (byte) -1);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "na" + "'", str13, "na");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str19, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test01947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01947");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = instanceInfo11.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.Builder builder15 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo instanceInfo16 = builder15.getRawInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = instanceInfo16.getMetadata();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UNKNOWN" + "'", str14, "UNKNOWN");
        org.junit.Assert.assertNotNull(instanceInfo16);
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test01948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01948");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder8.setHomePageUrlForDeser("");
        com.netflix.appinfo.LeaseInfo leaseInfo13 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setLeaseInfo(leaseInfo13);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager15 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo16 = applicationInfoManager15.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig18 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int19 = myDataCenterInstanceConfig18.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo20 = myDataCenterInstanceConfig18.getDataCenterInfo();
        java.lang.String str21 = myDataCenterInstanceConfig18.getNamespace();
        boolean boolean22 = myDataCenterInstanceConfig18.isNonSecurePortEnabled();
        applicationInfoManager15.config = myDataCenterInstanceConfig18;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig24 = applicationInfoManager15.config;
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager15.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo26 = applicationInfoManager15.getInfo();
        java.lang.String[] strArray27 = new java.lang.String[] {};
        com.netflix.appinfo.InstanceInfo instanceInfo28 = null;
        java.lang.String str29 = com.netflix.appinfo.InstanceInfo.getZone(strArray27, instanceInfo28);
        com.netflix.appinfo.InstanceInfo instanceInfo30 = null;
        java.lang.String str31 = com.netflix.appinfo.InstanceInfo.getZone(strArray27, instanceInfo30);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager32 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo33 = applicationInfoManager32.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig35 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int36 = myDataCenterInstanceConfig35.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo37 = myDataCenterInstanceConfig35.getDataCenterInfo();
        java.lang.String str38 = myDataCenterInstanceConfig35.getNamespace();
        boolean boolean39 = myDataCenterInstanceConfig35.isNonSecurePortEnabled();
        applicationInfoManager32.config = myDataCenterInstanceConfig35;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig41 = applicationInfoManager32.config;
        com.netflix.appinfo.InstanceInfo instanceInfo42 = applicationInfoManager32.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo43 = applicationInfoManager32.instanceInfo;
        int int44 = instanceInfo43.getSecurePort();
        boolean boolean45 = instanceInfo43.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo46 = new com.netflix.appinfo.InstanceInfo(instanceInfo43);
        com.netflix.appinfo.InstanceInfo instanceInfo47 = new com.netflix.appinfo.InstanceInfo(instanceInfo43);
        java.lang.String str48 = instanceInfo43.getAppGroupName();
        int int49 = instanceInfo43.getCountryId();
        java.lang.String str50 = com.netflix.appinfo.InstanceInfo.getZone(strArray27, instanceInfo43);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus51 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo43.setStatus(instanceStatus51);
        applicationInfoManager15.setInstanceStatus(instanceStatus51);
        com.netflix.appinfo.InstanceInfo.Builder builder54 = builder12.setOverriddenStatus(instanceStatus51);
        com.netflix.appinfo.InstanceInfo.Builder builder56 = builder12.setPort(10);
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder59 = builder56.setHomePageUrl("HTTP://HI!:80/STATUS", "http://inesserver2.windows.cin.ufpe.br:80/");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(applicationInfoManager15);
        org.junit.Assert.assertNotNull(instanceInfo16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 30 + "'", int19 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertNotNull(instanceInfo26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "default" + "'", str29, "default");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "default" + "'", str31, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 30 + "'", int36 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig41);
        org.junit.Assert.assertNotNull(instanceInfo42);
        org.junit.Assert.assertNotNull(instanceInfo43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 443 + "'", int44 == 443);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "UNKNOWN" + "'", str48, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "default" + "'", str50, "default");
        org.junit.Assert.assertTrue("'" + instanceStatus51 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus51.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
    }

    @Test
    public void test01949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01949");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig0 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        java.lang.String str1 = myDataCenterInstanceConfig0.getASGName();
        int int2 = myDataCenterInstanceConfig0.getNonSecurePort();
        int int3 = myDataCenterInstanceConfig0.getNonSecurePort();
        java.lang.String str4 = myDataCenterInstanceConfig0.getAppGroupName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 80 + "'", int2 == 80);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 80 + "'", int3 == 80);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "unknown" + "'", str4, "unknown");
    }

    @Test
    public void test01950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01950");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        java.lang.Boolean boolean12 = instanceInfo11.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus13 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo11.setOverriddenStatus(instanceStatus13);
        int int15 = instanceInfo11.getSecurePort();
        java.lang.String str16 = instanceInfo11.getHostName();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager17 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager17.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig20 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int21 = myDataCenterInstanceConfig20.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = myDataCenterInstanceConfig20.getDataCenterInfo();
        java.lang.String str23 = myDataCenterInstanceConfig20.getNamespace();
        boolean boolean24 = myDataCenterInstanceConfig20.isNonSecurePortEnabled();
        applicationInfoManager17.config = myDataCenterInstanceConfig20;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig26 = applicationInfoManager17.config;
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager17.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager17.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType29 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo28.setActionType(actionType29);
        com.netflix.appinfo.LeaseInfo leaseInfo31 = null;
        instanceInfo28.setLeaseInfo(leaseInfo31);
        java.lang.String str33 = instanceInfo28.getSID();
        com.netflix.appinfo.LeaseInfo leaseInfo34 = instanceInfo28.getLeaseInfo();
        boolean boolean35 = instanceInfo11.equals((java.lang.Object) instanceInfo28);
        com.netflix.appinfo.LeaseInfo leaseInfo36 = instanceInfo28.getLeaseInfo();
        java.lang.String str37 = instanceInfo28.getId();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertTrue("'" + instanceStatus13 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus13.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 443 + "'", int15 == 443);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str16, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager17);
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 30 + "'", int21 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertTrue("'" + actionType29 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType29.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "na" + "'", str33, "na");
        org.junit.Assert.assertNull(leaseInfo34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(leaseInfo36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str37, "inesserver2.windows.cin.ufpe.br");
    }

    @Test
    public void test01951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01951");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        java.lang.String str2 = myDataCenterInstanceConfig1.getHomePageUrlPath();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/" + "'", str2, "/");
    }

    @Test
    public void test01952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01952");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder6.setNamespace("na");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder6.add("unknown", "UNKNOWN");
        com.netflix.appinfo.LeaseInfo leaseInfo18 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder17.setLeaseInfo(leaseInfo18);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo20 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder19.setDataCenterInfo(dataCenterInfo20);
        com.netflix.appinfo.InstanceInfo instanceInfo22 = builder21.getRawInstance();
        java.lang.Class<?> wildcardClass23 = instanceInfo22.getClass();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test01953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01953");
        com.netflix.appinfo.InstanceInfo instanceInfo0 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder1 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo0);
        com.netflix.appinfo.InstanceInfo.Builder builder3 = builder1.setNamespace("");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder1.setNamespace("");
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder7 = builder5.setPort((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
    }

    @Test
    public void test01954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01954");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder12.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder12.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder12.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.LeaseInfo leaseInfo22 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder12.setLeaseInfo(leaseInfo22);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager24 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager24.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig27 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int28 = myDataCenterInstanceConfig27.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig27.getDataCenterInfo();
        java.lang.String str30 = myDataCenterInstanceConfig27.getNamespace();
        boolean boolean31 = myDataCenterInstanceConfig27.isNonSecurePortEnabled();
        applicationInfoManager24.config = myDataCenterInstanceConfig27;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig33 = applicationInfoManager24.config;
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager24.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager24.instanceInfo;
        int int36 = instanceInfo35.getSecurePort();
        boolean boolean37 = instanceInfo35.isDirty();
        boolean boolean38 = instanceInfo35.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo39 = new com.netflix.appinfo.InstanceInfo(instanceInfo35);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus40 = instanceInfo39.getStatus();
        com.netflix.appinfo.InstanceInfo.Builder builder41 = builder12.setOverriddenStatus(instanceStatus40);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder43 = builder12.setMetadata(strMap42);
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder46 = builder43.add("", "inesserver2.windows.cin.ufpe.br:80");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(applicationInfoManager24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 30 + "'", int28 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 443 + "'", int36 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus40 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING + "'", instanceStatus40.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
    }

    @Test
    public void test01955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01955");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager8 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int11 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        int int12 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager8.config = myDataCenterInstanceConfig10;
        java.lang.String str14 = myDataCenterInstanceConfig10.getIpAddress();
        java.lang.String str15 = myDataCenterInstanceConfig10.getHealthCheckUrl();
        java.lang.String str16 = myDataCenterInstanceConfig10.getStatusPageUrl();
        java.lang.String str17 = myDataCenterInstanceConfig10.getNamespace();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo18 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder2.setDataCenterInfo(dataCenterInfo18);
        com.netflix.appinfo.InstanceInfo instanceInfo20 = builder2.getRawInstance();
        java.lang.String str21 = instanceInfo20.getHomePageUrl();
        com.netflix.appinfo.InstanceInfo.ActionType actionType22 = instanceInfo20.getActionType();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(applicationInfoManager8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 30 + "'", int12 == 30);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "172.20.26.3" + "'", str14, "172.20.26.3");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(dataCenterInfo18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(actionType22);
    }

    @Test
    public void test01956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01956");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder14.setStatusPageUrlForDeser("na");
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder16.setNamespace("na");
        com.netflix.appinfo.LeaseInfo leaseInfo19 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder16.setLeaseInfo(leaseInfo19);
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder20.setSecureVIPAddress("");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder20.setNamespace("HTTP://HI!:80/STATUS");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test01957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01957");
        com.netflix.appinfo.DataCenterInfo dataCenterInfo1 = null;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("", dataCenterInfo1);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo3 = myDataCenterInstanceConfig2.getDataCenterInfo();
        int int4 = myDataCenterInstanceConfig2.getLeaseExpirationDurationInSeconds();
        java.lang.String str5 = myDataCenterInstanceConfig2.getSecureHealthCheckUrl();
        java.lang.String str6 = myDataCenterInstanceConfig2.getStatusPageUrl();
        java.lang.String str7 = myDataCenterInstanceConfig2.getHomePageUrl();
        org.junit.Assert.assertNull(dataCenterInfo3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 90 + "'", int4 == 90);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test01958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01958");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        instanceInfo11.setIsCoordinatingDiscoveryServer();
        int int14 = instanceInfo11.getPort();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus15 = instanceInfo11.getStatus();
        java.lang.String str16 = instanceInfo11.getHostName();
        com.netflix.appinfo.InstanceInfo instanceInfo17 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        int int18 = instanceInfo11.getPort();
        java.lang.String str19 = instanceInfo11.getId();
        instanceInfo11.setSID("http://default:80/Status");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager22 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo23 = applicationInfoManager22.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig25 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int26 = myDataCenterInstanceConfig25.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo27 = myDataCenterInstanceConfig25.getDataCenterInfo();
        java.lang.String str28 = myDataCenterInstanceConfig25.getNamespace();
        boolean boolean29 = myDataCenterInstanceConfig25.isNonSecurePortEnabled();
        applicationInfoManager22.config = myDataCenterInstanceConfig25;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig31 = applicationInfoManager22.config;
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager22.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo33 = applicationInfoManager22.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType34 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo33.setActionType(actionType34);
        com.netflix.appinfo.LeaseInfo leaseInfo36 = null;
        instanceInfo33.setLeaseInfo(leaseInfo36);
        java.util.Set<java.lang.String> strSet38 = instanceInfo33.getHealthCheckUrls();
        java.lang.String str39 = instanceInfo33.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder40 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo33);
        com.netflix.appinfo.InstanceInfo.Builder builder42 = builder40.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder45 = builder42.add("/healthcheck", "UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder47 = builder45.setSecureVIPAddress("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder49 = builder45.setCountryId(0);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager50 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo51 = applicationInfoManager50.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig53 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int54 = myDataCenterInstanceConfig53.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo55 = myDataCenterInstanceConfig53.getDataCenterInfo();
        java.lang.String str56 = myDataCenterInstanceConfig53.getNamespace();
        boolean boolean57 = myDataCenterInstanceConfig53.isNonSecurePortEnabled();
        applicationInfoManager50.config = myDataCenterInstanceConfig53;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig59 = applicationInfoManager50.config;
        com.netflix.appinfo.InstanceInfo instanceInfo60 = applicationInfoManager50.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo61 = applicationInfoManager50.instanceInfo;
        int int62 = instanceInfo61.getSecurePort();
        boolean boolean63 = instanceInfo61.isDirty();
        boolean boolean64 = instanceInfo61.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager65 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo66 = applicationInfoManager65.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig68 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int69 = myDataCenterInstanceConfig68.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo70 = myDataCenterInstanceConfig68.getDataCenterInfo();
        java.lang.String str71 = myDataCenterInstanceConfig68.getNamespace();
        boolean boolean72 = myDataCenterInstanceConfig68.isNonSecurePortEnabled();
        applicationInfoManager65.config = myDataCenterInstanceConfig68;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig74 = applicationInfoManager65.config;
        com.netflix.appinfo.InstanceInfo instanceInfo75 = applicationInfoManager65.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo76 = applicationInfoManager65.instanceInfo;
        int int77 = instanceInfo76.getSecurePort();
        boolean boolean78 = instanceInfo76.isDirty();
        java.lang.String str79 = instanceInfo76.getHostName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus80 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        instanceInfo76.setStatus(instanceStatus80);
        com.netflix.appinfo.InstanceInfo.PortType portType82 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean83 = instanceInfo76.isPortEnabled(portType82);
        boolean boolean84 = instanceInfo61.isPortEnabled(portType82);
        com.netflix.appinfo.InstanceInfo.Builder builder86 = builder49.enablePort(portType82, false);
        boolean boolean87 = instanceInfo11.isPortEnabled(portType82);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 80 + "'", int14 == 80);
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus15 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING + "'", instanceStatus15.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str16, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 80 + "'", int18 == 80);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str19, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager22);
        org.junit.Assert.assertNotNull(instanceInfo23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 30 + "'", int26 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig31);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertTrue("'" + actionType34 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType34.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str39, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(applicationInfoManager50);
        org.junit.Assert.assertNotNull(instanceInfo51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 30 + "'", int54 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig59);
        org.junit.Assert.assertNotNull(instanceInfo60);
        org.junit.Assert.assertNotNull(instanceInfo61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 443 + "'", int62 == 443);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(applicationInfoManager65);
        org.junit.Assert.assertNotNull(instanceInfo66);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 30 + "'", int69 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig74);
        org.junit.Assert.assertNotNull(instanceInfo75);
        org.junit.Assert.assertNotNull(instanceInfo76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 443 + "'", int77 == 443);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str79, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + instanceStatus80 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus80.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertTrue("'" + portType82 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType82.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test01959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01959");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder12.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder12.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo instanceInfo20 = builder12.build();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager21 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo22 = applicationInfoManager21.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int25 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig24.getDataCenterInfo();
        java.lang.String str27 = myDataCenterInstanceConfig24.getNamespace();
        boolean boolean28 = myDataCenterInstanceConfig24.isNonSecurePortEnabled();
        applicationInfoManager21.config = myDataCenterInstanceConfig24;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig30 = applicationInfoManager21.config;
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager21.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager21.instanceInfo;
        java.lang.Boolean boolean33 = instanceInfo32.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus34 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo32.setOverriddenStatus(instanceStatus34);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager36 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo37 = applicationInfoManager36.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig39 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int40 = myDataCenterInstanceConfig39.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo41 = myDataCenterInstanceConfig39.getDataCenterInfo();
        java.lang.String str42 = myDataCenterInstanceConfig39.getNamespace();
        boolean boolean43 = myDataCenterInstanceConfig39.isNonSecurePortEnabled();
        applicationInfoManager36.config = myDataCenterInstanceConfig39;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig45 = applicationInfoManager36.config;
        com.netflix.appinfo.InstanceInfo instanceInfo46 = applicationInfoManager36.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo47 = applicationInfoManager36.instanceInfo;
        java.lang.Boolean boolean48 = instanceInfo47.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus49 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo47.setOverriddenStatus(instanceStatus49);
        instanceInfo47.setLastDirtyTimestamp((java.lang.Long) (-1L));
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus53 = instanceInfo47.getOverriddenStatus();
        instanceInfo32.setOverriddenStatus(instanceStatus53);
        instanceInfo20.setStatus(instanceStatus53);
        java.util.Set<java.lang.String> strSet56 = instanceInfo20.getHealthCheckUrls();
        java.lang.String str57 = instanceInfo20.getSecureVipAddress();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertNotNull(applicationInfoManager21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 30 + "'", int25 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertEquals("'" + boolean33 + "' != '" + true + "'", boolean33, true);
        org.junit.Assert.assertTrue("'" + instanceStatus34 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus34.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(applicationInfoManager36);
        org.junit.Assert.assertNotNull(instanceInfo37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 30 + "'", int40 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig45);
        org.junit.Assert.assertNotNull(instanceInfo46);
        org.junit.Assert.assertNotNull(instanceInfo47);
        org.junit.Assert.assertEquals("'" + boolean48 + "' != '" + true + "'", boolean48, true);
        org.junit.Assert.assertTrue("'" + instanceStatus49 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus49.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + instanceStatus53 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus53.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "/healthcheck" + "'", str57, "/healthcheck");
    }

    @Test
    public void test01960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01960");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        java.lang.String str4 = myDataCenterInstanceConfig1.getVirtualHostName();
        java.lang.String str5 = myDataCenterInstanceConfig1.getHomePageUrl();
        java.lang.String str7 = myDataCenterInstanceConfig1.getHostName(true);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = myDataCenterInstanceConfig1.getMetadataMap();
        java.lang.String str9 = myDataCenterInstanceConfig1.getIpAddress();
        java.lang.String str10 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str4, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str7, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "172.20.26.3" + "'", str9, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/Status" + "'", str10, "/Status");
    }

    @Test
    public void test01961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01961");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        boolean boolean3 = myDataCenterInstanceConfig2.getSecurePortEnabled();
        java.lang.String str4 = myDataCenterInstanceConfig2.getHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig2.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig6 = new com.netflix.appinfo.MyDataCenterInstanceConfig("unknown", dataCenterInfo5);
        java.lang.String str7 = myDataCenterInstanceConfig6.getNamespace();
        java.lang.String str8 = myDataCenterInstanceConfig6.getStatusPageUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "unknown" + "'", str7, "unknown");
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test01962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01962");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder8.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder8.setHomePageUrlForDeser("");
        com.netflix.appinfo.LeaseInfo leaseInfo13 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setLeaseInfo(leaseInfo13);
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder12.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder16.setSID("default");
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setCountryId((int) (byte) -1);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager21 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo22 = applicationInfoManager21.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig24 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int25 = myDataCenterInstanceConfig24.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo26 = myDataCenterInstanceConfig24.getDataCenterInfo();
        java.lang.String str27 = myDataCenterInstanceConfig24.getNamespace();
        boolean boolean28 = myDataCenterInstanceConfig24.isNonSecurePortEnabled();
        applicationInfoManager21.config = myDataCenterInstanceConfig24;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig30 = applicationInfoManager21.config;
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager21.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager21.instanceInfo;
        java.lang.Boolean boolean33 = instanceInfo32.isCoordinatingDiscoveryServer();
        java.lang.String str34 = instanceInfo32.getVIPAddress();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus35 = instanceInfo32.getOverriddenStatus();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo36 = instanceInfo32.getDataCenterInfo();
        java.lang.Boolean boolean37 = instanceInfo32.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus38 = instanceInfo32.getStatus();
        com.netflix.appinfo.InstanceInfo.Builder builder39 = builder18.setStatus(instanceStatus38);
        com.netflix.appinfo.InstanceInfo.Builder builder41 = builder39.setNamespace("http:///:80/Status");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager42 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo43 = applicationInfoManager42.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig45 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int46 = myDataCenterInstanceConfig45.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo47 = myDataCenterInstanceConfig45.getDataCenterInfo();
        java.lang.String str48 = myDataCenterInstanceConfig45.getNamespace();
        boolean boolean49 = myDataCenterInstanceConfig45.isNonSecurePortEnabled();
        applicationInfoManager42.config = myDataCenterInstanceConfig45;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig51 = applicationInfoManager42.config;
        com.netflix.appinfo.InstanceInfo instanceInfo52 = applicationInfoManager42.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo53 = applicationInfoManager42.instanceInfo;
        int int54 = instanceInfo53.getSecurePort();
        java.lang.String str55 = instanceInfo53.getSID();
        java.util.Set<java.lang.String> strSet56 = instanceInfo53.getHealthCheckUrls();
        java.util.Set<java.lang.String> strSet57 = instanceInfo53.getHealthCheckUrls();
        java.lang.String str58 = instanceInfo53.getASGName();
        java.util.Map<java.lang.String, java.lang.String> strMap59 = instanceInfo53.getMetadata();
        java.lang.String str60 = instanceInfo53.getHostName();
        com.netflix.appinfo.InstanceInfo.Builder builder61 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder63 = builder61.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder65 = builder61.setAppName("default");
        com.netflix.appinfo.InstanceInfo instanceInfo66 = builder61.build();
        com.netflix.appinfo.InstanceInfo.Builder builder68 = builder61.setIPAddr("http://hi!:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo69 = builder61.build();
        java.lang.String str70 = instanceInfo69.getHostName();
        com.netflix.appinfo.LeaseInfo leaseInfo71 = instanceInfo69.getLeaseInfo();
        instanceInfo69.setLastDirtyTimestamp((java.lang.Long) 1636105976220L);
        java.lang.String str74 = instanceInfo69.getHomePageUrl();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager75 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo76 = applicationInfoManager75.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig78 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int79 = myDataCenterInstanceConfig78.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo80 = myDataCenterInstanceConfig78.getDataCenterInfo();
        java.lang.String str81 = myDataCenterInstanceConfig78.getNamespace();
        boolean boolean82 = myDataCenterInstanceConfig78.isNonSecurePortEnabled();
        applicationInfoManager75.config = myDataCenterInstanceConfig78;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig84 = applicationInfoManager75.config;
        com.netflix.appinfo.InstanceInfo instanceInfo85 = applicationInfoManager75.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo86 = applicationInfoManager75.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType87 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo86.setActionType(actionType87);
        com.netflix.appinfo.LeaseInfo leaseInfo89 = null;
        instanceInfo86.setLeaseInfo(leaseInfo89);
        java.util.Set<java.lang.String> strSet91 = instanceInfo86.getHealthCheckUrls();
        java.lang.String str92 = instanceInfo86.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder93 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo86);
        com.netflix.appinfo.InstanceInfo.ActionType actionType94 = instanceInfo86.getActionType();
        instanceInfo69.setActionType(actionType94);
        instanceInfo53.setActionType(actionType94);
        com.netflix.appinfo.InstanceInfo.Builder builder97 = builder39.setActionType(actionType94);
        boolean boolean98 = builder97.isInitialized();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(applicationInfoManager21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 30 + "'", int25 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertNotNull(instanceInfo32);
// flaky:         org.junit.Assert.assertEquals("'" + boolean33 + "' != '" + false + "'", boolean33, false);
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus35 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus35.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(dataCenterInfo36);
// flaky:         org.junit.Assert.assertEquals("'" + boolean37 + "' != '" + false + "'", boolean37, false);
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus38 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus38.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(applicationInfoManager42);
        org.junit.Assert.assertNotNull(instanceInfo43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 30 + "'", int46 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig51);
        org.junit.Assert.assertNotNull(instanceInfo52);
        org.junit.Assert.assertNotNull(instanceInfo53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 443 + "'", int54 == 443);
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "172.20.26.3" + "'", str55, "172.20.26.3");
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str60, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(instanceInfo66);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(instanceInfo69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(leaseInfo71);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(applicationInfoManager75);
        org.junit.Assert.assertNotNull(instanceInfo76);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 30 + "'", int79 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig84);
        org.junit.Assert.assertNotNull(instanceInfo85);
        org.junit.Assert.assertNotNull(instanceInfo86);
        org.junit.Assert.assertTrue("'" + actionType87 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType87.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str92, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + actionType94 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType94.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(builder97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test01963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01963");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig1 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo2 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager3 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig1, instanceInfo2);
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig4 = applicationInfoManager3.config;
        com.netflix.appinfo.InstanceInfo instanceInfo5 = applicationInfoManager3.getInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig6 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo7 = myDataCenterInstanceConfig6.getDataCenterInfo();
        applicationInfoManager3.config = myDataCenterInstanceConfig6;
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig10 = applicationInfoManager3.config;
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager3.getInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig13 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int14 = myDataCenterInstanceConfig13.getLeaseRenewalIntervalInSeconds();
        boolean boolean15 = myDataCenterInstanceConfig13.isNonSecurePortEnabled();
        int int16 = myDataCenterInstanceConfig13.getSecurePort();
        java.lang.String str17 = myDataCenterInstanceConfig13.getAppGroupName();
        int int18 = myDataCenterInstanceConfig13.getLeaseExpirationDurationInSeconds();
        applicationInfoManager3.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig13);
        java.lang.String str20 = myDataCenterInstanceConfig13.getSecureVirtualHostName();
        int int21 = myDataCenterInstanceConfig13.getLeaseExpirationDurationInSeconds();
        java.lang.String str22 = myDataCenterInstanceConfig13.getStatusPageUrlPath();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig1);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig4);
        org.junit.Assert.assertNull(instanceInfo5);
        org.junit.Assert.assertNotNull(dataCenterInfo7);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig10);
        org.junit.Assert.assertNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 30 + "'", int14 == 30);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 443 + "'", int16 == 443);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "unknown" + "'", str17, "unknown");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 90 + "'", int18 == 90);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 90 + "'", int21 == 90);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "/Status" + "'", str22, "/Status");
    }

    @Test
    public void test01964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01964");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder3 = builder0.setHealthCheckUrlsForDeser("/healthcheck", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder3.setStatusPageUrlForDeser("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder5.setCountryId((int) (short) 0);
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder5.setSecureVIPAddress("http://inesserver2.windows.cin.ufpe.br:80/Status");
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo instanceInfo10 = builder9.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: name is required!");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
    }

    @Test
    public void test01965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01965");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager18 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager18.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int22 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo23 = myDataCenterInstanceConfig21.getDataCenterInfo();
        java.lang.String str24 = myDataCenterInstanceConfig21.getNamespace();
        boolean boolean25 = myDataCenterInstanceConfig21.isNonSecurePortEnabled();
        applicationInfoManager18.config = myDataCenterInstanceConfig21;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig27 = applicationInfoManager18.config;
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager18.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager18.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType30 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo29.setActionType(actionType30);
        instanceInfo11.setActionType(actionType30);
        java.lang.String str33 = instanceInfo11.getSID();
        com.netflix.appinfo.InstanceInfo.ActionType actionType34 = instanceInfo11.getActionType();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager35 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo36 = applicationInfoManager35.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig38 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int39 = myDataCenterInstanceConfig38.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo40 = myDataCenterInstanceConfig38.getDataCenterInfo();
        java.lang.String str41 = myDataCenterInstanceConfig38.getNamespace();
        boolean boolean42 = myDataCenterInstanceConfig38.isNonSecurePortEnabled();
        applicationInfoManager35.config = myDataCenterInstanceConfig38;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig44 = applicationInfoManager35.config;
        com.netflix.appinfo.InstanceInfo instanceInfo45 = applicationInfoManager35.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo46 = applicationInfoManager35.instanceInfo;
        int int47 = instanceInfo46.getSecurePort();
        boolean boolean48 = instanceInfo46.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo49 = new com.netflix.appinfo.InstanceInfo(instanceInfo46);
        com.netflix.appinfo.InstanceInfo instanceInfo50 = new com.netflix.appinfo.InstanceInfo(instanceInfo46);
        com.netflix.appinfo.InstanceInfo.ActionType actionType51 = instanceInfo46.getActionType();
        instanceInfo11.setActionType(actionType51);
        java.lang.String str53 = instanceInfo11.getId();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 30 + "'", int22 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertTrue("'" + actionType30 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType30.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "na" + "'", str33, "na");
        org.junit.Assert.assertTrue("'" + actionType34 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType34.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager35);
        org.junit.Assert.assertNotNull(instanceInfo36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 30 + "'", int39 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig44);
        org.junit.Assert.assertNotNull(instanceInfo45);
        org.junit.Assert.assertNotNull(instanceInfo46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 443 + "'", int47 == 443);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + actionType51 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType51.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str53, "inesserver2.windows.cin.ufpe.br");
    }

    @Test
    public void test01966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01966");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        int int16 = instanceInfo11.getSecurePort();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager17 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager17.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig20 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int21 = myDataCenterInstanceConfig20.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = myDataCenterInstanceConfig20.getDataCenterInfo();
        java.lang.String str23 = myDataCenterInstanceConfig20.getNamespace();
        boolean boolean24 = myDataCenterInstanceConfig20.isNonSecurePortEnabled();
        applicationInfoManager17.config = myDataCenterInstanceConfig20;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig26 = applicationInfoManager17.config;
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager17.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager17.instanceInfo;
        int int29 = instanceInfo28.getSecurePort();
        boolean boolean30 = instanceInfo28.isDirty();
        boolean boolean31 = instanceInfo28.isDirty();
        java.lang.String str32 = instanceInfo28.getVersion();
        instanceInfo28.setIsCoordinatingDiscoveryServer();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager34 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager34.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig37 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int38 = myDataCenterInstanceConfig37.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo39 = myDataCenterInstanceConfig37.getDataCenterInfo();
        java.lang.String str40 = myDataCenterInstanceConfig37.getNamespace();
        boolean boolean41 = myDataCenterInstanceConfig37.isNonSecurePortEnabled();
        applicationInfoManager34.config = myDataCenterInstanceConfig37;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig43 = applicationInfoManager34.config;
        com.netflix.appinfo.InstanceInfo instanceInfo44 = applicationInfoManager34.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo45 = applicationInfoManager34.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType46 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo45.setActionType(actionType46);
        com.netflix.appinfo.LeaseInfo leaseInfo48 = null;
        instanceInfo45.setLeaseInfo(leaseInfo48);
        java.util.Set<java.lang.String> strSet50 = instanceInfo45.getHealthCheckUrls();
        java.lang.String str51 = instanceInfo45.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder52 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo45);
        com.netflix.appinfo.InstanceInfo.Builder builder54 = builder52.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.PortType portType55 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder57 = builder52.enablePort(portType55, true);
        boolean boolean58 = instanceInfo28.isPortEnabled(portType55);
        boolean boolean59 = instanceInfo11.equals((java.lang.Object) instanceInfo28);
        java.lang.String str60 = instanceInfo11.getHomePageUrl();
        java.lang.String str61 = instanceInfo11.getVersion();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 443 + "'", int16 == 443);
        org.junit.Assert.assertNotNull(applicationInfoManager17);
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 30 + "'", int21 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 443 + "'", int29 == 443);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "unknown" + "'", str32, "unknown");
        org.junit.Assert.assertNotNull(applicationInfoManager34);
        org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 30 + "'", int38 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig43);
        org.junit.Assert.assertNotNull(instanceInfo44);
        org.junit.Assert.assertNotNull(instanceInfo45);
        org.junit.Assert.assertTrue("'" + actionType46 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType46.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str51, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + portType55 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType55.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str60, "http://inesserver2.windows.cin.ufpe.br:80/");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "unknown" + "'", str61, "unknown");
    }

    @Test
    public void test01967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01967");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        int int4 = myDataCenterInstanceConfig1.getSecurePort();
        java.lang.String str5 = myDataCenterInstanceConfig1.getAppGroupName();
        java.lang.String str6 = myDataCenterInstanceConfig1.getASGName();
        java.lang.String str7 = myDataCenterInstanceConfig1.getASGName();
        int int8 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder9.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder9.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder9.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig16 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo17 = myDataCenterInstanceConfig16.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder15.setDataCenterInfo(dataCenterInfo17);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo20 = myDataCenterInstanceConfig19.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder15.setDataCenterInfo(dataCenterInfo20);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder21.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder21.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder21.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo31 = builder30.build();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager32 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo31);
        instanceInfo31.setIsDirty(true);
        long long35 = instanceInfo31.getLastUpdatedTimestamp();
        com.netflix.appinfo.InstanceInfo.Builder builder36 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder36.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder41 = builder38.setHealthCheckUrlsForDeser("http://inesserver2.windows.cin.ufpe.br:80/", "default");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager42 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo43 = applicationInfoManager42.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig45 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int46 = myDataCenterInstanceConfig45.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo47 = myDataCenterInstanceConfig45.getDataCenterInfo();
        java.lang.String str48 = myDataCenterInstanceConfig45.getNamespace();
        boolean boolean49 = myDataCenterInstanceConfig45.isNonSecurePortEnabled();
        applicationInfoManager42.config = myDataCenterInstanceConfig45;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig51 = applicationInfoManager42.config;
        com.netflix.appinfo.InstanceInfo instanceInfo52 = applicationInfoManager42.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo53 = applicationInfoManager42.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType54 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo53.setActionType(actionType54);
        com.netflix.appinfo.LeaseInfo leaseInfo56 = null;
        instanceInfo53.setLeaseInfo(leaseInfo56);
        java.lang.String str58 = instanceInfo53.getSID();
        com.netflix.appinfo.InstanceInfo instanceInfo59 = new com.netflix.appinfo.InstanceInfo(instanceInfo53);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager60 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo61 = applicationInfoManager60.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig63 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int64 = myDataCenterInstanceConfig63.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo65 = myDataCenterInstanceConfig63.getDataCenterInfo();
        java.lang.String str66 = myDataCenterInstanceConfig63.getNamespace();
        boolean boolean67 = myDataCenterInstanceConfig63.isNonSecurePortEnabled();
        applicationInfoManager60.config = myDataCenterInstanceConfig63;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig69 = applicationInfoManager60.config;
        com.netflix.appinfo.InstanceInfo instanceInfo70 = applicationInfoManager60.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo71 = applicationInfoManager60.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType72 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo71.setActionType(actionType72);
        com.netflix.appinfo.LeaseInfo leaseInfo74 = null;
        instanceInfo71.setLeaseInfo(leaseInfo74);
        java.util.Set<java.lang.String> strSet76 = instanceInfo71.getHealthCheckUrls();
        java.lang.String str77 = instanceInfo71.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder78 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo71);
        com.netflix.appinfo.InstanceInfo.Builder builder81 = builder78.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder83 = builder78.setVIPAddressDeser("hi!");
        com.netflix.appinfo.LeaseInfo leaseInfo84 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder85 = builder78.setLeaseInfo(leaseInfo84);
        com.netflix.appinfo.InstanceInfo.PortType portType86 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder88 = builder78.enablePort(portType86, false);
        boolean boolean89 = instanceInfo53.isPortEnabled(portType86);
        com.netflix.appinfo.InstanceInfo.Builder builder91 = builder38.enablePort(portType86, false);
        com.netflix.appinfo.InstanceInfo.Builder builder93 = builder91.setAppGroupName("inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.InstanceInfo.Builder builder95 = builder91.setIPAddr("default");
        com.netflix.appinfo.InstanceInfo.Builder builder97 = builder95.setHomePageUrlForDeser("http://default:80/Status");
        boolean boolean98 = builder97.isInitialized();
        boolean boolean99 = instanceInfo31.equals((java.lang.Object) builder97);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 443 + "'", int4 == 443);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "unknown" + "'", str5, "unknown");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(dataCenterInfo17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(dataCenterInfo20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(instanceInfo31);
// flaky:         org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1636106063169L + "'", long35 == 1636106063169L);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(applicationInfoManager42);
        org.junit.Assert.assertNotNull(instanceInfo43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 30 + "'", int46 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig51);
        org.junit.Assert.assertNotNull(instanceInfo52);
        org.junit.Assert.assertNotNull(instanceInfo53);
        org.junit.Assert.assertTrue("'" + actionType54 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType54.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "na" + "'", str58, "na");
        org.junit.Assert.assertNotNull(applicationInfoManager60);
        org.junit.Assert.assertNotNull(instanceInfo61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 30 + "'", int64 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig69);
        org.junit.Assert.assertNotNull(instanceInfo70);
        org.junit.Assert.assertNotNull(instanceInfo71);
        org.junit.Assert.assertTrue("'" + actionType72 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType72.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertTrue("'" + portType86 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType86.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertNotNull(builder95);
        org.junit.Assert.assertNotNull(builder97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test01968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01968");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder6.setHostName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder6.setLastDirtyTimestamp((long) (short) 10);
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder13.setSecurePort((int) (short) -1);
        com.netflix.appinfo.InstanceInfo.ActionType actionType16 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder13.setActionType(actionType16);
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder13.setSID("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder13.setASGName("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder13.setStatusPageUrlForDeser("HTTP://HI!:80/STATUS");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + actionType16 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType16.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
    }

    @Test
    public void test01969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01969");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        int int3 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        boolean boolean5 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig1.getDataCenterInfo();
        java.lang.String str7 = myDataCenterInstanceConfig1.getHomePageUrlPath();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager8 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo9 = applicationInfoManager8.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig11 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int12 = myDataCenterInstanceConfig11.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo13 = myDataCenterInstanceConfig11.getDataCenterInfo();
        java.lang.String str14 = myDataCenterInstanceConfig11.getNamespace();
        boolean boolean15 = myDataCenterInstanceConfig11.isNonSecurePortEnabled();
        applicationInfoManager8.config = myDataCenterInstanceConfig11;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig17 = applicationInfoManager8.config;
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager8.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager8.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType20 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo19.setActionType(actionType20);
        com.netflix.appinfo.LeaseInfo leaseInfo22 = null;
        instanceInfo19.setLeaseInfo(leaseInfo22);
        java.lang.String str24 = instanceInfo19.getSID();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = new com.netflix.appinfo.InstanceInfo(instanceInfo19);
        long long26 = instanceInfo25.getLastUpdatedTimestamp();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager27 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo25);
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig28 = null;
        applicationInfoManager27.config = eurekaInstanceConfig28;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/Status" + "'", str4, "/Status");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/" + "'", str7, "/");
        org.junit.Assert.assertNotNull(applicationInfoManager8);
        org.junit.Assert.assertNotNull(instanceInfo9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 30 + "'", int12 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig17);
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertTrue("'" + actionType20 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType20.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "na" + "'", str24, "na");
// flaky:         org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1636106063221L + "'", long26 == 1636106063221L);
    }

    @Test
    public void test01970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01970");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder12.setSecureVIPAddressDeser("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder16.add("na", "/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder16.setCountryId((int) (short) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder16.setSecureVIPAddress("unknown");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder16.setSecurePort(80);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager26 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager26.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig29 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int30 = myDataCenterInstanceConfig29.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo31 = myDataCenterInstanceConfig29.getDataCenterInfo();
        java.lang.String str32 = myDataCenterInstanceConfig29.getNamespace();
        boolean boolean33 = myDataCenterInstanceConfig29.isNonSecurePortEnabled();
        applicationInfoManager26.config = myDataCenterInstanceConfig29;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig35 = applicationInfoManager26.config;
        com.netflix.appinfo.InstanceInfo instanceInfo36 = applicationInfoManager26.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo37 = applicationInfoManager26.instanceInfo;
        int int38 = instanceInfo37.getSecurePort();
        boolean boolean39 = instanceInfo37.isDirty();
        boolean boolean40 = instanceInfo37.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager41 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo42 = applicationInfoManager41.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig44 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int45 = myDataCenterInstanceConfig44.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo46 = myDataCenterInstanceConfig44.getDataCenterInfo();
        java.lang.String str47 = myDataCenterInstanceConfig44.getNamespace();
        boolean boolean48 = myDataCenterInstanceConfig44.isNonSecurePortEnabled();
        applicationInfoManager41.config = myDataCenterInstanceConfig44;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig50 = applicationInfoManager41.config;
        com.netflix.appinfo.InstanceInfo instanceInfo51 = applicationInfoManager41.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo52 = applicationInfoManager41.instanceInfo;
        int int53 = instanceInfo52.getSecurePort();
        boolean boolean54 = instanceInfo52.isDirty();
        java.lang.String str55 = instanceInfo52.getHostName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus56 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        instanceInfo52.setStatus(instanceStatus56);
        com.netflix.appinfo.InstanceInfo.PortType portType58 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean59 = instanceInfo52.isPortEnabled(portType58);
        boolean boolean60 = instanceInfo37.isPortEnabled(portType58);
        com.netflix.appinfo.InstanceInfo.Builder builder62 = builder25.enablePort(portType58, true);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(applicationInfoManager26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 30 + "'", int30 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig35);
        org.junit.Assert.assertNotNull(instanceInfo36);
        org.junit.Assert.assertNotNull(instanceInfo37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 7002 + "'", int38 == 7002);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(applicationInfoManager41);
        org.junit.Assert.assertNotNull(instanceInfo42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig50);
        org.junit.Assert.assertNotNull(instanceInfo51);
        org.junit.Assert.assertNotNull(instanceInfo52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7002 + "'", int53 == 7002);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str55, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + instanceStatus56 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus56.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertTrue("'" + portType58 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType58.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(builder62);
    }

    @Test
    public void test01971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01971");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig3.getDataCenterInfo();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig3);
        boolean boolean10 = myDataCenterInstanceConfig3.getSecurePortEnabled();
        java.lang.String str11 = myDataCenterInstanceConfig3.getSecureHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo12 = myDataCenterInstanceConfig3.getDataCenterInfo();
        boolean boolean13 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        boolean boolean14 = myDataCenterInstanceConfig3.isInstanceEnabledOnit();
        boolean boolean15 = myDataCenterInstanceConfig3.getSecurePortEnabled();
        java.lang.String str16 = myDataCenterInstanceConfig3.getHomePageUrlPath();
        int int17 = myDataCenterInstanceConfig3.getNonSecurePort();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(dataCenterInfo12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/" + "'", str16, "/");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 80 + "'", int17 == 80);
    }

    @Test
    public void test01972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01972");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        int int12 = instanceInfo11.getSecurePort();
        instanceInfo11.setIsCoordinatingDiscoveryServer();
        int int14 = instanceInfo11.getPort();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus15 = instanceInfo11.getStatus();
        java.lang.String str16 = instanceInfo11.getHostName();
        com.netflix.appinfo.InstanceInfo instanceInfo17 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        int int18 = instanceInfo11.getPort();
        com.netflix.appinfo.InstanceInfo instanceInfo19 = new com.netflix.appinfo.InstanceInfo(instanceInfo11);
        long long20 = instanceInfo19.getLastUpdatedTimestamp();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 443 + "'", int12 == 443);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 80 + "'", int14 == 80);
        org.junit.Assert.assertTrue("'" + instanceStatus15 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING + "'", instanceStatus15.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str16, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 80 + "'", int18 == 80);
// flaky:         org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1636106063273L + "'", long20 == 1636106063273L);
    }

    @Test
    public void test01973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01973");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = instanceInfo11.getAppGroupName();
        int int15 = instanceInfo11.getPort();
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getSID();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UNKNOWN" + "'", str14, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 80 + "'", int15 == 80);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "na" + "'", str17, "na");
    }

    @Test
    public void test01974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01974");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        boolean boolean22 = builder21.isInitialized();
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder21.setPort((int) '#');
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder24.setCountryId(7001);
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder24.setSID("inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.InstanceInfo instanceInfo29 = builder28.getRawInstance();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager30 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager30.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig33 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int34 = myDataCenterInstanceConfig33.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo35 = myDataCenterInstanceConfig33.getDataCenterInfo();
        java.lang.String str36 = myDataCenterInstanceConfig33.getNamespace();
        boolean boolean37 = myDataCenterInstanceConfig33.isNonSecurePortEnabled();
        applicationInfoManager30.config = myDataCenterInstanceConfig33;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig39 = applicationInfoManager30.config;
        com.netflix.appinfo.InstanceInfo instanceInfo40 = applicationInfoManager30.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo41 = applicationInfoManager30.instanceInfo;
        int int42 = instanceInfo41.getSecurePort();
        boolean boolean43 = instanceInfo41.isDirty();
        boolean boolean44 = instanceInfo41.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo45 = new com.netflix.appinfo.InstanceInfo(instanceInfo41);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus46 = instanceInfo41.getStatus();
        com.netflix.appinfo.InstanceInfo.ActionType actionType47 = instanceInfo41.getActionType();
        instanceInfo29.setActionType(actionType47);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertNotNull(applicationInfoManager30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig39);
        org.junit.Assert.assertNotNull(instanceInfo40);
        org.junit.Assert.assertNotNull(instanceInfo41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 443 + "'", int42 == 443);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus46 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus46.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertTrue("'" + actionType47 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType47.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
    }

    @Test
    public void test01975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01975");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        com.netflix.appinfo.InstanceInfo instanceInfo1 = null;
        java.lang.String str2 = com.netflix.appinfo.InstanceInfo.getZone(strArray0, instanceInfo1);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager3 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo4 = applicationInfoManager3.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig6 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int7 = myDataCenterInstanceConfig6.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig6.getDataCenterInfo();
        java.lang.String str9 = myDataCenterInstanceConfig6.getNamespace();
        boolean boolean10 = myDataCenterInstanceConfig6.isNonSecurePortEnabled();
        applicationInfoManager3.config = myDataCenterInstanceConfig6;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig12 = applicationInfoManager3.config;
        com.netflix.appinfo.InstanceInfo instanceInfo13 = applicationInfoManager3.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo14 = applicationInfoManager3.instanceInfo;
        java.lang.Boolean boolean15 = instanceInfo14.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus16 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo14.setOverriddenStatus(instanceStatus16);
        int int18 = instanceInfo14.getSecurePort();
        java.lang.String str19 = instanceInfo14.getHostName();
        java.lang.String str20 = instanceInfo14.getAppGroupName();
        java.lang.String str21 = instanceInfo14.getASGName();
        java.lang.String str22 = com.netflix.appinfo.InstanceInfo.getZone(strArray0, instanceInfo14);
        instanceInfo14.setIsDirty(false);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = instanceInfo14.getDataCenterInfo();
        java.lang.String str26 = instanceInfo14.getSID();
        boolean boolean27 = instanceInfo14.isDirty();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "default" + "'", str2, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager3);
        org.junit.Assert.assertNotNull(instanceInfo4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 30 + "'", int7 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig12);
        org.junit.Assert.assertNotNull(instanceInfo13);
        org.junit.Assert.assertNotNull(instanceInfo14);
// flaky:         org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertTrue("'" + instanceStatus16 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus16.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 443 + "'", int18 == 443);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str19, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UNKNOWN" + "'", str20, "UNKNOWN");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "default" + "'", str22, "default");
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str26, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test01976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01976");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder8 = builder6.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder6.setCountryId((int) (short) 100);
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder10.setIPAddr("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder10.setSID("");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test01977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01977");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        java.lang.Boolean boolean12 = instanceInfo11.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus13 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo11.setOverriddenStatus(instanceStatus13);
        int int15 = instanceInfo11.getSecurePort();
        java.lang.String str16 = instanceInfo11.getHostName();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = instanceInfo11.getMetadata();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder19 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder22 = builder20.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder24 = builder20.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder20.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig27 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo28 = myDataCenterInstanceConfig27.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder26.setDataCenterInfo(dataCenterInfo28);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig30 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo31 = myDataCenterInstanceConfig30.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder26.setDataCenterInfo(dataCenterInfo31);
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder32.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder36 = builder32.setSecureVIPAddressDeser("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder39 = builder36.add("na", "/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder41 = builder36.setCountryId((int) (short) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder43 = builder41.setAppGroupName("http://inesserver2.windows.cin.ufpe.br:80/");
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus44 = com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN;
        com.netflix.appinfo.InstanceInfo.Builder builder45 = builder43.setOverriddenStatus(instanceStatus44);
        instanceInfo11.setStatus(instanceStatus44);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
// flaky:         org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertTrue("'" + instanceStatus13 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus13.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 443 + "'", int15 == 443);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str16, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(dataCenterInfo28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(dataCenterInfo31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + instanceStatus44 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus44.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(builder45);
    }

    @Test
    public void test01978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01978");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.lang.String str16 = instanceInfo11.getSID();
        com.netflix.appinfo.LeaseInfo leaseInfo17 = instanceInfo11.getLeaseInfo();
        java.lang.String str18 = instanceInfo11.getStatusPageUrl();
        java.lang.String str19 = instanceInfo11.getAppName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType20 = instanceInfo11.getActionType();
        java.lang.String str21 = instanceInfo11.getSID();
        java.lang.String str22 = instanceInfo11.getVIPAddress();
        java.lang.String str23 = instanceInfo11.getAppGroupName();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "na" + "'", str16, "na");
        org.junit.Assert.assertNull(leaseInfo17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str18, "http://inesserver2.windows.cin.ufpe.br:80/Status");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UNKNOWN" + "'", str19, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + actionType20 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType20.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "na" + "'", str21, "na");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "inesserver2.windows.cin.ufpe.br:80" + "'", str22, "inesserver2.windows.cin.ufpe.br:80");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UNKNOWN" + "'", str23, "UNKNOWN");
    }

    @Test
    public void test01979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01979");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder18.setHealthCheckUrlsForDeser("", "hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder18.setStatusPageUrl("default", "");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager27 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager27.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig30 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int31 = myDataCenterInstanceConfig30.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo32 = myDataCenterInstanceConfig30.getDataCenterInfo();
        java.lang.String str33 = myDataCenterInstanceConfig30.getNamespace();
        boolean boolean34 = myDataCenterInstanceConfig30.isNonSecurePortEnabled();
        applicationInfoManager27.config = myDataCenterInstanceConfig30;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig36 = applicationInfoManager27.config;
        com.netflix.appinfo.InstanceInfo instanceInfo37 = applicationInfoManager27.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo38 = applicationInfoManager27.instanceInfo;
        int int39 = instanceInfo38.getSecurePort();
        com.netflix.appinfo.InstanceInfo.PortType portType40 = com.netflix.appinfo.InstanceInfo.PortType.SECURE;
        boolean boolean41 = instanceInfo38.isPortEnabled(portType40);
        com.netflix.appinfo.InstanceInfo.Builder builder43 = builder18.enablePort(portType40, true);
        com.netflix.appinfo.InstanceInfo.Builder builder46 = builder43.setHealthCheckUrlsForDeser("http://inesserver2.windows.cin.ufpe.br:80/Status", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder48 = builder46.setAppName("http://hi!:80/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder50 = builder46.setCountryId(7002);
        com.netflix.appinfo.InstanceInfo.Builder builder53 = builder46.setHealthCheckUrlsForDeser("/", "http://inesserver2.windows.cin.ufpe.br:10/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder55 = builder46.setCountryId(1);
        boolean boolean56 = builder55.isInitialized();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(applicationInfoManager27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 30 + "'", int31 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig36);
        org.junit.Assert.assertNotNull(instanceInfo37);
        org.junit.Assert.assertNotNull(instanceInfo38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 443 + "'", int39 == 443);
        org.junit.Assert.assertTrue("'" + portType40 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.SECURE + "'", portType40.equals(com.netflix.appinfo.InstanceInfo.PortType.SECURE));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test01980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01980");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isNonSecurePortEnabled();
        int int4 = myDataCenterInstanceConfig1.getSecurePort();
        java.lang.String str5 = myDataCenterInstanceConfig1.getAppGroupName();
        java.lang.String str6 = myDataCenterInstanceConfig1.getASGName();
        java.lang.String str7 = myDataCenterInstanceConfig1.getASGName();
        int int8 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder11 = builder9.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder13 = builder9.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder15 = builder9.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig16 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo17 = myDataCenterInstanceConfig16.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder15.setDataCenterInfo(dataCenterInfo17);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig19 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo20 = myDataCenterInstanceConfig19.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder15.setDataCenterInfo(dataCenterInfo20);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder21.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder21.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder21.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo31 = builder30.build();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager32 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig1, instanceInfo31);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager33 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager33.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig36 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int37 = myDataCenterInstanceConfig36.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo38 = myDataCenterInstanceConfig36.getDataCenterInfo();
        java.lang.String str39 = myDataCenterInstanceConfig36.getNamespace();
        boolean boolean40 = myDataCenterInstanceConfig36.isNonSecurePortEnabled();
        applicationInfoManager33.config = myDataCenterInstanceConfig36;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig42 = applicationInfoManager33.config;
        com.netflix.appinfo.InstanceInfo instanceInfo43 = applicationInfoManager33.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo44 = applicationInfoManager33.instanceInfo;
        java.lang.Boolean boolean45 = instanceInfo44.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus46 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo44.setOverriddenStatus(instanceStatus46);
        int int48 = instanceInfo44.getSecurePort();
        java.lang.String str49 = instanceInfo44.getHostName();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = instanceInfo44.getMetadata();
        instanceInfo44.setIsDirty(false);
        com.netflix.appinfo.LeaseInfo leaseInfo53 = instanceInfo44.getLeaseInfo();
        instanceInfo31.setLeaseInfo(leaseInfo53);
        com.netflix.appinfo.InstanceInfo.ActionType actionType55 = instanceInfo31.getActionType();
        instanceInfo31.setSID("http:///:80/Status");
        instanceInfo31.setIsCoordinatingDiscoveryServer();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 443 + "'", int4 == 443);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "unknown" + "'", str5, "unknown");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 30 + "'", int8 == 30);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(dataCenterInfo17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(dataCenterInfo20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertNotNull(applicationInfoManager33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 30 + "'", int37 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig42);
        org.junit.Assert.assertNotNull(instanceInfo43);
        org.junit.Assert.assertNotNull(instanceInfo44);
        org.junit.Assert.assertEquals("'" + boolean45 + "' != '" + false + "'", boolean45, false);
        org.junit.Assert.assertTrue("'" + instanceStatus46 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus46.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 7002 + "'", int48 == 7002);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(leaseInfo53);
        org.junit.Assert.assertNull(actionType55);
    }

    @Test
    public void test01981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01981");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo instanceInfo5 = builder0.build();
        java.lang.Boolean boolean6 = instanceInfo5.isCoordinatingDiscoveryServer();
        instanceInfo5.setIsCoordinatingDiscoveryServer();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager8 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo9 = applicationInfoManager8.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig11 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int12 = myDataCenterInstanceConfig11.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo13 = myDataCenterInstanceConfig11.getDataCenterInfo();
        java.lang.String str14 = myDataCenterInstanceConfig11.getNamespace();
        boolean boolean15 = myDataCenterInstanceConfig11.isNonSecurePortEnabled();
        applicationInfoManager8.config = myDataCenterInstanceConfig11;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig17 = applicationInfoManager8.config;
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager8.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager8.instanceInfo;
        java.lang.Boolean boolean20 = instanceInfo19.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus21 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo19.setOverriddenStatus(instanceStatus21);
        instanceInfo5.setOverriddenStatus(instanceStatus21);
        java.lang.String str24 = instanceInfo5.getId();
        java.util.Set<java.lang.String> strSet25 = instanceInfo5.getHealthCheckUrls();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(instanceInfo5);
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + false + "'", boolean6, false);
        org.junit.Assert.assertNotNull(applicationInfoManager8);
        org.junit.Assert.assertNotNull(instanceInfo9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 30 + "'", int12 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig17);
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + false + "'", boolean20, false);
        org.junit.Assert.assertTrue("'" + instanceStatus21 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus21.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strSet25);
    }

    @Test
    public void test01982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01982");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        com.netflix.appinfo.InstanceInfo instanceInfo6 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig8 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int9 = myDataCenterInstanceConfig8.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo10 = myDataCenterInstanceConfig8.getDataCenterInfo();
        java.lang.String str11 = myDataCenterInstanceConfig8.getHealthCheckUrl();
        int int12 = myDataCenterInstanceConfig8.getLeaseExpirationDurationInSeconds();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig8);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager14 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo15 = applicationInfoManager14.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig17 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int18 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig17.getDataCenterInfo();
        int int20 = myDataCenterInstanceConfig17.getLeaseExpirationDurationInSeconds();
        java.lang.String str21 = myDataCenterInstanceConfig17.getHomePageUrlPath();
        applicationInfoManager14.config = myDataCenterInstanceConfig17;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig23 = applicationInfoManager14.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager24 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo25 = applicationInfoManager24.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig27 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int28 = myDataCenterInstanceConfig27.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo29 = myDataCenterInstanceConfig27.getDataCenterInfo();
        java.lang.String str30 = myDataCenterInstanceConfig27.getNamespace();
        boolean boolean31 = myDataCenterInstanceConfig27.isNonSecurePortEnabled();
        applicationInfoManager24.config = myDataCenterInstanceConfig27;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig33 = applicationInfoManager24.config;
        com.netflix.appinfo.InstanceInfo instanceInfo34 = applicationInfoManager24.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo35 = applicationInfoManager24.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType36 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo35.setActionType(actionType36);
        applicationInfoManager14.instanceInfo = instanceInfo35;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager39 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo40 = applicationInfoManager39.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig42 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int43 = myDataCenterInstanceConfig42.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo44 = myDataCenterInstanceConfig42.getDataCenterInfo();
        java.lang.String str45 = myDataCenterInstanceConfig42.getNamespace();
        boolean boolean46 = myDataCenterInstanceConfig42.isNonSecurePortEnabled();
        applicationInfoManager39.config = myDataCenterInstanceConfig42;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig48 = applicationInfoManager39.config;
        com.netflix.appinfo.InstanceInfo instanceInfo49 = applicationInfoManager39.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo50 = applicationInfoManager39.instanceInfo;
        int int51 = instanceInfo50.getSecurePort();
        java.lang.String str52 = instanceInfo50.getSID();
        java.util.Set<java.lang.String> strSet53 = instanceInfo50.getHealthCheckUrls();
        java.util.Set<java.lang.String> strSet54 = instanceInfo50.getHealthCheckUrls();
        java.lang.String str55 = instanceInfo50.getASGName();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus56 = instanceInfo50.getStatus();
        applicationInfoManager14.setInstanceStatus(instanceStatus56);
        applicationInfoManager0.setInstanceStatus(instanceStatus56);
        applicationInfoManager0.refreshDataCenterInfoIfRequired();
        applicationInfoManager0.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager61 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo62 = applicationInfoManager61.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig64 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int65 = myDataCenterInstanceConfig64.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo66 = myDataCenterInstanceConfig64.getDataCenterInfo();
        java.lang.String str67 = myDataCenterInstanceConfig64.getNamespace();
        boolean boolean68 = myDataCenterInstanceConfig64.isNonSecurePortEnabled();
        applicationInfoManager61.config = myDataCenterInstanceConfig64;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig70 = applicationInfoManager61.config;
        com.netflix.appinfo.InstanceInfo instanceInfo71 = applicationInfoManager61.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo72 = applicationInfoManager61.instanceInfo;
        int int73 = instanceInfo72.getSecurePort();
        boolean boolean74 = instanceInfo72.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo75 = new com.netflix.appinfo.InstanceInfo(instanceInfo72);
        java.lang.String str76 = instanceInfo72.getAppGroupName();
        applicationInfoManager0.instanceInfo = instanceInfo72;
        applicationInfoManager0.refreshDataCenterInfoIfRequired();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(instanceInfo6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 30 + "'", int9 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 90 + "'", int12 == 90);
        org.junit.Assert.assertNotNull(applicationInfoManager14);
        org.junit.Assert.assertNotNull(instanceInfo15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 30 + "'", int18 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 90 + "'", int20 == 90);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "/" + "'", str21, "/");
        org.junit.Assert.assertNotNull(eurekaInstanceConfig23);
        org.junit.Assert.assertNotNull(applicationInfoManager24);
        org.junit.Assert.assertNotNull(instanceInfo25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 30 + "'", int28 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig33);
        org.junit.Assert.assertNotNull(instanceInfo34);
        org.junit.Assert.assertNotNull(instanceInfo35);
        org.junit.Assert.assertTrue("'" + actionType36 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType36.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager39);
        org.junit.Assert.assertNotNull(instanceInfo40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 30 + "'", int43 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig48);
        org.junit.Assert.assertNotNull(instanceInfo49);
        org.junit.Assert.assertNotNull(instanceInfo50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 443 + "'", int51 == 443);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "na" + "'", str52, "na");
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + instanceStatus56 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING + "'", instanceStatus56.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.STARTING));
        org.junit.Assert.assertNotNull(applicationInfoManager61);
        org.junit.Assert.assertNotNull(instanceInfo62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 30 + "'", int65 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig70);
        org.junit.Assert.assertNotNull(instanceInfo71);
        org.junit.Assert.assertNotNull(instanceInfo72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 443 + "'", int73 == 443);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "UNKNOWN" + "'", str76, "UNKNOWN");
    }

    @Test
    public void test01983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01983");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.getInfo();
        java.lang.String[] strArray12 = new java.lang.String[] {};
        com.netflix.appinfo.InstanceInfo instanceInfo13 = null;
        java.lang.String str14 = com.netflix.appinfo.InstanceInfo.getZone(strArray12, instanceInfo13);
        com.netflix.appinfo.InstanceInfo instanceInfo15 = null;
        java.lang.String str16 = com.netflix.appinfo.InstanceInfo.getZone(strArray12, instanceInfo15);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager17 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager17.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig20 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int21 = myDataCenterInstanceConfig20.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = myDataCenterInstanceConfig20.getDataCenterInfo();
        java.lang.String str23 = myDataCenterInstanceConfig20.getNamespace();
        boolean boolean24 = myDataCenterInstanceConfig20.isNonSecurePortEnabled();
        applicationInfoManager17.config = myDataCenterInstanceConfig20;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig26 = applicationInfoManager17.config;
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager17.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager17.instanceInfo;
        int int29 = instanceInfo28.getSecurePort();
        boolean boolean30 = instanceInfo28.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = new com.netflix.appinfo.InstanceInfo(instanceInfo28);
        com.netflix.appinfo.InstanceInfo instanceInfo32 = new com.netflix.appinfo.InstanceInfo(instanceInfo28);
        java.lang.String str33 = instanceInfo28.getAppGroupName();
        int int34 = instanceInfo28.getCountryId();
        java.lang.String str35 = com.netflix.appinfo.InstanceInfo.getZone(strArray12, instanceInfo28);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus36 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo28.setStatus(instanceStatus36);
        applicationInfoManager0.setInstanceStatus(instanceStatus36);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager39 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo40 = applicationInfoManager39.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig42 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int43 = myDataCenterInstanceConfig42.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo44 = myDataCenterInstanceConfig42.getDataCenterInfo();
        java.lang.String str45 = myDataCenterInstanceConfig42.getNamespace();
        boolean boolean46 = myDataCenterInstanceConfig42.isNonSecurePortEnabled();
        applicationInfoManager39.config = myDataCenterInstanceConfig42;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig48 = applicationInfoManager39.config;
        com.netflix.appinfo.InstanceInfo instanceInfo49 = applicationInfoManager39.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig52 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int53 = myDataCenterInstanceConfig52.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo54 = myDataCenterInstanceConfig52.getDataCenterInfo();
        java.lang.String str56 = myDataCenterInstanceConfig52.getHostName(true);
        com.netflix.appinfo.DataCenterInfo dataCenterInfo57 = myDataCenterInstanceConfig52.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig58 = new com.netflix.appinfo.MyDataCenterInstanceConfig("inesserver2.windows.cin.ufpe.br:80", dataCenterInfo57);
        java.lang.String str59 = myDataCenterInstanceConfig58.getSecureHealthCheckUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = myDataCenterInstanceConfig58.getMetadataMap();
        applicationInfoManager39.registerAppMetadata(strMap60);
        com.netflix.appinfo.InstanceInfo instanceInfo62 = applicationInfoManager39.instanceInfo;
        com.netflix.appinfo.InstanceInfo.Builder builder63 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo62);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus65 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("inesserver2.windows.cin.ufpe.br");
        instanceInfo62.setStatusWithoutDirty(instanceStatus65);
        applicationInfoManager0.setInstanceStatus(instanceStatus65);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager68 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo69 = applicationInfoManager68.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig71 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int72 = myDataCenterInstanceConfig71.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo73 = myDataCenterInstanceConfig71.getDataCenterInfo();
        java.lang.String str74 = myDataCenterInstanceConfig71.getNamespace();
        boolean boolean75 = myDataCenterInstanceConfig71.isNonSecurePortEnabled();
        applicationInfoManager68.config = myDataCenterInstanceConfig71;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig77 = applicationInfoManager68.config;
        com.netflix.appinfo.InstanceInfo instanceInfo78 = applicationInfoManager68.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo79 = applicationInfoManager68.instanceInfo;
        int int80 = instanceInfo79.getSecurePort();
        boolean boolean81 = instanceInfo79.isDirty();
        java.lang.String str82 = instanceInfo79.getHostName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType83 = instanceInfo79.getActionType();
        boolean boolean84 = instanceInfo79.isDirty();
        instanceInfo79.setSID("http://inesserver2.windows.cin.ufpe.br:80/Status");
        int int87 = instanceInfo79.getCountryId();
        int int88 = instanceInfo79.getPort();
        int int89 = instanceInfo79.getPort();
        applicationInfoManager0.instanceInfo = instanceInfo79;
        java.lang.String str91 = instanceInfo79.getId();
        com.netflix.appinfo.LeaseInfo leaseInfo92 = null;
        instanceInfo79.setLeaseInfo(leaseInfo92);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "default" + "'", str14, "default");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "default" + "'", str16, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager17);
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 30 + "'", int21 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 443 + "'", int29 == 443);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UNKNOWN" + "'", str33, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "default" + "'", str35, "default");
        org.junit.Assert.assertTrue("'" + instanceStatus36 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus36.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertNotNull(applicationInfoManager39);
        org.junit.Assert.assertNotNull(instanceInfo40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 30 + "'", int43 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig48);
        org.junit.Assert.assertNotNull(instanceInfo49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 30 + "'", int53 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str56, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(dataCenterInfo57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(instanceInfo62);
        org.junit.Assert.assertTrue("'" + instanceStatus65 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus65.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(applicationInfoManager68);
        org.junit.Assert.assertNotNull(instanceInfo69);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 30 + "'", int72 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig77);
        org.junit.Assert.assertNotNull(instanceInfo78);
        org.junit.Assert.assertNotNull(instanceInfo79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 443 + "'", int80 == 443);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str82, "inesserver2.windows.cin.ufpe.br");
// flaky:         org.junit.Assert.assertNull(actionType83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 80 + "'", int88 == 80);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 80 + "'", int89 == 80);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str91, "inesserver2.windows.cin.ufpe.br");
    }

    @Test
    public void test01984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01984");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = instanceInfo11.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.Builder builder15 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig17 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int18 = myDataCenterInstanceConfig17.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo19 = myDataCenterInstanceConfig17.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder15.setDataCenterInfo(dataCenterInfo19);
        com.netflix.appinfo.InstanceInfo instanceInfo21 = builder15.build();
        boolean boolean22 = builder15.isInitialized();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UNKNOWN" + "'", str14, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 30 + "'", int18 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test01985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01985");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager18 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager18.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int22 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo23 = myDataCenterInstanceConfig21.getDataCenterInfo();
        java.lang.String str24 = myDataCenterInstanceConfig21.getNamespace();
        boolean boolean25 = myDataCenterInstanceConfig21.isNonSecurePortEnabled();
        applicationInfoManager18.config = myDataCenterInstanceConfig21;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig27 = applicationInfoManager18.config;
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager18.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo29 = applicationInfoManager18.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType30 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo29.setActionType(actionType30);
        instanceInfo11.setActionType(actionType30);
        java.lang.String str33 = instanceInfo11.getSID();
        com.netflix.appinfo.InstanceInfo.Builder builder34 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder36 = builder34.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder34.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder34.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder42 = builder40.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder44 = builder40.setAppName("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder46 = builder40.setLastDirtyTimestamp((long) 7001);
        com.netflix.appinfo.InstanceInfo.Builder builder49 = builder40.add("", "hi!");
        boolean boolean50 = instanceInfo11.equals((java.lang.Object) builder40);
        com.netflix.appinfo.InstanceInfo.Builder builder51 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager52 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo53 = applicationInfoManager52.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig55 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int56 = myDataCenterInstanceConfig55.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo57 = myDataCenterInstanceConfig55.getDataCenterInfo();
        java.lang.String str58 = myDataCenterInstanceConfig55.getNamespace();
        boolean boolean59 = myDataCenterInstanceConfig55.isNonSecurePortEnabled();
        applicationInfoManager52.config = myDataCenterInstanceConfig55;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig61 = applicationInfoManager52.config;
        com.netflix.appinfo.InstanceInfo instanceInfo62 = applicationInfoManager52.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo63 = applicationInfoManager52.instanceInfo;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig64 = applicationInfoManager52.config;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager65 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo66 = applicationInfoManager65.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig68 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int69 = myDataCenterInstanceConfig68.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo70 = myDataCenterInstanceConfig68.getDataCenterInfo();
        java.lang.String str71 = myDataCenterInstanceConfig68.getNamespace();
        boolean boolean72 = myDataCenterInstanceConfig68.isNonSecurePortEnabled();
        applicationInfoManager65.config = myDataCenterInstanceConfig68;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig74 = applicationInfoManager65.config;
        com.netflix.appinfo.InstanceInfo instanceInfo75 = applicationInfoManager65.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo76 = applicationInfoManager65.instanceInfo;
        java.lang.Boolean boolean77 = instanceInfo76.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus78 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo76.setOverriddenStatus(instanceStatus78);
        applicationInfoManager52.instanceInfo = instanceInfo76;
        com.netflix.appinfo.InstanceInfo.ActionType actionType81 = com.netflix.appinfo.InstanceInfo.ActionType.DELETED;
        instanceInfo76.setActionType(actionType81);
        instanceInfo11.setActionType(actionType81);
        instanceInfo11.setSID("INESSERVER2.WINDOWS.CIN.UFPE.BR");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 30 + "'", int22 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertNotNull(instanceInfo29);
        org.junit.Assert.assertTrue("'" + actionType30 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType30.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str33, "http://inesserver2.windows.cin.ufpe.br:80/Status");
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager52);
        org.junit.Assert.assertNotNull(instanceInfo53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 30 + "'", int56 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig61);
        org.junit.Assert.assertNotNull(instanceInfo62);
        org.junit.Assert.assertNotNull(instanceInfo63);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig64);
        org.junit.Assert.assertNotNull(applicationInfoManager65);
        org.junit.Assert.assertNotNull(instanceInfo66);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 30 + "'", int69 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig74);
        org.junit.Assert.assertNotNull(instanceInfo75);
        org.junit.Assert.assertNotNull(instanceInfo76);
        org.junit.Assert.assertEquals("'" + boolean77 + "' != '" + false + "'", boolean77, false);
        org.junit.Assert.assertTrue("'" + instanceStatus78 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus78.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + actionType81 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.DELETED + "'", actionType81.equals(com.netflix.appinfo.InstanceInfo.ActionType.DELETED));
    }

    @Test
    public void test01986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01986");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig3.getDataCenterInfo();
        applicationInfoManager0.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig3);
        boolean boolean10 = myDataCenterInstanceConfig3.getSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager11 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo12 = applicationInfoManager11.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig14 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int15 = myDataCenterInstanceConfig14.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo16 = myDataCenterInstanceConfig14.getDataCenterInfo();
        java.lang.String str17 = myDataCenterInstanceConfig14.getNamespace();
        boolean boolean18 = myDataCenterInstanceConfig14.isNonSecurePortEnabled();
        applicationInfoManager11.config = myDataCenterInstanceConfig14;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig20 = applicationInfoManager11.config;
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager11.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo22 = applicationInfoManager11.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType23 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo22.setActionType(actionType23);
        java.lang.String str25 = instanceInfo22.getAppGroupName();
        com.netflix.appinfo.InstanceInfo.ActionType actionType26 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo22.setActionType(actionType26);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager28 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig3, instanceInfo22);
        java.lang.String str29 = instanceInfo22.getIPAddr();
        java.util.Set<java.lang.String> strSet30 = instanceInfo22.getHealthCheckUrls();
        instanceInfo22.setSID("inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager11);
        org.junit.Assert.assertNotNull(instanceInfo12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 30 + "'", int15 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig20);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertTrue("'" + actionType23 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType23.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UNKNOWN" + "'", str25, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + actionType26 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType26.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "172.20.26.3" + "'", str29, "172.20.26.3");
        org.junit.Assert.assertNotNull(strSet30);
    }

    @Test
    public void test01987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01987");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder17 = builder12.add("", "inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.InstanceInfo.Builder builder19 = builder12.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder12.setAppName("http://inesserver2.windows.cin.ufpe.br:80/Status");
        com.netflix.appinfo.InstanceInfo instanceInfo22 = builder21.build();
        java.lang.String str23 = instanceInfo22.getStatusPageUrl();
        com.netflix.appinfo.InstanceInfo instanceInfo24 = new com.netflix.appinfo.InstanceInfo(instanceInfo22);
        java.lang.String str25 = instanceInfo24.getASGName();
        java.lang.String str26 = instanceInfo24.getSID();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(instanceInfo22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "na" + "'", str26, "na");
    }

    @Test
    public void test01988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01988");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setStatusPageUrlForDeser("na");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder4.setHostName("DEFAULT");
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder4.setStatusPageUrl("inesserver2.windows.cin.ufpe.br", "/HEALTHCHECK");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder9);
    }

    @Test
    public void test01989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01989");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        int int4 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager0.config = myDataCenterInstanceConfig2;
        java.lang.String str6 = myDataCenterInstanceConfig2.getHealthCheckUrlPath();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager7 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo8 = applicationInfoManager7.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int11 = myDataCenterInstanceConfig10.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo12 = myDataCenterInstanceConfig10.getDataCenterInfo();
        java.lang.String str13 = myDataCenterInstanceConfig10.getNamespace();
        boolean boolean14 = myDataCenterInstanceConfig10.isNonSecurePortEnabled();
        applicationInfoManager7.config = myDataCenterInstanceConfig10;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig16 = applicationInfoManager7.config;
        com.netflix.appinfo.InstanceInfo instanceInfo17 = applicationInfoManager7.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager7.instanceInfo;
        int int19 = instanceInfo18.getSecurePort();
        int int20 = instanceInfo18.getPort();
        int int21 = instanceInfo18.getCountryId();
        boolean boolean22 = instanceInfo18.isDirty();
        int int23 = instanceInfo18.getPort();
        java.lang.String str24 = instanceInfo18.getStatusPageUrl();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager25 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig2, instanceInfo18);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager26 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig28 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int29 = myDataCenterInstanceConfig28.getLeaseRenewalIntervalInSeconds();
        int int30 = myDataCenterInstanceConfig28.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager26.config = myDataCenterInstanceConfig28;
        com.netflix.appinfo.InstanceInfo instanceInfo32 = applicationInfoManager26.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig34 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int35 = myDataCenterInstanceConfig34.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo36 = myDataCenterInstanceConfig34.getDataCenterInfo();
        java.lang.String str37 = myDataCenterInstanceConfig34.getHealthCheckUrl();
        int int38 = myDataCenterInstanceConfig34.getLeaseExpirationDurationInSeconds();
        applicationInfoManager26.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig34);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig41 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int42 = myDataCenterInstanceConfig41.getLeaseRenewalIntervalInSeconds();
        int int43 = myDataCenterInstanceConfig41.getLeaseRenewalIntervalInSeconds();
        java.lang.String str44 = myDataCenterInstanceConfig41.getStatusPageUrlPath();
        boolean boolean45 = myDataCenterInstanceConfig41.getSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager46 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo47 = applicationInfoManager46.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig49 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int50 = myDataCenterInstanceConfig49.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo51 = myDataCenterInstanceConfig49.getDataCenterInfo();
        java.lang.String str52 = myDataCenterInstanceConfig49.getNamespace();
        boolean boolean53 = myDataCenterInstanceConfig49.isNonSecurePortEnabled();
        applicationInfoManager46.config = myDataCenterInstanceConfig49;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig55 = applicationInfoManager46.config;
        com.netflix.appinfo.InstanceInfo instanceInfo56 = applicationInfoManager46.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo57 = applicationInfoManager46.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType58 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo57.setActionType(actionType58);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager60 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo61 = applicationInfoManager60.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig63 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int64 = myDataCenterInstanceConfig63.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo65 = myDataCenterInstanceConfig63.getDataCenterInfo();
        java.lang.String str66 = myDataCenterInstanceConfig63.getNamespace();
        boolean boolean67 = myDataCenterInstanceConfig63.isNonSecurePortEnabled();
        applicationInfoManager60.config = myDataCenterInstanceConfig63;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig69 = applicationInfoManager60.config;
        com.netflix.appinfo.InstanceInfo instanceInfo70 = applicationInfoManager60.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo71 = applicationInfoManager60.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType72 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo71.setActionType(actionType72);
        instanceInfo57.setActionType(actionType72);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager75 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig41, instanceInfo57);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus77 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("inesserver2.windows.cin.ufpe.br:80");
        instanceInfo57.setOverriddenStatus(instanceStatus77);
        applicationInfoManager26.setInstanceStatus(instanceStatus77);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager80 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig82 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int83 = myDataCenterInstanceConfig82.getLeaseRenewalIntervalInSeconds();
        int int84 = myDataCenterInstanceConfig82.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager80.config = myDataCenterInstanceConfig82;
        java.lang.String str86 = myDataCenterInstanceConfig82.getHealthCheckUrlPath();
        java.lang.String str87 = myDataCenterInstanceConfig82.getNamespace();
        java.util.Map<java.lang.String, java.lang.String> strMap88 = myDataCenterInstanceConfig82.getMetadataMap();
        applicationInfoManager26.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig82);
        com.netflix.appinfo.InstanceInfo instanceInfo90 = applicationInfoManager26.instanceInfo;
        int int91 = instanceInfo90.getSecurePort();
        applicationInfoManager25.instanceInfo = instanceInfo90;
        instanceInfo90.setLastUpdatedTimestamp();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "/healthcheck" + "'", str6, "/healthcheck");
        org.junit.Assert.assertNotNull(applicationInfoManager7);
        org.junit.Assert.assertNotNull(instanceInfo8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 30 + "'", int11 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig16);
        org.junit.Assert.assertNotNull(instanceInfo17);
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 443 + "'", int19 == 443);
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/" + "'", str24, "http://inesserver2.windows.cin.ufpe.br:80/");
        org.junit.Assert.assertNotNull(applicationInfoManager26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 30 + "'", int29 == 30);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 30 + "'", int30 == 30);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 30 + "'", int35 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 90 + "'", int38 == 90);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 30 + "'", int43 == 30);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "/Status" + "'", str44, "/Status");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager46);
        org.junit.Assert.assertNotNull(instanceInfo47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 30 + "'", int50 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig55);
        org.junit.Assert.assertNotNull(instanceInfo56);
        org.junit.Assert.assertNotNull(instanceInfo57);
        org.junit.Assert.assertTrue("'" + actionType58 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType58.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager60);
        org.junit.Assert.assertNotNull(instanceInfo61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 30 + "'", int64 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig69);
        org.junit.Assert.assertNotNull(instanceInfo70);
        org.junit.Assert.assertNotNull(instanceInfo71);
        org.junit.Assert.assertTrue("'" + actionType72 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType72.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + instanceStatus77 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus77.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(applicationInfoManager80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 30 + "'", int83 == 30);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 30 + "'", int84 == 30);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "/healthcheck" + "'", str86, "/healthcheck");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(instanceInfo90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 443 + "'", int91 == 443);
    }

    @Test
    public void test01990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01990");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder18.setVIPAddressDeser("hi!");
        com.netflix.appinfo.InstanceInfo.PortType portType24 = com.netflix.appinfo.InstanceInfo.PortType.UNSECURE;
        com.netflix.appinfo.InstanceInfo.Builder builder26 = builder23.enablePort(portType24, false);
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder26.setLastDirtyTimestamp(1636105966372L);
        com.netflix.appinfo.InstanceInfo.Builder builder29 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder29.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder31.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo35 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder36 = builder31.setLeaseInfo(leaseInfo35);
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder31.setSecurePort(10);
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder38.setSecureVIPAddressDeser("inesserver2.windows.cin.ufpe.br");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager41 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo42 = applicationInfoManager41.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig44 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int45 = myDataCenterInstanceConfig44.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo46 = myDataCenterInstanceConfig44.getDataCenterInfo();
        java.lang.String str47 = myDataCenterInstanceConfig44.getNamespace();
        boolean boolean48 = myDataCenterInstanceConfig44.isNonSecurePortEnabled();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo49 = myDataCenterInstanceConfig44.getDataCenterInfo();
        applicationInfoManager41.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig44);
        boolean boolean51 = myDataCenterInstanceConfig44.getSecurePortEnabled();
        java.lang.String str52 = myDataCenterInstanceConfig44.getSecureHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo53 = myDataCenterInstanceConfig44.getDataCenterInfo();
        java.lang.String str54 = myDataCenterInstanceConfig44.getAppGroupName();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo55 = myDataCenterInstanceConfig44.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder56 = builder38.setDataCenterInfo(dataCenterInfo55);
        com.netflix.appinfo.InstanceInfo.Builder builder57 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder59 = builder57.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder61 = builder57.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder63 = builder57.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder65 = builder63.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder67 = builder65.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder69 = builder65.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder71 = builder65.setCountryId((-1));
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager72 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo73 = applicationInfoManager72.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig75 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int76 = myDataCenterInstanceConfig75.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo77 = myDataCenterInstanceConfig75.getDataCenterInfo();
        java.lang.String str78 = myDataCenterInstanceConfig75.getNamespace();
        boolean boolean79 = myDataCenterInstanceConfig75.isNonSecurePortEnabled();
        applicationInfoManager72.config = myDataCenterInstanceConfig75;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig81 = applicationInfoManager72.config;
        com.netflix.appinfo.InstanceInfo instanceInfo82 = applicationInfoManager72.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo83 = applicationInfoManager72.instanceInfo;
        java.lang.Boolean boolean84 = instanceInfo83.isCoordinatingDiscoveryServer();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus85 = com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE;
        instanceInfo83.setOverriddenStatus(instanceStatus85);
        int int87 = instanceInfo83.getSecurePort();
        java.lang.String str88 = instanceInfo83.getHostName();
        java.util.Map<java.lang.String, java.lang.String> strMap89 = instanceInfo83.getMetadata();
        instanceInfo83.setIsDirty(false);
        com.netflix.appinfo.LeaseInfo leaseInfo92 = instanceInfo83.getLeaseInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder93 = builder65.setLeaseInfo(leaseInfo92);
        com.netflix.appinfo.InstanceInfo.Builder builder94 = builder56.setLeaseInfo(leaseInfo92);
        com.netflix.appinfo.InstanceInfo.Builder builder95 = builder28.setLeaseInfo(leaseInfo92);
        com.netflix.appinfo.InstanceInfo.Builder builder97 = builder95.setStatusPageUrlForDeser("default");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + portType24 + "' != '" + com.netflix.appinfo.InstanceInfo.PortType.UNSECURE + "'", portType24.equals(com.netflix.appinfo.InstanceInfo.PortType.UNSECURE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(applicationInfoManager41);
        org.junit.Assert.assertNotNull(instanceInfo42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(dataCenterInfo49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(dataCenterInfo53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "unknown" + "'", str54, "unknown");
        org.junit.Assert.assertNotNull(dataCenterInfo55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(applicationInfoManager72);
        org.junit.Assert.assertNotNull(instanceInfo73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 30 + "'", int76 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig81);
        org.junit.Assert.assertNotNull(instanceInfo82);
        org.junit.Assert.assertNotNull(instanceInfo83);
        org.junit.Assert.assertEquals("'" + boolean84 + "' != '" + false + "'", boolean84, false);
        org.junit.Assert.assertTrue("'" + instanceStatus85 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE + "'", instanceStatus85.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.OUT_OF_SERVICE));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 443 + "'", int87 == 443);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str88, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNotNull(leaseInfo92);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertNotNull(builder94);
        org.junit.Assert.assertNotNull(builder95);
        org.junit.Assert.assertNotNull(builder97);
    }

    @Test
    public void test01991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01991");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder4 = builder0.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder6 = builder0.setAppGroupName("/");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo8 = myDataCenterInstanceConfig7.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder9 = builder6.setDataCenterInfo(dataCenterInfo8);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig10 = new com.netflix.appinfo.MyDataCenterInstanceConfig();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo11 = myDataCenterInstanceConfig10.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder12 = builder6.setDataCenterInfo(dataCenterInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder14 = builder12.setVIPAddressDeser("/Status");
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder14.setStatusPageUrlForDeser("na");
        com.netflix.appinfo.InstanceInfo.Builder builder18 = builder14.setAppGroupName("inesserver2.windows.cin.ufpe.br:80");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager19 = com.netflix.appinfo.ApplicationInfoManager.instance;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig21 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int22 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        int int23 = myDataCenterInstanceConfig21.getLeaseRenewalIntervalInSeconds();
        applicationInfoManager19.config = myDataCenterInstanceConfig21;
        java.lang.String str25 = myDataCenterInstanceConfig21.getIpAddress();
        java.lang.String str26 = myDataCenterInstanceConfig21.getHealthCheckUrlPath();
        java.lang.String str27 = myDataCenterInstanceConfig21.getHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo28 = myDataCenterInstanceConfig21.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder29 = builder18.setDataCenterInfo(dataCenterInfo28);
        com.netflix.appinfo.InstanceInfo.Builder builder31 = builder18.setPort((int) (short) 10);
        com.netflix.appinfo.InstanceInfo instanceInfo32 = builder31.build();
        java.lang.String str33 = instanceInfo32.getSecureVipAddress();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(dataCenterInfo8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(dataCenterInfo11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(applicationInfoManager19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 30 + "'", int22 == 30);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 30 + "'", int23 == 30);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "172.20.26.3" + "'", str25, "172.20.26.3");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/healthcheck" + "'", str26, "/healthcheck");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(dataCenterInfo28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(instanceInfo32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/healthcheck" + "'", str33, "/healthcheck");
    }

    @Test
    public void test01992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01992");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        java.lang.String str14 = instanceInfo11.getAppGroupName();
        instanceInfo11.setLastUpdatedTimestamp();
        java.lang.String str16 = instanceInfo11.getSID();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UNKNOWN" + "'", str14, "UNKNOWN");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "na" + "'", str16, "na");
    }

    @Test
    public void test01993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01993");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder18.setVIPAddressDeser("hi!");
        com.netflix.appinfo.LeaseInfo leaseInfo24 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder18.setLeaseInfo(leaseInfo24);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus27 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("na");
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder25.setStatus(instanceStatus27);
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder28.setSID("172.20.26.3");
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder30.setAppName("http://inesserver2.windows.cin.ufpe.br:80/");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + instanceStatus27 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus27.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
    }

    @Test
    public void test01994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01994");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig4 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int5 = myDataCenterInstanceConfig4.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo6 = myDataCenterInstanceConfig4.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig7 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo6);
        java.lang.String str8 = myDataCenterInstanceConfig7.getAppname();
        java.lang.String str9 = myDataCenterInstanceConfig7.getNamespace();
        applicationInfoManager0.config = myDataCenterInstanceConfig7;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig13 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int14 = myDataCenterInstanceConfig13.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo15 = myDataCenterInstanceConfig13.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig16 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo15);
        java.lang.String str17 = myDataCenterInstanceConfig16.getAppname();
        java.lang.String str18 = myDataCenterInstanceConfig16.getNamespace();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig19 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager20 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo21 = applicationInfoManager20.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig23 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int24 = myDataCenterInstanceConfig23.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo25 = myDataCenterInstanceConfig23.getDataCenterInfo();
        java.lang.String str26 = myDataCenterInstanceConfig23.getNamespace();
        boolean boolean27 = myDataCenterInstanceConfig23.isNonSecurePortEnabled();
        applicationInfoManager20.config = myDataCenterInstanceConfig23;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig29 = applicationInfoManager20.config;
        com.netflix.appinfo.InstanceInfo instanceInfo30 = applicationInfoManager20.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo31 = applicationInfoManager20.instanceInfo;
        int int32 = instanceInfo31.getSecurePort();
        boolean boolean33 = instanceInfo31.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager34 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig19, instanceInfo31);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager35 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig16, instanceInfo31);
        instanceInfo31.setLastDirtyTimestamp((java.lang.Long) 100L);
        java.util.Set<java.lang.String> strSet38 = instanceInfo31.getHealthCheckUrls();
        applicationInfoManager0.instanceInfo = instanceInfo31;
        applicationInfoManager0.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig42 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int43 = myDataCenterInstanceConfig42.getLeaseRenewalIntervalInSeconds();
        java.lang.String str44 = myDataCenterInstanceConfig42.getNamespace();
        int int45 = myDataCenterInstanceConfig42.getSecurePort();
        java.lang.String str46 = myDataCenterInstanceConfig42.getSecureVirtualHostName();
        applicationInfoManager0.config = myDataCenterInstanceConfig42;
        applicationInfoManager0.refreshDataCenterInfoIfRequired();
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 30 + "'", int5 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "unknown" + "'", str8, "unknown");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/Status" + "'", str9, "/Status");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 30 + "'", int14 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "unknown" + "'", str17, "unknown");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/Status" + "'", str18, "/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager20);
        org.junit.Assert.assertNotNull(instanceInfo21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 30 + "'", int24 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig29);
        org.junit.Assert.assertNotNull(instanceInfo30);
        org.junit.Assert.assertNotNull(instanceInfo31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 443 + "'", int32 == 443);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 30 + "'", int43 == 30);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 443 + "'", int45 == 443);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test01995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01995");
        com.netflix.appinfo.InstanceInfo.Builder builder0 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder2 = builder0.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder5 = builder2.setHealthCheckUrlsForDeser("", "na");
        com.netflix.appinfo.LeaseInfo leaseInfo6 = null;
        com.netflix.appinfo.InstanceInfo.Builder builder7 = builder2.setLeaseInfo(leaseInfo6);
        com.netflix.appinfo.InstanceInfo.Builder builder10 = builder2.setHealthCheckUrlsForDeser("unknown", "172.20.26.3");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        boolean boolean13 = myDataCenterInstanceConfig12.getSecurePortEnabled();
        java.lang.String str14 = myDataCenterInstanceConfig12.getHealthCheckUrl();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo15 = myDataCenterInstanceConfig12.getDataCenterInfo();
        com.netflix.appinfo.InstanceInfo.Builder builder16 = builder10.setDataCenterInfo(dataCenterInfo15);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager17 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo18 = applicationInfoManager17.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig20 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int21 = myDataCenterInstanceConfig20.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo22 = myDataCenterInstanceConfig20.getDataCenterInfo();
        java.lang.String str23 = myDataCenterInstanceConfig20.getNamespace();
        boolean boolean24 = myDataCenterInstanceConfig20.isNonSecurePortEnabled();
        applicationInfoManager17.config = myDataCenterInstanceConfig20;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig26 = applicationInfoManager17.config;
        com.netflix.appinfo.InstanceInfo instanceInfo27 = applicationInfoManager17.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager17.instanceInfo;
        int int29 = instanceInfo28.getSecurePort();
        int int30 = instanceInfo28.getPort();
        int int31 = instanceInfo28.getSecurePort();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager32 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo33 = applicationInfoManager32.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig35 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int36 = myDataCenterInstanceConfig35.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo37 = myDataCenterInstanceConfig35.getDataCenterInfo();
        java.lang.String str38 = myDataCenterInstanceConfig35.getNamespace();
        boolean boolean39 = myDataCenterInstanceConfig35.isNonSecurePortEnabled();
        applicationInfoManager32.config = myDataCenterInstanceConfig35;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig41 = applicationInfoManager32.config;
        com.netflix.appinfo.InstanceInfo instanceInfo42 = applicationInfoManager32.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo43 = applicationInfoManager32.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType44 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo43.setActionType(actionType44);
        java.lang.String str46 = instanceInfo43.getStatusPageUrl();
        com.netflix.appinfo.InstanceInfo instanceInfo47 = new com.netflix.appinfo.InstanceInfo(instanceInfo43);
        int int48 = instanceInfo47.getSecurePort();
        java.lang.String[] strArray49 = new java.lang.String[] {};
        com.netflix.appinfo.InstanceInfo instanceInfo50 = null;
        java.lang.String str51 = com.netflix.appinfo.InstanceInfo.getZone(strArray49, instanceInfo50);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager52 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo53 = applicationInfoManager52.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig55 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int56 = myDataCenterInstanceConfig55.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo57 = myDataCenterInstanceConfig55.getDataCenterInfo();
        java.lang.String str58 = myDataCenterInstanceConfig55.getNamespace();
        boolean boolean59 = myDataCenterInstanceConfig55.isNonSecurePortEnabled();
        applicationInfoManager52.config = myDataCenterInstanceConfig55;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig61 = applicationInfoManager52.config;
        com.netflix.appinfo.InstanceInfo instanceInfo62 = applicationInfoManager52.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo63 = applicationInfoManager52.instanceInfo;
        int int64 = instanceInfo63.getSecurePort();
        int int65 = instanceInfo63.getPort();
        int int66 = instanceInfo63.getSecurePort();
        java.lang.String str67 = com.netflix.appinfo.InstanceInfo.getZone(strArray49, instanceInfo63);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager68 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo69 = applicationInfoManager68.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig71 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int72 = myDataCenterInstanceConfig71.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo73 = myDataCenterInstanceConfig71.getDataCenterInfo();
        java.lang.String str74 = myDataCenterInstanceConfig71.getNamespace();
        boolean boolean75 = myDataCenterInstanceConfig71.isNonSecurePortEnabled();
        applicationInfoManager68.config = myDataCenterInstanceConfig71;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig77 = applicationInfoManager68.config;
        com.netflix.appinfo.InstanceInfo instanceInfo78 = applicationInfoManager68.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo79 = applicationInfoManager68.instanceInfo;
        int int80 = instanceInfo79.getSecurePort();
        boolean boolean81 = instanceInfo79.isDirty();
        com.netflix.appinfo.InstanceInfo instanceInfo82 = new com.netflix.appinfo.InstanceInfo(instanceInfo79);
        com.netflix.appinfo.InstanceInfo.ActionType actionType83 = com.netflix.appinfo.InstanceInfo.ActionType.MODIFIED;
        instanceInfo79.setActionType(actionType83);
        instanceInfo63.setActionType(actionType83);
        instanceInfo47.setActionType(actionType83);
        instanceInfo28.setActionType(actionType83);
        com.netflix.appinfo.InstanceInfo.Builder builder88 = builder16.setActionType(actionType83);
        // The following exception was thrown during execution in test generation
        try {
            com.netflix.appinfo.InstanceInfo.Builder builder91 = builder88.setHomePageUrl("/HEALTHCHECK", "default");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(dataCenterInfo15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(applicationInfoManager17);
        org.junit.Assert.assertNotNull(instanceInfo18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 30 + "'", int21 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig26);
        org.junit.Assert.assertNotNull(instanceInfo27);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 443 + "'", int29 == 443);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 80 + "'", int30 == 80);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 443 + "'", int31 == 443);
        org.junit.Assert.assertNotNull(applicationInfoManager32);
        org.junit.Assert.assertNotNull(instanceInfo33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 30 + "'", int36 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig41);
        org.junit.Assert.assertNotNull(instanceInfo42);
        org.junit.Assert.assertNotNull(instanceInfo43);
        org.junit.Assert.assertTrue("'" + actionType44 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType44.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "http://inesserver2.windows.cin.ufpe.br:80/Status" + "'", str46, "http://inesserver2.windows.cin.ufpe.br:80/Status");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 443 + "'", int48 == 443);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "default" + "'", str51, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager52);
        org.junit.Assert.assertNotNull(instanceInfo53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 30 + "'", int56 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig61);
        org.junit.Assert.assertNotNull(instanceInfo62);
        org.junit.Assert.assertNotNull(instanceInfo63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 443 + "'", int64 == 443);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 80 + "'", int65 == 80);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 443 + "'", int66 == 443);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "default" + "'", str67, "default");
        org.junit.Assert.assertNotNull(applicationInfoManager68);
        org.junit.Assert.assertNotNull(instanceInfo69);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 30 + "'", int72 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig77);
        org.junit.Assert.assertNotNull(instanceInfo78);
        org.junit.Assert.assertNotNull(instanceInfo79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 443 + "'", int80 == 443);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + actionType83 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.MODIFIED + "'", actionType83.equals(com.netflix.appinfo.InstanceInfo.ActionType.MODIFIED));
        org.junit.Assert.assertNotNull(builder88);
    }

    @Test
    public void test01996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01996");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder20 = builder18.setLastDirtyTimestamp((long) (byte) -1);
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder20.setHealthCheckUrlsForDeser("http://inesserver2.windows.cin.ufpe.br:80/Status", "/");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder20.setAppGroupName("UNKNOWN");
        com.netflix.appinfo.InstanceInfo.Builder builder28 = builder25.setStatusPageUrl("/HEALTHCHECK", "http://default:80/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test01997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01997");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo4 = myDataCenterInstanceConfig2.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig5 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo4);
        java.lang.String str6 = myDataCenterInstanceConfig5.getAppname();
        java.lang.String str7 = myDataCenterInstanceConfig5.getNamespace();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig8 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager9 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager9.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int13 = myDataCenterInstanceConfig12.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo14 = myDataCenterInstanceConfig12.getDataCenterInfo();
        java.lang.String str15 = myDataCenterInstanceConfig12.getNamespace();
        boolean boolean16 = myDataCenterInstanceConfig12.isNonSecurePortEnabled();
        applicationInfoManager9.config = myDataCenterInstanceConfig12;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig18 = applicationInfoManager9.config;
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager9.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager9.instanceInfo;
        int int21 = instanceInfo20.getSecurePort();
        boolean boolean22 = instanceInfo20.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager23 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig8, instanceInfo20);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager24 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig5, instanceInfo20);
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig25 = applicationInfoManager24.config;
        applicationInfoManager24.refreshDataCenterInfoIfRequired();
        com.netflix.appinfo.ApplicationInfoManager.instance = applicationInfoManager24;
        com.netflix.appinfo.InstanceInfo instanceInfo28 = applicationInfoManager24.getInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig31 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/healthcheck");
        java.lang.String str32 = myDataCenterInstanceConfig31.getHomePageUrlPath();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo33 = myDataCenterInstanceConfig31.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig34 = new com.netflix.appinfo.MyDataCenterInstanceConfig("http://default:80/Status", dataCenterInfo33);
        java.lang.String str35 = myDataCenterInstanceConfig34.getASGName();
        applicationInfoManager24.initComponent((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig34);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "unknown" + "'", str6, "unknown");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/Status" + "'", str7, "/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 30 + "'", int13 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 443 + "'", int21 == 443);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig25);
        org.junit.Assert.assertNotNull(instanceInfo28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "/" + "'", str32, "/");
        org.junit.Assert.assertNotNull(dataCenterInfo33);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test01998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01998");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig2 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int3 = myDataCenterInstanceConfig2.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo4 = myDataCenterInstanceConfig2.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig5 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo4);
        java.lang.String str6 = myDataCenterInstanceConfig5.getAppname();
        java.lang.String str7 = myDataCenterInstanceConfig5.getNamespace();
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig8 = null;
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager9 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager9.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig12 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int13 = myDataCenterInstanceConfig12.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo14 = myDataCenterInstanceConfig12.getDataCenterInfo();
        java.lang.String str15 = myDataCenterInstanceConfig12.getNamespace();
        boolean boolean16 = myDataCenterInstanceConfig12.isNonSecurePortEnabled();
        applicationInfoManager9.config = myDataCenterInstanceConfig12;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig18 = applicationInfoManager9.config;
        com.netflix.appinfo.InstanceInfo instanceInfo19 = applicationInfoManager9.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo20 = applicationInfoManager9.instanceInfo;
        int int21 = instanceInfo20.getSecurePort();
        boolean boolean22 = instanceInfo20.isDirty();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager23 = new com.netflix.appinfo.ApplicationInfoManager(eurekaInstanceConfig8, instanceInfo20);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager24 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig5, instanceInfo20);
        int int25 = instanceInfo20.getCountryId();
        java.util.Set<java.lang.String> strSet26 = instanceInfo20.getHealthCheckUrls();
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus27 = instanceInfo20.getStatus();
        com.netflix.appinfo.InstanceInfo.Builder builder28 = com.netflix.appinfo.InstanceInfo.Builder.newBuilder();
        com.netflix.appinfo.InstanceInfo.Builder builder30 = builder28.setSecureVIPAddressDeser("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder32 = builder28.setAppName("default");
        com.netflix.appinfo.InstanceInfo.Builder builder34 = builder28.setAppGroupName("/");
        com.netflix.appinfo.InstanceInfo.Builder builder36 = builder34.setIPAddr("");
        com.netflix.appinfo.InstanceInfo.Builder builder38 = builder36.setStatusPageUrlForDeser("default");
        com.netflix.appinfo.InstanceInfo.Builder builder40 = builder36.setHomePageUrlForDeser("");
        com.netflix.appinfo.InstanceInfo.Builder builder42 = builder40.setHostName("inesserver2.windows.cin.ufpe.br:80");
        boolean boolean43 = builder40.isInitialized();
        com.netflix.appinfo.InstanceInfo.Builder builder46 = builder40.setHealthCheckUrlsForDeser("/healthcheck", "/Status");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig48 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int49 = myDataCenterInstanceConfig48.getLeaseRenewalIntervalInSeconds();
        int int50 = myDataCenterInstanceConfig48.getLeaseRenewalIntervalInSeconds();
        java.lang.String str51 = myDataCenterInstanceConfig48.getStatusPageUrlPath();
        boolean boolean52 = myDataCenterInstanceConfig48.getSecurePortEnabled();
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager53 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo54 = applicationInfoManager53.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig56 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int57 = myDataCenterInstanceConfig56.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo58 = myDataCenterInstanceConfig56.getDataCenterInfo();
        java.lang.String str59 = myDataCenterInstanceConfig56.getNamespace();
        boolean boolean60 = myDataCenterInstanceConfig56.isNonSecurePortEnabled();
        applicationInfoManager53.config = myDataCenterInstanceConfig56;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig62 = applicationInfoManager53.config;
        com.netflix.appinfo.InstanceInfo instanceInfo63 = applicationInfoManager53.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo64 = applicationInfoManager53.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType65 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo64.setActionType(actionType65);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager67 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo68 = applicationInfoManager67.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig70 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int71 = myDataCenterInstanceConfig70.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo72 = myDataCenterInstanceConfig70.getDataCenterInfo();
        java.lang.String str73 = myDataCenterInstanceConfig70.getNamespace();
        boolean boolean74 = myDataCenterInstanceConfig70.isNonSecurePortEnabled();
        applicationInfoManager67.config = myDataCenterInstanceConfig70;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig76 = applicationInfoManager67.config;
        com.netflix.appinfo.InstanceInfo instanceInfo77 = applicationInfoManager67.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo78 = applicationInfoManager67.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType79 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo78.setActionType(actionType79);
        instanceInfo64.setActionType(actionType79);
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager82 = new com.netflix.appinfo.ApplicationInfoManager((com.netflix.appinfo.EurekaInstanceConfig) myDataCenterInstanceConfig48, instanceInfo64);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus84 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("inesserver2.windows.cin.ufpe.br:80");
        instanceInfo64.setOverriddenStatus(instanceStatus84);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus87 = com.netflix.appinfo.InstanceInfo.InstanceStatus.toEnum("/Status");
        instanceInfo64.setOverriddenStatus(instanceStatus87);
        com.netflix.appinfo.InstanceInfo.InstanceStatus instanceStatus89 = instanceInfo64.getOverriddenStatus();
        com.netflix.appinfo.InstanceInfo.ActionType actionType90 = instanceInfo64.getActionType();
        com.netflix.appinfo.InstanceInfo.Builder builder91 = builder40.setActionType(actionType90);
        instanceInfo20.setActionType(actionType90);
        instanceInfo20.setLastUpdatedTimestamp();
        java.lang.String str94 = instanceInfo20.getASGName();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 30 + "'", int3 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "unknown" + "'", str6, "unknown");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/Status" + "'", str7, "/Status");
        org.junit.Assert.assertNotNull(applicationInfoManager9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 30 + "'", int13 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig18);
        org.junit.Assert.assertNotNull(instanceInfo19);
        org.junit.Assert.assertNotNull(instanceInfo20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 443 + "'", int21 == 443);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(strSet26);
// flaky:         org.junit.Assert.assertTrue("'" + instanceStatus27 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN + "'", instanceStatus27.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.DOWN));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 30 + "'", int49 == 30);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 30 + "'", int50 == 30);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "/Status" + "'", str51, "/Status");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(applicationInfoManager53);
        org.junit.Assert.assertNotNull(instanceInfo54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 30 + "'", int57 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig62);
        org.junit.Assert.assertNotNull(instanceInfo63);
        org.junit.Assert.assertNotNull(instanceInfo64);
        org.junit.Assert.assertTrue("'" + actionType65 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType65.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(applicationInfoManager67);
        org.junit.Assert.assertNotNull(instanceInfo68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 30 + "'", int71 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig76);
        org.junit.Assert.assertNotNull(instanceInfo77);
        org.junit.Assert.assertNotNull(instanceInfo78);
        org.junit.Assert.assertTrue("'" + actionType79 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType79.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertTrue("'" + instanceStatus84 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus84.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertTrue("'" + instanceStatus87 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus87.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertTrue("'" + instanceStatus89 + "' != '" + com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN + "'", instanceStatus89.equals(com.netflix.appinfo.InstanceInfo.InstanceStatus.UNKNOWN));
        org.junit.Assert.assertTrue("'" + actionType90 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType90.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNull(str94);
    }

    @Test
    public void test01999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01999");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig1 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int2 = myDataCenterInstanceConfig1.getLeaseRenewalIntervalInSeconds();
        boolean boolean3 = myDataCenterInstanceConfig1.isInstanceEnabledOnit();
        java.lang.String str4 = myDataCenterInstanceConfig1.getStatusPageUrlPath();
        java.lang.String str5 = myDataCenterInstanceConfig1.getHomePageUrlPath();
        java.lang.String str6 = myDataCenterInstanceConfig1.getNamespace();
        java.lang.String str7 = myDataCenterInstanceConfig1.getASGName();
        boolean boolean8 = myDataCenterInstanceConfig1.getSecurePortEnabled();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 30 + "'", int2 == 30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/Status" + "'", str4, "/Status");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/" + "'", str5, "/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test02000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test02000");
        com.netflix.appinfo.ApplicationInfoManager applicationInfoManager0 = com.netflix.appinfo.ApplicationInfoManager.getInstance();
        com.netflix.appinfo.InstanceInfo instanceInfo1 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig3 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int4 = myDataCenterInstanceConfig3.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo5 = myDataCenterInstanceConfig3.getDataCenterInfo();
        java.lang.String str6 = myDataCenterInstanceConfig3.getNamespace();
        boolean boolean7 = myDataCenterInstanceConfig3.isNonSecurePortEnabled();
        applicationInfoManager0.config = myDataCenterInstanceConfig3;
        com.netflix.appinfo.EurekaInstanceConfig eurekaInstanceConfig9 = applicationInfoManager0.config;
        com.netflix.appinfo.InstanceInfo instanceInfo10 = applicationInfoManager0.getInfo();
        com.netflix.appinfo.InstanceInfo instanceInfo11 = applicationInfoManager0.instanceInfo;
        com.netflix.appinfo.InstanceInfo.ActionType actionType12 = com.netflix.appinfo.InstanceInfo.ActionType.ADDED;
        instanceInfo11.setActionType(actionType12);
        com.netflix.appinfo.LeaseInfo leaseInfo14 = null;
        instanceInfo11.setLeaseInfo(leaseInfo14);
        java.util.Set<java.lang.String> strSet16 = instanceInfo11.getHealthCheckUrls();
        java.lang.String str17 = instanceInfo11.getId();
        com.netflix.appinfo.InstanceInfo.Builder builder18 = new com.netflix.appinfo.InstanceInfo.Builder(instanceInfo11);
        com.netflix.appinfo.InstanceInfo.Builder builder21 = builder18.add("", "");
        com.netflix.appinfo.InstanceInfo.Builder builder23 = builder21.setASGName("/healthcheck");
        com.netflix.appinfo.InstanceInfo.Builder builder25 = builder23.setSecureVIPAddress("hi!");
        com.netflix.appinfo.InstanceInfo.Builder builder27 = builder25.setHostName("default");
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig31 = new com.netflix.appinfo.MyDataCenterInstanceConfig("");
        int int32 = myDataCenterInstanceConfig31.getLeaseRenewalIntervalInSeconds();
        com.netflix.appinfo.DataCenterInfo dataCenterInfo33 = myDataCenterInstanceConfig31.getDataCenterInfo();
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig34 = new com.netflix.appinfo.MyDataCenterInstanceConfig("/Status", dataCenterInfo33);
        com.netflix.appinfo.MyDataCenterInstanceConfig myDataCenterInstanceConfig35 = new com.netflix.appinfo.MyDataCenterInstanceConfig("http://inesserver2.windows.cin.ufpe.br:10/Status", dataCenterInfo33);
        com.netflix.appinfo.InstanceInfo.Builder builder36 = builder25.setDataCenterInfo(dataCenterInfo33);
        org.junit.Assert.assertNotNull(applicationInfoManager0);
        org.junit.Assert.assertNotNull(instanceInfo1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 30 + "'", int4 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(eurekaInstanceConfig9);
        org.junit.Assert.assertNotNull(instanceInfo10);
        org.junit.Assert.assertNotNull(instanceInfo11);
        org.junit.Assert.assertTrue("'" + actionType12 + "' != '" + com.netflix.appinfo.InstanceInfo.ActionType.ADDED + "'", actionType12.equals(com.netflix.appinfo.InstanceInfo.ActionType.ADDED));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "inesserver2.windows.cin.ufpe.br" + "'", str17, "inesserver2.windows.cin.ufpe.br");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 30 + "'", int32 == 30);
        org.junit.Assert.assertNotNull(dataCenterInfo33);
        org.junit.Assert.assertNotNull(builder36);
    }
}
