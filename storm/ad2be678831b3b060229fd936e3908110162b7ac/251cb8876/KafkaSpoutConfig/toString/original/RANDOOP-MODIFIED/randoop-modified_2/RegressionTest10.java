import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest10 {

    public static boolean debug = false;

    @Test
    public void test05001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05001");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceBuilderSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceBuilderBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>>("hi!", kafkaSpoutRetryServiceBuilderSerializableDeserializer8, kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer9, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.Object> strBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.Object>("hi!", strSerializableDeserializer3, objSerializableDeserializer4, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray12);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test05002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05002");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder10.build();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getSubscription();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getPollTimeoutMs();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig13.isConsumerAutoCommitMode();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2000L + "'", long17 == 2000L);
    }

    @Test
    public void test05003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05003");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setBootstrapServers("");
        java.util.Properties properties16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setProp(properties16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
    }

    @Test
    public void test05004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05004");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        int int7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        long long8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        java.lang.String str9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        int int13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        java.lang.Class<?> wildcardClass15 = strMap14.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10000000 + "'", int7 == 10000000);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 30000L + "'", long8 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10000000 + "'", int13 == 10000000);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test05005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05005");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        int int7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        java.lang.String str8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.storm.kafka.spout.Subscription subscription9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        long long10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        long long11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        boolean boolean15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10000000 + "'", int7 == 10000000);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 200L + "'", long10 == 200L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 30000L + "'", long11 == 30000L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2000L + "'", long14 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test05006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05006");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder12.setOffsetCommitPeriodMs(100L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder12.setPartitionRefreshPeriodMs((long) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder12.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder12.setPartitionRefreshPeriodMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder12.setSecurityProtocol("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
    }

    @Test
    public void test05007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05007");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>> kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, firstPollOffsetStrategyEnumSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder13.build();
        boolean boolean15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.isConsumerAutoCommitMode();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, org.apache.storm.kafka.spout.Subscription> cloneableBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, org.apache.storm.kafka.spout.Subscription>("hi!", cloneableSerializableDeserializer7, subscriptionSerializableDeserializer8, subscription17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>> strBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>>("hi!", strSerializableDeserializer4, kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer5, subscription17);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, subscription17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000000 + "'", int16 == 10000000);
        org.junit.Assert.assertNotNull(subscription17);
    }

    @Test
    public void test05008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05008");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder17.build();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig18.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder8.setMaxPollRecords((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder23.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder23.setFetchMinBytes((int) (short) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, firstPollOffsetStrategyEnumSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig34 = kafkaSpoutRetryServiceBuilder33.build();
        boolean boolean35 = kafkaSpoutRetryServiceKafkaSpoutConfig34.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator36 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getTranslator();
        int int37 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator38 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator38);
        java.util.Properties properties40 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder23.setProp(properties40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2147483647 + "'", int37 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
    }

    @Test
    public void test05009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05009");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer14 = null;
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, org.apache.storm.kafka.spout.Subscription> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, org.apache.storm.kafka.spout.Subscription>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, subscriptionSerializableDeserializer14, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, firstPollOffsetStrategyEnumSerializableDeserializer11, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.Cloneable> strIterableBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.Cloneable>("hi!", strIterableSerializableDeserializer7, cloneableSerializableDeserializer8, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess> annotatedElementBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess>("hi!", annotatedElementSerializableDeserializer2, randomAccessSerializableDeserializer3, strArray20);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test05010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05010");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        int int7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        long long8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        java.lang.String str9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        boolean boolean10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10000000 + "'", int7 == 10000000);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 30000L + "'", long8 == 30000L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy11 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy11.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 30000L + "'", long14 == 30000L);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService16);
    }

    @Test
    public void test05011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05011");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        long long10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        long long11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10000000 + "'", int9 == 10000000);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2000L + "'", long10 == 2000L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 2000L + "'", long11 == 2000L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(subscription15);
    }

    @Test
    public void test05012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05012");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer14 = null;
        java.util.regex.Pattern pattern15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, firstPollOffsetStrategyEnumSerializableDeserializer14, pattern15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder16.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder16.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder8.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder22);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, firstPollOffsetStrategyEnumSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, firstPollOffsetStrategyEnumSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig34 = kafkaSpoutRetryServiceBuilder33.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer35 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator36 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getTranslator();
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator36, fields37);
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator36, fields39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, firstPollOffsetStrategyEnumSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig49 = kafkaSpoutRetryServiceBuilder48.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer50 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator51 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer52 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getKeyDeserializer();
        java.lang.String str53 = kafkaSpoutRetryServiceKafkaSpoutConfig49.toString();
        org.apache.storm.kafka.spout.Subscription subscription54 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription55 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getSubscription();
        long long56 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator57 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getTranslator();
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator57, fields58);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer61 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer62 = null;
        java.util.regex.Pattern pattern63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer61, firstPollOffsetStrategyEnumSerializableDeserializer62, pattern63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig65 = kafkaSpoutRetryServiceBuilder64.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder64.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder64.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig71 = kafkaSpoutRetryServiceBuilder70.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy72 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder59.setFirstPollOffsetStrategy(firstPollOffsetStrategy72);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer75 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer76 = null;
        java.util.regex.Pattern pattern77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder78 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer75, firstPollOffsetStrategyEnumSerializableDeserializer76, pattern77);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig79 = kafkaSpoutRetryServiceBuilder78.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer80 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator81 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getTranslator();
        int int82 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription83 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer84 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getValueDeserializer();
        long long85 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap86 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getKafkaProps();
        int int87 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy88 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder73.setFirstPollOffsetStrategy(firstPollOffsetStrategy88);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder73.setSSLKeystore("hi!", "hi!", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig34);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig49);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator51);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer52);
        org.junit.Assert.assertNotNull(subscription54);
        org.junit.Assert.assertNotNull(subscription55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 30000L + "'", long56 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig71);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy72 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy72.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig79);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 10000000 + "'", int82 == 10000000);
        org.junit.Assert.assertNotNull(subscription83);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer84);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 200L + "'", long85 == 200L);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 2147483647 + "'", int87 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy88 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy88.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
    }

    @Test
    public void test05013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05013");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, firstPollOffsetStrategyEnumSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy14);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, firstPollOffsetStrategyEnumSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig21 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer22 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator23 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getTranslator();
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, firstPollOffsetStrategyEnumSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig33 = kafkaSpoutRetryServiceBuilder32.build();
        boolean boolean34 = kafkaSpoutRetryServiceKafkaSpoutConfig33.isConsumerAutoCommitMode();
        int int35 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer36 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder4.setProp(strMap37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder4.setMaxPollRecords((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig41 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig21);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10000000 + "'", int35 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
    }

    @Test
    public void test05014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05014");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, firstPollOffsetStrategyEnumSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder25.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder6.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setMaxRetries((int) (short) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, firstPollOffsetStrategyEnumSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder46.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer52 = null;
        java.util.regex.Pattern pattern53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer51, firstPollOffsetStrategyEnumSerializableDeserializer52, pattern53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig55 = kafkaSpoutRetryServiceBuilder54.build();
        boolean boolean56 = kafkaSpoutRetryServiceKafkaSpoutConfig55.isConsumerAutoCommitMode();
        int int57 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer58 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getKafkaProps();
        long long60 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator61 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getTranslator();
        org.apache.storm.tuple.Fields fields62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator61, fields62);
        org.apache.storm.tuple.Fields fields64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator61, fields64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder65.setMaxRetries(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer69 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer70 = null;
        java.util.regex.Pattern pattern71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder72 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer69, firstPollOffsetStrategyEnumSerializableDeserializer70, pattern71);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig73 = kafkaSpoutRetryServiceBuilder72.build();
        boolean boolean74 = kafkaSpoutRetryServiceKafkaSpoutConfig73.isConsumerAutoCommitMode();
        int int75 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getMaxUncommittedOffsets();
        java.lang.String str76 = kafkaSpoutRetryServiceKafkaSpoutConfig73.toString();
        org.apache.storm.kafka.spout.Subscription subscription77 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getSubscription();
        long long78 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getPollTimeoutMs();
        long long79 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getOffsetsCommitPeriodMs();
        boolean boolean80 = kafkaSpoutRetryServiceKafkaSpoutConfig73.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder65.setProp(strMap81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10000000 + "'", int57 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 30000L + "'", long60 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 10000000 + "'", int75 == 10000000);
        org.junit.Assert.assertNotNull(subscription77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 200L + "'", long78 == 200L);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 30000L + "'", long79 == 30000L);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
    }

    @Test
    public void test05015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05015");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer5 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, org.apache.storm.kafka.spout.Subscription> kafkaSpoutRetryServiceBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, org.apache.storm.kafka.spout.Subscription>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, subscriptionSerializableDeserializer5, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxRetries((int) (short) 0);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
    }

    @Test
    public void test05016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05016");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, firstPollOffsetStrategyEnumSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig10 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer11 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getTranslator();
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator12, fields13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder14.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, firstPollOffsetStrategyEnumSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setMaxRetries((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer35 = null;
        java.util.regex.Pattern pattern36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer34, firstPollOffsetStrategyEnumSerializableDeserializer35, pattern36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig38 = kafkaSpoutRetryServiceBuilder37.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer39 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator40 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getTranslator();
        int int41 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator42 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getTranslator();
        org.apache.storm.tuple.Fields fields43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator42, fields43, "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, firstPollOffsetStrategyEnumSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder52.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder52.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer61 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer62 = null;
        java.util.regex.Pattern pattern63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer61, firstPollOffsetStrategyEnumSerializableDeserializer62, pattern63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig65 = kafkaSpoutRetryServiceBuilder64.build();
        boolean boolean66 = kafkaSpoutRetryServiceKafkaSpoutConfig65.isConsumerAutoCommitMode();
        java.lang.String str67 = kafkaSpoutRetryServiceKafkaSpoutConfig65.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator68 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getTranslator();
        org.apache.storm.tuple.Fields fields69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator68, fields69);
        org.apache.storm.tuple.Fields fields71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator68, fields71, "");
        org.apache.storm.tuple.Fields fields74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder14.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator68, fields74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder14.setPartitionRefreshPeriodMs((long) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig78 = kafkaSpoutRetryServiceBuilder14.build();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig10);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig38);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10000000 + "'", int41 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig78);
    }

    @Test
    public void test05017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05017");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        int int7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        long long8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        int int10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        org.apache.storm.kafka.spout.Subscription subscription11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10000000 + "'", int7 == 10000000);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 30000L + "'", long8 == 30000L);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
        org.junit.Assert.assertNotNull(subscription11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 2000L + "'", long13 == 2000L);
    }

    @Test
    public void test05018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05018");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
    }

    @Test
    public void test05019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05019");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords((int) (short) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, firstPollOffsetStrategyEnumSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder26.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder26.setMaxPartitionFectchBytes((int) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, firstPollOffsetStrategyEnumSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig40 = kafkaSpoutRetryServiceBuilder39.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder39.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, firstPollOffsetStrategyEnumSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder50.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder50.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer58 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer59 = null;
        java.util.regex.Pattern pattern60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder61 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer58, firstPollOffsetStrategyEnumSerializableDeserializer59, pattern60);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer63 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer64 = null;
        java.util.regex.Pattern pattern65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder66 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer63, firstPollOffsetStrategyEnumSerializableDeserializer64, pattern65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder66.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy71 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder70.setFirstPollOffsetStrategy(firstPollOffsetStrategy71);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer74 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer75 = null;
        java.util.regex.Pattern pattern76 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder77 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer74, firstPollOffsetStrategyEnumSerializableDeserializer75, pattern76);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig78 = kafkaSpoutRetryServiceBuilder77.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer79 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator80 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getTranslator();
        org.apache.storm.tuple.Fields fields81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder70.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator80, fields81, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator80);
        org.apache.storm.tuple.Fields fields85 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator80, fields85, "");
        org.apache.storm.tuple.Fields fields88 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder90 = kafkaSpoutRetryServiceBuilder45.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator80, fields88, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator80);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder92 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator80);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig93 = kafkaSpoutRetryServiceBuilder15.build();
        long long94 = kafkaSpoutRetryServiceKafkaSpoutConfig93.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap95 = kafkaSpoutRetryServiceKafkaSpoutConfig93.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService96 = kafkaSpoutRetryServiceKafkaSpoutConfig93.getRetryService();
        org.apache.storm.kafka.spout.Subscription subscription97 = kafkaSpoutRetryServiceKafkaSpoutConfig93.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy71 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy71.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig78);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder92);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig93);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 30000L + "'", long94 == 30000L);
        org.junit.Assert.assertNotNull(strMap95);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService96);
        org.junit.Assert.assertNotNull(subscription97);
    }

    @Test
    public void test05020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05020");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, firstPollOffsetStrategyEnumSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder31.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder31.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder12.setMaxPollRecords((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder12.setOffsetCommitPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setOffsetCommitPeriodMs(200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
    }

    @Test
    public void test05021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05021");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer14 = null;
        java.util.regex.Pattern pattern15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, firstPollOffsetStrategyEnumSerializableDeserializer14, pattern15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder16.build();
        boolean boolean18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.isConsumerAutoCommitMode();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator20 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getTranslator();
        boolean boolean21 = kafkaSpoutRetryServiceKafkaSpoutConfig17.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.Subscription subscription22 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer23 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription24 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, firstPollOffsetStrategyEnumSerializableDeserializer11, subscription24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig26 = kafkaSpoutRetryServiceBuilder25.build();
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, firstPollOffsetStrategyEnumSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig33 = kafkaSpoutRetryServiceBuilder32.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer34 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator35 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer36 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getKeyDeserializer();
        java.lang.String str37 = kafkaSpoutRetryServiceKafkaSpoutConfig33.toString();
        java.lang.String str38 = kafkaSpoutRetryServiceKafkaSpoutConfig33.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer39 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer40 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getValueDeserializer();
        java.lang.String str41 = kafkaSpoutRetryServiceKafkaSpoutConfig33.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder25.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceKafkaSpoutConfig33);
        org.apache.storm.kafka.spout.Subscription subscription44 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, firstPollOffsetStrategyEnumSerializableDeserializer8, subscription44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.lang.reflect.GenericDeclaration> strMapBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.lang.reflect.GenericDeclaration>("hi!", strMapSerializableDeserializer4, genericDeclarationSerializableDeserializer5, subscription44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.Collection<java.lang.String>> strComparableBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.Collection<java.lang.String>>("hi!", strComparableSerializableDeserializer1, strCollectionSerializableDeserializer2, subscription44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(subscription22);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer23);
        org.junit.Assert.assertNotNull(subscription24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig33);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator35);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer36);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer39);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer40);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy42 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy42.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(subscription44);
    }

    @Test
    public void test05022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05022");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        boolean boolean7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        java.lang.String str8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        long long9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 2000L + "'", long9 == 2000L);
    }

    @Test
    public void test05023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05023");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        int int7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        long long10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10000000 + "'", int7 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 30000L + "'", long10 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer11);
        org.junit.Assert.assertNotNull(subscription12);
    }

    @Test
    public void test05024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05024");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceBuilderSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceBuilderSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig8 = kafkaSpoutRetryServiceBuilder7.build();
        boolean boolean9 = kafkaSpoutRetryServiceKafkaSpoutConfig8.isConsumerAutoCommitMode();
        java.lang.String str10 = kafkaSpoutRetryServiceKafkaSpoutConfig8.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator11 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getTranslator();
        boolean boolean12 = kafkaSpoutRetryServiceKafkaSpoutConfig8.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.Subscription subscription13 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getSubscription();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getPollTimeoutMs();
        boolean boolean15 = kafkaSpoutRetryServiceKafkaSpoutConfig8.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.Subscription subscription16 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceBuilderBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>>("", kafkaSpoutRetryServiceBuilderSerializableDeserializer1, kafkaSpoutRetryServiceBuilderSerializableDeserializer2, subscription16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(subscription13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(subscription16);
    }

    @Test
    public void test05025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05025");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        java.lang.String str9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        long long10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        int int11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        boolean boolean12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        int int13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer8);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 200L + "'", long10 == 200L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2147483647 + "'", int11 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10000000 + "'", int13 == 10000000);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test05026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05026");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer5 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, org.apache.storm.kafka.spout.Subscription> kafkaSpoutRetryServiceBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, org.apache.storm.kafka.spout.Subscription>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, subscriptionSerializableDeserializer5, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setPartitionRefreshPeriodMs(10L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, firstPollOffsetStrategyEnumSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder26.build();
        boolean boolean28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.isConsumerAutoCommitMode();
        int int29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getMaxUncommittedOffsets();
        java.lang.String str30 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer31 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer32 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getValueDeserializer();
        boolean boolean33 = kafkaSpoutRetryServiceKafkaSpoutConfig27.isConsumerAutoCommitMode();
        int int34 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getMaxUncommittedOffsets();
        java.lang.String str35 = kafkaSpoutRetryServiceKafkaSpoutConfig27.toString();
        int int36 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator37 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        org.apache.storm.tuple.Fields fields38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator37, fields38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder21.setSSLKeystore("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10000000 + "'", int29 == 10000000);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer31);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10000000 + "'", int34 == 10000000);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2147483647 + "'", int36 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
    }

    @Test
    public void test05027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05027");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer12 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer11, randomAccessSerializableDeserializer12, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer8, firstPollOffsetStrategyEnumSerializableDeserializer9, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, org.apache.storm.kafka.spout.Subscription> strBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, org.apache.storm.kafka.spout.Subscription>("hi!", strSerializableDeserializer5, subscriptionSerializableDeserializer6, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer2, firstPollOffsetStrategyEnumSerializableDeserializer3, strArray14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test05028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05028");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer8 = null;
        java.util.regex.Pattern pattern9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, firstPollOffsetStrategyEnumSerializableDeserializer8, pattern9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder10.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.lang.String str20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.storm.kafka.spout.Subscription subscription22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService23 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer24 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription25 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, subscription25);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.util.List<java.lang.String>> strMapBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.util.List<java.lang.String>>("", strMapSerializableDeserializer1, strListSerializableDeserializer2, subscription25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10000000 + "'", int14 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer15);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService21);
        org.junit.Assert.assertNotNull(subscription22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService23);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer24);
        org.junit.Assert.assertNotNull(subscription25);
    }

    @Test
    public void test05029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05029");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.lang.reflect.Type> strCollectionBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.lang.reflect.Type>("", strCollectionSerializableDeserializer1, typeSerializableDeserializer2, pattern3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test05030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05030");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, firstPollOffsetStrategyEnumSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, firstPollOffsetStrategyEnumSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder28.build();
        boolean boolean30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.isConsumerAutoCommitMode();
        int int31 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer32 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder23.setProp(strMap33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder14.setProp(strMap33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder14.setMaxUncommittedOffsets((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder37.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer42 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer43 = null;
        java.util.regex.Pattern pattern44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer42, firstPollOffsetStrategyEnumSerializableDeserializer43, pattern44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig46 = kafkaSpoutRetryServiceBuilder45.build();
        boolean boolean47 = kafkaSpoutRetryServiceKafkaSpoutConfig46.isConsumerAutoCommitMode();
        int int48 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer49 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getKafkaProps();
        long long51 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator52 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getTranslator();
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator52, fields53);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer57 = null;
        java.util.regex.Pattern pattern58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer56, firstPollOffsetStrategyEnumSerializableDeserializer57, pattern58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig60 = kafkaSpoutRetryServiceBuilder59.build();
        boolean boolean61 = kafkaSpoutRetryServiceKafkaSpoutConfig60.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy62 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService63 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getRetryService();
        long long64 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getPartitionRefreshPeriodMs();
        java.lang.String str65 = kafkaSpoutRetryServiceKafkaSpoutConfig60.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService66 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder40.setRetry(kafkaSpoutRetryService66);
        java.util.Properties properties68 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder40.setProp(properties68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10000000 + "'", int31 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 10000000 + "'", int48 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 30000L + "'", long51 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy62 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy62.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 2000L + "'", long64 == 2000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
    }

    @Test
    public void test05031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05031");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder17.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, firstPollOffsetStrategyEnumSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder28.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder28.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, firstPollOffsetStrategyEnumSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, firstPollOffsetStrategyEnumSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setFirstPollOffsetStrategy(firstPollOffsetStrategy49);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer53 = null;
        java.util.regex.Pattern pattern54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer52, firstPollOffsetStrategyEnumSerializableDeserializer53, pattern54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig56 = kafkaSpoutRetryServiceBuilder55.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer57 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator58 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getTranslator();
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator58, fields59, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator58, fields63, "");
        org.apache.storm.tuple.Fields fields66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator58, fields66, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder12.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder12.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder12.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer77 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer78 = null;
        java.util.regex.Pattern pattern79 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder80 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer77, firstPollOffsetStrategyEnumSerializableDeserializer78, pattern79);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig81 = kafkaSpoutRetryServiceBuilder80.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService82 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder75.setRetry(kafkaSpoutRetryService82);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder83.setOffsetCommitPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder83.setMaxPartitionFectchBytes((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder87.setFetchMinBytes((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder89.setSecurityProtocol("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy49 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy49.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig56);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
    }

    @Test
    public void test05032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05032");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRetry(kafkaSpoutRetryService20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder23.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder23.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, firstPollOffsetStrategyEnumSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig34 = kafkaSpoutRetryServiceBuilder33.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer35 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator36 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getTranslator();
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator36, fields37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setSSLKeystore("", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setMaxPollRecords((int) ' ');
        java.util.Properties properties45 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setProp(properties45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig34);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
    }

    @Test
    public void test05033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05033");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, firstPollOffsetStrategyEnumSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig20 = kafkaSpoutRetryServiceBuilder19.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer21 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator22 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getTranslator();
        int int23 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer24 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer25 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer27 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getValueDeserializer();
        java.lang.String str28 = kafkaSpoutRetryServiceKafkaSpoutConfig20.toString();
        java.lang.String str29 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService30 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getRetryService();
        org.apache.storm.kafka.spout.Subscription subscription31 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, firstPollOffsetStrategyEnumSerializableDeserializer14, subscription31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, firstPollOffsetStrategyEnumSerializableDeserializer11, subscription31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.util.RandomAccess> firstPollOffsetStrategyEnumBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.util.RandomAccess>("hi!", firstPollOffsetStrategyEnumSerializableDeserializer7, randomAccessSerializableDeserializer8, subscription31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, subscription31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.lang.Cloneable> firstPollOffsetStrategyEnumBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.lang.Cloneable>("hi!", firstPollOffsetStrategyEnumSerializableDeserializer1, cloneableSerializableDeserializer2, subscription31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig20);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10000000 + "'", int23 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer24);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService30);
        org.junit.Assert.assertNotNull(subscription31);
    }

    @Test
    public void test05034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05034");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, firstPollOffsetStrategyEnumSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder31.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder31.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, firstPollOffsetStrategyEnumSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer45 = null;
        java.util.regex.Pattern pattern46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer44, firstPollOffsetStrategyEnumSerializableDeserializer45, pattern46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder47.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy52 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setFirstPollOffsetStrategy(firstPollOffsetStrategy52);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer55 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer56 = null;
        java.util.regex.Pattern pattern57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder58 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer55, firstPollOffsetStrategyEnumSerializableDeserializer56, pattern57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig59 = kafkaSpoutRetryServiceBuilder58.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer60 = kafkaSpoutRetryServiceKafkaSpoutConfig59.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator61 = kafkaSpoutRetryServiceKafkaSpoutConfig59.getTranslator();
        org.apache.storm.tuple.Fields fields62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator61, fields62, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setPartitionRefreshPeriodMs(10000000L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder68.setSecurityProtocol("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy52 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy52.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig59);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
    }

    @Test
    public void test05035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05035");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig8 = kafkaSpoutRetryServiceBuilder7.build();
        long long9 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getPartitionRefreshPeriodMs();
        long long10 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription11 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.List<java.lang.String>> strCollectionBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.List<java.lang.String>>("", strCollectionSerializableDeserializer1, strListSerializableDeserializer2, subscription11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 2000L + "'", long9 == 2000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 30000L + "'", long10 == 30000L);
        org.junit.Assert.assertNotNull(subscription11);
    }

    @Test
    public void test05036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05036");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        boolean boolean10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        java.lang.String str11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10000000 + "'", int9 == 10000000);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer13);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer14);
        org.junit.Assert.assertNotNull(subscription15);
    }

    @Test
    public void test05037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05037");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setPartitionRefreshPeriodMs(0L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer19 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKeyDeserializer();
        java.lang.String str20 = kafkaSpoutRetryServiceKafkaSpoutConfig16.toString();
        java.lang.String str21 = kafkaSpoutRetryServiceKafkaSpoutConfig16.toString();
        int int22 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription23 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator25 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator25, fields26);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, firstPollOffsetStrategyEnumSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig33 = kafkaSpoutRetryServiceBuilder32.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder32.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer40 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer41 = null;
        java.util.regex.Pattern pattern42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer40, firstPollOffsetStrategyEnumSerializableDeserializer41, pattern42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig44 = kafkaSpoutRetryServiceBuilder43.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder43.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer52 = null;
        java.util.regex.Pattern pattern53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer51, firstPollOffsetStrategyEnumSerializableDeserializer52, pattern53);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer57 = null;
        java.util.regex.Pattern pattern58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer56, firstPollOffsetStrategyEnumSerializableDeserializer57, pattern58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder59.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy64 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder63.setFirstPollOffsetStrategy(firstPollOffsetStrategy64);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer67 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer68 = null;
        java.util.regex.Pattern pattern69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder70 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer67, firstPollOffsetStrategyEnumSerializableDeserializer68, pattern69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig71 = kafkaSpoutRetryServiceBuilder70.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer72 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator73 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getTranslator();
        org.apache.storm.tuple.Fields fields74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder63.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator73, fields74, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator73);
        org.apache.storm.tuple.Fields fields78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator73, fields78, "");
        org.apache.storm.tuple.Fields fields81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator73, fields81, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder38.setFetchMinBytes(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer87 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer88 = null;
        java.util.regex.Pattern pattern89 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder90 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer87, firstPollOffsetStrategyEnumSerializableDeserializer88, pattern89);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig91 = kafkaSpoutRetryServiceBuilder90.build();
        java.util.Map<java.lang.String, java.lang.Object> strMap92 = kafkaSpoutRetryServiceKafkaSpoutConfig91.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder85.setProp(strMap92);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder94 = kafkaSpoutRetryServiceBuilder27.setProp(strMap92);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder96 = kafkaSpoutRetryServiceBuilder27.setOffsetCommitPeriodMs((long) (byte) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10000000 + "'", int22 == 10000000);
        org.junit.Assert.assertNotNull(subscription23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy64 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy64.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig71);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder94);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder96);
    }

    @Test
    public void test05038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05038");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        int int7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        long long8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        java.lang.String str9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        boolean boolean10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        boolean boolean13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10000000 + "'", int7 == 10000000);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 30000L + "'", long8 == 30000L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test05039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05039");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer8 = null;
        java.util.regex.Pattern pattern9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, firstPollOffsetStrategyEnumSerializableDeserializer8, pattern9);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        org.apache.storm.tuple.Fields fields19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator18, fields19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder20.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig26 = kafkaSpoutRetryServiceBuilder25.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer27 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getValueDeserializer();
        int int28 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription29 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, subscription29);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, subscription29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig26);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10000000 + "'", int28 == 10000000);
        org.junit.Assert.assertNotNull(subscription29);
    }

    @Test
    public void test05040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05040");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer14 = null;
        java.util.regex.Pattern pattern15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, firstPollOffsetStrategyEnumSerializableDeserializer14, pattern15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder16.build();
        boolean boolean18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.isConsumerAutoCommitMode();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator20 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getTranslator();
        boolean boolean21 = kafkaSpoutRetryServiceKafkaSpoutConfig17.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.Subscription subscription22 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> strListBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>>("hi!", strListSerializableDeserializer10, kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer11, subscription22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, firstPollOffsetStrategyEnumSerializableDeserializer8, subscription22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, subscription22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, subscription22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setMaxPollRecords((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder26.setSSLKeystore("", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setMaxPollRecords((int) (byte) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(subscription22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
    }

    @Test
    public void test05041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05041");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        int int7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        long long10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        boolean boolean12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        boolean boolean18 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        int int19 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer20 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        java.lang.String str21 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        java.lang.String str22 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10000000 + "'", int7 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 30000L + "'", long10 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000000 + "'", int15 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2147483647 + "'", int19 == 2147483647);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer20);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test05042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05042");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer16 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> firstPollOffsetStrategyEnumBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>>("hi!", firstPollOffsetStrategyEnumSerializableDeserializer15, kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer16, (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.String[]> firstPollOffsetStrategyBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.String[]>("hi!", firstPollOffsetStrategySerializableDeserializer12, strArraySerializableDeserializer13, (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer8, firstPollOffsetStrategyEnumSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, firstPollOffsetStrategyEnumSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test05043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05043");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        int int7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        long long10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        boolean boolean12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        boolean boolean18 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        java.lang.String str21 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer22 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy23 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        long long24 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10000000 + "'", int7 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 30000L + "'", long10 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000000 + "'", int15 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 30000L + "'", long19 == 30000L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2147483647 + "'", int20 == 2147483647);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer22);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy23 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy23.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 200L + "'", long24 == 200L);
    }

    @Test
    public void test05044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05044");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        java.lang.String str9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.storm.kafka.spout.Subscription subscription10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        int int13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer8);
        org.junit.Assert.assertNotNull(subscription10);
        org.junit.Assert.assertNotNull(subscription11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10000000 + "'", int13 == 10000000);
    }

    @Test
    public void test05045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05045");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        java.lang.String str9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        long long10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer8);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 200L + "'", long10 == 200L);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer15);
        org.junit.Assert.assertNotNull(subscription16);
    }

    @Test
    public void test05046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05046");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer9);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 30000L + "'", long17 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer18);
    }

    @Test
    public void test05047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05047");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRetry(kafkaSpoutRetryService20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setFetchMinBytes((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig24 = kafkaSpoutRetryServiceBuilder23.build();
        int int25 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getMaxTupleRetries();
        long long26 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getFirstPollOffsetStrategy();
        long long28 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2147483647 + "'", int25 == 2147483647);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10L + "'", long26 == 10L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10L + "'", long28 == 10L);
    }

    @Test
    public void test05048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05048");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        long long10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 30000L + "'", long10 == 30000L);
        org.junit.Assert.assertNotNull(subscription11);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 2000L + "'", long13 == 2000L);
    }

    @Test
    public void test05049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05049");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        java.lang.String str9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        long long10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        boolean boolean11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer8);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 30000L + "'", long10 == 30000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer12);
    }

    @Test
    public void test05050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05050");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder17.build();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig18.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder8.setMaxPollRecords((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder23.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder23.setFetchMinBytes((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder23.setSSLKeystore("", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig33 = kafkaSpoutRetryServiceBuilder23.build();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig33);
    }

    @Test
    public void test05051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05051");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setPartitionRefreshPeriodMs((long) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setBootstrapServers("hi!");
        java.util.Properties properties29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setProp(properties29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
    }

    @Test
    public void test05052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05052");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer19 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, firstPollOffsetStrategyEnumSerializableDeserializer19, (java.util.Collection<java.lang.String>) strList22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type> subscriptionBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type>("hi!", subscriptionSerializableDeserializer15, typeSerializableDeserializer16, (java.util.Collection<java.lang.String>) strList22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, firstPollOffsetStrategyEnumSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, firstPollOffsetStrategyEnumSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList22);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test05053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05053");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder17.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, firstPollOffsetStrategyEnumSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder28.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder28.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, firstPollOffsetStrategyEnumSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, firstPollOffsetStrategyEnumSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setFirstPollOffsetStrategy(firstPollOffsetStrategy49);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer53 = null;
        java.util.regex.Pattern pattern54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer52, firstPollOffsetStrategyEnumSerializableDeserializer53, pattern54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig56 = kafkaSpoutRetryServiceBuilder55.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer57 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator58 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getTranslator();
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator58, fields59, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator58, fields63, "");
        org.apache.storm.tuple.Fields fields66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator58, fields66, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder12.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder12.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder12.setMaxPollRecords(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder75.setMaxPartitionFectchBytes((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder75.setSSLTruststore("hi!", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy49 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy49.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig56);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
    }

    @Test
    public void test05054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05054");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setPartitionRefreshPeriodMs((long) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder21.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, firstPollOffsetStrategyEnumSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig32 = kafkaSpoutRetryServiceBuilder31.build();
        boolean boolean33 = kafkaSpoutRetryServiceKafkaSpoutConfig32.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator34 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getTranslator();
        int int35 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator36 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, firstPollOffsetStrategyEnumSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer50 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer51 = null;
        java.util.regex.Pattern pattern52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer50, firstPollOffsetStrategyEnumSerializableDeserializer51, pattern52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig54 = kafkaSpoutRetryServiceBuilder53.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer55 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator56 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator56);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder44.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder44.setMaxUncommittedOffsets((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder63.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder63.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer69 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer70 = null;
        java.util.regex.Pattern pattern71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder72 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer69, firstPollOffsetStrategyEnumSerializableDeserializer70, pattern71);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig73 = kafkaSpoutRetryServiceBuilder72.build();
        boolean boolean74 = kafkaSpoutRetryServiceKafkaSpoutConfig73.isConsumerAutoCommitMode();
        int int75 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer76 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription77 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getSubscription();
        long long78 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService79 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder67.setRetry(kafkaSpoutRetryService79);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer82 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer83 = null;
        java.util.regex.Pattern pattern84 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder85 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer82, firstPollOffsetStrategyEnumSerializableDeserializer83, pattern84);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig86 = kafkaSpoutRetryServiceBuilder85.build();
        boolean boolean87 = kafkaSpoutRetryServiceKafkaSpoutConfig86.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy88 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService89 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getRetryService();
        long long90 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getPartitionRefreshPeriodMs();
        boolean boolean91 = kafkaSpoutRetryServiceKafkaSpoutConfig86.isConsumerAutoCommitMode();
        java.lang.String str92 = kafkaSpoutRetryServiceKafkaSpoutConfig86.toString();
        java.lang.String str93 = kafkaSpoutRetryServiceKafkaSpoutConfig86.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap94 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder95 = kafkaSpoutRetryServiceBuilder80.setProp(strMap94);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder96 = kafkaSpoutRetryServiceBuilder26.setProp(strMap94);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder98 = kafkaSpoutRetryServiceBuilder96.setFetchMinBytes((int) (byte) 0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2147483647 + "'", int35 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig54);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 10000000 + "'", int75 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer76);
        org.junit.Assert.assertNotNull(subscription77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 2000L + "'", long78 == 2000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy88 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy88.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService89);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 2000L + "'", long90 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder95);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder96);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder98);
    }

    @Test
    public void test05055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05055");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        org.apache.storm.tuple.Fields fields19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator18, fields19, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxPollRecords((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setPollTimeoutMs((long) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder23.setSSLKeystore("", "hi!", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
    }

    @Test
    public void test05056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05056");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder8.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getRetryService();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig13.toString();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getPartitionRefreshPeriodMs();
        boolean boolean17 = kafkaSpoutRetryServiceKafkaSpoutConfig13.isConsumerAutoCommitMode();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription19 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getSubscription();
        boolean boolean20 = kafkaSpoutRetryServiceKafkaSpoutConfig13.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2000L + "'", long16 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 30000L + "'", long18 == 30000L);
        org.junit.Assert.assertNotNull(subscription19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test05057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05057");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.Comparable<java.lang.String>> subscriptionBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.Comparable<java.lang.String>>("", subscriptionSerializableDeserializer1, strComparableSerializableDeserializer2, pattern3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test05058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05058");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder8.setMaxRetries(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, firstPollOffsetStrategyEnumSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder33.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, firstPollOffsetStrategyEnumSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer50 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer51 = null;
        java.util.regex.Pattern pattern52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer50, firstPollOffsetStrategyEnumSerializableDeserializer51, pattern52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig54 = kafkaSpoutRetryServiceBuilder53.build();
        boolean boolean55 = kafkaSpoutRetryServiceKafkaSpoutConfig54.isConsumerAutoCommitMode();
        int int56 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer57 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder48.setProp(strMap58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder39.setProp(strMap58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder20.setProp(strMap58);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer63 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer64 = null;
        java.util.regex.Pattern pattern65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder66 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer63, firstPollOffsetStrategyEnumSerializableDeserializer64, pattern65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig67 = kafkaSpoutRetryServiceBuilder66.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer68 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator69 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        int int70 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription71 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer72 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getValueDeserializer();
        long long73 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder61.setProp(strMap74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder75.setSSLTruststore("hi!", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10000000 + "'", int56 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig67);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 10000000 + "'", int70 == 10000000);
        org.junit.Assert.assertNotNull(subscription71);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 200L + "'", long73 == 200L);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
    }

    @Test
    public void test05059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05059");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, firstPollOffsetStrategyEnumSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, firstPollOffsetStrategyEnumSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setFirstPollOffsetStrategy(firstPollOffsetStrategy36);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, firstPollOffsetStrategyEnumSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder42.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator45 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator45, fields46, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator45, fields50, "");
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator45, fields53, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder10.setFetchMinBytes(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer59 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer60 = null;
        java.util.regex.Pattern pattern61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer59, firstPollOffsetStrategyEnumSerializableDeserializer60, pattern61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig63 = kafkaSpoutRetryServiceBuilder62.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder62.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder62.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig69 = kafkaSpoutRetryServiceBuilder68.build();
        java.lang.String str70 = kafkaSpoutRetryServiceKafkaSpoutConfig69.toString();
        org.apache.storm.kafka.spout.Subscription subscription71 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService72 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getRetryService();
        java.lang.String str73 = kafkaSpoutRetryServiceKafkaSpoutConfig69.toString();
        int int74 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getMaxUncommittedOffsets();
        int int75 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy76 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig69);
        org.junit.Assert.assertNotNull(subscription71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 10 + "'", int74 == 10);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 10 + "'", int75 == 10);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy76 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy76.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
    }

    @Test
    public void test05060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05060");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, firstPollOffsetStrategyEnumSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer28 = null;
        java.util.regex.Pattern pattern29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer27, firstPollOffsetStrategyEnumSerializableDeserializer28, pattern29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder30.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder13.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig36 = kafkaSpoutRetryServiceBuilder13.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder13.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder13.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder13.setPartitionRefreshPeriodMs((-1L));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
    }

    @Test
    public void test05061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05061");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder17.build();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig18.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder8.setMaxPollRecords((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder23.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setOffsetCommitPeriodMs(10000000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
    }

    @Test
    public void test05062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05062");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, firstPollOffsetStrategyEnumSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig23 = kafkaSpoutRetryServiceBuilder22.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, firstPollOffsetStrategyEnumSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig36 = kafkaSpoutRetryServiceBuilder35.build();
        boolean boolean37 = kafkaSpoutRetryServiceKafkaSpoutConfig36.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService39 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getRetryService();
        boolean boolean40 = kafkaSpoutRetryServiceKafkaSpoutConfig36.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder30.setProp(strMap41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setMaxUncommittedOffsets(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy45 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setFirstPollOffsetStrategy(firstPollOffsetStrategy45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder17.setFirstPollOffsetStrategy(firstPollOffsetStrategy45);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer50 = null;
        java.util.regex.Pattern pattern51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer49, firstPollOffsetStrategyEnumSerializableDeserializer50, pattern51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder54.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder62.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService66 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder62.setRetry(kafkaSpoutRetryService66);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder17.setRetry(kafkaSpoutRetryService66);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder17.setPollTimeoutMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig75 = kafkaSpoutRetryServiceBuilder74.build();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy45 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy45.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig75);
    }

    @Test
    public void test05063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05063");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        java.lang.String str10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer11);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 2000L + "'", long13 == 2000L);
    }

    @Test
    public void test05064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05064");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setFirstPollOffsetStrategy(firstPollOffsetStrategy22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setFetchMinBytes((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setMaxRetries((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setFetchMinBytes((int) (byte) 1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
    }

    @Test
    public void test05065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05065");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, firstPollOffsetStrategyEnumSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy14);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, firstPollOffsetStrategyEnumSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig21 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer22 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator23 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getTranslator();
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, firstPollOffsetStrategyEnumSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig33 = kafkaSpoutRetryServiceBuilder32.build();
        boolean boolean34 = kafkaSpoutRetryServiceKafkaSpoutConfig33.isConsumerAutoCommitMode();
        int int35 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer36 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder4.setProp(strMap37);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer40 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer41 = null;
        java.util.regex.Pattern pattern42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer40, firstPollOffsetStrategyEnumSerializableDeserializer41, pattern42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig44 = kafkaSpoutRetryServiceBuilder43.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer45 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator46 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getTranslator();
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator46, fields47, "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer52 = null;
        java.util.regex.Pattern pattern53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer51, firstPollOffsetStrategyEnumSerializableDeserializer52, pattern53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig55 = kafkaSpoutRetryServiceBuilder54.build();
        boolean boolean56 = kafkaSpoutRetryServiceKafkaSpoutConfig55.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy57 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService58 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getRetryService();
        boolean boolean59 = kafkaSpoutRetryServiceKafkaSpoutConfig55.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator60 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator60);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer63 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer64 = null;
        java.util.regex.Pattern pattern65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder66 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer63, firstPollOffsetStrategyEnumSerializableDeserializer64, pattern65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig67 = kafkaSpoutRetryServiceBuilder66.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer68 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator69 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator70 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        int int71 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getMaxUncommittedOffsets();
        java.lang.String str72 = kafkaSpoutRetryServiceKafkaSpoutConfig67.toString();
        java.lang.String str73 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getConsumerGroupId();
        org.apache.storm.kafka.spout.Subscription subscription74 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getSubscription();
        int int75 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getMaxUncommittedOffsets();
        java.lang.String str76 = kafkaSpoutRetryServiceKafkaSpoutConfig67.toString();
        long long77 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService78 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder61.setRetry(kafkaSpoutRetryService78);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder79.setPartitionRefreshPeriodMs((long) 1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig21);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10000000 + "'", int35 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig44);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy57 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy57.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig67);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 10000000 + "'", int71 == 10000000);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(subscription74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 10000000 + "'", int75 == 10000000);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 200L + "'", long77 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
    }

    @Test
    public void test05066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05066");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer18 = null;
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, firstPollOffsetStrategyEnumSerializableDeserializer18, (java.util.Collection<java.lang.String>) strList21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type> subscriptionBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type>("hi!", subscriptionSerializableDeserializer14, typeSerializableDeserializer15, (java.util.Collection<java.lang.String>) strList21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer11, firstPollOffsetStrategyEnumSerializableDeserializer12, (java.util.Collection<java.lang.String>) strList21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.util.Collection<java.lang.String>> objBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.util.Collection<java.lang.String>>("hi!", objSerializableDeserializer8, strCollectionSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.util.List<java.lang.String>> strCollectionBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.util.List<java.lang.String>>("hi!", strCollectionSerializableDeserializer5, strListSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> strComparableBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("hi!", strComparableSerializableDeserializer2, firstPollOffsetStrategySerializableDeserializer3, (java.util.Collection<java.lang.String>) strList21);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test05067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05067");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        java.lang.String str7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.storm.kafka.spout.Subscription subscription8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(subscription8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService9);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy10 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy10.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 30000L + "'", long12 == 30000L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2000L + "'", long14 == 2000L);
    }

    @Test
    public void test05068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05068");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig8 = kafkaSpoutRetryServiceBuilder7.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer9 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator10 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator11 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getTranslator();
        int int12 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getMaxUncommittedOffsets();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig8.toString();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getConsumerGroupId();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getSubscription();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getMaxUncommittedOffsets();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig8.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getKeyDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription19 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, subscription19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig8);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10000000 + "'", int12 == 10000000);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000000 + "'", int16 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer18);
        org.junit.Assert.assertNotNull(subscription19);
    }

    @Test
    public void test05069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05069");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder17.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, firstPollOffsetStrategyEnumSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder28.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder28.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, firstPollOffsetStrategyEnumSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, firstPollOffsetStrategyEnumSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setFirstPollOffsetStrategy(firstPollOffsetStrategy49);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer53 = null;
        java.util.regex.Pattern pattern54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer52, firstPollOffsetStrategyEnumSerializableDeserializer53, pattern54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig56 = kafkaSpoutRetryServiceBuilder55.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer57 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator58 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getTranslator();
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator58, fields59, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator58, fields63, "");
        org.apache.storm.tuple.Fields fields66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator58, fields66, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder12.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig72 = kafkaSpoutRetryServiceBuilder12.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy73 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer74 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getKeyDeserializer();
        int int75 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getMaxTupleRetries();
        boolean boolean76 = kafkaSpoutRetryServiceKafkaSpoutConfig72.isConsumerAutoCommitMode();
        long long77 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getKafkaProps();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy49 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy49.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig56);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig72);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy73 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy73.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2147483647 + "'", int75 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 30000L + "'", long77 == 30000L);
        org.junit.Assert.assertNotNull(strMap78);
    }

    @Test
    public void test05070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05070");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, firstPollOffsetStrategyEnumSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder25.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder6.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder25);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, firstPollOffsetStrategyEnumSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig36 = kafkaSpoutRetryServiceBuilder35.build();
        boolean boolean37 = kafkaSpoutRetryServiceKafkaSpoutConfig36.isConsumerAutoCommitMode();
        int int38 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer39 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder25.setProp("", (java.lang.Object) kafkaSpoutRetryServiceKafkaSpoutConfig36);
        java.lang.String str42 = kafkaSpoutRetryServiceKafkaSpoutConfig36.toString();
        java.lang.String str43 = kafkaSpoutRetryServiceKafkaSpoutConfig36.toString();
        long long44 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer45 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator46 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator47 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getTranslator();
        org.apache.storm.kafka.spout.Subscription subscription48 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10000000 + "'", int38 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 200L + "'", long44 == 200L);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator47);
        org.junit.Assert.assertNotNull(subscription48);
    }

    @Test
    public void test05071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05071");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        java.lang.String str9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        java.lang.String str10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        int int11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10000000 + "'", int11 == 10000000);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 30000L + "'", long12 == 30000L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2000L + "'", long14 == 2000L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
    }

    @Test
    public void test05072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05072");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRetry(kafkaSpoutRetryService20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder23.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder23.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, firstPollOffsetStrategyEnumSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig34 = kafkaSpoutRetryServiceBuilder33.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer35 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator36 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator37 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getTranslator();
        int int38 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getMaxUncommittedOffsets();
        java.lang.String str39 = kafkaSpoutRetryServiceKafkaSpoutConfig34.toString();
        java.lang.String str40 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer41 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy42);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, firstPollOffsetStrategyEnumSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig49 = kafkaSpoutRetryServiceBuilder48.build();
        boolean boolean50 = kafkaSpoutRetryServiceKafkaSpoutConfig49.isConsumerAutoCommitMode();
        java.lang.String str51 = kafkaSpoutRetryServiceKafkaSpoutConfig49.toString();
        java.lang.String str52 = kafkaSpoutRetryServiceKafkaSpoutConfig49.toString();
        java.lang.String str53 = kafkaSpoutRetryServiceKafkaSpoutConfig49.toString();
        java.lang.String str54 = kafkaSpoutRetryServiceKafkaSpoutConfig49.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator55 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getTranslator();
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields56, "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer60 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer61 = null;
        java.util.regex.Pattern pattern62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder63 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer60, firstPollOffsetStrategyEnumSerializableDeserializer61, pattern62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig64 = kafkaSpoutRetryServiceBuilder63.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer65 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator66 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator67 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getTranslator();
        int int68 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy69 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy70 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder58.setFirstPollOffsetStrategy(firstPollOffsetStrategy70);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder71.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder71.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder75.setSSLKeystore("hi!", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig34);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10000000 + "'", int38 == 10000000);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer41);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy42 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy42.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig64);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 10000000 + "'", int68 == 10000000);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy69 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy69.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy70 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy70.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
    }

    @Test
    public void test05073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05073");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, firstPollOffsetStrategyEnumSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, firstPollOffsetStrategyEnumSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setFirstPollOffsetStrategy(firstPollOffsetStrategy36);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, firstPollOffsetStrategyEnumSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder42.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator45 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator45, fields46, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator45, fields50, "");
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator45, fields53, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder10.setFetchMinBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder10.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setFirstPollOffsetStrategy(firstPollOffsetStrategy61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder62.setOffsetCommitPeriodMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setMaxUncommittedOffsets(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig67 = kafkaSpoutRetryServiceBuilder66.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService68 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getRetryService();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService68);
    }

    @Test
    public void test05074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05074");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        java.lang.String str7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        boolean boolean9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.Subscription subscription10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        long long11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        boolean boolean12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(subscription10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 200L + "'", long11 == 200L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer15);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer16);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test05075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05075");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setMaxPollRecords((-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, firstPollOffsetStrategyEnumSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig22 = kafkaSpoutRetryServiceBuilder21.build();
        boolean boolean23 = kafkaSpoutRetryServiceKafkaSpoutConfig22.isConsumerAutoCommitMode();
        java.lang.String str24 = kafkaSpoutRetryServiceKafkaSpoutConfig22.toString();
        java.lang.String str25 = kafkaSpoutRetryServiceKafkaSpoutConfig22.toString();
        java.lang.String str26 = kafkaSpoutRetryServiceKafkaSpoutConfig22.toString();
        java.lang.String str27 = kafkaSpoutRetryServiceKafkaSpoutConfig22.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator28 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getTranslator();
        org.apache.storm.tuple.Fields fields29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder16.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator28, fields29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder30.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig32 = kafkaSpoutRetryServiceBuilder30.build();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig32);
    }

    @Test
    public void test05076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05076");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceBuilderSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> strComparableBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>>("", strComparableSerializableDeserializer1, kafkaSpoutRetryServiceBuilderSerializableDeserializer2, pattern3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test05077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05077");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setFirstPollOffsetStrategy(firstPollOffsetStrategy22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setMaxRetries((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes(32);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, firstPollOffsetStrategyEnumSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder41.build();
        boolean boolean43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.isConsumerAutoCommitMode();
        java.lang.String str44 = kafkaSpoutRetryServiceKafkaSpoutConfig42.toString();
        org.apache.storm.kafka.spout.Subscription subscription45 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService46 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy47 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription48 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, firstPollOffsetStrategyEnumSerializableDeserializer36, subscription48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setMaxPartitionFectchBytes(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder24.setProp("", (java.lang.Object) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(subscription45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService46);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy47 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy47.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
    }

    @Test
    public void test05078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05078");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder19.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder19.setMaxRetries((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder26.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setOffsetCommitPeriodMs(30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
    }

    @Test
    public void test05079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05079");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceBuilderSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceBuilderBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>>("hi!", kafkaSpoutRetryServiceBuilderSerializableDeserializer7, kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer8, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, org.apache.storm.kafka.spout.KafkaSpoutRetryService> cloneableBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, org.apache.storm.kafka.spout.KafkaSpoutRetryService>("hi!", cloneableSerializableDeserializer2, kafkaSpoutRetryServiceSerializableDeserializer3, strArray11);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test05080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05080");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        long long11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        int int12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 200L + "'", long11 == 200L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 30000L + "'", long14 == 30000L);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2000L + "'", long16 == 2000L);
        org.junit.Assert.assertNotNull(subscription17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test05081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05081");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer8 = null;
        java.util.regex.Pattern pattern9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, firstPollOffsetStrategyEnumSerializableDeserializer8, pattern9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder10.build();
        boolean boolean12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, subscription14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, subscription14);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, firstPollOffsetStrategyEnumSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig22 = kafkaSpoutRetryServiceBuilder21.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer23 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator24 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator25 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getTranslator();
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder16.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator25, fields26, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder16.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder16.setPartitionRefreshPeriodMs((long) (short) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig22);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
    }

    @Test
    public void test05082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05082");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setFirstPollOffsetStrategy(firstPollOffsetStrategy15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder14.setGroupId("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy15 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy15.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
    }

    @Test
    public void test05083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05083");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer5 = null;
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer4, randomAccessSerializableDeserializer5, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.util.RandomAccess> genericDeclarationBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.util.RandomAccess>("hi!", genericDeclarationSerializableDeserializer1, randomAccessSerializableDeserializer2, strArray7);
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test05084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05084");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setMaxRetries((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, firstPollOffsetStrategyEnumSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig33 = kafkaSpoutRetryServiceBuilder32.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer34 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator35 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getTranslator();
        int int36 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator37 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getTranslator();
        org.apache.storm.tuple.Fields fields38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator37, fields38, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setPartitionRefreshPeriodMs((long) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder40.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setMaxPollRecords(10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer50 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer53 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer54 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer59 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer60 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer62 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer63 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer66 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer67 = null;
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder72 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer66, firstPollOffsetStrategyEnumSerializableDeserializer67, (java.util.Collection<java.lang.String>) strList70);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder73 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList70);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder74 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer62, firstPollOffsetStrategyEnumSerializableDeserializer63, (java.util.Collection<java.lang.String>) strList70);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>> strCollectionBuilder75 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>>("hi!", strCollectionSerializableDeserializer59, strCollectionSerializableDeserializer60, (java.util.Collection<java.lang.String>) strList70);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> strArrayBuilder76 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("hi!", strArraySerializableDeserializer56, firstPollOffsetStrategySerializableDeserializer57, (java.util.Collection<java.lang.String>) strList70);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Comparable<java.lang.String>> strListBuilder77 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Comparable<java.lang.String>>("hi!", strListSerializableDeserializer53, strComparableSerializableDeserializer54, (java.util.Collection<java.lang.String>) strList70);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder78 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer50, firstPollOffsetStrategyEnumSerializableDeserializer51, (java.util.Collection<java.lang.String>) strList70);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder45.setProp("hi!", (java.lang.Object) strList70);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder80 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList70);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder81 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, firstPollOffsetStrategyEnumSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList70);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder82 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, firstPollOffsetStrategyEnumSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList70);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder83 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList70);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder84 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList70);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig33);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10000000 + "'", int36 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test05085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05085");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder10.build();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig13.isConsumerAutoCommitMode();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig13.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator16 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getTranslator();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getPollTimeoutMs();
        boolean boolean18 = kafkaSpoutRetryServiceKafkaSpoutConfig13.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator19 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer20 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator21 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getTranslator();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 200L + "'", long17 == 200L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator19);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator21);
    }

    @Test
    public void test05086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05086");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder17.build();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig18.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder8.setMaxPollRecords((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setFetchMinBytes((int) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer32 = null;
        java.util.regex.Pattern pattern33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer31, firstPollOffsetStrategyEnumSerializableDeserializer32, pattern33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder34.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig41 = kafkaSpoutRetryServiceBuilder34.build();
        java.lang.String str42 = kafkaSpoutRetryServiceKafkaSpoutConfig41.toString();
        boolean boolean43 = kafkaSpoutRetryServiceKafkaSpoutConfig41.isConsumerAutoCommitMode();
        int int44 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator45 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer46 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getKeyDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder27.setProp(strMap47);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer50 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer51 = null;
        java.util.regex.Pattern pattern52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer50, firstPollOffsetStrategyEnumSerializableDeserializer51, pattern52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder53.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy58 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setFirstPollOffsetStrategy(firstPollOffsetStrategy58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder57.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService63 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder57.setRetry(kafkaSpoutRetryService63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder57.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder68.setPartitionRefreshPeriodMs((long) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer72 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer73 = null;
        java.util.regex.Pattern pattern74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder75 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer72, firstPollOffsetStrategyEnumSerializableDeserializer73, pattern74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig76 = kafkaSpoutRetryServiceBuilder75.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer77 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator78 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getTranslator();
        int int79 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription80 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getSubscription();
        java.lang.String str81 = kafkaSpoutRetryServiceKafkaSpoutConfig76.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator82 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder68.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator82);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2147483647 + "'", int44 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator45);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy58 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy58.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig76);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 10000000 + "'", int79 == 10000000);
        org.junit.Assert.assertNotNull(subscription80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
    }

    @Test
    public void test05087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05087");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder10.build();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getKafkaProps();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getPartitionRefreshPeriodMs();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig13.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2000L + "'", long15 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test05088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05088");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        java.lang.String str9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        long long10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        long long11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService8);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 30000L + "'", long10 == 30000L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 200L + "'", long11 == 200L);
    }

    @Test
    public void test05089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05089");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        java.lang.String str9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        java.lang.String str10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(subscription7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
    }

    @Test
    public void test05090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05090");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords((int) (short) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, firstPollOffsetStrategyEnumSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setFirstPollOffsetStrategy(firstPollOffsetStrategy31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder30.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder30.setRetry(kafkaSpoutRetryService36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder30.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setPartitionRefreshPeriodMs((long) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, firstPollOffsetStrategyEnumSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig49 = kafkaSpoutRetryServiceBuilder48.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer50 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator51 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getTranslator();
        int int52 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription53 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getSubscription();
        java.lang.String str54 = kafkaSpoutRetryServiceKafkaSpoutConfig49.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator55 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setOffsetCommitPeriodMs(32L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer63 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer64 = null;
        java.util.regex.Pattern pattern65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder66 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer63, firstPollOffsetStrategyEnumSerializableDeserializer64, pattern65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig67 = kafkaSpoutRetryServiceBuilder66.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer68 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator69 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator70 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        int int71 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy72 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer73 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer74 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService75 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder61.setRetry(kafkaSpoutRetryService75);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder61.setGroupId("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig49);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 10000000 + "'", int52 == 10000000);
        org.junit.Assert.assertNotNull(subscription53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig67);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 10000000 + "'", int71 == 10000000);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy72 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy72.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer73);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
    }

    @Test
    public void test05091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05091");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, firstPollOffsetStrategyEnumSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig20 = kafkaSpoutRetryServiceBuilder19.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer21 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator22 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator23 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getTranslator();
        int int24 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder12.setProp(strMap25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder26.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer32 = null;
        java.util.regex.Pattern pattern33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer31, firstPollOffsetStrategyEnumSerializableDeserializer32, pattern33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder36.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer42 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer43 = null;
        java.util.regex.Pattern pattern44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer42, firstPollOffsetStrategyEnumSerializableDeserializer43, pattern44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig46 = kafkaSpoutRetryServiceBuilder45.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer47 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator48 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator48);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer54 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer55 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer58 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer59 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceBuilderSerializableDeserializer61 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer62 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer64 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer65 = null;
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder68 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer64, randomAccessSerializableDeserializer65, strArray67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.lang.reflect.GenericDeclaration> kafkaSpoutRetryServiceBuilderBuilder69 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.lang.reflect.GenericDeclaration>("hi!", kafkaSpoutRetryServiceBuilderSerializableDeserializer61, genericDeclarationSerializableDeserializer62, strArray67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder70 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer58, firstPollOffsetStrategyEnumSerializableDeserializer59, strArray67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.reflect.AnnotatedElement> kafkaSpoutRetryServiceBuilder72 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.reflect.AnnotatedElement>("hi!", kafkaSpoutRetryServiceSerializableDeserializer54, annotatedElementSerializableDeserializer55, strArray67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder73 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder29.setProp("hi!", (java.lang.Object) strBuilder73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder74.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder76.setMaxPollRecords((int) 'a');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig20);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10000000 + "'", int24 == 10000000);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig46);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
    }

    @Test
    public void test05092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05092");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> firstPollOffsetStrategyEnumBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>>("hi!", firstPollOffsetStrategyEnumSerializableDeserializer14, kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer15, (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.String[]> firstPollOffsetStrategyBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.String[]>("hi!", firstPollOffsetStrategySerializableDeserializer11, strArraySerializableDeserializer12, (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, firstPollOffsetStrategyEnumSerializableDeserializer7, (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList19);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> genericDeclarationBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("", genericDeclarationSerializableDeserializer1, firstPollOffsetStrategySerializableDeserializer2, (java.util.Collection<java.lang.String>) strList19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test05093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05093");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder17.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, firstPollOffsetStrategyEnumSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, firstPollOffsetStrategyEnumSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setFirstPollOffsetStrategy(firstPollOffsetStrategy38);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, firstPollOffsetStrategyEnumSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig45 = kafkaSpoutRetryServiceBuilder44.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer46 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator47 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getTranslator();
        org.apache.storm.tuple.Fields fields48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator47, fields48, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator47);
        org.apache.storm.tuple.Fields fields52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator47, fields52, "");
        org.apache.storm.tuple.Fields fields55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator47, fields55, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setOffsetCommitPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig60 = kafkaSpoutRetryServiceBuilder57.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService61 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getRetryService();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator62 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getTranslator();
        long long63 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig45);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 1L + "'", long63 == 1L);
    }

    @Test
    public void test05094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05094");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs((long) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder10.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, firstPollOffsetStrategyEnumSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig22 = kafkaSpoutRetryServiceBuilder21.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer23 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator24 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer25 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getKeyDeserializer();
        java.lang.String str26 = kafkaSpoutRetryServiceKafkaSpoutConfig22.toString();
        long long27 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getFirstPollOffsetStrategy();
        java.lang.String str30 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getConsumerGroupId();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder10.setProp(strMap31);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc33 = null;
        org.apache.storm.tuple.Fields fields34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc33, fields34, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig37 = kafkaSpoutRetryServiceBuilder10.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer39 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getKeyDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig22);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator24);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer25);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 200L + "'", long27 == 200L);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy29 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy29.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig37);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer39);
    }

    @Test
    public void test05095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05095");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        java.lang.String str10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        java.lang.String str11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        org.apache.storm.kafka.spout.Subscription subscription12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        int int13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10000000 + "'", int9 == 10000000);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10000000 + "'", int13 == 10000000);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2000L + "'", long14 == 2000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 200L + "'", long19 == 200L);
    }

    @Test
    public void test05096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05096");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer14 = null;
        java.util.regex.Pattern pattern15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, firstPollOffsetStrategyEnumSerializableDeserializer14, pattern15);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, firstPollOffsetStrategyEnumSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setFirstPollOffsetStrategy(firstPollOffsetStrategy26);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, firstPollOffsetStrategyEnumSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig33 = kafkaSpoutRetryServiceBuilder32.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer34 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator35 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getTranslator();
        org.apache.storm.tuple.Fields fields36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder25.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator35, fields36, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder16.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder16.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setFetchMinBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setMaxUncommittedOffsets((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder47.build();
        long long49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription50 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder51 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, firstPollOffsetStrategyEnumSerializableDeserializer11, subscription50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.util.ArrayList<java.lang.String>> genericDeclarationBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.util.ArrayList<java.lang.String>>("hi!", genericDeclarationSerializableDeserializer7, strListSerializableDeserializer8, subscription50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, subscription50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> annotatedElementBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>>("hi!", annotatedElementSerializableDeserializer1, kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer2, subscription50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy26 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy26.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig33);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 30000L + "'", long49 == 30000L);
        org.junit.Assert.assertNotNull(subscription50);
    }

    @Test
    public void test05097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05097");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        boolean boolean11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        boolean boolean12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        int int13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10000000 + "'", int13 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 30000L + "'", long16 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer18);
    }

    @Test
    public void test05098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05098");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.util.Map<java.lang.String, java.lang.Object>> strMapBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.util.Map<java.lang.String, java.lang.Object>>("", strMapSerializableDeserializer1, strMapSerializableDeserializer2, pattern3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test05099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05099");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        int int7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        long long10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10000000 + "'", int7 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 30000L + "'", long10 == 30000L);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 30000L + "'", long13 == 30000L);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer14);
    }

    @Test
    public void test05100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05100");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        java.lang.String str7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        boolean boolean9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.Subscription subscription10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        long long11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        boolean boolean12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(subscription10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 200L + "'", long11 == 200L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 30000L + "'", long13 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
    }

    @Test
    public void test05101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05101");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRetry(kafkaSpoutRetryService20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder23.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder23.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder23.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, firstPollOffsetStrategyEnumSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig37 = kafkaSpoutRetryServiceBuilder36.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder36.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setPollTimeoutMs((long) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder42.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer50 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer51 = null;
        java.util.regex.Pattern pattern52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer50, firstPollOffsetStrategyEnumSerializableDeserializer51, pattern52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig54 = kafkaSpoutRetryServiceBuilder53.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer55 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator56 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer57 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getKeyDeserializer();
        java.lang.String str58 = kafkaSpoutRetryServiceKafkaSpoutConfig54.toString();
        long long59 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy61 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getFirstPollOffsetStrategy();
        java.lang.String str62 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getConsumerGroupId();
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder42.setProp(strMap63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder42.setFetchMinBytes(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer68 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer69 = null;
        java.util.regex.Pattern pattern70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder71 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer68, firstPollOffsetStrategyEnumSerializableDeserializer69, pattern70);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig72 = kafkaSpoutRetryServiceBuilder71.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer73 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator74 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getTranslator();
        int int75 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator76 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator77 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getTranslator();
        boolean boolean78 = kafkaSpoutRetryServiceKafkaSpoutConfig72.isConsumerAutoCommitMode();
        boolean boolean79 = kafkaSpoutRetryServiceKafkaSpoutConfig72.isConsumerAutoCommitMode();
        int int80 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator81 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator81);
        org.apache.storm.tuple.Fields fields83 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator81, fields83, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder85.setOffsetCommitPeriodMs((long) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder90 = kafkaSpoutRetryServiceBuilder87.setSSLTruststore("", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig54);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator56);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer57);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 200L + "'", long59 == 200L);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy61 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy61.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig72);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 10000000 + "'", int75 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 10000000 + "'", int80 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder90);
    }

    @Test
    public void test05102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05102");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer23 = null;
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer22, firstPollOffsetStrategyEnumSerializableDeserializer23, (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type> subscriptionBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type>("hi!", subscriptionSerializableDeserializer19, typeSerializableDeserializer20, (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, firstPollOffsetStrategyEnumSerializableDeserializer17, (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, firstPollOffsetStrategyEnumSerializableDeserializer14, (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, firstPollOffsetStrategyEnumSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.lang.String> firstPollOffsetStrategyEnumBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.lang.String>("hi!", firstPollOffsetStrategyEnumSerializableDeserializer5, strSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.util.ArrayList<java.lang.String>> strCollectionBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.util.ArrayList<java.lang.String>>("hi!", strCollectionSerializableDeserializer2, strListSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList26);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
    }

    @Test
    public void test05103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05103");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder17.build();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig18.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder8.setMaxPollRecords((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder23.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder23.setMaxPollRecords(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder23.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder23.build();
        boolean boolean32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKafkaProps();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator33);
        org.junit.Assert.assertNotNull(strMap34);
    }

    @Test
    public void test05104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05104");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, firstPollOffsetStrategyEnumSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig10 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer11 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getTranslator();
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator12, fields13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setMaxUncommittedOffsets((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder16.build();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getMaxUncommittedOffsets();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer20 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getKeyDeserializer();
        int int21 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig10);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 200L + "'", long19 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2147483647 + "'", int21 == 2147483647);
    }

    @Test
    public void test05105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05105");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, firstPollOffsetStrategyEnumSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer35 = null;
        java.util.regex.Pattern pattern36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer34, firstPollOffsetStrategyEnumSerializableDeserializer35, pattern36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig38 = kafkaSpoutRetryServiceBuilder37.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer39 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator40 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator41 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getTranslator();
        int int42 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder30.setProp(strMap43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder15.setProp(strMap43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setOffsetCommitPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder47.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setFetchMinBytes((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setMaxPartitionFectchBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder56.setFetchMinBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder56.setGroupId("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig38);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10000000 + "'", int42 == 10000000);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
    }

    @Test
    public void test05106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05106");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer14 = null;
        java.util.regex.Pattern pattern15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, firstPollOffsetStrategyEnumSerializableDeserializer14, pattern15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder16.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder16.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder8.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder22);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, firstPollOffsetStrategyEnumSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, firstPollOffsetStrategyEnumSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig34 = kafkaSpoutRetryServiceBuilder33.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer35 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator36 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getTranslator();
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator36, fields37);
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator36, fields39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder43.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setMaxPartitionFectchBytes((int) 'a');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig34);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
    }

    @Test
    public void test05107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05107");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, firstPollOffsetStrategyEnumSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy14);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, firstPollOffsetStrategyEnumSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig21 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer22 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator23 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getTranslator();
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, firstPollOffsetStrategyEnumSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig33 = kafkaSpoutRetryServiceBuilder32.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer34 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator35 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getTranslator();
        int int36 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator37 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getTranslator();
        org.apache.storm.tuple.Fields fields38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator37, fields38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setOffsetCommitPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder39.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, firstPollOffsetStrategyEnumSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder50.build();
        boolean boolean52 = kafkaSpoutRetryServiceKafkaSpoutConfig51.isConsumerAutoCommitMode();
        int int53 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getMaxUncommittedOffsets();
        java.lang.String str54 = kafkaSpoutRetryServiceKafkaSpoutConfig51.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService55 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getRetryService();
        boolean boolean56 = kafkaSpoutRetryServiceKafkaSpoutConfig51.isConsumerAutoCommitMode();
        boolean boolean57 = kafkaSpoutRetryServiceKafkaSpoutConfig51.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator58 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator58, fields59, "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig21);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig33);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10000000 + "'", int36 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10000000 + "'", int53 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
    }

    @Test
    public void test05108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05108");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceBuilderSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceBuilderSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> firstPollOffsetStrategyEnumBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>>("hi!", firstPollOffsetStrategyEnumSerializableDeserializer10, kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, firstPollOffsetStrategyEnumSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.Collection<java.lang.String>> kafkaSpoutRetryServiceBuilderBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.Collection<java.lang.String>>("hi!", kafkaSpoutRetryServiceBuilderSerializableDeserializer4, strCollectionSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> subscriptionBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>>("", subscriptionSerializableDeserializer1, kafkaSpoutRetryServiceBuilderSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test05109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05109");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        int int7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        long long10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        int int11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10000000 + "'", int7 == 10000000);
        org.junit.Assert.assertNotNull(subscription8);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 200L + "'", long10 == 200L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2147483647 + "'", int11 == 2147483647);
    }

    @Test
    public void test05110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05110");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setOffsetCommitPeriodMs((long) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder25.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer32 = null;
        java.util.regex.Pattern pattern33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer31, firstPollOffsetStrategyEnumSerializableDeserializer32, pattern33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setFirstPollOffsetStrategy(firstPollOffsetStrategy39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder38.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, firstPollOffsetStrategyEnumSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer50 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer51 = null;
        java.util.regex.Pattern pattern52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer50, firstPollOffsetStrategyEnumSerializableDeserializer51, pattern52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder53.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy58 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setFirstPollOffsetStrategy(firstPollOffsetStrategy58);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer61 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer62 = null;
        java.util.regex.Pattern pattern63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer61, firstPollOffsetStrategyEnumSerializableDeserializer62, pattern63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig65 = kafkaSpoutRetryServiceBuilder64.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer66 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator67 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getTranslator();
        org.apache.storm.tuple.Fields fields68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator67, fields68, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator67);
        org.apache.storm.tuple.Fields fields73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator67, fields73, "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer77 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer78 = null;
        java.util.regex.Pattern pattern79 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder80 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer77, firstPollOffsetStrategyEnumSerializableDeserializer78, pattern79);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig81 = kafkaSpoutRetryServiceBuilder80.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer82 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator83 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getTranslator();
        int int84 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator85 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap86 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator87 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy88 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder29.setFirstPollOffsetStrategy(firstPollOffsetStrategy88);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder92 = kafkaSpoutRetryServiceBuilder89.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder95 = kafkaSpoutRetryServiceBuilder92.setSSLTruststore("", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy58 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy58.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig65);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig81);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 10000000 + "'", int84 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator85);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator87);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy88 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy88.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder92);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder95);
    }

    @Test
    public void test05111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05111");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, firstPollOffsetStrategyEnumSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder25.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder6.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder6.setPollTimeoutMs(30000L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig32 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, firstPollOffsetStrategyEnumSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig39 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer40 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator41 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getTranslator();
        int int42 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator43 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator45 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator46 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder6.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceRecordTranslator46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder6.setPollTimeoutMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder49.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder49.setMaxUncommittedOffsets((int) (byte) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig39);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10000000 + "'", int42 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
    }

    @Test
    public void test05112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05112");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, firstPollOffsetStrategyEnumSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig10 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer11 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getTranslator();
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator12, fields13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setMaxUncommittedOffsets((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder16.build();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getRetryService();
        java.lang.String str20 = kafkaSpoutRetryServiceKafkaSpoutConfig17.toString();
        int int21 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig10);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2000L + "'", long18 == 2000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2147483647 + "'", int21 == 2147483647);
    }

    @Test
    public void test05113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05113");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> firstPollOffsetStrategyEnumBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>>("hi!", firstPollOffsetStrategyEnumSerializableDeserializer10, kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.String[]> firstPollOffsetStrategyBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.String[]>("hi!", firstPollOffsetStrategySerializableDeserializer7, strArraySerializableDeserializer8, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.reflect.AnnotatedElement> strListBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.reflect.AnnotatedElement>("", strListSerializableDeserializer1, annotatedElementSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test05114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05114");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer22 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, firstPollOffsetStrategyEnumSerializableDeserializer22, (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type> subscriptionBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type>("hi!", subscriptionSerializableDeserializer18, typeSerializableDeserializer19, (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, firstPollOffsetStrategyEnumSerializableDeserializer16, (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer9, firstPollOffsetStrategyEnumSerializableDeserializer10, (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.util.RandomAccess> strBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.util.RandomAccess>("hi!", strSerializableDeserializer6, randomAccessSerializableDeserializer7, (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList25);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.util.AbstractCollection<java.lang.String>> firstPollOffsetStrategyBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.util.AbstractCollection<java.lang.String>>("", firstPollOffsetStrategySerializableDeserializer1, strCollectionSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
    }

    @Test
    public void test05115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05115");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, firstPollOffsetStrategyEnumSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, firstPollOffsetStrategyEnumSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer50 = null;
        java.util.regex.Pattern pattern51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer49, firstPollOffsetStrategyEnumSerializableDeserializer50, pattern51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder52.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer54 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator55 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder43.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder35.setProp("hi!", (java.lang.Object) "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setMaxPartitionFectchBytes((int) 'a');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer65 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer66 = null;
        java.util.regex.Pattern pattern67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder68 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer65, firstPollOffsetStrategyEnumSerializableDeserializer66, pattern67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig69 = kafkaSpoutRetryServiceBuilder68.build();
        boolean boolean70 = kafkaSpoutRetryServiceKafkaSpoutConfig69.isConsumerAutoCommitMode();
        int int71 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer72 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder61.setProp(strMap73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder12.setProp(strMap73);
        java.lang.Class<?> wildcardClass76 = kafkaSpoutRetryServiceBuilder75.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 10000000 + "'", int71 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test05116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05116");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, firstPollOffsetStrategyEnumSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy14);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, firstPollOffsetStrategyEnumSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig21 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer22 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator23 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getTranslator();
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, firstPollOffsetStrategyEnumSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig33 = kafkaSpoutRetryServiceBuilder32.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer34 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator35 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getTranslator();
        int int36 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator37 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getTranslator();
        org.apache.storm.tuple.Fields fields38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator37, fields38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder4.setFetchMinBytes(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder43.setSSLKeystore("hi!", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig21);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig33);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10000000 + "'", int36 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
    }

    @Test
    public void test05117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05117");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, firstPollOffsetStrategyEnumSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder13.build();
        boolean boolean15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.isConsumerAutoCommitMode();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder8.setProp(strMap18);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, firstPollOffsetStrategyEnumSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setFirstPollOffsetStrategy(firstPollOffsetStrategy29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, firstPollOffsetStrategyEnumSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig36 = kafkaSpoutRetryServiceBuilder35.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer37 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator38 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getTranslator();
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator38, fields39, "");
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator38, fields42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setSSLKeystore("", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder43.setPartitionRefreshPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder51.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer58 = null;
        java.util.regex.Pattern pattern59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer57, firstPollOffsetStrategyEnumSerializableDeserializer58, pattern59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder60.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy65 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setFirstPollOffsetStrategy(firstPollOffsetStrategy65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder64.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer70 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer71 = null;
        java.util.regex.Pattern pattern72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder73 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer70, firstPollOffsetStrategyEnumSerializableDeserializer71, pattern72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig74 = kafkaSpoutRetryServiceBuilder73.build();
        boolean boolean75 = kafkaSpoutRetryServiceKafkaSpoutConfig74.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy76 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder64.setFirstPollOffsetStrategy(firstPollOffsetStrategy76);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder64.setMaxPollRecords((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder79.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder81.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig84 = kafkaSpoutRetryServiceBuilder81.build();
        long long85 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator86 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getTranslator();
        org.apache.storm.tuple.Fields fields87 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator86, fields87, "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000000 + "'", int16 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy29 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy29.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig36);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy65 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy65.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy76 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy76.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig84);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 200L + "'", long85 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
    }

    @Test
    public void test05118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05118");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer9);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer12);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test05119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05119");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer23 = null;
        java.util.regex.Pattern pattern24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer22, firstPollOffsetStrategyEnumSerializableDeserializer23, pattern24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, firstPollOffsetStrategyEnumSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig37 = kafkaSpoutRetryServiceBuilder36.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer38 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator39 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder27.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder19.setProp("hi!", (java.lang.Object) "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder47.setMaxRetries((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder47.setSSLKeystore("hi!", "hi!", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig37);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
    }

    @Test
    public void test05120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05120");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder13.build();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKafkaProps();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getPartitionRefreshPeriodMs();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription20 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getSubscription();
        int int21 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator22 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        org.apache.storm.kafka.spout.Subscription subscription23 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.io.Serializable> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.io.Serializable>("", kafkaSpoutRetryServiceSerializableDeserializer1, serializableSerializableDeserializer2, subscription23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2000L + "'", long18 == 2000L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2000L + "'", long19 == 2000L);
        org.junit.Assert.assertNotNull(subscription20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10000000 + "'", int21 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator22);
        org.junit.Assert.assertNotNull(subscription23);
    }

    @Test
    public void test05121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05121");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, firstPollOffsetStrategyEnumSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder32.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder35.setMaxPollRecords((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder43.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setMaxPartitionFectchBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer53 = null;
        java.util.regex.Pattern pattern54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer52, firstPollOffsetStrategyEnumSerializableDeserializer53, pattern54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig56 = kafkaSpoutRetryServiceBuilder55.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder55.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder55.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig62 = kafkaSpoutRetryServiceBuilder61.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy63 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder50.setFirstPollOffsetStrategy(firstPollOffsetStrategy63);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer67 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer68 = null;
        java.util.regex.Pattern pattern69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder70 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer67, firstPollOffsetStrategyEnumSerializableDeserializer68, pattern69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig71 = kafkaSpoutRetryServiceBuilder70.build();
        boolean boolean72 = kafkaSpoutRetryServiceKafkaSpoutConfig71.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy73 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService74 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getRetryService();
        boolean boolean75 = kafkaSpoutRetryServiceKafkaSpoutConfig71.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.Subscription subscription76 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer77 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getValueDeserializer();
        java.lang.String str78 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer79 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder50.setProp("hi!", (java.lang.Object) firstPollOffsetStrategyEnumDeserializer79);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder50.setPollTimeoutMs((long) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder82.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer86 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer87 = null;
        java.util.regex.Pattern pattern88 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder89 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer86, firstPollOffsetStrategyEnumSerializableDeserializer87, pattern88);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig90 = kafkaSpoutRetryServiceBuilder89.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder89.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder95 = kafkaSpoutRetryServiceBuilder89.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig96 = kafkaSpoutRetryServiceBuilder95.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService97 = kafkaSpoutRetryServiceKafkaSpoutConfig96.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder98 = kafkaSpoutRetryServiceBuilder82.setRetry(kafkaSpoutRetryService97);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder99 = kafkaSpoutRetryServiceBuilder19.setRetry(kafkaSpoutRetryService97);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig62);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy63 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy63.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy73 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy73.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(subscription76);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder95);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig96);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService97);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder98);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder99);
    }

    @Test
    public void test05122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05122");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder13.build();
        org.apache.storm.kafka.spout.Subscription subscription17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, subscription17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setMaxPartitionFectchBytes(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder20.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setMaxRetries((int) (short) 0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNotNull(subscription17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
    }

    @Test
    public void test05123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05123");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> firstPollOffsetStrategyEnumBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>>("hi!", firstPollOffsetStrategyEnumSerializableDeserializer10, kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.Object> strListBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.Object>("hi!", strListSerializableDeserializer5, objSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer2, firstPollOffsetStrategyEnumSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test05124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05124");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, firstPollOffsetStrategyEnumSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy14);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, firstPollOffsetStrategyEnumSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig21 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer22 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator23 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getTranslator();
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setPartitionRefreshPeriodMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig32 = kafkaSpoutRetryServiceBuilder27.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder27.setMaxRetries((int) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer42 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceBuilderSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer46 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer48 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer49 = null;
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer48, randomAccessSerializableDeserializer49, strArray51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.lang.reflect.GenericDeclaration> kafkaSpoutRetryServiceBuilderBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.lang.reflect.GenericDeclaration>("hi!", kafkaSpoutRetryServiceBuilderSerializableDeserializer45, genericDeclarationSerializableDeserializer46, strArray51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer42, firstPollOffsetStrategyEnumSerializableDeserializer43, strArray51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer37, firstPollOffsetStrategyEnumSerializableDeserializer38, strArray51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder34.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceSerializableDeserializer37);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer61 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer62 = null;
        java.util.regex.Pattern pattern63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer61, firstPollOffsetStrategyEnumSerializableDeserializer62, pattern63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig65 = kafkaSpoutRetryServiceBuilder64.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer66 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator67 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getTranslator();
        int int68 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator69 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator71 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator72 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator73 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder58.setProp("", (java.lang.Object) kafkaSpoutRetryServiceRecordTranslator73);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer76 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer77 = null;
        java.util.regex.Pattern pattern78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder79 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer76, firstPollOffsetStrategyEnumSerializableDeserializer77, pattern78);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder79.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder81.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder81.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder85.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig88 = kafkaSpoutRetryServiceBuilder85.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService89 = kafkaSpoutRetryServiceKafkaSpoutConfig88.getRetryService();
        long long90 = kafkaSpoutRetryServiceKafkaSpoutConfig88.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService91 = kafkaSpoutRetryServiceKafkaSpoutConfig88.getRetryService();
        long long92 = kafkaSpoutRetryServiceKafkaSpoutConfig88.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator93 = kafkaSpoutRetryServiceKafkaSpoutConfig88.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder94 = kafkaSpoutRetryServiceBuilder74.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator93);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder96 = kafkaSpoutRetryServiceBuilder74.setMaxPartitionFectchBytes((int) (short) 1);
        java.util.Properties properties97 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder98 = kafkaSpoutRetryServiceBuilder74.setProp(properties97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig21);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig65);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 10000000 + "'", int68 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService89);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 10L + "'", long90 == 10L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService91);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 200L + "'", long92 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator93);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder94);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder96);
    }

    @Test
    public void test05125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05125");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setPartitionRefreshPeriodMs((long) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, firstPollOffsetStrategyEnumSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        int int30 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription31 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getSubscription();
        java.lang.String str32 = kafkaSpoutRetryServiceKafkaSpoutConfig27.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator33 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, firstPollOffsetStrategyEnumSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer44 = null;
        java.util.regex.Pattern pattern45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer43, firstPollOffsetStrategyEnumSerializableDeserializer44, pattern45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setFirstPollOffsetStrategy(firstPollOffsetStrategy51);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer54 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer55 = null;
        java.util.regex.Pattern pattern56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer54, firstPollOffsetStrategyEnumSerializableDeserializer55, pattern56);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig58 = kafkaSpoutRetryServiceBuilder57.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer59 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator60 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getTranslator();
        org.apache.storm.tuple.Fields fields61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator60, fields61, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder41.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder68.setFetchMinBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder70.setMaxUncommittedOffsets((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig73 = kafkaSpoutRetryServiceBuilder72.build();
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder36.setProp(strMap74);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer77 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer78 = null;
        java.util.regex.Pattern pattern79 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder80 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer77, firstPollOffsetStrategyEnumSerializableDeserializer78, pattern79);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig81 = kafkaSpoutRetryServiceBuilder80.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder80.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder80.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig87 = kafkaSpoutRetryServiceBuilder86.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy88 = kafkaSpoutRetryServiceKafkaSpoutConfig87.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder75.setFirstPollOffsetStrategy(firstPollOffsetStrategy88);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder89.setMaxPollRecords((int) (byte) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10000000 + "'", int30 == 10000000);
        org.junit.Assert.assertNotNull(subscription31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy51 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy51.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig58);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig87);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy88 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy88.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
    }

    @Test
    public void test05126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05126");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, firstPollOffsetStrategyEnumSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, firstPollOffsetStrategyEnumSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder28.build();
        boolean boolean30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.isConsumerAutoCommitMode();
        int int31 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer32 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder23.setProp(strMap33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder14.setProp(strMap33);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, firstPollOffsetStrategyEnumSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder43.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder35.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder53.setPartitionRefreshPeriodMs((long) 10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder53.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer62 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer63 = null;
        java.util.regex.Pattern pattern64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder65 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer62, firstPollOffsetStrategyEnumSerializableDeserializer63, pattern64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig66 = kafkaSpoutRetryServiceBuilder65.build();
        boolean boolean67 = kafkaSpoutRetryServiceKafkaSpoutConfig66.isConsumerAutoCommitMode();
        java.lang.String str68 = kafkaSpoutRetryServiceKafkaSpoutConfig66.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator69 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getTranslator();
        boolean boolean70 = kafkaSpoutRetryServiceKafkaSpoutConfig66.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.Subscription subscription71 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getSubscription();
        long long72 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getPollTimeoutMs();
        boolean boolean73 = kafkaSpoutRetryServiceKafkaSpoutConfig66.isConsumerAutoCommitMode();
        java.lang.String str74 = kafkaSpoutRetryServiceKafkaSpoutConfig66.toString();
        java.lang.String str75 = kafkaSpoutRetryServiceKafkaSpoutConfig66.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy76 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder58.setFirstPollOffsetStrategy(firstPollOffsetStrategy76);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder77.setSSLKeystore("", "hi!");
        java.util.Properties properties81 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder77.setProp(properties81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10000000 + "'", int31 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(subscription71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 200L + "'", long72 == 200L);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy76 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy76.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
    }

    @Test
    public void test05127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05127");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder17.build();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig18.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService21 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getRetryService();
        boolean boolean22 = kafkaSpoutRetryServiceKafkaSpoutConfig18.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder12.setProp(strMap23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setMaxUncommittedOffsets(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder26.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder26.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer35 = null;
        java.util.regex.Pattern pattern36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer34, firstPollOffsetStrategyEnumSerializableDeserializer35, pattern36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setFirstPollOffsetStrategy(firstPollOffsetStrategy42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder41.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder41.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder31.setProp("hi!", (java.lang.Object) "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer53 = null;
        java.util.regex.Pattern pattern54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer52, firstPollOffsetStrategyEnumSerializableDeserializer53, pattern54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder57.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder63.setFetchMinBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer67 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer68 = null;
        java.util.regex.Pattern pattern69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder70 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer67, firstPollOffsetStrategyEnumSerializableDeserializer68, pattern69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig71 = kafkaSpoutRetryServiceBuilder70.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer72 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator73 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getTranslator();
        int int74 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription75 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer76 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService77 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder65.setRetry(kafkaSpoutRetryService77);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer80 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer81 = null;
        java.util.regex.Pattern pattern82 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder83 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer80, firstPollOffsetStrategyEnumSerializableDeserializer81, pattern82);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig84 = kafkaSpoutRetryServiceBuilder83.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer85 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator86 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer87 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getKeyDeserializer();
        long long88 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy89 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder90 = kafkaSpoutRetryServiceBuilder65.setFirstPollOffsetStrategy(firstPollOffsetStrategy89);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder31.setFirstPollOffsetStrategy(firstPollOffsetStrategy89);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder31.setPollTimeoutMs((long) 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy42 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy42.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig71);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 10000000 + "'", int74 == 10000000);
        org.junit.Assert.assertNotNull(subscription75);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig84);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator86);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer87);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 30000L + "'", long88 == 30000L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy89 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy89.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
    }

    @Test
    public void test05128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05128");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, org.apache.storm.kafka.spout.Subscription> kafkaSpoutRetryServiceKafkaSpoutConfigBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, org.apache.storm.kafka.spout.Subscription>("hi!", kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer9, subscriptionSerializableDeserializer10, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.Cloneable> subscriptionBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.Cloneable>("hi!", subscriptionSerializableDeserializer5, cloneableSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> strListBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", strListSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList16);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test05129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05129");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        org.apache.storm.tuple.Fields fields19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator18, fields19, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setOffsetCommitPeriodMs((long) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setMaxUncommittedOffsets(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder23.setMaxUncommittedOffsets((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder23.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setPartitionRefreshPeriodMs(0L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
    }

    @Test
    public void test05130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05130");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setPartitionRefreshPeriodMs((long) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, firstPollOffsetStrategyEnumSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        int int30 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription31 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getSubscription();
        java.lang.String str32 = kafkaSpoutRetryServiceKafkaSpoutConfig27.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator33 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, firstPollOffsetStrategyEnumSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig40 = kafkaSpoutRetryServiceBuilder39.build();
        boolean boolean41 = kafkaSpoutRetryServiceKafkaSpoutConfig40.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder19.setFirstPollOffsetStrategy(firstPollOffsetStrategy42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder19.setMaxPollRecords((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder19.setPollTimeoutMs((long) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder19.setOffsetCommitPeriodMs((long) (byte) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer52 = null;
        java.util.regex.Pattern pattern53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer51, firstPollOffsetStrategyEnumSerializableDeserializer52, pattern53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig55 = kafkaSpoutRetryServiceBuilder54.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer56 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator57 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer58 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getKeyDeserializer();
        java.lang.String str59 = kafkaSpoutRetryServiceKafkaSpoutConfig55.toString();
        long long60 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy62 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getFirstPollOffsetStrategy();
        boolean boolean63 = kafkaSpoutRetryServiceKafkaSpoutConfig55.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService64 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer65 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator66 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10000000 + "'", int30 == 10000000);
        org.junit.Assert.assertNotNull(subscription31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy42 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy42.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig55);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator57);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer58);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 200L + "'", long60 == 200L);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy62 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy62.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService64);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
    }

    @Test
    public void test05131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05131");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer6 = null;
        java.lang.String[] strArray8 = new java.lang.String[] {};
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.lang.Comparable<java.lang.String>> firstPollOffsetStrategyEnumBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.lang.Comparable<java.lang.String>>("hi!", firstPollOffsetStrategyEnumSerializableDeserializer5, strComparableSerializableDeserializer6, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray8);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, strArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test05132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05132");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        long long9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        boolean boolean10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        java.lang.String str11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 30000L + "'", long9 == 30000L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test05133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05133");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        long long11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 2000L + "'", long11 == 2000L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2000L + "'", long12 == 2000L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 30000L + "'", long14 == 30000L);
    }

    @Test
    public void test05134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05134");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, firstPollOffsetStrategyEnumSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy14);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, firstPollOffsetStrategyEnumSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig21 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer22 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator23 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getTranslator();
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setFetchMinBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, firstPollOffsetStrategyEnumSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer53 = null;
        java.util.regex.Pattern pattern54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer52, firstPollOffsetStrategyEnumSerializableDeserializer53, pattern54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig56 = kafkaSpoutRetryServiceBuilder55.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer57 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator58 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService60 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setRetry(kafkaSpoutRetryService60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder59.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder63.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder63.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer70 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer71 = null;
        java.util.regex.Pattern pattern72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder73 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer70, firstPollOffsetStrategyEnumSerializableDeserializer71, pattern72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig74 = kafkaSpoutRetryServiceBuilder73.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer75 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator76 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getTranslator();
        org.apache.storm.tuple.Fields fields77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder68.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator76, fields77);
        org.apache.storm.tuple.Fields fields79 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator76, fields79);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer82 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer83 = null;
        java.util.regex.Pattern pattern84 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder85 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer82, firstPollOffsetStrategyEnumSerializableDeserializer83, pattern84);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig86 = kafkaSpoutRetryServiceBuilder85.build();
        boolean boolean87 = kafkaSpoutRetryServiceKafkaSpoutConfig86.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy88 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService89 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getRetryService();
        boolean boolean90 = kafkaSpoutRetryServiceKafkaSpoutConfig86.isConsumerAutoCommitMode();
        long long91 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getPollTimeoutMs();
        org.apache.storm.kafka.spout.Subscription subscription92 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap93 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer94 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer95 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService96 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getRetryService();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator97 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getTranslator();
        org.apache.storm.tuple.Fields fields98 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder99 = kafkaSpoutRetryServiceBuilder80.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator97, fields98);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig21);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig56);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig74);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy88 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy88.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 200L + "'", long91 == 200L);
        org.junit.Assert.assertNotNull(subscription92);
        org.junit.Assert.assertNotNull(strMap93);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer94);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer95);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService96);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator97);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder99);
    }

    @Test
    public void test05135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05135");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        boolean boolean9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        long long10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        org.apache.storm.kafka.spout.Subscription subscription11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 200L + "'", long10 == 200L);
        org.junit.Assert.assertNotNull(subscription11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator14);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2000L + "'", long16 == 2000L);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test05136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05136");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setMaxUncommittedOffsets(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setMaxUncommittedOffsets(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder22.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder22.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer32 = null;
        java.util.regex.Pattern pattern33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer31, firstPollOffsetStrategyEnumSerializableDeserializer32, pattern33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig35 = kafkaSpoutRetryServiceBuilder34.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer36 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator37 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer38 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getKeyDeserializer();
        java.lang.String str39 = kafkaSpoutRetryServiceKafkaSpoutConfig35.toString();
        java.lang.String str40 = kafkaSpoutRetryServiceKafkaSpoutConfig35.toString();
        int int41 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription42 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getKafkaProps();
        long long45 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator46 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getTranslator();
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator46, fields47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder29.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder29.setMaxUncommittedOffsets((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder29.setPartitionRefreshPeriodMs(52L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig35);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator37);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10000000 + "'", int41 == 10000000);
        org.junit.Assert.assertNotNull(subscription42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 2000L + "'", long45 == 2000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
    }

    @Test
    public void test05137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05137");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder12.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder12.build();
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, firstPollOffsetStrategyEnumSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer23 = null;
        java.util.regex.Pattern pattern24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer22, firstPollOffsetStrategyEnumSerializableDeserializer23, pattern24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig26 = kafkaSpoutRetryServiceBuilder25.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer27 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator28 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getTranslator();
        org.apache.storm.tuple.Fields fields29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator28, fields29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder30.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder12.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer44 = null;
        java.util.regex.Pattern pattern45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer43, firstPollOffsetStrategyEnumSerializableDeserializer44, pattern45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig47 = kafkaSpoutRetryServiceBuilder46.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer48 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator49 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer50 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getKeyDeserializer();
        java.lang.String str51 = kafkaSpoutRetryServiceKafkaSpoutConfig47.toString();
        java.lang.String str52 = kafkaSpoutRetryServiceKafkaSpoutConfig47.toString();
        int int53 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription54 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator56 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer57 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getKeyDeserializer();
        java.lang.String str58 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService59 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder39.setRetry(kafkaSpoutRetryService59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig26);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig47);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator49);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10000000 + "'", int53 == 10000000);
        org.junit.Assert.assertNotNull(subscription54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator56);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
    }

    @Test
    public void test05138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05138");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder17.build();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig18.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder8.setMaxPollRecords((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder25.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator29 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        java.lang.String str30 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getConsumerGroupId();
        org.apache.storm.kafka.spout.Subscription subscription31 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(subscription31);
    }

    @Test
    public void test05139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05139");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer23 = null;
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer22, firstPollOffsetStrategyEnumSerializableDeserializer23, (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type> subscriptionBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type>("hi!", subscriptionSerializableDeserializer19, typeSerializableDeserializer20, (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, firstPollOffsetStrategyEnumSerializableDeserializer17, (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, firstPollOffsetStrategyEnumSerializableDeserializer14, (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, firstPollOffsetStrategyEnumSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.lang.Iterable<java.lang.String>> strArrayBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.lang.Iterable<java.lang.String>>("hi!", strArraySerializableDeserializer7, strIterableSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.reflect.GenericDeclaration> strListBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.reflect.GenericDeclaration>("hi!", strListSerializableDeserializer4, genericDeclarationSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList26);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test05140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05140");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, firstPollOffsetStrategyEnumSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig10 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer11 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getTranslator();
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator12, fields13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig19 = kafkaSpoutRetryServiceBuilder16.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer20 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getValueDeserializer();
        java.lang.String str21 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig10);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig19);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
    }

    @Test
    public void test05141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05141");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder23.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setMaxPartitionFectchBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, firstPollOffsetStrategyEnumSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig36 = kafkaSpoutRetryServiceBuilder35.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder35.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder41.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder30.setFirstPollOffsetStrategy(firstPollOffsetStrategy43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder30.setMaxPollRecords((-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer48 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer49 = null;
        java.util.regex.Pattern pattern50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder51 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer48, firstPollOffsetStrategyEnumSerializableDeserializer49, pattern50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder51.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder51.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder51.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder60.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig64 = kafkaSpoutRetryServiceBuilder63.build();
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer67 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer68 = null;
        java.util.regex.Pattern pattern69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder70 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer67, firstPollOffsetStrategyEnumSerializableDeserializer68, pattern69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig71 = kafkaSpoutRetryServiceBuilder70.build();
        boolean boolean72 = kafkaSpoutRetryServiceKafkaSpoutConfig71.isConsumerAutoCommitMode();
        java.lang.String str73 = kafkaSpoutRetryServiceKafkaSpoutConfig71.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator74 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getTranslator();
        boolean boolean75 = kafkaSpoutRetryServiceKafkaSpoutConfig71.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.Subscription subscription76 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer77 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getValueDeserializer();
        int int78 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer79 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription80 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder63.setProp("", (java.lang.Object) strMap81);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder46.setProp(strMap81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy43 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy43.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(subscription76);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 10000000 + "'", int78 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer79);
        org.junit.Assert.assertNotNull(subscription80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
    }

    @Test
    public void test05142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05142");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer28 = null;
        java.util.regex.Pattern pattern29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer27, firstPollOffsetStrategyEnumSerializableDeserializer28, pattern29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder30.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        int int35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder23.setProp(strMap36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder8.setProp(strMap36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setMaxRetries((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setOffsetCommitPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer46 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer47 = null;
        java.util.regex.Pattern pattern48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer46, firstPollOffsetStrategyEnumSerializableDeserializer47, pattern48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder49.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy54 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setFirstPollOffsetStrategy(firstPollOffsetStrategy54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder53.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService59 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder53.setRetry(kafkaSpoutRetryService59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder53.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setPollTimeoutMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer70 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer71 = null;
        java.util.regex.Pattern pattern72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder73 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer70, firstPollOffsetStrategyEnumSerializableDeserializer71, pattern72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder73.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder73.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy78 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder77.setFirstPollOffsetStrategy(firstPollOffsetStrategy78);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder77.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer83 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer84 = null;
        java.util.regex.Pattern pattern85 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder86 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer83, firstPollOffsetStrategyEnumSerializableDeserializer84, pattern85);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder88 = kafkaSpoutRetryServiceBuilder86.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder90 = kafkaSpoutRetryServiceBuilder86.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy91 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder92 = kafkaSpoutRetryServiceBuilder90.setFirstPollOffsetStrategy(firstPollOffsetStrategy91);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder81.setFirstPollOffsetStrategy(firstPollOffsetStrategy91);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder94 = kafkaSpoutRetryServiceBuilder68.setFirstPollOffsetStrategy(firstPollOffsetStrategy91);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder95 = kafkaSpoutRetryServiceBuilder42.setFirstPollOffsetStrategy(firstPollOffsetStrategy91);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder97 = kafkaSpoutRetryServiceBuilder42.setMaxPartitionFectchBytes((int) 'a');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10000000 + "'", int35 == 10000000);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy54 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy54.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy78 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy78.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder90);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy91 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy91.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder92);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder94);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder95);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder97);
    }

    @Test
    public void test05143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05143");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer9 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer8, firstPollOffsetStrategyEnumSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.lang.Iterable<java.lang.String>> kafkaSpoutRetryServiceRecordTranslatorBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.lang.Iterable<java.lang.String>>("hi!", kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer5, strIterableSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder17.setSSLTruststore("hi!", "");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
    }

    @Test
    public void test05144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05144");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer5 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, org.apache.storm.kafka.spout.Subscription> kafkaSpoutRetryServiceBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, org.apache.storm.kafka.spout.Subscription>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, subscriptionSerializableDeserializer5, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig26 = kafkaSpoutRetryServiceBuilder25.build();
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, firstPollOffsetStrategyEnumSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setFirstPollOffsetStrategy(firstPollOffsetStrategy37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder36.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService42 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder36.setRetry(kafkaSpoutRetryService42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder47.setPartitionRefreshPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder25.setProp("hi!", (java.lang.Object) "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder25.setSecurityProtocol("");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy37 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy37.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
    }

    @Test
    public void test05145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05145");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceBuilderSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer26 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, firstPollOffsetStrategyEnumSerializableDeserializer26, (java.util.Collection<java.lang.String>) strList29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type> subscriptionBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type>("hi!", subscriptionSerializableDeserializer22, typeSerializableDeserializer23, (java.util.Collection<java.lang.String>) strList29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, firstPollOffsetStrategyEnumSerializableDeserializer20, (java.util.Collection<java.lang.String>) strList29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, firstPollOffsetStrategyEnumSerializableDeserializer17, (java.util.Collection<java.lang.String>) strList29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, firstPollOffsetStrategyEnumSerializableDeserializer14, (java.util.Collection<java.lang.String>) strList29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>> strCollectionBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>>("hi!", strCollectionSerializableDeserializer10, strCollectionSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.reflect.AnnotatedElement> strBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.reflect.AnnotatedElement>("hi!", strSerializableDeserializer7, annotatedElementSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList29);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> firstPollOffsetStrategyEnumBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>>("", firstPollOffsetStrategyEnumSerializableDeserializer1, kafkaSpoutRetryServiceBuilderSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test05146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05146");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        java.lang.String str9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService10);
    }

    @Test
    public void test05147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05147");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder17.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, firstPollOffsetStrategyEnumSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, firstPollOffsetStrategyEnumSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setFirstPollOffsetStrategy(firstPollOffsetStrategy38);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, firstPollOffsetStrategyEnumSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig45 = kafkaSpoutRetryServiceBuilder44.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer46 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator47 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getTranslator();
        org.apache.storm.tuple.Fields fields48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator47, fields48, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator47);
        org.apache.storm.tuple.Fields fields52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator47, fields52, "");
        org.apache.storm.tuple.Fields fields55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator47, fields55, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setOffsetCommitPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder57.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder57.setPollTimeoutMs(100L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setFetchMinBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder66.setMaxUncommittedOffsets((int) (byte) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer72 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer73 = null;
        java.util.regex.Pattern pattern74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder75 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer72, firstPollOffsetStrategyEnumSerializableDeserializer73, pattern74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig76 = kafkaSpoutRetryServiceBuilder75.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer77 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator78 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getTranslator();
        int int79 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer80 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer81 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer83 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getValueDeserializer();
        java.lang.String str84 = kafkaSpoutRetryServiceKafkaSpoutConfig76.toString();
        java.lang.String str85 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getConsumerGroupId();
        org.apache.storm.kafka.spout.Subscription subscription86 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getSubscription();
        long long87 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getOffsetsCommitPeriodMs();
        long long88 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService89 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder90 = kafkaSpoutRetryServiceBuilder66.setRetry(kafkaSpoutRetryService89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig45);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig76);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 10000000 + "'", int79 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer80);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer83);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNotNull(subscription86);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 30000L + "'", long87 == 30000L);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 2000L + "'", long88 == 2000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder90);
    }

    @Test
    public void test05148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05148");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.reflect.GenericDeclaration> strListBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.reflect.GenericDeclaration>("", strListSerializableDeserializer1, genericDeclarationSerializableDeserializer2, pattern3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test05149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05149");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, firstPollOffsetStrategyEnumSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder29.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder29.setRetry(kafkaSpoutRetryService33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder14.setRetry(kafkaSpoutRetryService33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder14.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setMaxPollRecords(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setPartitionRefreshPeriodMs((-1L));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setMaxPartitionFectchBytes((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder39.setMaxPartitionFectchBytes((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder39.setBootstrapServers("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
    }

    @Test
    public void test05150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05150");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setPollTimeoutMs((long) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
    }

    @Test
    public void test05151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05151");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        boolean boolean15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer9);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10000000 + "'", int14 == 10000000);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2000L + "'", long16 == 2000L);
    }

    @Test
    public void test05152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05152");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, firstPollOffsetStrategyEnumSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy14);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, firstPollOffsetStrategyEnumSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig21 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer22 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator23 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getTranslator();
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setMaxRetries((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig32 = kafkaSpoutRetryServiceBuilder29.build();
        org.apache.storm.kafka.spout.Subscription subscription33 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getSubscription();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator34 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getTranslator();
        boolean boolean35 = kafkaSpoutRetryServiceKafkaSpoutConfig32.isConsumerAutoCommitMode();
        long long36 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription37 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getSubscription();
        boolean boolean38 = kafkaSpoutRetryServiceKafkaSpoutConfig32.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig21);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig32);
        org.junit.Assert.assertNotNull(subscription33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 30000L + "'", long36 == 30000L);
        org.junit.Assert.assertNotNull(subscription37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test05153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05153");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, firstPollOffsetStrategyEnumSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder31.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder31.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder12.setMaxPollRecords((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder12.setPartitionRefreshPeriodMs((long) 10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer44 = null;
        java.util.regex.Pattern pattern45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer43, firstPollOffsetStrategyEnumSerializableDeserializer44, pattern45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig47 = kafkaSpoutRetryServiceBuilder46.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer48 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator49 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer53 = null;
        java.util.regex.Pattern pattern54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer52, firstPollOffsetStrategyEnumSerializableDeserializer53, pattern54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig56 = kafkaSpoutRetryServiceBuilder55.build();
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy58 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder50.setFirstPollOffsetStrategy(firstPollOffsetStrategy58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setOffsetCommitPeriodMs((long) 32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig47);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy58 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy58.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
    }

    @Test
    public void test05154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05154");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs(200L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, firstPollOffsetStrategyEnumSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig19 = kafkaSpoutRetryServiceBuilder18.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer20 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator21 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator22 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getTranslator();
        int int23 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getMaxUncommittedOffsets();
        java.lang.String str24 = kafkaSpoutRetryServiceKafkaSpoutConfig19.toString();
        java.lang.String str25 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getConsumerGroupId();
        long long26 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getPartitionRefreshPeriodMs();
        java.lang.String str27 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getConsumerGroupId();
        long long28 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder13.setProp(strMap29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig19);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10000000 + "'", int23 == 10000000);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 2000L + "'", long26 == 2000L);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 2000L + "'", long28 == 2000L);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
    }

    @Test
    public void test05155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05155");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setPartitionRefreshPeriodMs((long) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, firstPollOffsetStrategyEnumSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        int int30 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription31 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getSubscription();
        java.lang.String str32 = kafkaSpoutRetryServiceKafkaSpoutConfig27.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator33 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer38 = null;
        java.util.regex.Pattern pattern39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer37, firstPollOffsetStrategyEnumSerializableDeserializer38, pattern39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder40.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder44.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer53 = null;
        java.util.regex.Pattern pattern54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer52, firstPollOffsetStrategyEnumSerializableDeserializer53, pattern54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer61 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer62 = null;
        java.util.regex.Pattern pattern63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer61, firstPollOffsetStrategyEnumSerializableDeserializer62, pattern63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig65 = kafkaSpoutRetryServiceBuilder64.build();
        boolean boolean66 = kafkaSpoutRetryServiceKafkaSpoutConfig65.isConsumerAutoCommitMode();
        int int67 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer68 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder59.setProp(strMap69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder50.setProp(strMap69);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer73 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer74 = null;
        java.util.regex.Pattern pattern75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder76 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer73, firstPollOffsetStrategyEnumSerializableDeserializer74, pattern75);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig77 = kafkaSpoutRetryServiceBuilder76.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer78 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator79 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer80 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getKeyDeserializer();
        java.lang.String str81 = kafkaSpoutRetryServiceKafkaSpoutConfig77.toString();
        long long82 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap83 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy84 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy85 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder71.setFirstPollOffsetStrategy(firstPollOffsetStrategy85);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder34.setProp("", (java.lang.Object) firstPollOffsetStrategy85);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder34.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder89.setOffsetCommitPeriodMs(32L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder91.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder95 = kafkaSpoutRetryServiceBuilder91.setMaxPollRecords((int) (short) 0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10000000 + "'", int30 == 10000000);
        org.junit.Assert.assertNotNull(subscription31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 10000000 + "'", int67 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig77);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator79);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer80);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 200L + "'", long82 == 200L);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy84 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy84.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy85 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy85.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder95);
    }

    @Test
    public void test05156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05156");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, org.apache.storm.kafka.spout.KafkaSpoutRetryService> strMapBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, org.apache.storm.kafka.spout.KafkaSpoutRetryService>("hi!", strMapSerializableDeserializer1, kafkaSpoutRetryServiceSerializableDeserializer2, pattern3);
    }

    @Test
    public void test05157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05157");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer14 = null;
        java.util.regex.Pattern pattern15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, firstPollOffsetStrategyEnumSerializableDeserializer14, pattern15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder16.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder16.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder8.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder22.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig26 = kafkaSpoutRetryServiceBuilder22.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder22.setMaxPollRecords(10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
    }

    @Test
    public void test05158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05158");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder19.setSSLKeystore("hi!", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
    }

    @Test
    public void test05159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05159");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer18 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, org.apache.storm.kafka.spout.Subscription> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, org.apache.storm.kafka.spout.Subscription>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, subscriptionSerializableDeserializer18, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> annotatedElementBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", annotatedElementSerializableDeserializer11, firstPollOffsetStrategyEnumSerializableDeserializer12, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, firstPollOffsetStrategyEnumSerializableDeserializer8, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, strArray24);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.lang.Object> genericDeclarationBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.lang.Object>("", genericDeclarationSerializableDeserializer1, objSerializableDeserializer2, strArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test05160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05160");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, firstPollOffsetStrategyEnumSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder29.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder29.setRetry(kafkaSpoutRetryService33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder14.setRetry(kafkaSpoutRetryService33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder14.setMaxPartitionFectchBytes((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig38 = kafkaSpoutRetryServiceBuilder37.build();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getKafkaProps();
        int int40 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getMaxUncommittedOffsets();
        boolean boolean41 = kafkaSpoutRetryServiceKafkaSpoutConfig38.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator42 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getTranslator();
        long long43 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer44 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getValueDeserializer();
        int int45 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10000000 + "'", int40 == 10000000);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2147483647 + "'", int45 == 2147483647);
    }

    @Test
    public void test05161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05161");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setPartitionRefreshPeriodMs((long) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, firstPollOffsetStrategyEnumSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        int int30 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription31 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getSubscription();
        java.lang.String str32 = kafkaSpoutRetryServiceKafkaSpoutConfig27.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator33 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer38 = null;
        java.util.regex.Pattern pattern39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer37, firstPollOffsetStrategyEnumSerializableDeserializer38, pattern39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder40.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder44.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer53 = null;
        java.util.regex.Pattern pattern54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer52, firstPollOffsetStrategyEnumSerializableDeserializer53, pattern54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer61 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer62 = null;
        java.util.regex.Pattern pattern63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer61, firstPollOffsetStrategyEnumSerializableDeserializer62, pattern63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig65 = kafkaSpoutRetryServiceBuilder64.build();
        boolean boolean66 = kafkaSpoutRetryServiceKafkaSpoutConfig65.isConsumerAutoCommitMode();
        int int67 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer68 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder59.setProp(strMap69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder50.setProp(strMap69);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer73 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer74 = null;
        java.util.regex.Pattern pattern75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder76 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer73, firstPollOffsetStrategyEnumSerializableDeserializer74, pattern75);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig77 = kafkaSpoutRetryServiceBuilder76.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer78 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator79 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer80 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getKeyDeserializer();
        java.lang.String str81 = kafkaSpoutRetryServiceKafkaSpoutConfig77.toString();
        long long82 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap83 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy84 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy85 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder71.setFirstPollOffsetStrategy(firstPollOffsetStrategy85);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder34.setProp("", (java.lang.Object) firstPollOffsetStrategy85);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder34.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig90 = kafkaSpoutRetryServiceBuilder34.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService91 = kafkaSpoutRetryServiceKafkaSpoutConfig90.getRetryService();
        int int92 = kafkaSpoutRetryServiceKafkaSpoutConfig90.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator93 = kafkaSpoutRetryServiceKafkaSpoutConfig90.getTranslator();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10000000 + "'", int30 == 10000000);
        org.junit.Assert.assertNotNull(subscription31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 10000000 + "'", int67 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig77);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator79);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer80);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 200L + "'", long82 == 200L);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy84 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy84.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy85 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy85.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 10000000 + "'", int92 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator93);
    }

    @Test
    public void test05162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05162");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setMaxPollRecords((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder14.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setMaxRetries(2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
    }

    @Test
    public void test05163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05163");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        int int7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        long long8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        int int10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        int int11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        int int13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10000000 + "'", int7 == 10000000);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 30000L + "'", long8 == 30000L);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2147483647 + "'", int11 == 2147483647);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10000000 + "'", int17 == 10000000);
    }

    @Test
    public void test05164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05164");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        java.lang.String str10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        long long11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 30000L + "'", long11 == 30000L);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
    }

    @Test
    public void test05165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05165");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer28 = null;
        java.util.regex.Pattern pattern29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer27, firstPollOffsetStrategyEnumSerializableDeserializer28, pattern29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder30.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        int int35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder23.setProp(strMap36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder8.setProp(strMap36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setMaxRetries((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setMaxRetries((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder40.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder40.setMaxRetries((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setMaxUncommittedOffsets((int) (byte) 10);
        java.lang.Class<?> wildcardClass49 = kafkaSpoutRetryServiceBuilder46.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10000000 + "'", int35 == 10000000);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test05166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05166");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>> kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceBuilderSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer22 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, firstPollOffsetStrategyEnumSerializableDeserializer22, (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, firstPollOffsetStrategyEnumSerializableDeserializer18, (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> randomAccessBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", randomAccessSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Cloneable> strListBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Cloneable>("hi!", strListSerializableDeserializer11, cloneableSerializableDeserializer12, (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.util.List<java.lang.String>> strBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.util.List<java.lang.String>>("hi!", strSerializableDeserializer8, strListSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.Map<java.lang.String, java.lang.Object>> kafkaSpoutRetryServiceBuilderBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.Map<java.lang.String, java.lang.Object>>("hi!", kafkaSpoutRetryServiceBuilderSerializableDeserializer4, strMapSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList25);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>> strCollectionBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>>("", strCollectionSerializableDeserializer1, kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test05167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05167");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        boolean boolean7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        java.lang.String str8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        java.lang.Class<?> wildcardClass9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test05168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05168");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        long long10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        long long11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        boolean boolean13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10000000 + "'", int9 == 10000000);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2000L + "'", long10 == 2000L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 2000L + "'", long11 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 30000L + "'", long14 == 30000L);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test05169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05169");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, firstPollOffsetStrategyEnumSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, firstPollOffsetStrategyEnumSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig25 = kafkaSpoutRetryServiceBuilder24.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer26 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator27 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder15.setMaxUncommittedOffsets((int) 'a');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, firstPollOffsetStrategyEnumSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig40 = kafkaSpoutRetryServiceBuilder39.build();
        boolean boolean41 = kafkaSpoutRetryServiceKafkaSpoutConfig40.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService43 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getRetryService();
        boolean boolean44 = kafkaSpoutRetryServiceKafkaSpoutConfig40.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator46 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getTranslator();
        org.apache.storm.kafka.spout.Subscription subscription47 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator49 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getTranslator();
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator49, fields50, "hi!");
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator49, fields53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder54.setSSLTruststore("hi!", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig25);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy42 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy42.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator46);
        org.junit.Assert.assertNotNull(subscription47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
    }

    @Test
    public void test05170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05170");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer14 = null;
        java.util.regex.Pattern pattern15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, firstPollOffsetStrategyEnumSerializableDeserializer14, pattern15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder16.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder16.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder8.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder22);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, firstPollOffsetStrategyEnumSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, firstPollOffsetStrategyEnumSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig34 = kafkaSpoutRetryServiceBuilder33.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer35 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator36 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getTranslator();
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator36, fields37);
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator36, fields39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig44 = kafkaSpoutRetryServiceBuilder8.build();
        long long45 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getPartitionRefreshPeriodMs();
        long long46 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig34);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 2000L + "'", long45 == 2000L);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 2000L + "'", long46 == 2000L);
    }

    @Test
    public void test05171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05171");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig20 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer21 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription22 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig20);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer21);
        org.junit.Assert.assertNotNull(subscription22);
    }

    @Test
    public void test05172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05172");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, firstPollOffsetStrategyEnumSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder25.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder6.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setMaxUncommittedOffsets(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig34 = kafkaSpoutRetryServiceBuilder29.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder29.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setFetchMinBytes((int) (short) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
    }

    @Test
    public void test05173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05173");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        int int7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        java.lang.String str8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        boolean boolean11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        int int12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10000000 + "'", int7 == 10000000);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer9);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
    }

    @Test
    public void test05174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05174");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder12.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setMaxPollRecords(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder25.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setMaxUncommittedOffsets((int) '#');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
    }

    @Test
    public void test05175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05175");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type> subscriptionBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type>("hi!", subscriptionSerializableDeserializer9, typeSerializableDeserializer10, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, firstPollOffsetStrategyEnumSerializableDeserializer7, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.util.Collection<java.lang.String>> objBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.util.Collection<java.lang.String>>("hi!", objSerializableDeserializer3, strCollectionSerializableDeserializer4, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test05176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05176");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer8 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, firstPollOffsetStrategyEnumSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type> subscriptionBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type>("hi!", subscriptionSerializableDeserializer4, typeSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setPollTimeoutMs((long) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder18.setMaxPartitionFectchBytes((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder18.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder18.setPartitionRefreshPeriodMs((long) 100);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
    }

    @Test
    public void test05177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05177");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig8 = kafkaSpoutRetryServiceBuilder7.build();
        boolean boolean9 = kafkaSpoutRetryServiceKafkaSpoutConfig8.isConsumerAutoCommitMode();
        java.lang.String str10 = kafkaSpoutRetryServiceKafkaSpoutConfig8.toString();
        java.lang.String str11 = kafkaSpoutRetryServiceKafkaSpoutConfig8.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.reflect.AnnotatedElement> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.reflect.AnnotatedElement>("", kafkaSpoutRetryServiceSerializableDeserializer1, annotatedElementSerializableDeserializer2, subscription14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer13);
        org.junit.Assert.assertNotNull(subscription14);
    }

    @Test
    public void test05178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05178");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        int int7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        java.lang.String str8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.storm.kafka.spout.Subscription subscription9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        long long10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        long long11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        boolean boolean12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10000000 + "'", int7 == 10000000);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 200L + "'", long10 == 200L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 30000L + "'", long11 == 30000L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 2000L + "'", long13 == 2000L);
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
    }

    @Test
    public void test05179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05179");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>> kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>, java.util.List<java.lang.String>> kafkaSpoutRetryServiceConsumerRecordFuncBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>, java.util.List<java.lang.String>>("", kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer1, strListSerializableDeserializer2, pattern3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test05180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05180");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder23.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setMaxRetries((int) '#');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
    }

    @Test
    public void test05181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05181");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder17.build();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig18.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService21 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getRetryService();
        boolean boolean22 = kafkaSpoutRetryServiceKafkaSpoutConfig18.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder12.setProp(strMap23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setMaxUncommittedOffsets(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setMaxPollRecords(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setMaxPartitionFectchBytes(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, firstPollOffsetStrategyEnumSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig36 = kafkaSpoutRetryServiceBuilder35.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder35.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder41.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy43);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, firstPollOffsetStrategyEnumSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder44.setProp("", (java.lang.Object) "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig56 = kafkaSpoutRetryServiceBuilder44.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder44.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder44.setOffsetCommitPeriodMs((long) (byte) 0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy43 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy43.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
    }

    @Test
    public void test05182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05182");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        java.lang.String str10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        java.lang.String str11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        org.apache.storm.kafka.spout.Subscription subscription12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        int int13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer21 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10000000 + "'", int9 == 10000000);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10000000 + "'", int13 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy19 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy19.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer21);
    }

    @Test
    public void test05183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05183");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder17.build();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig18.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService21 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getRetryService();
        boolean boolean22 = kafkaSpoutRetryServiceKafkaSpoutConfig18.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder12.setProp(strMap23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setSSLKeystore("", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setMaxPartitionFectchBytes((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig33 = kafkaSpoutRetryServiceBuilder32.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer34 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getValueDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig33);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer34);
    }

    @Test
    public void test05184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05184");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, firstPollOffsetStrategyEnumSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder25.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder6.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder25);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, firstPollOffsetStrategyEnumSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig36 = kafkaSpoutRetryServiceBuilder35.build();
        boolean boolean37 = kafkaSpoutRetryServiceKafkaSpoutConfig36.isConsumerAutoCommitMode();
        int int38 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer39 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder25.setProp("", (java.lang.Object) kafkaSpoutRetryServiceKafkaSpoutConfig36);
        java.lang.String str42 = kafkaSpoutRetryServiceKafkaSpoutConfig36.toString();
        java.lang.String str43 = kafkaSpoutRetryServiceKafkaSpoutConfig36.toString();
        long long44 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy45 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getFirstPollOffsetStrategy();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10000000 + "'", int38 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 200L + "'", long44 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy45 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy45.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test05185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05185");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRetry(kafkaSpoutRetryService20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setFetchMinBytes((int) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, firstPollOffsetStrategyEnumSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator31);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer35 = null;
        java.util.regex.Pattern pattern36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer34, firstPollOffsetStrategyEnumSerializableDeserializer35, pattern36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig38 = kafkaSpoutRetryServiceBuilder37.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer39 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator40 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator41 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getTranslator();
        int int42 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getMaxUncommittedOffsets();
        long long43 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getPartitionRefreshPeriodMs();
        long long44 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService45 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder28.setRetry(kafkaSpoutRetryService45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder23.setRetry(kafkaSpoutRetryService45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setGroupId("");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc50 = null;
        org.apache.storm.tuple.Fields fields51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc50, fields51, "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig38);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10000000 + "'", int42 == 10000000);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 2000L + "'", long43 == 2000L);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 2000L + "'", long44 == 2000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
    }

    @Test
    public void test05186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05186");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder10.build();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getRetryService();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig13.toString();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getOffsetsCommitPeriodMs();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getPartitionRefreshPeriodMs();
        int int19 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getMaxUncommittedOffsets();
        java.lang.String str20 = kafkaSpoutRetryServiceKafkaSpoutConfig13.toString();
        org.apache.storm.kafka.spout.Subscription subscription21 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10L + "'", long17 == 10L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2000L + "'", long18 == 2000L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10000000 + "'", int19 == 10000000);
        org.junit.Assert.assertNotNull(subscription21);
    }

    @Test
    public void test05187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05187");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceBuilderSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer16 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceBuilderBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>>("hi!", kafkaSpoutRetryServiceBuilderSerializableDeserializer15, kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer16, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, firstPollOffsetStrategyEnumSerializableDeserializer11, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, firstPollOffsetStrategyEnumSerializableDeserializer8, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.Collection<java.lang.String>> kafkaSpoutRetryServiceKafkaSpoutConfigBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.Collection<java.lang.String>>("hi!", kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer4, strCollectionSerializableDeserializer5, strArray19);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, strArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test05188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05188");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer9);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator11);
    }

    @Test
    public void test05189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05189");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer9);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test05190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05190");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig8 = kafkaSpoutRetryServiceBuilder7.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer9 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator10 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator11 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getTranslator();
        int int12 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription13 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, subscription13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setBootstrapServers("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig8);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10000000 + "'", int12 == 10000000);
        org.junit.Assert.assertNotNull(subscription13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
    }

    @Test
    public void test05191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05191");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, firstPollOffsetStrategyEnumSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, firstPollOffsetStrategyEnumSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setFirstPollOffsetStrategy(firstPollOffsetStrategy36);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, firstPollOffsetStrategyEnumSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder42.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator45 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator45, fields46, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator45, fields50, "");
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator45, fields53, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder10.setFetchMinBytes(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer59 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer60 = null;
        java.util.regex.Pattern pattern61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer59, firstPollOffsetStrategyEnumSerializableDeserializer60, pattern61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig63 = kafkaSpoutRetryServiceBuilder62.build();
        boolean boolean64 = kafkaSpoutRetryServiceKafkaSpoutConfig63.isConsumerAutoCommitMode();
        int int65 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer66 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getKafkaProps();
        long long68 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator69 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getTranslator();
        boolean boolean70 = kafkaSpoutRetryServiceKafkaSpoutConfig63.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer71 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator72 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService73 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getRetryService();
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder57.setProp(strMap74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder75.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder77.setMaxRetries(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig80 = kafkaSpoutRetryServiceBuilder77.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder77.setPartitionRefreshPeriodMs((long) '#');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 10000000 + "'", int65 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 30000L + "'", long68 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
    }

    @Test
    public void test05192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05192");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder6.setMaxUncommittedOffsets((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder25.setPollTimeoutMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setFetchMinBytes((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder29.setMaxUncommittedOffsets((int) (byte) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
    }

    @Test
    public void test05193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05193");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer11 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer10, randomAccessSerializableDeserializer11, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutRetryService> strCollectionBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutRetryService>("hi!", strCollectionSerializableDeserializer7, kafkaSpoutRetryServiceSerializableDeserializer8, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.lang.Comparable<java.lang.String>> kafkaSpoutRetryServiceKafkaSpoutConfigBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.lang.Comparable<java.lang.String>>("hi!", kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer4, strComparableSerializableDeserializer5, strArray13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.reflect.Type> strListBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.reflect.Type>("", strListSerializableDeserializer1, typeSerializableDeserializer2, strArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test05194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05194");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, firstPollOffsetStrategyEnumSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>> strCollectionBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>>("hi!", strCollectionSerializableDeserializer7, strCollectionSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList18);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test05195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05195");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder12.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, firstPollOffsetStrategyEnumSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, firstPollOffsetStrategyEnumSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setFirstPollOffsetStrategy(firstPollOffsetStrategy32);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, firstPollOffsetStrategyEnumSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig39 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer40 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator41 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getTranslator();
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator41, fields42, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, firstPollOffsetStrategyEnumSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder50.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer52 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator53 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        int int54 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator55 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields56);
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields58, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setPollTimeoutMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder62.setFetchMinBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder62.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder68.setFetchMinBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder68.setMaxUncommittedOffsets((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder72.setPollTimeoutMs((long) (short) 1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy32 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy32.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig39);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10000000 + "'", int54 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
    }

    @Test
    public void test05196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05196");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        boolean boolean11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        boolean boolean12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.Subscription subscription13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer9);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(subscription13);
    }

    @Test
    public void test05197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05197");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFetchMinBytes(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setMaxPollRecords((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder16.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder16.setGroupId("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
    }

    @Test
    public void test05198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05198");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder12.build();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2000L + "'", long14 == 2000L);
    }

    @Test
    public void test05199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05199");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        boolean boolean9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 2000L + "'", long13 == 2000L);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer14);
    }

    @Test
    public void test05200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05200");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer23 = null;
        java.util.regex.Pattern pattern24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer22, firstPollOffsetStrategyEnumSerializableDeserializer23, pattern24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, firstPollOffsetStrategyEnumSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig37 = kafkaSpoutRetryServiceBuilder36.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer38 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator39 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder27.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder19.setProp("hi!", (java.lang.Object) "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setMaxRetries(0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig37);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
    }

    @Test
    public void test05201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05201");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        int int7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        java.lang.String str8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        int int9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        java.lang.String str10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        int int11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        int int12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10000000 + "'", int7 == 10000000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10000000 + "'", int9 == 10000000);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2147483647 + "'", int11 == 2147483647);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 30000L + "'", long13 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator14);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer15);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test05202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05202");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer28 = null;
        java.util.regex.Pattern pattern29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer27, firstPollOffsetStrategyEnumSerializableDeserializer28, pattern29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder30.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        int int35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder23.setProp(strMap36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder8.setProp(strMap36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setMaxRetries((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig41 = kafkaSpoutRetryServiceBuilder40.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder40.setFetchMinBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder40.setMaxRetries((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setBootstrapServers("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10000000 + "'", int35 == 10000000);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
    }

    @Test
    public void test05203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05203");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder8.build();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getConsumerGroupId();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getPollTimeoutMs();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getMaxTupleRetries();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getConsumerGroupId();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig13.toString();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig13.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test05204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05204");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder17.build();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig18.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder8.setMaxPollRecords((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder23.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder23.setMaxPollRecords(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder23.setMaxPollRecords((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder23.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setMaxUncommittedOffsets((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig38 = kafkaSpoutRetryServiceBuilder37.build();
        java.lang.String str39 = kafkaSpoutRetryServiceKafkaSpoutConfig38.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig38);
    }

    @Test
    public void test05205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05205");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setMaxUncommittedOffsets(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setMaxUncommittedOffsets(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder22.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setFetchMinBytes((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig30 = kafkaSpoutRetryServiceBuilder29.build();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig30);
    }

    @Test
    public void test05206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05206");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        java.lang.String str7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        boolean boolean9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.Subscription subscription10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        long long11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        boolean boolean12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(subscription10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 200L + "'", long11 == 200L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test05207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05207");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, firstPollOffsetStrategyEnumSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig10 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer11 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getTranslator();
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator12, fields13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setOffsetCommitPeriodMs((long) 'a');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, firstPollOffsetStrategyEnumSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig22 = kafkaSpoutRetryServiceBuilder21.build();
        boolean boolean23 = kafkaSpoutRetryServiceKafkaSpoutConfig22.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService25 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getRetryService();
        boolean boolean26 = kafkaSpoutRetryServiceKafkaSpoutConfig22.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator27 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder14.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setPartitionRefreshPeriodMs((-1L));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder30.setSSLKeystore("", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig10);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
    }

    @Test
    public void test05208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05208");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, firstPollOffsetStrategyEnumSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig10 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer11 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getTranslator();
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator12, fields13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setOffsetCommitPeriodMs((long) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder14.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setMaxPartitionFectchBytes((int) 'a');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig10);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
    }

    @Test
    public void test05209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05209");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer14 = null;
        java.util.regex.Pattern pattern15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, firstPollOffsetStrategyEnumSerializableDeserializer14, pattern15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder16.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder16.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder8.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder22);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, firstPollOffsetStrategyEnumSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, firstPollOffsetStrategyEnumSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig34 = kafkaSpoutRetryServiceBuilder33.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer35 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator36 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getTranslator();
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator36, fields37);
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator36, fields39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig44 = kafkaSpoutRetryServiceBuilder8.build();
        boolean boolean45 = kafkaSpoutRetryServiceKafkaSpoutConfig44.isConsumerAutoCommitMode();
        int int46 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getMaxTupleRetries();
        java.lang.String str47 = kafkaSpoutRetryServiceKafkaSpoutConfig44.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig34);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2147483647 + "'", int46 == 2147483647);
    }

    @Test
    public void test05210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05210");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig8 = kafkaSpoutRetryServiceBuilder7.build();
        java.lang.String str9 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getConsumerGroupId();
        org.apache.storm.kafka.spout.Subscription subscription10 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.lang.Object> kafkaSpoutRetryServiceKafkaSpoutConfigBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.lang.Object>("", kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer1, objSerializableDeserializer2, subscription10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(subscription10);
    }

    @Test
    public void test05211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05211");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer2 = null;
        java.lang.String[] strArray3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> annotatedElementBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("", annotatedElementSerializableDeserializer1, firstPollOffsetStrategySerializableDeserializer2, strArray3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test05212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05212");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        java.lang.String str7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        java.lang.String str8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        java.lang.String str9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        long long10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        java.lang.Class<?> wildcardClass11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2000L + "'", long10 == 2000L);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test05213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05213");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        long long7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        long long8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        java.lang.String str9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 200L + "'", long7 == 200L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 2000L + "'", long8 == 2000L);
    }

    @Test
    public void test05214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05214");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.Subscription subscription12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        boolean boolean15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator11);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10000000 + "'", int14 == 10000000);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2000L + "'", long16 == 2000L);
    }

    @Test
    public void test05215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05215");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer14 = null;
        java.util.regex.Pattern pattern15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, firstPollOffsetStrategyEnumSerializableDeserializer14, pattern15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder16.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder16.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder8.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder8.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder25.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder25.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setMaxRetries(0);
        java.util.Properties properties34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setProp(properties34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
    }

    @Test
    public void test05216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05216");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder10.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder10.setOffsetCommitPeriodMs((long) (short) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, firstPollOffsetStrategyEnumSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setFirstPollOffsetStrategy(firstPollOffsetStrategy25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder24.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder24.setRetry(kafkaSpoutRetryService30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder24.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, firstPollOffsetStrategyEnumSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder45.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder49.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder49.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer57 = null;
        java.util.regex.Pattern pattern58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer56, firstPollOffsetStrategyEnumSerializableDeserializer57, pattern58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig60 = kafkaSpoutRetryServiceBuilder59.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder59.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder63.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder65.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer69 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer70 = null;
        java.util.regex.Pattern pattern71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder72 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer69, firstPollOffsetStrategyEnumSerializableDeserializer70, pattern71);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig73 = kafkaSpoutRetryServiceBuilder72.build();
        boolean boolean74 = kafkaSpoutRetryServiceKafkaSpoutConfig73.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy75 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService76 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getRetryService();
        boolean boolean77 = kafkaSpoutRetryServiceKafkaSpoutConfig73.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder67.setProp(strMap78);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder49.setProp(strMap78);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder34.setProp(strMap78);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder15.setProp(strMap78);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder82.setMaxPollRecords((int) (byte) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy25 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy25.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy75 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy75.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
    }

    @Test
    public void test05217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05217");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, firstPollOffsetStrategyEnumSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder31.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder31.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder12.setMaxPollRecords((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder12.setPartitionRefreshPeriodMs((long) 10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder41.setPartitionRefreshPeriodMs(10000000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
    }

    @Test
    public void test05218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05218");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceBuilderSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceBuilderBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>>("hi!", kafkaSpoutRetryServiceBuilderSerializableDeserializer6, kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer7, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder14.setOffsetCommitPeriodMs((long) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder14.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig21 = kafkaSpoutRetryServiceBuilder14.build();
        long long22 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy23 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getFirstPollOffsetStrategy();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 2000L + "'", long22 == 2000L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy23 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy23.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test05219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05219");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setPartitionRefreshPeriodMs((long) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder21.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder26.build();
        long long28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getFirstPollOffsetStrategy();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 200L + "'", long28 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy29 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy29.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test05220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05220");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        java.lang.String str7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.storm.kafka.spout.Subscription subscription8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        boolean boolean12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(subscription8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 30000L + "'", long13 == 30000L);
    }

    @Test
    public void test05221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05221");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxPollRecords((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxUncommittedOffsets((int) (byte) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
    }

    @Test
    public void test05222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05222");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getRetryService();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKafkaProps();
        boolean boolean17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test05223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05223");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, firstPollOffsetStrategyEnumSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder29.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder29.setRetry(kafkaSpoutRetryService33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder14.setRetry(kafkaSpoutRetryService33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder14.setMaxPartitionFectchBytes((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig38 = kafkaSpoutRetryServiceBuilder37.build();
        boolean boolean39 = kafkaSpoutRetryServiceKafkaSpoutConfig38.isConsumerAutoCommitMode();
        long long40 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getPollTimeoutMs();
        long long41 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getPollTimeoutMs();
        long long42 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getPollTimeoutMs();
        long long43 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer44 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getKeyDeserializer();
        int int45 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 200L + "'", long40 == 200L);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 200L + "'", long41 == 200L);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 200L + "'", long42 == 200L);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10000000 + "'", int45 == 10000000);
    }

    @Test
    public void test05224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05224");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, firstPollOffsetStrategyEnumSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy14);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, firstPollOffsetStrategyEnumSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig21 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer22 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator23 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getTranslator();
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setPartitionRefreshPeriodMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig32 = kafkaSpoutRetryServiceBuilder27.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder27.setMaxRetries((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder27.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder27.setSSLKeystore("hi!", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig21);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
    }

    @Test
    public void test05225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05225");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer23 = null;
        java.util.regex.Pattern pattern24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer22, firstPollOffsetStrategyEnumSerializableDeserializer23, pattern24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, firstPollOffsetStrategyEnumSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig37 = kafkaSpoutRetryServiceBuilder36.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer38 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator39 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder27.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder19.setProp("hi!", (java.lang.Object) "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setMaxPartitionFectchBytes((int) 'a');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer50 = null;
        java.util.regex.Pattern pattern51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer49, firstPollOffsetStrategyEnumSerializableDeserializer50, pattern51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder52.build();
        boolean boolean54 = kafkaSpoutRetryServiceKafkaSpoutConfig53.isConsumerAutoCommitMode();
        int int55 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer56 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder45.setProp(strMap57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder58.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder61.setSSLKeystore("", "");
        java.util.Properties properties65 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setProp(properties65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig37);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 10000000 + "'", int55 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
    }

    @Test
    public void test05226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05226");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, firstPollOffsetStrategyEnumSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder29.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder29.setRetry(kafkaSpoutRetryService33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder14.setRetry(kafkaSpoutRetryService33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder14.setMaxPartitionFectchBytes((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig38 = kafkaSpoutRetryServiceBuilder37.build();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getKafkaProps();
        long long40 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getPollTimeoutMs();
        long long41 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getPartitionRefreshPeriodMs();
        long long42 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 200L + "'", long40 == 200L);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
    }

    @Test
    public void test05227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05227");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        long long11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10000000 + "'", int9 == 10000000);
        org.junit.Assert.assertNotNull(subscription10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 2000L + "'", long11 == 2000L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10000000 + "'", int14 == 10000000);
    }

    @Test
    public void test05228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05228");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, java.util.List<java.lang.String>> typeBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, java.util.List<java.lang.String>>("", typeSerializableDeserializer1, strListSerializableDeserializer2, pattern3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test05229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05229");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setPartitionRefreshPeriodMs((long) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder21.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder26.build();
        long long28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getPollTimeoutMs();
        long long29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService30 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getRetryService();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 200L + "'", long28 == 200L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 200L + "'", long29 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService30);
    }

    @Test
    public void test05230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05230");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer5 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, org.apache.storm.kafka.spout.Subscription> kafkaSpoutRetryServiceBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, org.apache.storm.kafka.spout.Subscription>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, subscriptionSerializableDeserializer5, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, strArray11);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, firstPollOffsetStrategyEnumSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder26.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, firstPollOffsetStrategyEnumSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer48 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer49 = null;
        java.util.regex.Pattern pattern50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder51 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer48, firstPollOffsetStrategyEnumSerializableDeserializer49, pattern50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig52 = kafkaSpoutRetryServiceBuilder51.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer53 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator54 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator55 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getTranslator();
        int int56 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder44.setProp(strMap57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder29.setProp(strMap57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder13.setProp(strMap57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder63.setPartitionRefreshPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder63.setFirstPollOffsetStrategy(firstPollOffsetStrategy66);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig52);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10000000 + "'", int56 == 10000000);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
    }

    @Test
    public void test05231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05231");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer14 = null;
        java.util.regex.Pattern pattern15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, firstPollOffsetStrategyEnumSerializableDeserializer14, pattern15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder16.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder16.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder8.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder22);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, firstPollOffsetStrategyEnumSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, firstPollOffsetStrategyEnumSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig34 = kafkaSpoutRetryServiceBuilder33.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer35 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator36 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getTranslator();
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator36, fields37);
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator36, fields39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, firstPollOffsetStrategyEnumSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig49 = kafkaSpoutRetryServiceBuilder48.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer50 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator51 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer52 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getKeyDeserializer();
        java.lang.String str53 = kafkaSpoutRetryServiceKafkaSpoutConfig49.toString();
        org.apache.storm.kafka.spout.Subscription subscription54 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription55 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getSubscription();
        long long56 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator57 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getTranslator();
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator57, fields58);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer61 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer62 = null;
        java.util.regex.Pattern pattern63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer61, firstPollOffsetStrategyEnumSerializableDeserializer62, pattern63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig65 = kafkaSpoutRetryServiceBuilder64.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer66 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator67 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getTranslator();
        int int68 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer69 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getKeyDeserializer();
        long long70 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator72 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getTranslator();
        org.apache.storm.tuple.Fields fields73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator72, fields73);
        java.util.Properties properties75 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder74.setProp(properties75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig34);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig49);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator51);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer52);
        org.junit.Assert.assertNotNull(subscription54);
        org.junit.Assert.assertNotNull(subscription55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 30000L + "'", long56 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig65);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 10000000 + "'", int68 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 30000L + "'", long70 == 30000L);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
    }

    @Test
    public void test05232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05232");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRetry(kafkaSpoutRetryService20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxPartitionFectchBytes(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setFetchMinBytes((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setPollTimeoutMs(100L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setFetchMinBytes((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setMaxPollRecords((int) (byte) 10);
        java.util.Properties properties32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setProp(properties32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
    }

    @Test
    public void test05233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05233");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig8 = kafkaSpoutRetryServiceBuilder7.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer9 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator10 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getTranslator();
        int int11 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer12 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getValueDeserializer();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig8.toString();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService18 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getRetryService();
        org.apache.storm.kafka.spout.Subscription subscription19 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, subscription19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setMaxRetries((int) (short) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig8);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10000000 + "'", int11 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer12);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService18);
        org.junit.Assert.assertNotNull(subscription19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
    }

    @Test
    public void test05234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05234");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>> kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> firstPollOffsetStrategyEnumBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>>("hi!", firstPollOffsetStrategyEnumSerializableDeserializer9, kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer10, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>, java.lang.reflect.Type> kafkaSpoutRetryServiceConsumerRecordFuncBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>, java.lang.reflect.Type>("hi!", kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer4, typeSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence> strListBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence>("", strListSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test05235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05235");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer14 = null;
        java.util.regex.Pattern pattern15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, firstPollOffsetStrategyEnumSerializableDeserializer14, pattern15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder16.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setFirstPollOffsetStrategy(firstPollOffsetStrategy21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder20.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder20.setRetry(kafkaSpoutRetryService26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder20.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setMaxUncommittedOffsets(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setMaxUncommittedOffsets(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder34.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder39.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, firstPollOffsetStrategyEnumSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig49 = kafkaSpoutRetryServiceBuilder48.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer50 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator51 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer52 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getKeyDeserializer();
        java.lang.String str53 = kafkaSpoutRetryServiceKafkaSpoutConfig49.toString();
        java.lang.String str54 = kafkaSpoutRetryServiceKafkaSpoutConfig49.toString();
        int int55 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getMaxUncommittedOffsets();
        long long56 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder39.setProp("", (java.lang.Object) kafkaSpoutRetryServiceKafkaSpoutConfig49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder4.setProp("", (java.lang.Object) "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer60 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer61 = null;
        java.util.regex.Pattern pattern62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder63 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer60, firstPollOffsetStrategyEnumSerializableDeserializer61, pattern62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig64 = kafkaSpoutRetryServiceBuilder63.build();
        boolean boolean65 = kafkaSpoutRetryServiceKafkaSpoutConfig64.isConsumerAutoCommitMode();
        int int66 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer67 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getKafkaProps();
        long long69 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator70 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getTranslator();
        boolean boolean71 = kafkaSpoutRetryServiceKafkaSpoutConfig64.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer72 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator73 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService74 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getRetryService();
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService76 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder4.setRetry(kafkaSpoutRetryService76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy21 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy21.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig49);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator51);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 10000000 + "'", int55 == 10000000);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 30000L + "'", long56 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 10000000 + "'", int66 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 30000L + "'", long69 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
    }

    @Test
    public void test05236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05236");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, firstPollOffsetStrategyEnumSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder31.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder31.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder12.setMaxPollRecords((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setMaxPartitionFectchBytes((int) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer44 = null;
        java.util.regex.Pattern pattern45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer43, firstPollOffsetStrategyEnumSerializableDeserializer44, pattern45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setFirstPollOffsetStrategy(firstPollOffsetStrategy51);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer54 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer55 = null;
        java.util.regex.Pattern pattern56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer54, firstPollOffsetStrategyEnumSerializableDeserializer55, pattern56);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig58 = kafkaSpoutRetryServiceBuilder57.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer59 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator60 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getTranslator();
        org.apache.storm.tuple.Fields fields61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator60, fields61, "");
        org.apache.storm.tuple.Fields fields64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator60, fields64);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer67 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer68 = null;
        java.util.regex.Pattern pattern69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder70 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer67, firstPollOffsetStrategyEnumSerializableDeserializer68, pattern69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig71 = kafkaSpoutRetryServiceBuilder70.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer72 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator73 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer74 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getKeyDeserializer();
        java.lang.String str75 = kafkaSpoutRetryServiceKafkaSpoutConfig71.toString();
        java.lang.String str76 = kafkaSpoutRetryServiceKafkaSpoutConfig71.toString();
        long long77 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getPollTimeoutMs();
        long long78 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder39.setProp(strMap79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy51 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy51.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig58);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig71);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator73);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer74);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 200L + "'", long77 == 200L);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 200L + "'", long78 == 200L);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
    }

    @Test
    public void test05237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05237");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>> kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer14 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> firstPollOffsetStrategyEnumBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>>("hi!", firstPollOffsetStrategyEnumSerializableDeserializer13, kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer14, (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.String[]> firstPollOffsetStrategyBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.String[]>("hi!", firstPollOffsetStrategySerializableDeserializer10, strArraySerializableDeserializer11, (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>> strCollectionBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>>("hi!", strCollectionSerializableDeserializer7, kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.util.AbstractCollection<java.lang.String>> firstPollOffsetStrategyEnumBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.util.AbstractCollection<java.lang.String>>("hi!", firstPollOffsetStrategyEnumSerializableDeserializer4, strCollectionSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList18);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test05238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05238");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, firstPollOffsetStrategyEnumSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder13.build();
        boolean boolean15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.isConsumerAutoCommitMode();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder6.setFirstPollOffsetStrategy(firstPollOffsetStrategy19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000000 + "'", int16 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy19 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy19.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
    }

    @Test
    public void test05239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05239");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder12.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, firstPollOffsetStrategyEnumSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, firstPollOffsetStrategyEnumSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setFirstPollOffsetStrategy(firstPollOffsetStrategy32);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, firstPollOffsetStrategyEnumSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig39 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer40 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator41 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getTranslator();
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator41, fields42, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, firstPollOffsetStrategyEnumSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder50.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer52 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator53 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        int int54 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator55 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields56);
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields58, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setPollTimeoutMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder62.setFetchMinBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setMaxPartitionFectchBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder64.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder64.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder70.setPollTimeoutMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig73 = kafkaSpoutRetryServiceBuilder70.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer74 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getKeyDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy32 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy32.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig39);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10000000 + "'", int54 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig73);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer74);
    }

    @Test
    public void test05240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05240");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator19 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getMaxUncommittedOffsets();
        java.lang.String str21 = kafkaSpoutRetryServiceKafkaSpoutConfig16.toString();
        java.lang.String str22 = kafkaSpoutRetryServiceKafkaSpoutConfig16.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator23 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator23, fields24);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, firstPollOffsetStrategyEnumSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer40 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer41 = null;
        java.util.regex.Pattern pattern42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer40, firstPollOffsetStrategyEnumSerializableDeserializer41, pattern42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig44 = kafkaSpoutRetryServiceBuilder43.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder35.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder35.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder4.setProp("", (java.lang.Object) "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs(0L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer58 = null;
        java.util.regex.Pattern pattern59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer57, firstPollOffsetStrategyEnumSerializableDeserializer58, pattern59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig61 = kafkaSpoutRetryServiceBuilder60.build();
        boolean boolean62 = kafkaSpoutRetryServiceKafkaSpoutConfig61.isConsumerAutoCommitMode();
        java.lang.String str63 = kafkaSpoutRetryServiceKafkaSpoutConfig61.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator64 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getTranslator();
        boolean boolean65 = kafkaSpoutRetryServiceKafkaSpoutConfig61.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.Subscription subscription66 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer67 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getValueDeserializer();
        int int68 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer69 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder4.setProp(strMap70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10000000 + "'", int20 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(subscription66);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 10000000 + "'", int68 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
    }

    @Test
    public void test05241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05241");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setMaxPollRecords((int) (short) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder17.build();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig18.isConsumerAutoCommitMode();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer21 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getKafkaProps();
        int int23 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getMaxTupleRetries();
        java.lang.String str24 = kafkaSpoutRetryServiceKafkaSpoutConfig18.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService25 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getRetryService();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator26 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator26);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, firstPollOffsetStrategyEnumSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig33 = kafkaSpoutRetryServiceBuilder32.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer34 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator35 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getTranslator();
        int int36 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer37 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer38 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer40 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getValueDeserializer();
        java.lang.String str41 = kafkaSpoutRetryServiceKafkaSpoutConfig33.toString();
        java.lang.String str42 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService43 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10000000 + "'", int20 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2147483647 + "'", int23 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig33);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10000000 + "'", int36 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer37);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
    }

    @Test
    public void test05242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05242");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRetry(kafkaSpoutRetryService20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder23.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder23.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder28.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder28.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setOffsetCommitPeriodMs((long) 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
    }

    @Test
    public void test05243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05243");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setMaxRetries((int) 'a');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, firstPollOffsetStrategyEnumSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig30 = kafkaSpoutRetryServiceBuilder29.build();
        boolean boolean31 = kafkaSpoutRetryServiceKafkaSpoutConfig30.isConsumerAutoCommitMode();
        int int32 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer33 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getKafkaProps();
        long long35 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator36 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getTranslator();
        boolean boolean37 = kafkaSpoutRetryServiceKafkaSpoutConfig30.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer38 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator39 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getTranslator();
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator39, fields40, "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10000000 + "'", int32 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 30000L + "'", long35 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
    }

    @Test
    public void test05244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05244");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig8 = kafkaSpoutRetryServiceBuilder7.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer9 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator10 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator11 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getTranslator();
        int int12 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription13 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getSubscription();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator14 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getTranslator();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getMaxTupleRetries();
        org.apache.storm.kafka.spout.Subscription subscription16 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.util.List<java.lang.String>> objBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.util.List<java.lang.String>>("hi!", objSerializableDeserializer1, strListSerializableDeserializer2, subscription16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig8);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10000000 + "'", int12 == 10000000);
        org.junit.Assert.assertNotNull(subscription13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertNotNull(subscription16);
    }

    @Test
    public void test05245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05245");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, firstPollOffsetStrategyEnumSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig19 = kafkaSpoutRetryServiceBuilder18.build();
        boolean boolean20 = kafkaSpoutRetryServiceKafkaSpoutConfig19.isConsumerAutoCommitMode();
        java.lang.String str21 = kafkaSpoutRetryServiceKafkaSpoutConfig19.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator22 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getTranslator();
        org.apache.storm.tuple.Fields fields23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator22, fields23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig25 = kafkaSpoutRetryServiceBuilder24.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, firstPollOffsetStrategyEnumSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig34 = kafkaSpoutRetryServiceBuilder33.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer35 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator36 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getTranslator();
        int int37 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer38 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getKeyDeserializer();
        long long39 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder24.setProp(strMap40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder24.setMaxPollRecords((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setBootstrapServers("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig34);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10000000 + "'", int37 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 30000L + "'", long39 == 30000L);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
    }

    @Test
    public void test05246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05246");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer9 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, org.apache.storm.kafka.spout.Subscription> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, org.apache.storm.kafka.spout.Subscription>("hi!", kafkaSpoutRetryServiceSerializableDeserializer8, subscriptionSerializableDeserializer9, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> genericDeclarationBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>>("hi!", genericDeclarationSerializableDeserializer5, kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer6, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.String> strIterableBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.String>("hi!", strIterableSerializableDeserializer2, strSerializableDeserializer3, strArray15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test05247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05247");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder12.setOffsetCommitPeriodMs(100L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig19 = kafkaSpoutRetryServiceBuilder12.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer20 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getValueDeserializer();
        long long21 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig19);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 100L + "'", long21 == 100L);
    }

    @Test
    public void test05248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05248");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        long long10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        int int11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        boolean boolean13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 30000L + "'", long10 == 30000L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10000000 + "'", int11 == 10000000);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test05249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05249");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder10.build();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig13.toString();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator16 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getTranslator();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000000 + "'", int15 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator16);
    }

    @Test
    public void test05250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05250");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        org.apache.storm.kafka.spout.Subscription subscription11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        int int12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(subscription11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10000000 + "'", int12 == 10000000);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 30000L + "'", long13 == 30000L);
    }

    @Test
    public void test05251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05251");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer24 = null;
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, firstPollOffsetStrategyEnumSerializableDeserializer24, (java.util.Collection<java.lang.String>) strList27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type> subscriptionBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type>("hi!", subscriptionSerializableDeserializer20, typeSerializableDeserializer21, (java.util.Collection<java.lang.String>) strList27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, firstPollOffsetStrategyEnumSerializableDeserializer18, (java.util.Collection<java.lang.String>) strList27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, (java.util.Collection<java.lang.String>) strList27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, firstPollOffsetStrategyEnumSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.Cloneable> strIterableBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.Cloneable>("hi!", strIterableSerializableDeserializer7, cloneableSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.reflect.GenericDeclaration> strIterableBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.reflect.GenericDeclaration>("hi!", strIterableSerializableDeserializer4, genericDeclarationSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setPollTimeoutMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setBootstrapServers("");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
    }

    @Test
    public void test05252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05252");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer18 = null;
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, firstPollOffsetStrategyEnumSerializableDeserializer18, (java.util.Collection<java.lang.String>) strList21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type> subscriptionBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type>("hi!", subscriptionSerializableDeserializer14, typeSerializableDeserializer15, (java.util.Collection<java.lang.String>) strList21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer11, firstPollOffsetStrategyEnumSerializableDeserializer12, (java.util.Collection<java.lang.String>) strList21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer8, firstPollOffsetStrategyEnumSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList21);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.util.AbstractList<java.lang.String>> strBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.util.AbstractList<java.lang.String>>("", strSerializableDeserializer1, strListSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test05253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05253");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer11 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, org.apache.storm.kafka.spout.Subscription> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, org.apache.storm.kafka.spout.Subscription>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, subscriptionSerializableDeserializer11, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, firstPollOffsetStrategyEnumSerializableDeserializer8, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> annotatedElementBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", annotatedElementSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, strArray17);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, firstPollOffsetStrategyEnumSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        int int30 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer31 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer32 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer34 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getValueDeserializer();
        java.lang.String str35 = kafkaSpoutRetryServiceKafkaSpoutConfig27.toString();
        java.lang.String str36 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService37 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder21.setRetry(kafkaSpoutRetryService37);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder41.build();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10000000 + "'", int30 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer31);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
    }

    @Test
    public void test05254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05254");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, firstPollOffsetStrategyEnumSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder28.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator31 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator31);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setRetry(kafkaSpoutRetryService33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder10.setRetry(kafkaSpoutRetryService33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder10.setMaxPollRecords(2147483647);
        java.lang.Class<?> wildcardClass38 = kafkaSpoutRetryServiceBuilder10.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test05255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05255");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer16 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> firstPollOffsetStrategyEnumBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>>("hi!", firstPollOffsetStrategyEnumSerializableDeserializer15, kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer16, (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.String[]> firstPollOffsetStrategyBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.String[]>("hi!", firstPollOffsetStrategySerializableDeserializer12, strArraySerializableDeserializer13, (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, firstPollOffsetStrategyEnumSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList20);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.ArrayList<java.lang.String>> kafkaSpoutRetryServiceRecordTranslatorBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.ArrayList<java.lang.String>>("", kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer1, strListSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test05256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05256");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        int int7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        int int10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        java.lang.String str11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.storm.kafka.spout.Subscription subscription12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10000000 + "'", int7 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 2000L + "'", long13 == 2000L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2000L + "'", long14 == 2000L);
        org.junit.Assert.assertNotNull(subscription15);
    }

    @Test
    public void test05257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05257");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer23 = null;
        java.util.regex.Pattern pattern24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer22, firstPollOffsetStrategyEnumSerializableDeserializer23, pattern24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, firstPollOffsetStrategyEnumSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig37 = kafkaSpoutRetryServiceBuilder36.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer38 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator39 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder27.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder19.setProp("hi!", (java.lang.Object) "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder45.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer52 = null;
        java.util.regex.Pattern pattern53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer51, firstPollOffsetStrategyEnumSerializableDeserializer52, pattern53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder56.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder56.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder60.setMaxRetries((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer66 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer67 = null;
        java.util.regex.Pattern pattern68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder69 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer66, firstPollOffsetStrategyEnumSerializableDeserializer67, pattern68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig70 = kafkaSpoutRetryServiceBuilder69.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer71 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator72 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getTranslator();
        int int73 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator74 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getTranslator();
        org.apache.storm.tuple.Fields fields75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder60.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator74, fields75, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig78 = kafkaSpoutRetryServiceBuilder60.build();
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder49.setProp(strMap79);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder49.setSSLKeystore("hi!", "", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig37);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig70);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 10000000 + "'", int73 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
    }

    @Test
    public void test05258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05258");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        int int7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        long long10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        boolean boolean12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        int int19 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer21 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10000000 + "'", int7 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 30000L + "'", long10 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 30000L + "'", long17 == 30000L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10000000 + "'", int19 == 10000000);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer21);
    }

    @Test
    public void test05259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05259");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, firstPollOffsetStrategyEnumSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig10 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer11 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getTranslator();
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator12, fields13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer21 = null;
        java.util.regex.Pattern pattern22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, firstPollOffsetStrategyEnumSerializableDeserializer21, pattern22);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, firstPollOffsetStrategyEnumSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder28.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator31 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getTranslator();
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator31, fields32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setOffsetCommitPeriodMs((long) 'a');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer38 = null;
        java.util.regex.Pattern pattern39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer37, firstPollOffsetStrategyEnumSerializableDeserializer38, pattern39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setPartitionRefreshPeriodMs(0L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer48 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer49 = null;
        java.util.regex.Pattern pattern50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder51 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer48, firstPollOffsetStrategyEnumSerializableDeserializer49, pattern50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig52 = kafkaSpoutRetryServiceBuilder51.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer53 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator54 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer55 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getKeyDeserializer();
        java.lang.String str56 = kafkaSpoutRetryServiceKafkaSpoutConfig52.toString();
        java.lang.String str57 = kafkaSpoutRetryServiceKafkaSpoutConfig52.toString();
        int int58 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription59 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator61 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getTranslator();
        org.apache.storm.tuple.Fields fields62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator61, fields62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator61);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer66 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer67 = null;
        java.util.regex.Pattern pattern68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder69 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer66, firstPollOffsetStrategyEnumSerializableDeserializer67, pattern68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig70 = kafkaSpoutRetryServiceBuilder69.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer71 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator72 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator73 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getTranslator();
        int int74 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getMaxUncommittedOffsets();
        long long75 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getPartitionRefreshPeriodMs();
        long long76 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService77 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getRetryService();
        java.lang.String str78 = kafkaSpoutRetryServiceKafkaSpoutConfig70.toString();
        long long79 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder64.setProp(strMap80);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder18.setProp(strMap80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig10);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig52);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator54);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 10000000 + "'", int58 == 10000000);
        org.junit.Assert.assertNotNull(subscription59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig70);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 10000000 + "'", int74 == 10000000);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 2000L + "'", long75 == 2000L);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 2000L + "'", long76 == 2000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService77);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 30000L + "'", long79 == 30000L);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
    }

    @Test
    public void test05260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05260");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        java.lang.String str9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.storm.kafka.spout.Subscription subscription10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService8);
        org.junit.Assert.assertNotNull(subscription10);
    }

    @Test
    public void test05261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05261");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setPartitionRefreshPeriodMs((long) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, firstPollOffsetStrategyEnumSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        int int30 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription31 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getSubscription();
        java.lang.String str32 = kafkaSpoutRetryServiceKafkaSpoutConfig27.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator33 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer38 = null;
        java.util.regex.Pattern pattern39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer37, firstPollOffsetStrategyEnumSerializableDeserializer38, pattern39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder40.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder44.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer53 = null;
        java.util.regex.Pattern pattern54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer52, firstPollOffsetStrategyEnumSerializableDeserializer53, pattern54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer61 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer62 = null;
        java.util.regex.Pattern pattern63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer61, firstPollOffsetStrategyEnumSerializableDeserializer62, pattern63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig65 = kafkaSpoutRetryServiceBuilder64.build();
        boolean boolean66 = kafkaSpoutRetryServiceKafkaSpoutConfig65.isConsumerAutoCommitMode();
        int int67 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer68 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder59.setProp(strMap69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder50.setProp(strMap69);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer73 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer74 = null;
        java.util.regex.Pattern pattern75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder76 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer73, firstPollOffsetStrategyEnumSerializableDeserializer74, pattern75);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig77 = kafkaSpoutRetryServiceBuilder76.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer78 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator79 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer80 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getKeyDeserializer();
        java.lang.String str81 = kafkaSpoutRetryServiceKafkaSpoutConfig77.toString();
        long long82 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap83 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy84 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy85 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder71.setFirstPollOffsetStrategy(firstPollOffsetStrategy85);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder34.setProp("", (java.lang.Object) firstPollOffsetStrategy85);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder34.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder89.setSecurityProtocol("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10000000 + "'", int30 == 10000000);
        org.junit.Assert.assertNotNull(subscription31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 10000000 + "'", int67 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig77);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator79);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer80);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 200L + "'", long82 == 200L);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy84 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy84.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy85 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy85.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
    }

    @Test
    public void test05262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05262");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder12.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, firstPollOffsetStrategyEnumSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, firstPollOffsetStrategyEnumSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setFirstPollOffsetStrategy(firstPollOffsetStrategy32);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, firstPollOffsetStrategyEnumSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig39 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer40 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator41 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getTranslator();
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator41, fields42, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, firstPollOffsetStrategyEnumSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder50.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer52 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator53 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        int int54 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator55 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields56);
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields58, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setPollTimeoutMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder62.setFetchMinBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setMaxPartitionFectchBytes(10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer68 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer69 = null;
        java.util.regex.Pattern pattern70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder71 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer68, firstPollOffsetStrategyEnumSerializableDeserializer69, pattern70);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig72 = kafkaSpoutRetryServiceBuilder71.build();
        boolean boolean73 = kafkaSpoutRetryServiceKafkaSpoutConfig72.isConsumerAutoCommitMode();
        int int74 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer75 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getKafkaProps();
        long long77 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator78 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getTranslator();
        boolean boolean79 = kafkaSpoutRetryServiceKafkaSpoutConfig72.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer80 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator81 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService82 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder64.setRetry(kafkaSpoutRetryService82);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder83.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder83.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig88 = kafkaSpoutRetryServiceBuilder87.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder90 = kafkaSpoutRetryServiceBuilder87.setOffsetCommitPeriodMs((long) (byte) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy32 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy32.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig39);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10000000 + "'", int54 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 10000000 + "'", int74 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 30000L + "'", long77 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder90);
    }

    @Test
    public void test05263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05263");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        java.lang.String str10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        java.lang.String str11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10000000 + "'", int9 == 10000000);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2000L + "'", long16 == 2000L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10000000 + "'", int17 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer18);
    }

    @Test
    public void test05264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05264");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        java.lang.String str10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        java.lang.String str11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10000000 + "'", int9 == 10000000);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 30000L + "'", long16 == 30000L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10000000 + "'", int17 == 10000000);
    }

    @Test
    public void test05265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05265");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceBuilderSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceBuilderBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>>("hi!", kafkaSpoutRetryServiceBuilderSerializableDeserializer6, kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer7, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder14.setOffsetCommitPeriodMs((long) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder14.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig21 = kafkaSpoutRetryServiceBuilder14.build();
        long long22 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 35L + "'", long22 == 35L);
    }

    @Test
    public void test05266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05266");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        org.apache.storm.kafka.spout.Subscription subscription16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        boolean boolean18 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer21 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription22 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer9);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(subscription16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10000000 + "'", int20 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer21);
        org.junit.Assert.assertNotNull(subscription22);
    }

    @Test
    public void test05267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05267");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        java.lang.String str9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        java.lang.String str10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        int int11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.storm.kafka.spout.Subscription subscription17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        java.lang.Class<?> wildcardClass18 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10000000 + "'", int11 == 10000000);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2000L + "'", long12 == 2000L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000000 + "'", int15 == 10000000);
        org.junit.Assert.assertNotNull(subscription17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test05268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05268");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, firstPollOffsetStrategyEnumSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy14);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, firstPollOffsetStrategyEnumSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig21 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer22 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator23 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getTranslator();
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setSSLKeystore("", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig40 = kafkaSpoutRetryServiceBuilder37.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder37.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer46 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer48 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer49 = null;
        java.util.regex.Pattern pattern50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder51 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer48, firstPollOffsetStrategyEnumSerializableDeserializer49, pattern50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig52 = kafkaSpoutRetryServiceBuilder51.build();
        boolean boolean53 = kafkaSpoutRetryServiceKafkaSpoutConfig52.isConsumerAutoCommitMode();
        java.lang.String str54 = kafkaSpoutRetryServiceKafkaSpoutConfig52.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator55 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getTranslator();
        boolean boolean56 = kafkaSpoutRetryServiceKafkaSpoutConfig52.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.Subscription subscription57 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer58 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription59 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, firstPollOffsetStrategyEnumSerializableDeserializer46, subscription59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig61 = kafkaSpoutRetryServiceBuilder60.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy62 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder43.setFirstPollOffsetStrategy(firstPollOffsetStrategy62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder43.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder43.setBootstrapServers("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig21);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(subscription57);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer58);
        org.junit.Assert.assertNotNull(subscription59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig61);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy62 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy62.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
    }

    @Test
    public void test05269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05269");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, firstPollOffsetStrategyEnumSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig19 = kafkaSpoutRetryServiceBuilder18.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer20 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator21 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getTranslator();
        int int22 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription23 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getSubscription();
        java.lang.String str24 = kafkaSpoutRetryServiceKafkaSpoutConfig19.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy25 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy25);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, firstPollOffsetStrategyEnumSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig32 = kafkaSpoutRetryServiceBuilder31.build();
        boolean boolean33 = kafkaSpoutRetryServiceKafkaSpoutConfig32.isConsumerAutoCommitMode();
        int int34 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer35 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService37 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder26.setRetry(kafkaSpoutRetryService37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder26.setOffsetCommitPeriodMs((long) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setMaxPollRecords(1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig19);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10000000 + "'", int22 == 10000000);
        org.junit.Assert.assertNotNull(subscription23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy25 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy25.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10000000 + "'", int34 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
    }

    @Test
    public void test05270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05270");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig8 = kafkaSpoutRetryServiceBuilder7.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer9 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator10 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getTranslator();
        int int11 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator14 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getTranslator();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, subscription15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder16.setOffsetCommitPeriodMs(1L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig8);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10000000 + "'", int11 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator14);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
    }

    @Test
    public void test05271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05271");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setFetchMinBytes((int) (byte) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder17.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer19 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator20 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getTranslator();
        int int21 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription22 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer23 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService24 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getRetryService();
        int int25 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService26 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder10.setRetry(kafkaSpoutRetryService26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder10.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setBootstrapServers("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10000000 + "'", int21 == 10000000);
        org.junit.Assert.assertNotNull(subscription22);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10000000 + "'", int25 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
    }

    @Test
    public void test05272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05272");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, firstPollOffsetStrategyEnumSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig19 = kafkaSpoutRetryServiceBuilder18.build();
        boolean boolean20 = kafkaSpoutRetryServiceKafkaSpoutConfig19.isConsumerAutoCommitMode();
        java.lang.String str21 = kafkaSpoutRetryServiceKafkaSpoutConfig19.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator22 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getTranslator();
        org.apache.storm.tuple.Fields fields23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator22, fields23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setMaxUncommittedOffsets((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder24.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy30 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer31 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService32 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getRetryService();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer28);
        org.junit.Assert.assertNotNull(subscription29);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy30 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy30.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService32);
    }

    @Test
    public void test05273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05273");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder17.build();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig18.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService21 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getRetryService();
        boolean boolean22 = kafkaSpoutRetryServiceKafkaSpoutConfig18.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder12.setProp(strMap23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setMaxUncommittedOffsets(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder26.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder26.setMaxRetries((int) 'a');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, firstPollOffsetStrategyEnumSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder38.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, firstPollOffsetStrategyEnumSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder50.build();
        boolean boolean52 = kafkaSpoutRetryServiceKafkaSpoutConfig51.isConsumerAutoCommitMode();
        java.lang.String str53 = kafkaSpoutRetryServiceKafkaSpoutConfig51.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator54 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        org.apache.storm.tuple.Fields fields55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder45.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator54, fields55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder31.setOffsetCommitPeriodMs((long) 0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
    }

    @Test
    public void test05274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05274");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer9);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator16);
    }

    @Test
    public void test05275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05275");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer22 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, firstPollOffsetStrategyEnumSerializableDeserializer22, (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type> subscriptionBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type>("hi!", subscriptionSerializableDeserializer18, typeSerializableDeserializer19, (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, firstPollOffsetStrategyEnumSerializableDeserializer16, (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer9, firstPollOffsetStrategyEnumSerializableDeserializer10, (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.util.RandomAccess> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.util.RandomAccess>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, randomAccessSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList25);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test05276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05276");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer20 = null;
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, org.apache.storm.kafka.spout.Subscription> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, org.apache.storm.kafka.spout.Subscription>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, subscriptionSerializableDeserializer20, strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, firstPollOffsetStrategyEnumSerializableDeserializer17, strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> annotatedElementBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", annotatedElementSerializableDeserializer13, firstPollOffsetStrategyEnumSerializableDeserializer14, strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, firstPollOffsetStrategyEnumSerializableDeserializer11, strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> typeBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", typeSerializableDeserializer7, firstPollOffsetStrategyEnumSerializableDeserializer8, strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, strArray26);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.util.List<java.lang.String>> strListBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.util.List<java.lang.String>>("", strListSerializableDeserializer1, strListSerializableDeserializer2, strArray26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray26);
    }

    @Test
    public void test05277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05277");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer9);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2000L + "'", long14 == 2000L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
    }

    @Test
    public void test05278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05278");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> firstPollOffsetStrategyEnumBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>>("hi!", firstPollOffsetStrategyEnumSerializableDeserializer8, kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, org.apache.storm.kafka.spout.KafkaSpoutRetryService> strMapBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, org.apache.storm.kafka.spout.KafkaSpoutRetryService>("hi!", strMapSerializableDeserializer4, kafkaSpoutRetryServiceSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, java.lang.String[]> typeBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, java.lang.String[]>("", typeSerializableDeserializer1, strArraySerializableDeserializer2, (java.util.Collection<java.lang.String>) strList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test05279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05279");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer25 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, firstPollOffsetStrategyEnumSerializableDeserializer25, (java.util.Collection<java.lang.String>) strList28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type> subscriptionBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type>("hi!", subscriptionSerializableDeserializer21, typeSerializableDeserializer22, (java.util.Collection<java.lang.String>) strList28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, firstPollOffsetStrategyEnumSerializableDeserializer19, (java.util.Collection<java.lang.String>) strList28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, firstPollOffsetStrategyEnumSerializableDeserializer16, (java.util.Collection<java.lang.String>) strList28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, (java.util.Collection<java.lang.String>) strList28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.util.RandomAccess> strBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.util.RandomAccess>("hi!", strSerializableDeserializer9, randomAccessSerializableDeserializer10, (java.util.Collection<java.lang.String>) strList28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, firstPollOffsetStrategyEnumSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.String[]> strListBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.String[]>("hi!", strListSerializableDeserializer2, strArraySerializableDeserializer3, (java.util.Collection<java.lang.String>) strList28);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test05280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05280");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> firstPollOffsetStrategyEnumBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>>("hi!", firstPollOffsetStrategyEnumSerializableDeserializer10, kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, firstPollOffsetStrategyEnumSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, java.lang.Cloneable> serializableBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, java.lang.Cloneable>("hi!", serializableSerializableDeserializer4, cloneableSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer23 = null;
        java.util.regex.Pattern pattern24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer22, firstPollOffsetStrategyEnumSerializableDeserializer23, pattern24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig26 = kafkaSpoutRetryServiceBuilder25.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer27 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator28 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator29 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getTranslator();
        int int30 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getMaxUncommittedOffsets();
        long long31 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getPartitionRefreshPeriodMs();
        long long32 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService33 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy34 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy35 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder20.setFirstPollOffsetStrategy(firstPollOffsetStrategy35);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig26);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10000000 + "'", int30 == 10000000);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 2000L + "'", long31 == 2000L);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 2000L + "'", long32 == 2000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService33);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy34 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy34.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy35 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy35.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
    }

    @Test
    public void test05281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05281");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder17.build();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig18.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService21 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getRetryService();
        boolean boolean22 = kafkaSpoutRetryServiceKafkaSpoutConfig18.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder12.setProp(strMap23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setMaxPartitionFectchBytes((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setFetchMinBytes((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder26.setSSLTruststore("", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
    }

    @Test
    public void test05282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05282");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, firstPollOffsetStrategyEnumSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig10 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer11 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getTranslator();
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator12, fields13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig19 = kafkaSpoutRetryServiceBuilder16.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getFirstPollOffsetStrategy();
        boolean boolean22 = kafkaSpoutRetryServiceKafkaSpoutConfig19.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy23 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getFirstPollOffsetStrategy();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig10);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy21 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy21.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy23 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy23.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test05283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05283");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer17 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, firstPollOffsetStrategyEnumSerializableDeserializer17, (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type> subscriptionBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type>("hi!", subscriptionSerializableDeserializer13, typeSerializableDeserializer14, (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer8, firstPollOffsetStrategyEnumSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, firstPollOffsetStrategyEnumSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.lang.Object> kafkaSpoutRetryServiceRecordTranslatorBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.lang.Object>("", kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer1, objSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test05284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05284");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig21 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator22 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getTranslator();
        java.lang.String str23 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test05285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05285");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer20 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, firstPollOffsetStrategyEnumSerializableDeserializer20, (java.util.Collection<java.lang.String>) strList23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type> subscriptionBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type>("hi!", subscriptionSerializableDeserializer16, typeSerializableDeserializer17, (java.util.Collection<java.lang.String>) strList23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, firstPollOffsetStrategyEnumSerializableDeserializer14, (java.util.Collection<java.lang.String>) strList23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, firstPollOffsetStrategyEnumSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.lang.Comparable<java.lang.String>> randomAccessBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.lang.Comparable<java.lang.String>>("hi!", randomAccessSerializableDeserializer4, strComparableSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList23);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test05286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05286");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        boolean boolean9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        int int12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator10);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy11 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy11.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10000000 + "'", int12 == 10000000);
    }

    @Test
    public void test05287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05287");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        boolean boolean9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.Subscription subscription12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        boolean boolean13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator11);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
    }

    @Test
    public void test05288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05288");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer23 = null;
        java.util.regex.Pattern pattern24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer22, firstPollOffsetStrategyEnumSerializableDeserializer23, pattern24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, firstPollOffsetStrategyEnumSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig37 = kafkaSpoutRetryServiceBuilder36.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer38 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator39 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder27.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder19.setProp("hi!", (java.lang.Object) "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder45.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setPollTimeoutMs(200L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer53 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer54 = null;
        java.util.regex.Pattern pattern55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder56 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer53, firstPollOffsetStrategyEnumSerializableDeserializer54, pattern55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig57 = kafkaSpoutRetryServiceBuilder56.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer58 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator59 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getTranslator();
        int int60 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription61 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer62 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder49.setProp(strMap63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder49.setGroupId("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig37);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig57);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10000000 + "'", int60 == 10000000);
        org.junit.Assert.assertNotNull(subscription61);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
    }

    @Test
    public void test05289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05289");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        java.lang.String str9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        java.lang.String str10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        int int11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10000000 + "'", int11 == 10000000);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 30000L + "'", long12 == 30000L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription14);
    }

    @Test
    public void test05290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05290");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        int int7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        long long10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        boolean boolean12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10000000 + "'", int7 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 30000L + "'", long10 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test05291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05291");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setMaxUncommittedOffsets(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setMaxUncommittedOffsets(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setMaxRetries((int) (short) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
    }

    @Test
    public void test05292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05292");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        long long10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        java.lang.String str11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.storm.kafka.spout.Subscription subscription12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 30000L + "'", long10 == 30000L);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer13);
    }

    @Test
    public void test05293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05293");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxPollRecords((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        int int19 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator20 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator22 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator23 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder4.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, firstPollOffsetStrategyEnumSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder39.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder39.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer46 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer47 = null;
        java.util.regex.Pattern pattern48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer46, firstPollOffsetStrategyEnumSerializableDeserializer47, pattern48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig50 = kafkaSpoutRetryServiceBuilder49.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder49.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer59 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer60 = null;
        java.util.regex.Pattern pattern61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer59, firstPollOffsetStrategyEnumSerializableDeserializer60, pattern61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig63 = kafkaSpoutRetryServiceBuilder62.build();
        boolean boolean64 = kafkaSpoutRetryServiceKafkaSpoutConfig63.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy65 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService66 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getRetryService();
        boolean boolean67 = kafkaSpoutRetryServiceKafkaSpoutConfig63.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder57.setProp(strMap68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder39.setProp(strMap68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig71 = kafkaSpoutRetryServiceBuilder70.build();
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder4.setProp(strMap72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder73.setMaxUncommittedOffsets((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder75.setMaxRetries(100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10000000 + "'", int19 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy65 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy65.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
    }

    @Test
    public void test05294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05294");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer26 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, firstPollOffsetStrategyEnumSerializableDeserializer26, (java.util.Collection<java.lang.String>) strList29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type> subscriptionBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type>("hi!", subscriptionSerializableDeserializer22, typeSerializableDeserializer23, (java.util.Collection<java.lang.String>) strList29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, firstPollOffsetStrategyEnumSerializableDeserializer20, (java.util.Collection<java.lang.String>) strList29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, firstPollOffsetStrategyEnumSerializableDeserializer17, (java.util.Collection<java.lang.String>) strList29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.String[]> strListBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.String[]>("hi!", strListSerializableDeserializer11, strArraySerializableDeserializer12, (java.util.Collection<java.lang.String>) strList29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer8, firstPollOffsetStrategyEnumSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, firstPollOffsetStrategyEnumSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.util.Collection<java.lang.String>> strCollectionBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.util.Collection<java.lang.String>>("hi!", strCollectionSerializableDeserializer2, strCollectionSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList29);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test05295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05295");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        int int7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        int int10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        java.lang.String str11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10000000 + "'", int7 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000000 + "'", int16 == 10000000);
    }

    @Test
    public void test05296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05296");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, org.apache.storm.kafka.spout.Subscription> subscriptionBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, org.apache.storm.kafka.spout.Subscription>("", subscriptionSerializableDeserializer1, subscriptionSerializableDeserializer2, pattern3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test05297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05297");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        java.lang.String str10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        java.lang.String str11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        org.apache.storm.kafka.spout.Subscription subscription12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        int int13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.storm.kafka.spout.Subscription subscription19 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10000000 + "'", int9 == 10000000);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10000000 + "'", int13 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer15);
        org.junit.Assert.assertNotNull(subscription16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
        org.junit.Assert.assertNotNull(subscription19);
    }

    @Test
    public void test05298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05298");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder17.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, firstPollOffsetStrategyEnumSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, firstPollOffsetStrategyEnumSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setFirstPollOffsetStrategy(firstPollOffsetStrategy38);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, firstPollOffsetStrategyEnumSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig45 = kafkaSpoutRetryServiceBuilder44.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer46 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator47 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getTranslator();
        org.apache.storm.tuple.Fields fields48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator47, fields48, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator47);
        org.apache.storm.tuple.Fields fields52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator47, fields52, "");
        org.apache.storm.tuple.Fields fields55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator47, fields55, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setOffsetCommitPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig60 = kafkaSpoutRetryServiceBuilder57.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService61 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getRetryService();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator62 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer63 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getKeyDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getKafkaProps();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig45);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator62);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer63);
        org.junit.Assert.assertNotNull(strMap64);
    }

    @Test
    public void test05299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05299");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxRetries((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder17.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer28 = null;
        java.util.regex.Pattern pattern29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer27, firstPollOffsetStrategyEnumSerializableDeserializer28, pattern29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder40.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder40.setRetry(kafkaSpoutRetryService44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder25.setRetry(kafkaSpoutRetryService44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder25.setMaxPartitionFectchBytes((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig49 = kafkaSpoutRetryServiceBuilder48.build();
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder8.setProp(strMap50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
    }

    @Test
    public void test05300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05300");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 30000L + "'", long12 == 30000L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 30000L + "'", long13 == 30000L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10000000 + "'", int14 == 10000000);
    }

    @Test
    public void test05301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05301");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer25 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, firstPollOffsetStrategyEnumSerializableDeserializer25, (java.util.Collection<java.lang.String>) strList28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type> subscriptionBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type>("hi!", subscriptionSerializableDeserializer21, typeSerializableDeserializer22, (java.util.Collection<java.lang.String>) strList28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, firstPollOffsetStrategyEnumSerializableDeserializer19, (java.util.Collection<java.lang.String>) strList28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, firstPollOffsetStrategyEnumSerializableDeserializer16, (java.util.Collection<java.lang.String>) strList28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, (java.util.Collection<java.lang.String>) strList28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.lang.String> firstPollOffsetStrategyEnumBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.lang.String>("hi!", firstPollOffsetStrategyEnumSerializableDeserializer7, strSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList28);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test05302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05302");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceBuilderSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> firstPollOffsetStrategyEnumBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>>("hi!", firstPollOffsetStrategyEnumSerializableDeserializer11, kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer12, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer8, firstPollOffsetStrategyEnumSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.Collection<java.lang.String>> kafkaSpoutRetryServiceBuilderBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.Collection<java.lang.String>>("hi!", kafkaSpoutRetryServiceBuilderSerializableDeserializer5, strCollectionSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer2, firstPollOffsetStrategyEnumSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList16);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test05303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05303");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs((long) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder10.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, firstPollOffsetStrategyEnumSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig22 = kafkaSpoutRetryServiceBuilder21.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer23 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator24 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer25 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getKeyDeserializer();
        java.lang.String str26 = kafkaSpoutRetryServiceKafkaSpoutConfig22.toString();
        long long27 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getFirstPollOffsetStrategy();
        java.lang.String str30 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getConsumerGroupId();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder10.setProp(strMap31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setOffsetCommitPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setPollTimeoutMs(1L);
        java.lang.Class<?> wildcardClass37 = kafkaSpoutRetryServiceBuilder36.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig22);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator24);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer25);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 200L + "'", long27 == 200L);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy29 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy29.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test05304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05304");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, firstPollOffsetStrategyEnumSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig21 = kafkaSpoutRetryServiceBuilder20.build();
        boolean boolean22 = kafkaSpoutRetryServiceKafkaSpoutConfig21.isConsumerAutoCommitMode();
        int int23 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer24 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getKafkaProps();
        long long26 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator27 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getTranslator();
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator27, fields28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setMaxRetries((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setMaxPartitionFectchBytes(100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10000000 + "'", int23 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 30000L + "'", long26 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
    }

    @Test
    public void test05305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05305");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        java.lang.String str7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        boolean boolean9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.Subscription subscription10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        int int12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        boolean boolean15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(subscription10);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10000000 + "'", int12 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer13);
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test05306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05306");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        java.lang.String str9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        long long10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        int int11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        boolean boolean12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        int int13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer8);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 200L + "'", long10 == 200L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2147483647 + "'", int11 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10000000 + "'", int13 == 10000000);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 30000L + "'", long14 == 30000L);
    }

    @Test
    public void test05307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05307");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceBuilderSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer14 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceBuilderBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>>("hi!", kafkaSpoutRetryServiceBuilderSerializableDeserializer13, kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer14, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer8, firstPollOffsetStrategyEnumSerializableDeserializer9, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, firstPollOffsetStrategyEnumSerializableDeserializer6, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray17);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, strArray17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test05308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05308");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10000000 + "'", int9 == 10000000);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy10 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy10.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription11);
    }

    @Test
    public void test05309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05309");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        boolean boolean12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer10);
        org.junit.Assert.assertNotNull(subscription11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 2000L + "'", long13 == 2000L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2000L + "'", long16 == 2000L);
    }

    @Test
    public void test05310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05310");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setOffsetCommitPeriodMs((long) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setFetchMinBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setMaxPollRecords(10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, firstPollOffsetStrategyEnumSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer44 = null;
        java.util.regex.Pattern pattern45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer43, firstPollOffsetStrategyEnumSerializableDeserializer44, pattern45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig47 = kafkaSpoutRetryServiceBuilder46.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer48 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator49 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator50 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getTranslator();
        int int51 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder39.setProp(strMap52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setFetchMinBytes((int) (byte) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer58 = null;
        java.util.regex.Pattern pattern59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer57, firstPollOffsetStrategyEnumSerializableDeserializer58, pattern59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder60.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy65 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setFirstPollOffsetStrategy(firstPollOffsetStrategy65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder64.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService70 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder64.setRetry(kafkaSpoutRetryService70);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder64.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder75.setPartitionRefreshPeriodMs((long) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer79 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer80 = null;
        java.util.regex.Pattern pattern81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder82 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer79, firstPollOffsetStrategyEnumSerializableDeserializer80, pattern81);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig83 = kafkaSpoutRetryServiceBuilder82.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer84 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator85 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getTranslator();
        int int86 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription87 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getSubscription();
        java.lang.String str88 = kafkaSpoutRetryServiceKafkaSpoutConfig83.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator89 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder90 = kafkaSpoutRetryServiceBuilder75.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator89);
        org.apache.storm.tuple.Fields fields91 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder53.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator89, fields91, "hi!");
        org.apache.storm.tuple.Fields fields94 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder96 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator89, fields94, "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig47);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 10000000 + "'", int51 == 10000000);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy65 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy65.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig83);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 10000000 + "'", int86 == 10000000);
        org.junit.Assert.assertNotNull(subscription87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder96);
    }

    @Test
    public void test05311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05311");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> genericDeclarationBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("", genericDeclarationSerializableDeserializer1, firstPollOffsetStrategySerializableDeserializer2, pattern3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test05312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05312");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        java.lang.String str7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        boolean boolean9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.Subscription subscription10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        long long11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(subscription10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 200L + "'", long11 == 200L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2000L + "'", long12 == 2000L);
    }

    @Test
    public void test05313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05313");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setPartitionRefreshPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setOffsetCommitPeriodMs((long) (byte) 100);
        java.util.Properties properties26 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder21.setProp(properties26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
    }

    @Test
    public void test05314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05314");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, firstPollOffsetStrategyEnumSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy14);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, firstPollOffsetStrategyEnumSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig21 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer22 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator23 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getTranslator();
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer32 = null;
        java.util.regex.Pattern pattern33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer31, firstPollOffsetStrategyEnumSerializableDeserializer32, pattern33);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, firstPollOffsetStrategyEnumSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setFirstPollOffsetStrategy(firstPollOffsetStrategy44);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, firstPollOffsetStrategyEnumSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder50.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer52 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator53 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        org.apache.storm.tuple.Fields fields54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator53, fields54, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator53);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer59 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer60 = null;
        java.util.regex.Pattern pattern61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer59, firstPollOffsetStrategyEnumSerializableDeserializer60, pattern61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig63 = kafkaSpoutRetryServiceBuilder62.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer64 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator65 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getTranslator();
        int int66 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator67 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getTranslator();
        org.apache.storm.tuple.Fields fields68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator67, fields68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder29.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer74 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer75 = null;
        java.util.regex.Pattern pattern76 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder77 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer74, firstPollOffsetStrategyEnumSerializableDeserializer75, pattern76);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig78 = kafkaSpoutRetryServiceBuilder77.build();
        boolean boolean79 = kafkaSpoutRetryServiceKafkaSpoutConfig78.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy80 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService81 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getRetryService();
        boolean boolean82 = kafkaSpoutRetryServiceKafkaSpoutConfig78.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator83 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getTranslator();
        org.apache.storm.tuple.Fields fields84 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder72.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator83, fields84, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder90 = kafkaSpoutRetryServiceBuilder86.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder94 = kafkaSpoutRetryServiceBuilder86.setSSLKeystore("", "hi!", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig21);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy44 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy44.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig63);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 10000000 + "'", int66 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy80 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy80.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder94);
    }

    @Test
    public void test05315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05315");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setPartitionRefreshPeriodMs((long) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, firstPollOffsetStrategyEnumSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig32 = kafkaSpoutRetryServiceBuilder31.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer33 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator34 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer35 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getKeyDeserializer();
        java.lang.String str36 = kafkaSpoutRetryServiceKafkaSpoutConfig32.toString();
        java.lang.String str37 = kafkaSpoutRetryServiceKafkaSpoutConfig32.toString();
        int int38 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getMaxUncommittedOffsets();
        long long39 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getPartitionRefreshPeriodMs();
        long long40 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy41 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getFirstPollOffsetStrategy();
        long long42 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription43 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder24.setProp(strMap44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig32);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator34);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10000000 + "'", int38 == 10000000);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 2000L + "'", long39 == 2000L);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 200L + "'", long40 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy41 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy41.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 2000L + "'", long42 == 2000L);
        org.junit.Assert.assertNotNull(subscription43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
    }

    @Test
    public void test05316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05316");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        boolean boolean9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.Subscription subscription10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(subscription10);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
    }

    @Test
    public void test05317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05317");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setPollTimeoutMs(2000L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setFetchMinBytes(0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
    }

    @Test
    public void test05318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05318");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) 'a');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer9 = null;
        java.util.regex.Pattern pattern10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer8, firstPollOffsetStrategyEnumSerializableDeserializer9, pattern10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig12 = kafkaSpoutRetryServiceBuilder11.build();
        boolean boolean13 = kafkaSpoutRetryServiceKafkaSpoutConfig12.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = kafkaSpoutRetryServiceKafkaSpoutConfig12.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = kafkaSpoutRetryServiceKafkaSpoutConfig12.getRetryService();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig12.isConsumerAutoCommitMode();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig12.getPollTimeoutMs();
        org.apache.storm.kafka.spout.Subscription subscription18 = kafkaSpoutRetryServiceKafkaSpoutConfig12.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = kafkaSpoutRetryServiceKafkaSpoutConfig12.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder6.setProp(strMap19);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, firstPollOffsetStrategyEnumSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder26.build();
        boolean boolean28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService30 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getRetryService();
        boolean boolean31 = kafkaSpoutRetryServiceKafkaSpoutConfig27.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.Subscription subscription32 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer33 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getValueDeserializer();
        java.lang.String str34 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getConsumerGroupId();
        org.apache.storm.kafka.spout.Subscription subscription35 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder20.setProp("hi!", (java.lang.Object) subscription35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder20.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder20.setFetchMinBytes((int) (byte) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 200L + "'", long17 == 200L);
        org.junit.Assert.assertNotNull(subscription18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy29 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy29.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(subscription32);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(subscription35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
    }

    @Test
    public void test05319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05319");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer8 = null;
        java.util.regex.Pattern pattern9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, firstPollOffsetStrategyEnumSerializableDeserializer8, pattern9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig19 = kafkaSpoutRetryServiceBuilder16.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getRetryService();
        long long21 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService22 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getRetryService();
        long long23 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getPollTimeoutMs();
        org.apache.storm.kafka.spout.Subscription subscription24 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, org.apache.storm.kafka.spout.Subscription> firstPollOffsetStrategyBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, org.apache.storm.kafka.spout.Subscription>("hi!", firstPollOffsetStrategySerializableDeserializer4, subscriptionSerializableDeserializer5, subscription24);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.lang.reflect.GenericDeclaration> kafkaSpoutRetryServiceKafkaSpoutConfigBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.lang.reflect.GenericDeclaration>("", kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer1, genericDeclarationSerializableDeserializer2, subscription24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10L + "'", long21 == 10L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 200L + "'", long23 == 200L);
        org.junit.Assert.assertNotNull(subscription24);
    }

    @Test
    public void test05320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05320");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder14.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer21 = null;
        java.util.regex.Pattern pattern22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, firstPollOffsetStrategyEnumSerializableDeserializer21, pattern22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder25.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer32 = null;
        java.util.regex.Pattern pattern33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer31, firstPollOffsetStrategyEnumSerializableDeserializer32, pattern33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig35 = kafkaSpoutRetryServiceBuilder34.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer36 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator37 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder25.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder25.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder25.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, firstPollOffsetStrategyEnumSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder52.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder56.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig59 = kafkaSpoutRetryServiceBuilder56.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder56.setMaxUncommittedOffsets(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig62 = kafkaSpoutRetryServiceBuilder61.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer63 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder25.setProp(strMap64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder14.setProp(strMap64);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer68 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer69 = null;
        java.util.regex.Pattern pattern70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder71 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer68, firstPollOffsetStrategyEnumSerializableDeserializer69, pattern70);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig72 = kafkaSpoutRetryServiceBuilder71.build();
        boolean boolean73 = kafkaSpoutRetryServiceKafkaSpoutConfig72.isConsumerAutoCommitMode();
        int int74 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy75 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy76 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator77 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getTranslator();
        org.apache.storm.tuple.Fields fields78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder14.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator77, fields78);
        java.util.Properties properties80 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder79.setProp(properties80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig35);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig62);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 10000000 + "'", int74 == 10000000);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy75 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy75.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy76 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy76.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
    }

    @Test
    public void test05321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05321");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        long long11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        int int12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 200L + "'", long11 == 200L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 30000L + "'", long14 == 30000L);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer15);
    }

    @Test
    public void test05322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05322");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        java.lang.String str9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        java.lang.String str10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        int int11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10000000 + "'", int11 == 10000000);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer16);
    }

    @Test
    public void test05323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05323");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10000000 + "'", int9 == 10000000);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy10 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy10.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
    }

    @Test
    public void test05324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05324");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        java.lang.String str11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        int int13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10000000 + "'", int9 == 10000000);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy10 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy10.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2000L + "'", long12 == 2000L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10000000 + "'", int13 == 10000000);
    }

    @Test
    public void test05325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05325");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, firstPollOffsetStrategyEnumSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig20 = kafkaSpoutRetryServiceBuilder19.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer21 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator22 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator23 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getTranslator();
        int int24 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder12.setProp(strMap25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder12.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, firstPollOffsetStrategyEnumSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, firstPollOffsetStrategyEnumSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig45 = kafkaSpoutRetryServiceBuilder44.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer46 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator47 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getTranslator();
        org.apache.storm.tuple.Fields fields48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator47, fields48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setOffsetCommitPeriodMs((long) 'a');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer53 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer54 = null;
        java.util.regex.Pattern pattern55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder56 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer53, firstPollOffsetStrategyEnumSerializableDeserializer54, pattern55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig57 = kafkaSpoutRetryServiceBuilder56.build();
        boolean boolean58 = kafkaSpoutRetryServiceKafkaSpoutConfig57.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy59 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService60 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getRetryService();
        boolean boolean61 = kafkaSpoutRetryServiceKafkaSpoutConfig57.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator62 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator62);
        org.apache.storm.tuple.Fields fields64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator62, fields64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder30.setMaxPollRecords((int) (byte) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig20);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10000000 + "'", int24 == 10000000);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig45);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy59 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy59.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
    }

    @Test
    public void test05326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05326");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        boolean boolean9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        long long10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        int int11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        boolean boolean13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2000L + "'", long10 == 2000L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10000000 + "'", int11 == 10000000);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2000L + "'", long12 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test05327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05327");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> firstPollOffsetStrategyEnumBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>>("hi!", firstPollOffsetStrategyEnumSerializableDeserializer9, kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer10, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.String[]> firstPollOffsetStrategyBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.String[]>("hi!", firstPollOffsetStrategySerializableDeserializer6, strArraySerializableDeserializer7, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setPartitionRefreshPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setFetchMinBytes(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, firstPollOffsetStrategyEnumSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, firstPollOffsetStrategyEnumSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig39 = kafkaSpoutRetryServiceBuilder38.build();
        boolean boolean40 = kafkaSpoutRetryServiceKafkaSpoutConfig39.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy41 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService42 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getRetryService();
        boolean boolean43 = kafkaSpoutRetryServiceKafkaSpoutConfig39.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder33.setProp(strMap45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer53 = null;
        java.util.regex.Pattern pattern54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer52, firstPollOffsetStrategyEnumSerializableDeserializer53, pattern54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig56 = kafkaSpoutRetryServiceBuilder55.build();
        boolean boolean57 = kafkaSpoutRetryServiceKafkaSpoutConfig56.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy58 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService59 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getRetryService();
        boolean boolean60 = kafkaSpoutRetryServiceKafkaSpoutConfig56.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator61 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getTranslator();
        java.lang.String str62 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getConsumerGroupId();
        boolean boolean63 = kafkaSpoutRetryServiceKafkaSpoutConfig56.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer64 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getKeyDeserializer();
        java.lang.String str65 = kafkaSpoutRetryServiceKafkaSpoutConfig56.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService66 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder50.setRetry(kafkaSpoutRetryService66);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder24.setRetry(kafkaSpoutRetryService66);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy41 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy41.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy58 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy58.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
    }

    @Test
    public void test05328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05328");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        boolean boolean9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        long long10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        org.apache.storm.kafka.spout.Subscription subscription11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 200L + "'", long10 == 200L);
        org.junit.Assert.assertNotNull(subscription11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator14);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2000L + "'", long16 == 2000L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
    }

    @Test
    public void test05329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05329");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, firstPollOffsetStrategyEnumSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder25.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder6.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setMaxPollRecords((int) (short) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, firstPollOffsetStrategyEnumSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder44.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder44.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder44.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer53 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer54 = null;
        java.util.regex.Pattern pattern55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder56 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer53, firstPollOffsetStrategyEnumSerializableDeserializer54, pattern55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder56.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder58.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder62.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder62.setMaxRetries((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer68 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer69 = null;
        java.util.regex.Pattern pattern70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder71 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer68, firstPollOffsetStrategyEnumSerializableDeserializer69, pattern70);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig72 = kafkaSpoutRetryServiceBuilder71.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer73 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator74 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getTranslator();
        int int75 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator76 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getTranslator();
        org.apache.storm.tuple.Fields fields77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator76, fields77, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig80 = kafkaSpoutRetryServiceBuilder62.build();
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy82 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder44.setFirstPollOffsetStrategy(firstPollOffsetStrategy82);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder33.setFirstPollOffsetStrategy(firstPollOffsetStrategy82);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder33.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder88 = kafkaSpoutRetryServiceBuilder33.setMaxUncommittedOffsets((int) (short) 1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig72);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 10000000 + "'", int75 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy82 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy82.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder88);
    }

    @Test
    public void test05330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05330");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        long long11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        boolean boolean13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 200L + "'", long11 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test05331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05331");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        int int12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10000000 + "'", int12 == 10000000);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 30000L + "'", long13 == 30000L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 30000L + "'", long14 == 30000L);
    }

    @Test
    public void test05332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05332");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        long long10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 30000L + "'", long10 == 30000L);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2000L + "'", long12 == 2000L);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 200L + "'", long17 == 200L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 30000L + "'", long19 == 30000L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 200L + "'", long20 == 200L);
    }

    @Test
    public void test05333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05333");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder8.build();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getPartitionRefreshPeriodMs();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test05334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05334");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, firstPollOffsetStrategyEnumSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig23 = kafkaSpoutRetryServiceBuilder22.build();
        boolean boolean24 = kafkaSpoutRetryServiceKafkaSpoutConfig23.isConsumerAutoCommitMode();
        int int25 = kafkaSpoutRetryServiceKafkaSpoutConfig23.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer26 = kafkaSpoutRetryServiceKafkaSpoutConfig23.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = kafkaSpoutRetryServiceKafkaSpoutConfig23.getKafkaProps();
        int int28 = kafkaSpoutRetryServiceKafkaSpoutConfig23.getMaxTupleRetries();
        java.lang.String str29 = kafkaSpoutRetryServiceKafkaSpoutConfig23.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService30 = kafkaSpoutRetryServiceKafkaSpoutConfig23.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder15.setRetry(kafkaSpoutRetryService30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords((int) 'a');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, firstPollOffsetStrategyEnumSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig39 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer40 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator41 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator42 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getTranslator();
        org.apache.storm.tuple.Fields fields43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator42, fields43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setFetchMinBytes((int) (byte) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10000000 + "'", int25 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2147483647 + "'", int28 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig39);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
    }

    @Test
    public void test05335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05335");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        java.lang.String str11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        boolean boolean13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10000000 + "'", int9 == 10000000);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy10 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy10.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 30000L + "'", long16 == 30000L);
    }

    @Test
    public void test05336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05336");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer18 = null;
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer17, randomAccessSerializableDeserializer18, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutRetryService> strCollectionBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutRetryService>("hi!", strCollectionSerializableDeserializer14, kafkaSpoutRetryServiceSerializableDeserializer15, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer11, firstPollOffsetStrategyEnumSerializableDeserializer12, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer8, firstPollOffsetStrategyEnumSerializableDeserializer9, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.util.RandomAccess> firstPollOffsetStrategyBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.util.RandomAccess>("hi!", firstPollOffsetStrategySerializableDeserializer5, randomAccessSerializableDeserializer6, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer2, firstPollOffsetStrategyEnumSerializableDeserializer3, strArray20);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray20);
    }

    @Test
    public void test05337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05337");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, firstPollOffsetStrategyEnumSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig23 = kafkaSpoutRetryServiceBuilder22.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, firstPollOffsetStrategyEnumSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig36 = kafkaSpoutRetryServiceBuilder35.build();
        boolean boolean37 = kafkaSpoutRetryServiceKafkaSpoutConfig36.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService39 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getRetryService();
        boolean boolean40 = kafkaSpoutRetryServiceKafkaSpoutConfig36.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder30.setProp(strMap41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setMaxUncommittedOffsets(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy45 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setFirstPollOffsetStrategy(firstPollOffsetStrategy45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder17.setFirstPollOffsetStrategy(firstPollOffsetStrategy45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder17.build();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy45 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy45.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
    }

    @Test
    public void test05338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05338");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder8.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getRetryService();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig13.toString();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getPartitionRefreshPeriodMs();
        boolean boolean17 = kafkaSpoutRetryServiceKafkaSpoutConfig13.isConsumerAutoCommitMode();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig13.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2000L + "'", long16 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test05339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05339");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder10.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        boolean boolean15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test05340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05340");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder19.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, firstPollOffsetStrategyEnumSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder37.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder37.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer45 = null;
        java.util.regex.Pattern pattern46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer44, firstPollOffsetStrategyEnumSerializableDeserializer45, pattern46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder47.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder47.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer58 = null;
        java.util.regex.Pattern pattern59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer57, firstPollOffsetStrategyEnumSerializableDeserializer58, pattern59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig61 = kafkaSpoutRetryServiceBuilder60.build();
        boolean boolean62 = kafkaSpoutRetryServiceKafkaSpoutConfig61.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy63 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService64 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getRetryService();
        boolean boolean65 = kafkaSpoutRetryServiceKafkaSpoutConfig61.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder55.setProp(strMap66);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder37.setProp(strMap66);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig69 = kafkaSpoutRetryServiceBuilder68.build();
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder24.setProp(strMap70);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder71.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder73.setPollTimeoutMs((long) 1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy63 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy63.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
    }

    @Test
    public void test05341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05341");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer14 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, firstPollOffsetStrategyEnumSerializableDeserializer14, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer9, firstPollOffsetStrategyEnumSerializableDeserializer10, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> randomAccessBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", randomAccessSerializableDeserializer6, firstPollOffsetStrategyEnumSerializableDeserializer7, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Cloneable> strListBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Cloneable>("hi!", strListSerializableDeserializer3, cloneableSerializableDeserializer4, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        java.lang.Class<?> wildcardClass26 = strList17.getClass();
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test05342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05342");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer9);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2000L + "'", long14 == 2000L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test05343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05343");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder10.setPartitionRefreshPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setMaxRetries((int) 'a');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
    }

    @Test
    public void test05344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05344");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig8 = kafkaSpoutRetryServiceBuilder7.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer9 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator10 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer11 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getKeyDeserializer();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig8.toString();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig8.toString();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getMaxUncommittedOffsets();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getPartitionRefreshPeriodMs();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getFirstPollOffsetStrategy();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getPollTimeoutMs();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getConsumerGroupId();
        org.apache.storm.kafka.spout.Subscription subscription20 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.lang.Object> strCollectionBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.lang.Object>("", strCollectionSerializableDeserializer1, objSerializableDeserializer2, subscription20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig8);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator10);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10000000 + "'", int14 == 10000000);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2000L + "'", long15 == 2000L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(subscription20);
    }

    @Test
    public void test05345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05345");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder19.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder19.setMaxRetries((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setFetchMinBytes(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder30.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, firstPollOffsetStrategyEnumSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig40 = kafkaSpoutRetryServiceBuilder39.build();
        boolean boolean41 = kafkaSpoutRetryServiceKafkaSpoutConfig40.isConsumerAutoCommitMode();
        java.lang.String str42 = kafkaSpoutRetryServiceKafkaSpoutConfig40.toString();
        java.lang.String str43 = kafkaSpoutRetryServiceKafkaSpoutConfig40.toString();
        java.lang.String str44 = kafkaSpoutRetryServiceKafkaSpoutConfig40.toString();
        java.lang.String str45 = kafkaSpoutRetryServiceKafkaSpoutConfig40.toString();
        int int46 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator47 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder30.setProp("", (java.lang.Object) kafkaSpoutRetryServiceRecordTranslator47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder30.setBootstrapServers("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10000000 + "'", int46 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
    }

    @Test
    public void test05346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05346");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder17.build();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig18.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService21 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getRetryService();
        boolean boolean22 = kafkaSpoutRetryServiceKafkaSpoutConfig18.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder12.setProp(strMap23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setSSLKeystore("", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setMaxPartitionFectchBytes((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig33 = kafkaSpoutRetryServiceBuilder32.build();
        org.apache.storm.kafka.spout.Subscription subscription34 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getSubscription();
        long long35 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getOffsetsCommitPeriodMs();
        int int36 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig33);
        org.junit.Assert.assertNotNull(subscription34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 30000L + "'", long35 == 30000L);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10000000 + "'", int36 == 10000000);
    }

    @Test
    public void test05347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05347");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder7.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder11.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, firstPollOffsetStrategyEnumSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig21 = kafkaSpoutRetryServiceBuilder20.build();
        boolean boolean22 = kafkaSpoutRetryServiceKafkaSpoutConfig21.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy23 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder11.setFirstPollOffsetStrategy(firstPollOffsetStrategy23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder11.setMaxPollRecords((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder28.build();
        org.apache.storm.kafka.spout.Subscription subscription32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, subscription32);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, firstPollOffsetStrategyEnumSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig39 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer40 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator41 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer42 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getKeyDeserializer();
        java.lang.String str43 = kafkaSpoutRetryServiceKafkaSpoutConfig39.toString();
        java.lang.String str44 = kafkaSpoutRetryServiceKafkaSpoutConfig39.toString();
        int int45 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription46 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator48 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder33.setProp(strMap49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder33.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService52 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getRetryService();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy23 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy23.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(subscription32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig39);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator41);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10000000 + "'", int45 == 10000000);
        org.junit.Assert.assertNotNull(subscription46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService52);
    }

    @Test
    public void test05348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05348");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder17.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, firstPollOffsetStrategyEnumSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder28.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder28.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, firstPollOffsetStrategyEnumSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, firstPollOffsetStrategyEnumSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setFirstPollOffsetStrategy(firstPollOffsetStrategy49);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer53 = null;
        java.util.regex.Pattern pattern54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer52, firstPollOffsetStrategyEnumSerializableDeserializer53, pattern54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig56 = kafkaSpoutRetryServiceBuilder55.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer57 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator58 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getTranslator();
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator58, fields59, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator58, fields63, "");
        org.apache.storm.tuple.Fields fields66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator58, fields66, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder12.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder12.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder12.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer77 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer78 = null;
        java.util.regex.Pattern pattern79 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder80 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer77, firstPollOffsetStrategyEnumSerializableDeserializer78, pattern79);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig81 = kafkaSpoutRetryServiceBuilder80.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService82 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder75.setRetry(kafkaSpoutRetryService82);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder83.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder90 = kafkaSpoutRetryServiceBuilder87.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder92 = kafkaSpoutRetryServiceBuilder87.setPartitionRefreshPeriodMs((long) 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy49 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy49.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig56);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder92);
    }

    @Test
    public void test05349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05349");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder12.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, firstPollOffsetStrategyEnumSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder27.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer29 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer31 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getKeyDeserializer();
        java.lang.String str32 = kafkaSpoutRetryServiceKafkaSpoutConfig28.toString();
        java.lang.String str33 = kafkaSpoutRetryServiceKafkaSpoutConfig28.toString();
        int int34 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getMaxUncommittedOffsets();
        long long35 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getPartitionRefreshPeriodMs();
        long long36 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getPollTimeoutMs();
        org.apache.storm.kafka.spout.Subscription subscription37 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getSubscription();
        long long38 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getPartitionRefreshPeriodMs();
        int int39 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getMaxTupleRetries();
        org.apache.storm.kafka.spout.Subscription subscription40 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription41 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder17.setProp("hi!", (java.lang.Object) subscription41);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer45 = null;
        java.util.regex.Pattern pattern46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer44, firstPollOffsetStrategyEnumSerializableDeserializer45, pattern46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder49.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer61 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer62 = null;
        java.util.regex.Pattern pattern63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer61, firstPollOffsetStrategyEnumSerializableDeserializer62, pattern63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder66.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder70.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig73 = kafkaSpoutRetryServiceBuilder70.build();
        boolean boolean74 = kafkaSpoutRetryServiceKafkaSpoutConfig73.isConsumerAutoCommitMode();
        java.lang.String str75 = kafkaSpoutRetryServiceKafkaSpoutConfig73.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator76 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getTranslator();
        long long77 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getPollTimeoutMs();
        boolean boolean78 = kafkaSpoutRetryServiceKafkaSpoutConfig73.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService79 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder59.setRetry(kafkaSpoutRetryService79);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder42.setRetry(kafkaSpoutRetryService79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10000000 + "'", int34 == 10000000);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 2000L + "'", long35 == 2000L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 200L + "'", long36 == 200L);
        org.junit.Assert.assertNotNull(subscription37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 2000L + "'", long38 == 2000L);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2147483647 + "'", int39 == 2147483647);
        org.junit.Assert.assertNotNull(subscription40);
        org.junit.Assert.assertNotNull(subscription41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 200L + "'", long77 == 200L);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
    }

    @Test
    public void test05350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05350");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        long long9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        boolean boolean10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        java.lang.String str11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 2000L + "'", long9 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 30000L + "'", long13 == 30000L);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
    }

    @Test
    public void test05351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05351");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.ArrayList<java.lang.String>> strComparableBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.ArrayList<java.lang.String>>("", strComparableSerializableDeserializer1, strListSerializableDeserializer2, pattern3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test05352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05352");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, firstPollOffsetStrategyEnumSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder26.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder26.setRetry(kafkaSpoutRetryService32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder15.setRetry(kafkaSpoutRetryService32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder15.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, firstPollOffsetStrategyEnumSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig45 = kafkaSpoutRetryServiceBuilder44.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer46 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator47 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer48 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getKeyDeserializer();
        java.lang.String str49 = kafkaSpoutRetryServiceKafkaSpoutConfig45.toString();
        java.lang.String str50 = kafkaSpoutRetryServiceKafkaSpoutConfig45.toString();
        int int51 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getMaxUncommittedOffsets();
        long long52 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService53 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder39.setRetry(kafkaSpoutRetryService53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder39.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setMaxUncommittedOffsets((-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer62 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer63 = null;
        java.util.regex.Pattern pattern64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder65 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer62, firstPollOffsetStrategyEnumSerializableDeserializer63, pattern64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig66 = kafkaSpoutRetryServiceBuilder65.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer67 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator68 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator69 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getTranslator();
        int int70 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getMaxUncommittedOffsets();
        java.lang.String str71 = kafkaSpoutRetryServiceKafkaSpoutConfig66.toString();
        java.lang.String str72 = kafkaSpoutRetryServiceKafkaSpoutConfig66.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer73 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer74 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator75 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig45);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator47);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 10000000 + "'", int51 == 10000000);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 30000L + "'", long52 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig66);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 10000000 + "'", int70 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer73);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
    }

    @Test
    public void test05353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05353");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setMaxRetries((int) (byte) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
    }

    @Test
    public void test05354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05354");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        boolean boolean11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        boolean boolean12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
    }

    @Test
    public void test05355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05355");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer8 = null;
        java.util.regex.Pattern pattern9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, firstPollOffsetStrategyEnumSerializableDeserializer8, pattern9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder10.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder14.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig19 = kafkaSpoutRetryServiceBuilder14.build();
        java.lang.String str20 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getConsumerGroupId();
        long long21 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getPollTimeoutMs();
        long long22 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getPartitionRefreshPeriodMs();
        java.lang.String str23 = kafkaSpoutRetryServiceKafkaSpoutConfig19.toString();
        org.apache.storm.kafka.spout.Subscription subscription24 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, subscription24);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, subscription24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 200L + "'", long21 == 200L);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 2000L + "'", long22 == 2000L);
        org.junit.Assert.assertNotNull(subscription24);
    }

    @Test
    public void test05356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05356");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setFirstPollOffsetStrategy(firstPollOffsetStrategy22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder28.setMaxPartitionFectchBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setMaxUncommittedOffsets(0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
    }

    @Test
    public void test05357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05357");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig8 = kafkaSpoutRetryServiceBuilder7.build();
        boolean boolean9 = kafkaSpoutRetryServiceKafkaSpoutConfig8.isConsumerAutoCommitMode();
        java.lang.String str10 = kafkaSpoutRetryServiceKafkaSpoutConfig8.toString();
        java.lang.String str11 = kafkaSpoutRetryServiceKafkaSpoutConfig8.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.util.List<java.lang.String>> strListBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.util.List<java.lang.String>>("hi!", strListSerializableDeserializer1, strListSerializableDeserializer2, subscription14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer13);
        org.junit.Assert.assertNotNull(subscription14);
    }

    @Test
    public void test05358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05358");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] {};
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, firstPollOffsetStrategyEnumSerializableDeserializer6, strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer2, firstPollOffsetStrategyEnumSerializableDeserializer3, strArray9);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test05359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05359");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setFetchMinBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder14.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer21 = null;
        java.util.regex.Pattern pattern22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, firstPollOffsetStrategyEnumSerializableDeserializer21, pattern22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder25.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder25.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, firstPollOffsetStrategyEnumSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder40.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig47 = kafkaSpoutRetryServiceBuilder44.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder25.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder44);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer52 = null;
        java.util.regex.Pattern pattern53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer51, firstPollOffsetStrategyEnumSerializableDeserializer52, pattern53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig55 = kafkaSpoutRetryServiceBuilder54.build();
        boolean boolean56 = kafkaSpoutRetryServiceKafkaSpoutConfig55.isConsumerAutoCommitMode();
        int int57 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer58 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder44.setProp("", (java.lang.Object) kafkaSpoutRetryServiceKafkaSpoutConfig55);
        java.lang.String str61 = kafkaSpoutRetryServiceKafkaSpoutConfig55.toString();
        java.lang.String str62 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getConsumerGroupId();
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder14.setProp(strMap63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10000000 + "'", int57 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
    }

    @Test
    public void test05360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05360");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer10 = null;
        java.util.regex.Pattern pattern11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer9, firstPollOffsetStrategyEnumSerializableDeserializer10, pattern11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder12.build();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig13.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator15 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceRecordTranslator15);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setMaxRetries((int) (byte) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
    }

    @Test
    public void test05361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05361");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        java.lang.String str10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        java.lang.String str11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        org.apache.storm.kafka.spout.Subscription subscription12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        int int13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        java.lang.Class<?> wildcardClass20 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10000000 + "'", int9 == 10000000);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10000000 + "'", int13 == 10000000);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2000L + "'", long14 == 2000L);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer18);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy19 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy19.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test05362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05362");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setPartitionRefreshPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder23.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, firstPollOffsetStrategyEnumSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy40 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setFirstPollOffsetStrategy(firstPollOffsetStrategy40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, firstPollOffsetStrategyEnumSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setFirstPollOffsetStrategy(firstPollOffsetStrategy53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder43.setFirstPollOffsetStrategy(firstPollOffsetStrategy53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setMaxPartitionFectchBytes((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder55.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder55.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder55.setMaxPollRecords(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder23.setProp("hi!", (java.lang.Object) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy40 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy40.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy53 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy53.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
    }

    @Test
    public void test05363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05363");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig8 = kafkaSpoutRetryServiceBuilder7.build();
        boolean boolean9 = kafkaSpoutRetryServiceKafkaSpoutConfig8.isConsumerAutoCommitMode();
        java.lang.String str10 = kafkaSpoutRetryServiceKafkaSpoutConfig8.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator11 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getTranslator();
        boolean boolean12 = kafkaSpoutRetryServiceKafkaSpoutConfig8.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.Subscription subscription13 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, subscription15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setPartitionRefreshPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setPartitionRefreshPeriodMs((long) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, firstPollOffsetStrategyEnumSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig30 = kafkaSpoutRetryServiceBuilder29.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer31 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator32 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer33 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getKeyDeserializer();
        java.lang.String str34 = kafkaSpoutRetryServiceKafkaSpoutConfig30.toString();
        org.apache.storm.kafka.spout.Subscription subscription35 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription36 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getSubscription();
        long long37 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator38 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getTranslator();
        long long39 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder24.setProp(strMap40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(subscription13);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer14);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig30);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator32);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer33);
        org.junit.Assert.assertNotNull(subscription35);
        org.junit.Assert.assertNotNull(subscription36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 30000L + "'", long37 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 200L + "'", long39 == 200L);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
    }

    @Test
    public void test05364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05364");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder17.build();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig18.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService21 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getRetryService();
        boolean boolean22 = kafkaSpoutRetryServiceKafkaSpoutConfig18.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder12.setProp(strMap23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setMaxUncommittedOffsets(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, firstPollOffsetStrategyEnumSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer38 = null;
        java.util.regex.Pattern pattern39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer37, firstPollOffsetStrategyEnumSerializableDeserializer38, pattern39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig41 = kafkaSpoutRetryServiceBuilder40.build();
        boolean boolean42 = kafkaSpoutRetryServiceKafkaSpoutConfig41.isConsumerAutoCommitMode();
        int int43 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer44 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder35.setProp(strMap45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder24.setProp(strMap45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setMaxRetries(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder49.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder49.setFetchMinBytes((int) (byte) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10000000 + "'", int43 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
    }

    @Test
    public void test05365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05365");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder17.build();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig18.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder8.setMaxPollRecords((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, firstPollOffsetStrategyEnumSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder34.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder34.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, firstPollOffsetStrategyEnumSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder50.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder56.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer60 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer61 = null;
        java.util.regex.Pattern pattern62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder63 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer60, firstPollOffsetStrategyEnumSerializableDeserializer61, pattern62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig64 = kafkaSpoutRetryServiceBuilder63.build();
        boolean boolean65 = kafkaSpoutRetryServiceKafkaSpoutConfig64.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy66 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService67 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getRetryService();
        boolean boolean68 = kafkaSpoutRetryServiceKafkaSpoutConfig64.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder58.setProp(strMap69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder70.setMaxUncommittedOffsets(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy73 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder72.setFirstPollOffsetStrategy(firstPollOffsetStrategy73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder45.setFirstPollOffsetStrategy(firstPollOffsetStrategy73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder27.setFirstPollOffsetStrategy(firstPollOffsetStrategy73);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer78 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer79 = null;
        java.util.regex.Pattern pattern80 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder81 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer78, firstPollOffsetStrategyEnumSerializableDeserializer79, pattern80);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig82 = kafkaSpoutRetryServiceBuilder81.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer83 = kafkaSpoutRetryServiceKafkaSpoutConfig82.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator84 = kafkaSpoutRetryServiceKafkaSpoutConfig82.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator85 = kafkaSpoutRetryServiceKafkaSpoutConfig82.getTranslator();
        int int86 = kafkaSpoutRetryServiceKafkaSpoutConfig82.getMaxUncommittedOffsets();
        long long87 = kafkaSpoutRetryServiceKafkaSpoutConfig82.getPartitionRefreshPeriodMs();
        long long88 = kafkaSpoutRetryServiceKafkaSpoutConfig82.getPartitionRefreshPeriodMs();
        java.lang.String str89 = kafkaSpoutRetryServiceKafkaSpoutConfig82.toString();
        long long90 = kafkaSpoutRetryServiceKafkaSpoutConfig82.getOffsetsCommitPeriodMs();
        int int91 = kafkaSpoutRetryServiceKafkaSpoutConfig82.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer92 = kafkaSpoutRetryServiceKafkaSpoutConfig82.getKeyDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap93 = kafkaSpoutRetryServiceKafkaSpoutConfig82.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder94 = kafkaSpoutRetryServiceBuilder76.setProp(strMap93);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy66 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy66.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy73 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy73.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig82);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 10000000 + "'", int86 == 10000000);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 2000L + "'", long87 == 2000L);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 2000L + "'", long88 == 2000L);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 30000L + "'", long90 == 30000L);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 10000000 + "'", int91 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer92);
        org.junit.Assert.assertNotNull(strMap93);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder94);
    }

    @Test
    public void test05366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05366");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig8 = kafkaSpoutRetryServiceBuilder7.build();
        boolean boolean9 = kafkaSpoutRetryServiceKafkaSpoutConfig8.isConsumerAutoCommitMode();
        java.lang.String str10 = kafkaSpoutRetryServiceKafkaSpoutConfig8.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator11 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getTranslator();
        boolean boolean12 = kafkaSpoutRetryServiceKafkaSpoutConfig8.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.Subscription subscription13 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, subscription15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder16.build();
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer21 = null;
        java.util.regex.Pattern pattern22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, firstPollOffsetStrategyEnumSerializableDeserializer21, pattern22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig24 = kafkaSpoutRetryServiceBuilder23.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer25 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator26 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer27 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getKeyDeserializer();
        java.lang.String str28 = kafkaSpoutRetryServiceKafkaSpoutConfig24.toString();
        java.lang.String str29 = kafkaSpoutRetryServiceKafkaSpoutConfig24.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer30 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer31 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getValueDeserializer();
        java.lang.String str32 = kafkaSpoutRetryServiceKafkaSpoutConfig24.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder16.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceKafkaSpoutConfig24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder16.setFetchMinBytes((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder16.setMaxRetries((int) (byte) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(subscription13);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer14);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig24);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator26);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer27);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer30);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer31);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
    }

    @Test
    public void test05367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05367");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        int int11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        boolean boolean15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10000000 + "'", int11 == 10000000);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test05368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05368");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, firstPollOffsetStrategyEnumSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy14);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, firstPollOffsetStrategyEnumSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig21 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer22 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator23 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getTranslator();
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setOffsetCommitPeriodMs((long) (short) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, firstPollOffsetStrategyEnumSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setFirstPollOffsetStrategy(firstPollOffsetStrategy47);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer50 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer51 = null;
        java.util.regex.Pattern pattern52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer50, firstPollOffsetStrategyEnumSerializableDeserializer51, pattern52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig54 = kafkaSpoutRetryServiceBuilder53.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer55 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator56 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getTranslator();
        org.apache.storm.tuple.Fields fields57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator56, fields57, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setOffsetCommitPeriodMs((long) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setMaxUncommittedOffsets(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder61.setMaxUncommittedOffsets((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder61.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer71 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer72 = null;
        java.util.regex.Pattern pattern73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder74 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer71, firstPollOffsetStrategyEnumSerializableDeserializer72, pattern73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder74.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder74.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder78.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig83 = kafkaSpoutRetryServiceBuilder78.build();
        java.lang.String str84 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getConsumerGroupId();
        long long85 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getPollTimeoutMs();
        long long86 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer87 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator88 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder69.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator88);
        org.apache.storm.tuple.Fields fields90 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator88, fields90);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder91.setOffsetCommitPeriodMs((long) (short) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig21);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy47 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy47.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig54);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 200L + "'", long85 == 200L);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 2000L + "'", long86 == 2000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
    }

    @Test
    public void test05369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05369");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder12.setOffsetCommitPeriodMs(100L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig19 = kafkaSpoutRetryServiceBuilder12.build();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2147483647 + "'", int20 == 2147483647);
    }

    @Test
    public void test05370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05370");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer5 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, org.apache.storm.kafka.spout.Subscription> kafkaSpoutRetryServiceBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, org.apache.storm.kafka.spout.Subscription>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, subscriptionSerializableDeserializer5, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setFetchMinBytes(100);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc20 = null;
        org.apache.storm.tuple.Fields fields21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc20, fields21);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, firstPollOffsetStrategyEnumSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder27.build();
        boolean boolean29 = kafkaSpoutRetryServiceKafkaSpoutConfig28.isConsumerAutoCommitMode();
        int int30 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getMaxUncommittedOffsets();
        long long31 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer32 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder22.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder34.setSSLKeystore("", "hi!");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10000000 + "'", int30 == 10000000);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 30000L + "'", long31 == 30000L);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
    }

    @Test
    public void test05371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05371");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer8 = null;
        java.util.regex.Pattern pattern9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, firstPollOffsetStrategyEnumSerializableDeserializer8, pattern9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder10.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.apache.storm.kafka.spout.Subscription subscription16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.Map<java.lang.String, java.lang.Object>> kafkaSpoutRetryServiceKafkaSpoutConfigBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.Map<java.lang.String, java.lang.Object>>("hi!", kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer4, strMapSerializableDeserializer5, subscription17);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.util.Map<java.lang.String, java.lang.Object>> strMapBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.util.Map<java.lang.String, java.lang.Object>>("", strMapSerializableDeserializer1, strMapSerializableDeserializer2, subscription17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertNotNull(subscription16);
        org.junit.Assert.assertNotNull(subscription17);
    }

    @Test
    public void test05372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05372");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder12.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setMaxPollRecords(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder25.setSSLTruststore("", "hi!");
        java.util.Properties properties29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder25.setProp(properties29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
    }

    @Test
    public void test05373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05373");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder8.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getRetryService();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig13.toString();
        org.apache.storm.kafka.spout.Subscription subscription16 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getSubscription();
        boolean boolean17 = kafkaSpoutRetryServiceKafkaSpoutConfig13.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(subscription16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test05374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05374");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setMaxUncommittedOffsets(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setMaxUncommittedOffsets(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder22.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder22.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder29.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder29.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        java.lang.Class<?> wildcardClass35 = firstPollOffsetStrategy33.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test05375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05375");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder14.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
    }

    @Test
    public void test05376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05376");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer26 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, firstPollOffsetStrategyEnumSerializableDeserializer26, (java.util.Collection<java.lang.String>) strList29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type> subscriptionBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type>("hi!", subscriptionSerializableDeserializer22, typeSerializableDeserializer23, (java.util.Collection<java.lang.String>) strList29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, firstPollOffsetStrategyEnumSerializableDeserializer20, (java.util.Collection<java.lang.String>) strList29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, firstPollOffsetStrategyEnumSerializableDeserializer17, (java.util.Collection<java.lang.String>) strList29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, firstPollOffsetStrategyEnumSerializableDeserializer14, (java.util.Collection<java.lang.String>) strList29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>> strCollectionBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>>("hi!", strCollectionSerializableDeserializer10, strCollectionSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.reflect.AnnotatedElement> strBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.reflect.AnnotatedElement>("hi!", strSerializableDeserializer7, annotatedElementSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.String[]> strListBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.String[]>("hi!", strListSerializableDeserializer1, strArraySerializableDeserializer2, (java.util.Collection<java.lang.String>) strList29);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test05377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05377");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder19.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder19.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setPollTimeoutMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, firstPollOffsetStrategyEnumSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder41.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer50 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer51 = null;
        java.util.regex.Pattern pattern52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer50, firstPollOffsetStrategyEnumSerializableDeserializer51, pattern52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig54 = kafkaSpoutRetryServiceBuilder53.build();
        boolean boolean55 = kafkaSpoutRetryServiceKafkaSpoutConfig54.isConsumerAutoCommitMode();
        java.lang.String str56 = kafkaSpoutRetryServiceKafkaSpoutConfig54.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator57 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getTranslator();
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator57, fields58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setMaxUncommittedOffsets((int) (short) 0);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder61.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder61.setMaxPartitionFectchBytes((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer70 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer71 = null;
        java.util.regex.Pattern pattern72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder73 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer70, firstPollOffsetStrategyEnumSerializableDeserializer71, pattern72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig74 = kafkaSpoutRetryServiceBuilder73.build();
        boolean boolean75 = kafkaSpoutRetryServiceKafkaSpoutConfig74.isConsumerAutoCommitMode();
        java.lang.String str76 = kafkaSpoutRetryServiceKafkaSpoutConfig74.toString();
        java.lang.String str77 = kafkaSpoutRetryServiceKafkaSpoutConfig74.toString();
        java.lang.String str78 = kafkaSpoutRetryServiceKafkaSpoutConfig74.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer79 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator80 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator80);
        org.apache.storm.tuple.Fields fields82 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator80, fields82, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder84.setMaxPollRecords((int) (short) 0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
    }

    @Test
    public void test05378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05378");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder10.setMaxRetries((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder10.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setPollTimeoutMs((long) (byte) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, firstPollOffsetStrategyEnumSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setFirstPollOffsetStrategy(firstPollOffsetStrategy29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, firstPollOffsetStrategyEnumSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig36 = kafkaSpoutRetryServiceBuilder35.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer37 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator38 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getTranslator();
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setMaxPollRecords((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setFetchMinBytes(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder18.setProp("", (java.lang.Object) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy29 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy29.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig36);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
    }

    @Test
    public void test05379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05379");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setPartitionRefreshPeriodMs((long) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder21.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder26.build();
        int int28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getMaxUncommittedOffsets();
        boolean boolean29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService30 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getRetryService();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10000000 + "'", int28 == 10000000);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService30);
    }

    @Test
    public void test05380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05380");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer14 = null;
        java.util.regex.Pattern pattern15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, firstPollOffsetStrategyEnumSerializableDeserializer14, pattern15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder16.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder16.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder8.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder22);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, firstPollOffsetStrategyEnumSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, firstPollOffsetStrategyEnumSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig34 = kafkaSpoutRetryServiceBuilder33.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer35 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator36 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getTranslator();
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator36, fields37);
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator36, fields39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder47.build();
        java.lang.String str49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig34);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test05381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05381");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer9 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer8, randomAccessSerializableDeserializer9, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, firstPollOffsetStrategyEnumSerializableDeserializer6, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer2, firstPollOffsetStrategyEnumSerializableDeserializer3, strArray11);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test05382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05382");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        java.lang.String str9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        java.lang.String str10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        int int11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription18 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10000000 + "'", int11 == 10000000);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2000L + "'", long12 == 2000L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2000L + "'", long15 == 2000L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 30000L + "'", long17 == 30000L);
        org.junit.Assert.assertNotNull(subscription18);
    }

    @Test
    public void test05383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05383");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, firstPollOffsetStrategyEnumSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder29.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder29.setRetry(kafkaSpoutRetryService33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder14.setRetry(kafkaSpoutRetryService33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder14.setMaxPartitionFectchBytes((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig38 = kafkaSpoutRetryServiceBuilder37.build();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getKafkaProps();
        int int40 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getMaxUncommittedOffsets();
        boolean boolean41 = kafkaSpoutRetryServiceKafkaSpoutConfig38.isConsumerAutoCommitMode();
        long long42 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getPollTimeoutMs();
        java.lang.String str43 = kafkaSpoutRetryServiceKafkaSpoutConfig38.toString();
        java.lang.String str44 = kafkaSpoutRetryServiceKafkaSpoutConfig38.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10000000 + "'", int40 == 10000000);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 200L + "'", long42 == 200L);
    }

    @Test
    public void test05384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05384");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder17.build();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig18.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder8.setMaxPollRecords((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder25.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder25.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setGroupId("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
    }

    @Test
    public void test05385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05385");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRetry(kafkaSpoutRetryService20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder23.setSSLKeystore("hi!", "");
        java.util.Properties properties27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setProp(properties27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
    }

    @Test
    public void test05386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05386");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setMaxUncommittedOffsets((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setPartitionRefreshPeriodMs((long) 1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
    }

    @Test
    public void test05387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05387");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        int int7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        java.lang.String str8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.storm.kafka.spout.Subscription subscription9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        long long10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        long long11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10000000 + "'", int7 == 10000000);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 200L + "'", long10 == 200L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 30000L + "'", long11 == 30000L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer14);
    }

    @Test
    public void test05388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05388");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder10.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setMaxPartitionFectchBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setMaxPartitionFectchBytes((int) (short) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
    }

    @Test
    public void test05389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05389");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setGroupId("");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc13 = null;
        org.apache.storm.tuple.Fields fields14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc13, fields14, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder16.setSSLTruststore("hi!", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
    }

    @Test
    public void test05390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05390");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        java.lang.String str7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.storm.kafka.spout.Subscription subscription8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(subscription8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService9);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy10 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy10.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription11);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2000L + "'", long14 == 2000L);
    }

    @Test
    public void test05391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05391");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setFirstPollOffsetStrategy(firstPollOffsetStrategy22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setPollTimeoutMs((long) 0);
        java.lang.Class<?> wildcardClass35 = kafkaSpoutRetryServiceBuilder34.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test05392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05392");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder12.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, firstPollOffsetStrategyEnumSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, firstPollOffsetStrategyEnumSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setFirstPollOffsetStrategy(firstPollOffsetStrategy32);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, firstPollOffsetStrategyEnumSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig39 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer40 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator41 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getTranslator();
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator41, fields42, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, firstPollOffsetStrategyEnumSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder50.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer52 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator53 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        int int54 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator55 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields56);
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields58, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder12.setMaxPartitionFectchBytes((int) (short) 1);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder62.setPartitionRefreshPeriodMs(30000L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder62.setPartitionRefreshPeriodMs((long) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder68.setSSLTruststore("", "");
        java.util.Properties properties72 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder68.setProp(properties72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy32 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy32.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig39);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10000000 + "'", int54 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
    }

    @Test
    public void test05393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05393");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        java.lang.String[] strArray3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.io.Serializable> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.io.Serializable>("hi!", strSerializableDeserializer1, serializableSerializableDeserializer2, strArray3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test05394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05394");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        boolean boolean11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        boolean boolean12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        int int13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10000000 + "'", int13 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 200L + "'", long17 == 200L);
    }

    @Test
    public void test05395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05395");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder10.setMaxRetries((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, firstPollOffsetStrategyEnumSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig20 = kafkaSpoutRetryServiceBuilder19.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer21 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator22 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getTranslator();
        int int23 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator24 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getTranslator();
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator24, fields25, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setPartitionRefreshPeriodMs((long) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setPartitionRefreshPeriodMs((long) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setMaxRetries((int) (short) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig20);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10000000 + "'", int23 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
    }

    @Test
    public void test05396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05396");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder17.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, firstPollOffsetStrategyEnumSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder28.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder28.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, firstPollOffsetStrategyEnumSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, firstPollOffsetStrategyEnumSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setFirstPollOffsetStrategy(firstPollOffsetStrategy49);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer53 = null;
        java.util.regex.Pattern pattern54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer52, firstPollOffsetStrategyEnumSerializableDeserializer53, pattern54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig56 = kafkaSpoutRetryServiceBuilder55.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer57 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator58 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getTranslator();
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator58, fields59, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator58, fields63, "");
        org.apache.storm.tuple.Fields fields66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator58, fields66, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder12.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder12.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder12.setMaxPollRecords(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder75.setMaxPartitionFectchBytes((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder75.setSSLTruststore("", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy49 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy49.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig56);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
    }

    @Test
    public void test05397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05397");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setPollTimeoutMs((long) (byte) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, firstPollOffsetStrategyEnumSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig33 = kafkaSpoutRetryServiceBuilder30.build();
        org.apache.storm.kafka.spout.Subscription subscription34 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getSubscription();
        long long35 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService36 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder19.setRetry(kafkaSpoutRetryService36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder19.setPollTimeoutMs((long) (short) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig33);
        org.junit.Assert.assertNotNull(subscription34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 200L + "'", long35 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
    }

    @Test
    public void test05398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05398");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxPollRecords((int) (byte) 0);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
    }

    @Test
    public void test05399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05399");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, firstPollOffsetStrategyEnumSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, firstPollOffsetStrategyEnumSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setFirstPollOffsetStrategy(firstPollOffsetStrategy36);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, firstPollOffsetStrategyEnumSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder42.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator45 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator45, fields46, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator45, fields50, "");
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator45, fields53, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder10.setFetchMinBytes(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer59 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer60 = null;
        java.util.regex.Pattern pattern61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer59, firstPollOffsetStrategyEnumSerializableDeserializer60, pattern61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig63 = kafkaSpoutRetryServiceBuilder62.build();
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder57.setProp(strMap64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder65.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder67.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder69.setMaxPartitionFectchBytes((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder71.setPollTimeoutMs(35L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
    }

    @Test
    public void test05400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05400");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder12.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, firstPollOffsetStrategyEnumSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, firstPollOffsetStrategyEnumSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setFirstPollOffsetStrategy(firstPollOffsetStrategy32);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, firstPollOffsetStrategyEnumSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig39 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer40 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator41 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getTranslator();
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator41, fields42, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, firstPollOffsetStrategyEnumSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder50.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer52 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator53 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        int int54 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator55 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields56);
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields58, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setPollTimeoutMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder60.setPollTimeoutMs(2000L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder64.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder64.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder73.setPartitionRefreshPeriodMs((long) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig76 = kafkaSpoutRetryServiceBuilder73.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder73.setMaxPartitionFectchBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder78.setBootstrapServers("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy32 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy32.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig39);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10000000 + "'", int54 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
    }

    @Test
    public void test05401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05401");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, firstPollOffsetStrategyEnumSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder25.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder6.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setMaxUncommittedOffsets(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder29.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder29.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder29.setMaxPollRecords((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder29.setMaxPartitionFectchBytes((int) (byte) 1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
    }

    @Test
    public void test05402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05402");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        java.lang.String str10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer11);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 30000L + "'", long14 == 30000L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
    }

    @Test
    public void test05403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05403");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder12.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, firstPollOffsetStrategyEnumSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, firstPollOffsetStrategyEnumSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setFirstPollOffsetStrategy(firstPollOffsetStrategy32);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, firstPollOffsetStrategyEnumSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig39 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer40 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator41 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getTranslator();
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator41, fields42, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, firstPollOffsetStrategyEnumSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder50.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer52 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator53 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        int int54 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator55 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields56);
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields58, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder12.setMaxPartitionFectchBytes((int) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer64 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer65 = null;
        java.util.regex.Pattern pattern66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder67 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer64, firstPollOffsetStrategyEnumSerializableDeserializer65, pattern66);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig68 = kafkaSpoutRetryServiceBuilder67.build();
        boolean boolean69 = kafkaSpoutRetryServiceKafkaSpoutConfig68.isConsumerAutoCommitMode();
        int int70 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getMaxUncommittedOffsets();
        long long71 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription72 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getSubscription();
        int int73 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getMaxTupleRetries();
        boolean boolean74 = kafkaSpoutRetryServiceKafkaSpoutConfig68.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy75 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder62.setFirstPollOffsetStrategy(firstPollOffsetStrategy75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy32 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy32.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig39);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10000000 + "'", int54 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 10000000 + "'", int70 == 10000000);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 30000L + "'", long71 == 30000L);
        org.junit.Assert.assertNotNull(subscription72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2147483647 + "'", int73 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy75 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy75.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
    }

    @Test
    public void test05404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05404");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder8.build();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getConsumerGroupId();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getPollTimeoutMs();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator19 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getTranslator();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator19);
    }

    @Test
    public void test05405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05405");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer21 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, org.apache.storm.kafka.spout.Subscription> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, org.apache.storm.kafka.spout.Subscription>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, subscriptionSerializableDeserializer21, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, firstPollOffsetStrategyEnumSerializableDeserializer18, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> annotatedElementBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", annotatedElementSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer11, firstPollOffsetStrategyEnumSerializableDeserializer12, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> typeBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", typeSerializableDeserializer8, firstPollOffsetStrategyEnumSerializableDeserializer9, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, firstPollOffsetStrategyEnumSerializableDeserializer6, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, strArray27);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strBuilder34);
    }

    @Test
    public void test05406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05406");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        long long9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        boolean boolean10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        java.lang.String str11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 2000L + "'", long9 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
    }

    @Test
    public void test05407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05407");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, firstPollOffsetStrategyEnumSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, firstPollOffsetStrategyEnumSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig36 = kafkaSpoutRetryServiceBuilder35.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer37 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator38 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator38);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer42 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer43 = null;
        java.util.regex.Pattern pattern44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer42, firstPollOffsetStrategyEnumSerializableDeserializer43, pattern44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder45.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy50 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setFirstPollOffsetStrategy(firstPollOffsetStrategy50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder49.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService55 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder49.setRetry(kafkaSpoutRetryService55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder40.setRetry(kafkaSpoutRetryService55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setGroupId("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig36);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy50 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy50.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
    }

    @Test
    public void test05408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05408");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer19 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, firstPollOffsetStrategyEnumSerializableDeserializer19, (java.util.Collection<java.lang.String>) strList22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type> subscriptionBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type>("hi!", subscriptionSerializableDeserializer15, typeSerializableDeserializer16, (java.util.Collection<java.lang.String>) strList22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, (java.util.Collection<java.lang.String>) strList22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer9, firstPollOffsetStrategyEnumSerializableDeserializer10, (java.util.Collection<java.lang.String>) strList22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.String[]> strListBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.String[]>("hi!", strListSerializableDeserializer4, strArraySerializableDeserializer5, (java.util.Collection<java.lang.String>) strList22);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test05409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05409");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        java.lang.String str9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        java.lang.String str10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        int int11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10000000 + "'", int11 == 10000000);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2000L + "'", long12 == 2000L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10000000 + "'", int17 == 10000000);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test05410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05410");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, firstPollOffsetStrategyEnumSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, firstPollOffsetStrategyEnumSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setFirstPollOffsetStrategy(firstPollOffsetStrategy36);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, firstPollOffsetStrategyEnumSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder42.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator45 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator45, fields46, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator45, fields50, "");
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator45, fields53, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder10.setFetchMinBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer63 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer64 = null;
        java.util.regex.Pattern pattern65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder66 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer63, firstPollOffsetStrategyEnumSerializableDeserializer64, pattern65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder66.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder70.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder74.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder77.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder77.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder77.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder83.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder60.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder86);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder86.setPartitionRefreshPeriodMs(100L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
    }

    @Test
    public void test05411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05411");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, firstPollOffsetStrategyEnumSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder29.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder29.setRetry(kafkaSpoutRetryService33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder14.setRetry(kafkaSpoutRetryService33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder14.setMaxPartitionFectchBytes((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig38 = kafkaSpoutRetryServiceBuilder37.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder37.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder37.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, firstPollOffsetStrategyEnumSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder50.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder56.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder58.setFetchMinBytes(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer64 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer65 = null;
        java.util.regex.Pattern pattern66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder67 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer64, firstPollOffsetStrategyEnumSerializableDeserializer65, pattern66);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig68 = kafkaSpoutRetryServiceBuilder67.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer69 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator70 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer71 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getKeyDeserializer();
        java.lang.String str72 = kafkaSpoutRetryServiceKafkaSpoutConfig68.toString();
        java.lang.String str73 = kafkaSpoutRetryServiceKafkaSpoutConfig68.toString();
        int int74 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getMaxUncommittedOffsets();
        long long75 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy76 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getFirstPollOffsetStrategy();
        boolean boolean77 = kafkaSpoutRetryServiceKafkaSpoutConfig68.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService78 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer79 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getKeyDeserializer();
        java.lang.String str80 = kafkaSpoutRetryServiceKafkaSpoutConfig68.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer82 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer83 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator84 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getTranslator();
        org.apache.storm.tuple.Fields fields85 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator84, fields85, "");
        org.apache.storm.tuple.Fields fields88 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder45.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator84, fields88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig68);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator70);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer71);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 10000000 + "'", int74 == 10000000);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 30000L + "'", long75 == 30000L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy76 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy76.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService78);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer79);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer82);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
    }

    @Test
    public void test05412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05412");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder6.setMaxUncommittedOffsets((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder25.setPollTimeoutMs((long) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer32 = null;
        java.util.regex.Pattern pattern33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer31, firstPollOffsetStrategyEnumSerializableDeserializer32, pattern33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig35 = kafkaSpoutRetryServiceBuilder34.build();
        boolean boolean36 = kafkaSpoutRetryServiceKafkaSpoutConfig35.isConsumerAutoCommitMode();
        java.lang.String str37 = kafkaSpoutRetryServiceKafkaSpoutConfig35.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator38 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getTranslator();
        boolean boolean39 = kafkaSpoutRetryServiceKafkaSpoutConfig35.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.Subscription subscription40 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getSubscription();
        long long41 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getPollTimeoutMs();
        boolean boolean42 = kafkaSpoutRetryServiceKafkaSpoutConfig35.isConsumerAutoCommitMode();
        java.lang.String str43 = kafkaSpoutRetryServiceKafkaSpoutConfig35.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService44 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer45 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy46 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getFirstPollOffsetStrategy();
        java.lang.String str47 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy48 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder25.setFirstPollOffsetStrategy(firstPollOffsetStrategy48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(subscription40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 200L + "'", long41 == 200L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService44);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer45);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy46 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy46.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy48 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy48.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
    }

    @Test
    public void test05413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05413");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setPartitionRefreshPeriodMs((long) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, firstPollOffsetStrategyEnumSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        int int30 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription31 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getSubscription();
        java.lang.String str32 = kafkaSpoutRetryServiceKafkaSpoutConfig27.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator33 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, firstPollOffsetStrategyEnumSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig40 = kafkaSpoutRetryServiceBuilder39.build();
        boolean boolean41 = kafkaSpoutRetryServiceKafkaSpoutConfig40.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder19.setFirstPollOffsetStrategy(firstPollOffsetStrategy42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder19.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder19.setMaxRetries(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer53 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer55 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer58 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer59 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder62 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer58, randomAccessSerializableDeserializer59, strArray61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, org.apache.storm.kafka.spout.Subscription> objBuilder63 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, org.apache.storm.kafka.spout.Subscription>("hi!", objSerializableDeserializer55, subscriptionSerializableDeserializer56, strArray61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer52, firstPollOffsetStrategyEnumSerializableDeserializer53, strArray61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder49.setProp("", (java.lang.Object) "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer67 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer68 = null;
        java.util.regex.Pattern pattern69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder70 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer67, firstPollOffsetStrategyEnumSerializableDeserializer68, pattern69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig71 = kafkaSpoutRetryServiceBuilder70.build();
        boolean boolean72 = kafkaSpoutRetryServiceKafkaSpoutConfig71.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy73 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService74 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getRetryService();
        long long75 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getPartitionRefreshPeriodMs();
        boolean boolean76 = kafkaSpoutRetryServiceKafkaSpoutConfig71.isConsumerAutoCommitMode();
        java.lang.String str77 = kafkaSpoutRetryServiceKafkaSpoutConfig71.toString();
        java.lang.String str78 = kafkaSpoutRetryServiceKafkaSpoutConfig71.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getKafkaProps();
        java.lang.String str80 = kafkaSpoutRetryServiceKafkaSpoutConfig71.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator81 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getTranslator();
        org.apache.storm.tuple.Fields fields82 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator81, fields82, "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10000000 + "'", int30 == 10000000);
        org.junit.Assert.assertNotNull(subscription31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy42 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy42.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy73 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy73.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 2000L + "'", long75 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
    }

    @Test
    public void test05414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05414");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        java.lang.String str9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy10 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy10.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test05415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05415");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        java.lang.String str10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        java.lang.String str11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        org.apache.storm.kafka.spout.Subscription subscription12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        int int13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer20 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10000000 + "'", int9 == 10000000);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10000000 + "'", int13 == 10000000);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 200L + "'", long17 == 200L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2000L + "'", long18 == 2000L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2000L + "'", long19 == 2000L);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer20);
    }

    @Test
    public void test05416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05416");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, firstPollOffsetStrategyEnumSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy14);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, firstPollOffsetStrategyEnumSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig21 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer22 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator23 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getTranslator();
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setMaxRetries((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setPartitionRefreshPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setMaxRetries((int) (short) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig21);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
    }

    @Test
    public void test05417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05417");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder17.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, firstPollOffsetStrategyEnumSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, firstPollOffsetStrategyEnumSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setFirstPollOffsetStrategy(firstPollOffsetStrategy38);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, firstPollOffsetStrategyEnumSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig45 = kafkaSpoutRetryServiceBuilder44.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer46 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator47 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getTranslator();
        org.apache.storm.tuple.Fields fields48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator47, fields48, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator47);
        org.apache.storm.tuple.Fields fields52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator47, fields52, "");
        org.apache.storm.tuple.Fields fields55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator47, fields55, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig58 = kafkaSpoutRetryServiceBuilder57.build();
        long long59 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getPollTimeoutMs();
        java.lang.String str60 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getConsumerGroupId();
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getKafkaProps();
        java.lang.Class<?> wildcardClass63 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig45);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 200L + "'", long59 == 200L);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test05418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05418");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer12 = null;
        java.util.regex.Pattern pattern13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer11, firstPollOffsetStrategyEnumSerializableDeserializer12, pattern13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder16.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setMaxRetries((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, firstPollOffsetStrategyEnumSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig30 = kafkaSpoutRetryServiceBuilder29.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer31 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator32 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getTranslator();
        int int33 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator34 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getTranslator();
        org.apache.storm.tuple.Fields fields35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator34, fields35, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setPartitionRefreshPeriodMs((long) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder37.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setMaxPollRecords(10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer48 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer50 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer53 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer54 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer59 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer60 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer63 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer64 = null;
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder69 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer63, firstPollOffsetStrategyEnumSerializableDeserializer64, (java.util.Collection<java.lang.String>) strList67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder71 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer59, firstPollOffsetStrategyEnumSerializableDeserializer60, (java.util.Collection<java.lang.String>) strList67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>> strCollectionBuilder72 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>>("hi!", strCollectionSerializableDeserializer56, strCollectionSerializableDeserializer57, (java.util.Collection<java.lang.String>) strList67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> strArrayBuilder73 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("hi!", strArraySerializableDeserializer53, firstPollOffsetStrategySerializableDeserializer54, (java.util.Collection<java.lang.String>) strList67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Comparable<java.lang.String>> strListBuilder74 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Comparable<java.lang.String>>("hi!", strListSerializableDeserializer50, strComparableSerializableDeserializer51, (java.util.Collection<java.lang.String>) strList67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder75 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, firstPollOffsetStrategyEnumSerializableDeserializer48, (java.util.Collection<java.lang.String>) strList67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder42.setProp("hi!", (java.lang.Object) strList67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder77 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder78 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, firstPollOffsetStrategyEnumSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder79 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList67);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder80 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig30);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10000000 + "'", int33 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test05419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05419");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.util.Collection<java.lang.String>> strIterableBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.util.Collection<java.lang.String>>("", strIterableSerializableDeserializer1, strCollectionSerializableDeserializer2, pattern3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test05420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05420");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder17.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, firstPollOffsetStrategyEnumSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder28.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder28.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, firstPollOffsetStrategyEnumSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, firstPollOffsetStrategyEnumSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setFirstPollOffsetStrategy(firstPollOffsetStrategy49);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer53 = null;
        java.util.regex.Pattern pattern54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer52, firstPollOffsetStrategyEnumSerializableDeserializer53, pattern54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig56 = kafkaSpoutRetryServiceBuilder55.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer57 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator58 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getTranslator();
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator58, fields59, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator58, fields63, "");
        org.apache.storm.tuple.Fields fields66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator58, fields66, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder12.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig72 = kafkaSpoutRetryServiceBuilder12.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder12.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder12.setOffsetCommitPeriodMs((long) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder76.setSSLTruststore("", "");
        java.lang.Class<?> wildcardClass80 = kafkaSpoutRetryServiceBuilder76.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy49 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy49.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig56);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test05421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05421");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer8 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, firstPollOffsetStrategyEnumSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type> subscriptionBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type>("hi!", subscriptionSerializableDeserializer4, typeSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setPartitionRefreshPeriodMs((long) 10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder18.setMaxUncommittedOffsets(2147483647);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
    }

    @Test
    public void test05422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05422");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, firstPollOffsetStrategyEnumSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy14);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, firstPollOffsetStrategyEnumSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig21 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer22 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator23 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getTranslator();
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setMaxPollRecords((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setOffsetCommitPeriodMs((long) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder35.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer40 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer41 = null;
        java.util.regex.Pattern pattern42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer40, firstPollOffsetStrategyEnumSerializableDeserializer41, pattern42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig44 = kafkaSpoutRetryServiceBuilder43.build();
        boolean boolean45 = kafkaSpoutRetryServiceKafkaSpoutConfig44.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy46 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService47 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getRetryService();
        boolean boolean48 = kafkaSpoutRetryServiceKafkaSpoutConfig44.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.Subscription subscription49 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer50 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getValueDeserializer();
        java.lang.String str51 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getConsumerGroupId();
        long long52 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder38.setProp(strMap53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig21);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy46 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy46.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(subscription49);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 30000L + "'", long52 == 30000L);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
    }

    @Test
    public void test05423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05423");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, firstPollOffsetStrategyEnumSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder31.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder31.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder12.setMaxPollRecords((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setMaxUncommittedOffsets(10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, firstPollOffsetStrategyEnumSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setFirstPollOffsetStrategy(firstPollOffsetStrategy53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder52.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer58 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer59 = null;
        java.util.regex.Pattern pattern60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder61 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer58, firstPollOffsetStrategyEnumSerializableDeserializer59, pattern60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig62 = kafkaSpoutRetryServiceBuilder61.build();
        boolean boolean63 = kafkaSpoutRetryServiceKafkaSpoutConfig62.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy64 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder52.setFirstPollOffsetStrategy(firstPollOffsetStrategy64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder52.setMaxPollRecords((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder67.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder69.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig72 = kafkaSpoutRetryServiceBuilder69.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator73 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getTranslator();
        org.apache.storm.tuple.Fields fields74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator73, fields74, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder43.setFetchMinBytes((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder78.setFetchMinBytes((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder80.setBootstrapServers("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy53 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy53.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy64 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy64.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
    }

    @Test
    public void test05424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05424");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        java.lang.String str10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        java.lang.String str11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10000000 + "'", int9 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
    }

    @Test
    public void test05425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05425");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, firstPollOffsetStrategyEnumSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, firstPollOffsetStrategyEnumSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setFirstPollOffsetStrategy(firstPollOffsetStrategy36);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, firstPollOffsetStrategyEnumSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder42.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator45 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator45, fields46, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator45, fields50, "");
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator45, fields53, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder10.setFetchMinBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder10.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setFirstPollOffsetStrategy(firstPollOffsetStrategy61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder62.setOffsetCommitPeriodMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setOffsetCommitPeriodMs(2000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
    }

    @Test
    public void test05426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05426");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder12.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, firstPollOffsetStrategyEnumSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig23 = kafkaSpoutRetryServiceBuilder22.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, firstPollOffsetStrategyEnumSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig36 = kafkaSpoutRetryServiceBuilder35.build();
        boolean boolean37 = kafkaSpoutRetryServiceKafkaSpoutConfig36.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService39 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getRetryService();
        boolean boolean40 = kafkaSpoutRetryServiceKafkaSpoutConfig36.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder30.setProp(strMap41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder12.setProp(strMap41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig44 = kafkaSpoutRetryServiceBuilder43.build();
        long long45 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getOffsetsCommitPeriodMs();
        int int46 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10000000 + "'", int46 == 10000000);
    }

    @Test
    public void test05427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05427");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceBuilderSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer19 = null;
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, org.apache.storm.kafka.spout.Subscription> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, org.apache.storm.kafka.spout.Subscription>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, subscriptionSerializableDeserializer19, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, firstPollOffsetStrategyEnumSerializableDeserializer16, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.Cloneable> strIterableBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.Cloneable>("hi!", strIterableSerializableDeserializer12, cloneableSerializableDeserializer13, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess> annotatedElementBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess>("hi!", annotatedElementSerializableDeserializer7, randomAccessSerializableDeserializer8, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, strArray25);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, org.apache.storm.kafka.spout.Subscription> kafkaSpoutRetryServiceBuilderBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, org.apache.storm.kafka.spout.Subscription>("", kafkaSpoutRetryServiceBuilderSerializableDeserializer1, subscriptionSerializableDeserializer2, strArray25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test05428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05428");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type> subscriptionBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type>("hi!", subscriptionSerializableDeserializer9, typeSerializableDeserializer10, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.lang.reflect.GenericDeclaration> strComparableBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.lang.reflect.GenericDeclaration>("hi!", strComparableSerializableDeserializer5, genericDeclarationSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> strListBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", strListSerializableDeserializer2, firstPollOffsetStrategyEnumSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test05429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05429");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        boolean boolean12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer10);
        org.junit.Assert.assertNotNull(subscription11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 2000L + "'", long13 == 2000L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10000000 + "'", int17 == 10000000);
    }

    @Test
    public void test05430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05430");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder12.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, firstPollOffsetStrategyEnumSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, firstPollOffsetStrategyEnumSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setFirstPollOffsetStrategy(firstPollOffsetStrategy32);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, firstPollOffsetStrategyEnumSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig39 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer40 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator41 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getTranslator();
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator41, fields42, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, firstPollOffsetStrategyEnumSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder50.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer52 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator53 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        int int54 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator55 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields56);
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields58, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setPollTimeoutMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder60.setPollTimeoutMs(2000L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder64.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder69.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder69.setPollTimeoutMs(32L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder73.setPartitionRefreshPeriodMs(0L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy32 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy32.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig39);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10000000 + "'", int54 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
    }

    @Test
    public void test05431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05431");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, firstPollOffsetStrategyEnumSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy14);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, firstPollOffsetStrategyEnumSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig21 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer22 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator23 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getTranslator();
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setMaxPollRecords((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setMaxPartitionFectchBytes((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setPartitionRefreshPeriodMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setSecurityProtocol("hi!");
        java.util.Properties properties40 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder35.setProp(properties40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig21);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
    }

    @Test
    public void test05432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05432");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        boolean boolean9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator10);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy11 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy11.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
    }

    @Test
    public void test05433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05433");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, firstPollOffsetStrategyEnumSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder25.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder6.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setMaxRetries((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig34 = kafkaSpoutRetryServiceBuilder33.build();
        int int35 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getMaxUncommittedOffsets();
        int int36 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
    }

    @Test
    public void test05434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05434");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceBuilderSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceBuilderBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>>("hi!", kafkaSpoutRetryServiceBuilderSerializableDeserializer10, kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer11, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, java.lang.Object> cloneableBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, java.lang.Object>("hi!", cloneableSerializableDeserializer5, objSerializableDeserializer6, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.util.AbstractList<java.lang.String>> firstPollOffsetStrategyEnumBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.util.AbstractList<java.lang.String>>("hi!", firstPollOffsetStrategyEnumSerializableDeserializer2, strListSerializableDeserializer3, strArray14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test05435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05435");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, firstPollOffsetStrategyEnumSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder13.build();
        boolean boolean15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.isConsumerAutoCommitMode();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder8.setProp(strMap18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, firstPollOffsetStrategyEnumSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer30 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getKeyDeserializer();
        java.lang.String str31 = kafkaSpoutRetryServiceKafkaSpoutConfig27.toString();
        java.lang.String str32 = kafkaSpoutRetryServiceKafkaSpoutConfig27.toString();
        int int33 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription34 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder21.setProp(strMap35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000000 + "'", int16 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator29);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10000000 + "'", int33 == 10000000);
        org.junit.Assert.assertNotNull(subscription34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
    }

    @Test
    public void test05436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05436");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setMaxRetries((int) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, firstPollOffsetStrategyEnumSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setFirstPollOffsetStrategy(firstPollOffsetStrategy25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder24.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder24.setRetry(kafkaSpoutRetryService30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder24.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder24.setPartitionRefreshPeriodMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setPollTimeoutMs((long) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder14.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setOffsetCommitPeriodMs((long) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setMaxUncommittedOffsets(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer50 = null;
        java.util.regex.Pattern pattern51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer49, firstPollOffsetStrategyEnumSerializableDeserializer50, pattern51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder54.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer60 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer61 = null;
        java.util.regex.Pattern pattern62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder63 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer60, firstPollOffsetStrategyEnumSerializableDeserializer61, pattern62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig64 = kafkaSpoutRetryServiceBuilder63.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer65 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator66 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator66);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder54.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder54.setMaxUncommittedOffsets((int) 'a');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer75 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer76 = null;
        java.util.regex.Pattern pattern77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder78 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer75, firstPollOffsetStrategyEnumSerializableDeserializer76, pattern77);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig79 = kafkaSpoutRetryServiceBuilder78.build();
        boolean boolean80 = kafkaSpoutRetryServiceKafkaSpoutConfig79.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy81 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService82 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getRetryService();
        boolean boolean83 = kafkaSpoutRetryServiceKafkaSpoutConfig79.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap84 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator85 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getTranslator();
        org.apache.storm.kafka.spout.Subscription subscription86 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap87 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator88 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getTranslator();
        org.apache.storm.tuple.Fields fields89 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder73.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator88, fields89, "hi!");
        org.apache.storm.tuple.Fields fields92 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator88, fields92);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy25 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy25.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig64);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy81 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy81.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator85);
        org.junit.Assert.assertNotNull(subscription86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
    }

    @Test
    public void test05437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05437");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        long long10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.Subscription subscription20 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 30000L + "'", long10 == 30000L);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2000L + "'", long12 == 2000L);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(subscription20);
    }

    @Test
    public void test05438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05438");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder10.setMaxRetries((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, firstPollOffsetStrategyEnumSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig20 = kafkaSpoutRetryServiceBuilder19.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer21 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator22 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getTranslator();
        int int23 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator24 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getTranslator();
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator24, fields25, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setPartitionRefreshPeriodMs((long) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder27.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setMaxPollRecords(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setMaxPollRecords((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder34.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setMaxUncommittedOffsets(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer45 = null;
        java.util.regex.Pattern pattern46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer44, firstPollOffsetStrategyEnumSerializableDeserializer45, pattern46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder47.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder51.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder55.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder55.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer62 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer63 = null;
        java.util.regex.Pattern pattern64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder65 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer62, firstPollOffsetStrategyEnumSerializableDeserializer63, pattern64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig66 = kafkaSpoutRetryServiceBuilder65.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder65.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder69.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder71.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer75 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer76 = null;
        java.util.regex.Pattern pattern77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder78 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer75, firstPollOffsetStrategyEnumSerializableDeserializer76, pattern77);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig79 = kafkaSpoutRetryServiceBuilder78.build();
        boolean boolean80 = kafkaSpoutRetryServiceKafkaSpoutConfig79.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy81 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService82 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getRetryService();
        boolean boolean83 = kafkaSpoutRetryServiceKafkaSpoutConfig79.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap84 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder73.setProp(strMap84);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder55.setProp(strMap84);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig87 = kafkaSpoutRetryServiceBuilder86.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService88 = kafkaSpoutRetryServiceKafkaSpoutConfig87.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder42.setRetry(kafkaSpoutRetryService88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig20);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10000000 + "'", int23 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy81 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy81.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
    }

    @Test
    public void test05439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05439");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer9 = null;
        java.util.regex.Pattern pattern10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer8, firstPollOffsetStrategyEnumSerializableDeserializer9, pattern10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder11.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setFirstPollOffsetStrategy(firstPollOffsetStrategy16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setMaxRetries((int) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, firstPollOffsetStrategyEnumSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setFirstPollOffsetStrategy(firstPollOffsetStrategy32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder31.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder31.setRetry(kafkaSpoutRetryService37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder31.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder31.setPartitionRefreshPeriodMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setPollTimeoutMs((long) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder21.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer50 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer51 = null;
        java.util.regex.Pattern pattern52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer50, firstPollOffsetStrategyEnumSerializableDeserializer51, pattern52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig54 = kafkaSpoutRetryServiceBuilder53.build();
        boolean boolean55 = kafkaSpoutRetryServiceKafkaSpoutConfig54.isConsumerAutoCommitMode();
        java.lang.String str56 = kafkaSpoutRetryServiceKafkaSpoutConfig54.toString();
        java.lang.String str57 = kafkaSpoutRetryServiceKafkaSpoutConfig54.toString();
        java.lang.String str58 = kafkaSpoutRetryServiceKafkaSpoutConfig54.toString();
        java.lang.String str59 = kafkaSpoutRetryServiceKafkaSpoutConfig54.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator60 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getTranslator();
        org.apache.storm.tuple.Fields fields61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator60, fields61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder62.setSSLTruststore("hi!", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy32 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy32.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
    }

    @Test
    public void test05440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05440");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder10.build();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig13.isConsumerAutoCommitMode();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig13.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator16 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getTranslator();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getKeyDeserializer();
        int int19 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getMaxUncommittedOffsets();
        boolean boolean20 = kafkaSpoutRetryServiceKafkaSpoutConfig13.isConsumerAutoCommitMode();
        java.lang.String str21 = kafkaSpoutRetryServiceKafkaSpoutConfig13.toString();
        int int22 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 200L + "'", long17 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10000000 + "'", int19 == 10000000);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10000000 + "'", int22 == 10000000);
    }

    @Test
    public void test05441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05441");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
    }

    @Test
    public void test05442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05442");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, firstPollOffsetStrategyEnumSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder31.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder31.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, firstPollOffsetStrategyEnumSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer58 = null;
        java.util.regex.Pattern pattern59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer57, firstPollOffsetStrategyEnumSerializableDeserializer58, pattern59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig61 = kafkaSpoutRetryServiceBuilder60.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder60.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder52.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder66);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer69 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer70 = null;
        java.util.regex.Pattern pattern71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder72 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer69, firstPollOffsetStrategyEnumSerializableDeserializer70, pattern71);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer74 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer75 = null;
        java.util.regex.Pattern pattern76 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder77 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer74, firstPollOffsetStrategyEnumSerializableDeserializer75, pattern76);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig78 = kafkaSpoutRetryServiceBuilder77.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer79 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator80 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getTranslator();
        org.apache.storm.tuple.Fields fields81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder72.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator80, fields81);
        org.apache.storm.tuple.Fields fields83 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator80, fields83);
        org.apache.storm.tuple.Fields fields85 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator80, fields85);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder88 = kafkaSpoutRetryServiceBuilder43.setMaxPollRecords(0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig78);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder88);
    }

    @Test
    public void test05443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05443");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, firstPollOffsetStrategyEnumSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setFetchMinBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, firstPollOffsetStrategyEnumSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder41.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer52 = null;
        java.util.regex.Pattern pattern53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer51, firstPollOffsetStrategyEnumSerializableDeserializer52, pattern53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig55 = kafkaSpoutRetryServiceBuilder54.build();
        boolean boolean56 = kafkaSpoutRetryServiceKafkaSpoutConfig55.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy57 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService58 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getRetryService();
        boolean boolean59 = kafkaSpoutRetryServiceKafkaSpoutConfig55.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder49.setProp(strMap60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder34.setProp(strMap60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder21.setProp(strMap60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder21.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder66.setPollTimeoutMs((long) (short) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy57 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy57.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
    }

    @Test
    public void test05444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05444");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setGroupId("");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc13 = null;
        org.apache.storm.tuple.Fields fields14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc13, fields14, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder12.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder12.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder12.setMaxPollRecords((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig23 = kafkaSpoutRetryServiceBuilder22.build();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig23);
    }

    @Test
    public void test05445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05445");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, firstPollOffsetStrategyEnumSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder29.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder29.setRetry(kafkaSpoutRetryService33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder14.setRetry(kafkaSpoutRetryService33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder14.setMaxPartitionFectchBytes((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig38 = kafkaSpoutRetryServiceBuilder14.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder14.setMaxUncommittedOffsets((int) (short) 0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
    }

    @Test
    public void test05446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05446");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, firstPollOffsetStrategyEnumSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy14);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, firstPollOffsetStrategyEnumSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig21 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer22 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator23 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getTranslator();
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setMaxRetries((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig32 = kafkaSpoutRetryServiceBuilder29.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder29.setMaxRetries((int) (byte) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer38 = null;
        java.util.regex.Pattern pattern39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer37, firstPollOffsetStrategyEnumSerializableDeserializer38, pattern39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setMaxPollRecords((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setOffsetCommitPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder29.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder44.setSSLKeystore("", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder51.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig56 = kafkaSpoutRetryServiceBuilder55.build();
        org.apache.storm.kafka.spout.Subscription subscription57 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig21);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig56);
        org.junit.Assert.assertNotNull(subscription57);
    }

    @Test
    public void test05447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05447");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder14.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder14.setPollTimeoutMs((long) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setFetchMinBytes(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, firstPollOffsetStrategyEnumSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder28.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator31 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getTranslator();
        int int32 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription33 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer34 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription35 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder19.setFirstPollOffsetStrategy(firstPollOffsetStrategy36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder19.setSSLKeystore("", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10000000 + "'", int32 == 10000000);
        org.junit.Assert.assertNotNull(subscription33);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer34);
        org.junit.Assert.assertNotNull(subscription35);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
    }

    @Test
    public void test05448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05448");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder17.build();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig18.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService21 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getRetryService();
        boolean boolean22 = kafkaSpoutRetryServiceKafkaSpoutConfig18.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder12.setProp(strMap23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setMaxUncommittedOffsets(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder26.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder26.setMaxRetries((int) 'a');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, firstPollOffsetStrategyEnumSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder38.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, firstPollOffsetStrategyEnumSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder50.build();
        boolean boolean52 = kafkaSpoutRetryServiceKafkaSpoutConfig51.isConsumerAutoCommitMode();
        java.lang.String str53 = kafkaSpoutRetryServiceKafkaSpoutConfig51.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator54 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        org.apache.storm.tuple.Fields fields55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder45.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator54, fields55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig58 = kafkaSpoutRetryServiceBuilder31.build();
        long long59 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer60 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getValueDeserializer();
        long long61 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 52L + "'", long59 == 52L);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 30000L + "'", long61 == 30000L);
    }

    @Test
    public void test05449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05449");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        java.lang.String str11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        boolean boolean13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10000000 + "'", int9 == 10000000);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy10 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy10.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 30000L + "'", long16 == 30000L);
    }

    @Test
    public void test05450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05450");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        java.lang.String str8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        java.lang.String str9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test05451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05451");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        java.lang.String str9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        java.lang.String str10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        int int11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        boolean boolean15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        boolean boolean17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10000000 + "'", int11 == 10000000);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2000L + "'", long12 == 2000L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
    }

    @Test
    public void test05452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05452");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setPartitionRefreshPeriodMs((long) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, firstPollOffsetStrategyEnumSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        int int30 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription31 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getSubscription();
        java.lang.String str32 = kafkaSpoutRetryServiceKafkaSpoutConfig27.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator33 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, firstPollOffsetStrategyEnumSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig40 = kafkaSpoutRetryServiceBuilder39.build();
        boolean boolean41 = kafkaSpoutRetryServiceKafkaSpoutConfig40.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder19.setFirstPollOffsetStrategy(firstPollOffsetStrategy42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setMaxRetries((int) (short) -1);
        java.util.Properties properties46 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setProp(properties46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10000000 + "'", int30 == 10000000);
        org.junit.Assert.assertNotNull(subscription31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy42 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy42.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
    }

    @Test
    public void test05453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05453");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder12.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setMaxPollRecords(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setOffsetCommitPeriodMs(2000L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder23.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder23.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder23.setMaxPartitionFectchBytes((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder23.setMaxPollRecords(2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
    }

    @Test
    public void test05454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05454");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder12.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, firstPollOffsetStrategyEnumSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, firstPollOffsetStrategyEnumSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setFirstPollOffsetStrategy(firstPollOffsetStrategy32);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, firstPollOffsetStrategyEnumSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig39 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer40 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator41 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getTranslator();
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator41, fields42, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, firstPollOffsetStrategyEnumSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder50.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer52 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator53 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        int int54 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator55 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields56);
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields58, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setPollTimeoutMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder62.setFetchMinBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setMaxPartitionFectchBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder64.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder64.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder70.setFirstPollOffsetStrategy(firstPollOffsetStrategy71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy32 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy32.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig39);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10000000 + "'", int54 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
    }

    @Test
    public void test05455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05455");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs((long) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder10.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, firstPollOffsetStrategyEnumSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig22 = kafkaSpoutRetryServiceBuilder21.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer23 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator24 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer25 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getKeyDeserializer();
        java.lang.String str26 = kafkaSpoutRetryServiceKafkaSpoutConfig22.toString();
        long long27 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getFirstPollOffsetStrategy();
        java.lang.String str30 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getConsumerGroupId();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder10.setProp(strMap31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder32.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder32.setMaxRetries((int) (byte) 1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig22);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator24);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer25);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 200L + "'", long27 == 200L);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy29 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy29.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
    }

    @Test
    public void test05456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05456");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        long long10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        boolean boolean18 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 30000L + "'", long10 == 30000L);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2000L + "'", long12 == 2000L);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test05457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05457");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFetchMinBytes(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setMaxRetries((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setMaxPartitionFectchBytes(0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
    }

    @Test
    public void test05458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05458");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        long long11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        int int12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 200L + "'", long11 == 200L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 30000L + "'", long14 == 30000L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000000 + "'", int15 == 10000000);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
    }

    @Test
    public void test05459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05459");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        int int7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        long long10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        org.apache.storm.kafka.spout.Subscription subscription13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10000000 + "'", int7 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 30000L + "'", long10 == 30000L);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService12);
        org.junit.Assert.assertNotNull(subscription13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
    }

    @Test
    public void test05460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05460");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder14.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder14.setPollTimeoutMs((long) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setFetchMinBytes(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setPartitionRefreshPeriodMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder23.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder23.setMaxUncommittedOffsets(10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
    }

    @Test
    public void test05461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05461");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceBuilderSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer25 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, firstPollOffsetStrategyEnumSerializableDeserializer25, (java.util.Collection<java.lang.String>) strList28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, firstPollOffsetStrategyEnumSerializableDeserializer21, (java.util.Collection<java.lang.String>) strList28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> randomAccessBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", randomAccessSerializableDeserializer17, firstPollOffsetStrategyEnumSerializableDeserializer18, (java.util.Collection<java.lang.String>) strList28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Cloneable> strListBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Cloneable>("hi!", strListSerializableDeserializer14, cloneableSerializableDeserializer15, (java.util.Collection<java.lang.String>) strList28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.util.List<java.lang.String>> strBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.util.List<java.lang.String>>("hi!", strSerializableDeserializer11, strListSerializableDeserializer12, (java.util.Collection<java.lang.String>) strList28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> serializableBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>>("hi!", serializableSerializableDeserializer8, kafkaSpoutRetryServiceBuilderSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, firstPollOffsetStrategyEnumSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList28);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, java.lang.CharSequence> cloneableBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, java.lang.CharSequence>("", cloneableSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test05462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05462");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setFirstPollOffsetStrategy(firstPollOffsetStrategy20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder19.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder19.setRetry(kafkaSpoutRetryService25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder19.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder19.setPartitionRefreshPeriodMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setMaxPollRecords((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, firstPollOffsetStrategyEnumSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig40 = kafkaSpoutRetryServiceBuilder39.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer41 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator42 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer43 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getKeyDeserializer();
        java.lang.String str44 = kafkaSpoutRetryServiceKafkaSpoutConfig40.toString();
        long long45 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy47 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getFirstPollOffsetStrategy();
        java.lang.String str48 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getConsumerGroupId();
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator50 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator50);
        org.apache.storm.tuple.Fields fields52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator50, fields52, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer64 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer65 = null;
        java.util.regex.Pattern pattern66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder67 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer64, firstPollOffsetStrategyEnumSerializableDeserializer65, pattern66);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder67.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder69.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder69.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder73.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder75.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder77.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService81 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder77.setRetry(kafkaSpoutRetryService81);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder10.setRetry(kafkaSpoutRetryService81);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder83.setMaxRetries(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder85.setMaxUncommittedOffsets((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder85.setPartitionRefreshPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig90 = kafkaSpoutRetryServiceBuilder85.build();
        long long91 = kafkaSpoutRetryServiceKafkaSpoutConfig90.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig40);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator42);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer43);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 200L + "'", long45 == 200L);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy47 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy47.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig90);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 200L + "'", long91 == 200L);
    }

    @Test
    public void test05463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05463");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceBuilderSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer11 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer10, randomAccessSerializableDeserializer11, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.lang.reflect.GenericDeclaration> kafkaSpoutRetryServiceBuilderBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.lang.reflect.GenericDeclaration>("hi!", kafkaSpoutRetryServiceBuilderSerializableDeserializer7, genericDeclarationSerializableDeserializer8, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setOffsetCommitPeriodMs(100L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, firstPollOffsetStrategyEnumSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig25 = kafkaSpoutRetryServiceBuilder24.build();
        boolean boolean26 = kafkaSpoutRetryServiceKafkaSpoutConfig25.isConsumerAutoCommitMode();
        java.lang.String str27 = kafkaSpoutRetryServiceKafkaSpoutConfig25.toString();
        org.apache.storm.kafka.spout.Subscription subscription28 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy30 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService31 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder17.setRetry(kafkaSpoutRetryService31);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(subscription28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy30 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy30.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
    }

    @Test
    public void test05464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05464");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder6.setMaxUncommittedOffsets((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder25.setPollTimeoutMs((long) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, firstPollOffsetStrategyEnumSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer38 = null;
        java.util.regex.Pattern pattern39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer37, firstPollOffsetStrategyEnumSerializableDeserializer38, pattern39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder40.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy45 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setFirstPollOffsetStrategy(firstPollOffsetStrategy45);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer48 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer49 = null;
        java.util.regex.Pattern pattern50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder51 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer48, firstPollOffsetStrategyEnumSerializableDeserializer49, pattern50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig52 = kafkaSpoutRetryServiceBuilder51.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer53 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator54 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getTranslator();
        org.apache.storm.tuple.Fields fields55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator54, fields55, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator54);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer60 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer61 = null;
        java.util.regex.Pattern pattern62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder63 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer60, firstPollOffsetStrategyEnumSerializableDeserializer61, pattern62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig64 = kafkaSpoutRetryServiceBuilder63.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer65 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator66 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getTranslator();
        int int67 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator68 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getTranslator();
        org.apache.storm.tuple.Fields fields69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator68, fields69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder35.setFetchMinBytes(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder35.setPollTimeoutMs((long) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder29.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder29.setMaxUncommittedOffsets((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder77.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder80.setOffsetCommitPeriodMs((long) (byte) 0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy45 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy45.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig52);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig64);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 10000000 + "'", int67 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
    }

    @Test
    public void test05465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05465");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig22 = kafkaSpoutRetryServiceBuilder21.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer23 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getKeyDeserializer();
        long long24 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getOffsetsCommitPeriodMs();
        long long25 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy26 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getFirstPollOffsetStrategy();
        java.lang.String str27 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig22);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 30000L + "'", long24 == 30000L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10L + "'", long25 == 10L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy26 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy26.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test05466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05466");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setPartitionRefreshPeriodMs((long) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder21.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, firstPollOffsetStrategyEnumSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig30 = kafkaSpoutRetryServiceBuilder29.build();
        boolean boolean31 = kafkaSpoutRetryServiceKafkaSpoutConfig30.isConsumerAutoCommitMode();
        int int32 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer33 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription34 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getSubscription();
        long long35 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService36 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder24.setRetry(kafkaSpoutRetryService36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10000000 + "'", int32 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer33);
        org.junit.Assert.assertNotNull(subscription34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 2000L + "'", long35 == 2000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
    }

    @Test
    public void test05467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05467");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, firstPollOffsetStrategyEnumSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy14);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, firstPollOffsetStrategyEnumSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig21 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer22 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator23 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getTranslator();
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer32 = null;
        java.util.regex.Pattern pattern33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer31, firstPollOffsetStrategyEnumSerializableDeserializer32, pattern33);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, firstPollOffsetStrategyEnumSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setFirstPollOffsetStrategy(firstPollOffsetStrategy44);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, firstPollOffsetStrategyEnumSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder50.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer52 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator53 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        org.apache.storm.tuple.Fields fields54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator53, fields54, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator53);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer59 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer60 = null;
        java.util.regex.Pattern pattern61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer59, firstPollOffsetStrategyEnumSerializableDeserializer60, pattern61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig63 = kafkaSpoutRetryServiceBuilder62.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer64 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator65 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getTranslator();
        int int66 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator67 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getTranslator();
        org.apache.storm.tuple.Fields fields68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator67, fields68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder70.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig75 = kafkaSpoutRetryServiceBuilder74.build();
        int int76 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig21);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy44 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy44.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig63);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 10000000 + "'", int66 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 10000000 + "'", int76 == 10000000);
    }

    @Test
    public void test05468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05468");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        long long10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        int int11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 30000L + "'", long10 == 30000L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10000000 + "'", int11 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator14);
    }

    @Test
    public void test05469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05469");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        boolean boolean6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        int int7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        java.lang.String str10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10000000 + "'", int7 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService12);
    }

    @Test
    public void test05470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05470");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setPartitionRefreshPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setOffsetCommitPeriodMs((long) 0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
    }

    @Test
    public void test05471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05471");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>> kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer29 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, firstPollOffsetStrategyEnumSerializableDeserializer29, (java.util.Collection<java.lang.String>) strList32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type> subscriptionBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type>("hi!", subscriptionSerializableDeserializer25, typeSerializableDeserializer26, (java.util.Collection<java.lang.String>) strList32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer22, firstPollOffsetStrategyEnumSerializableDeserializer23, (java.util.Collection<java.lang.String>) strList32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, firstPollOffsetStrategyEnumSerializableDeserializer20, (java.util.Collection<java.lang.String>) strList32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, firstPollOffsetStrategyEnumSerializableDeserializer17, (java.util.Collection<java.lang.String>) strList32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer11, firstPollOffsetStrategyEnumSerializableDeserializer12, (java.util.Collection<java.lang.String>) strList32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>> strIterableBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>>("hi!", strIterableSerializableDeserializer8, kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList32);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, java.lang.Object> cloneableBuilder45 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, java.lang.Object>("", cloneableSerializableDeserializer1, objSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test05472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05472");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceBuilderSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, firstPollOffsetStrategyEnumSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setFirstPollOffsetStrategy(firstPollOffsetStrategy18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, firstPollOffsetStrategyEnumSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder26.build();
        boolean boolean28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder17.setFirstPollOffsetStrategy(firstPollOffsetStrategy29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder17.setMaxPollRecords((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig37 = kafkaSpoutRetryServiceBuilder34.build();
        org.apache.storm.kafka.spout.Subscription subscription38 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, firstPollOffsetStrategyEnumSerializableDeserializer8, subscription38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.util.ArrayList<java.lang.String>> strIterableBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.util.ArrayList<java.lang.String>>("hi!", strIterableSerializableDeserializer4, strListSerializableDeserializer5, subscription38);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.Map<java.lang.String, java.lang.Object>> kafkaSpoutRetryServiceBuilderBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.Map<java.lang.String, java.lang.Object>>("", kafkaSpoutRetryServiceBuilderSerializableDeserializer1, strMapSerializableDeserializer2, subscription38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy29 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy29.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig37);
        org.junit.Assert.assertNotNull(subscription38);
    }

    @Test
    public void test05473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05473");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFetchMinBytes(10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
    }

    @Test
    public void test05474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05474");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder15.setOffsetCommitPeriodMs((long) 10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer28 = null;
        java.util.regex.Pattern pattern29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer27, firstPollOffsetStrategyEnumSerializableDeserializer28, pattern29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder38.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer44 = null;
        java.util.regex.Pattern pattern45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer43, firstPollOffsetStrategyEnumSerializableDeserializer44, pattern45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig47 = kafkaSpoutRetryServiceBuilder46.build();
        boolean boolean48 = kafkaSpoutRetryServiceKafkaSpoutConfig47.isConsumerAutoCommitMode();
        int int49 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer50 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getKafkaProps();
        long long52 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator53 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getTranslator();
        org.apache.storm.tuple.Fields fields54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator53, fields54);
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder25.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator53, fields56);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder25.setPartitionRefreshPeriodMs((long) 10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setMaxPartitionFectchBytes(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setSSLKeystore("hi!", "hi!", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 10000000 + "'", int49 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 30000L + "'", long52 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
    }

    @Test
    public void test05475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05475");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setPartitionRefreshPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setPartitionRefreshPeriodMs((long) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setOffsetCommitPeriodMs((long) (short) 1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
    }

    @Test
    public void test05476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05476");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        int int11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10000000 + "'", int9 == 10000000);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10000000 + "'", int11 == 10000000);
    }

    @Test
    public void test05477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05477");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        long long10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getRetryService();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 30000L + "'", long10 == 30000L);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2000L + "'", long12 == 2000L);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10000000 + "'", int18 == 10000000);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy19 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy19.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test05478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05478");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder23.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setFetchMinBytes((int) '4');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
    }

    @Test
    public void test05479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05479");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setPollTimeoutMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder19.setSSLKeystore("", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder29.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder29.setMaxUncommittedOffsets((int) 'a');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, firstPollOffsetStrategyEnumSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setFirstPollOffsetStrategy(firstPollOffsetStrategy44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer50 = null;
        java.util.regex.Pattern pattern51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer49, firstPollOffsetStrategyEnumSerializableDeserializer50, pattern51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder52.build();
        boolean boolean54 = kafkaSpoutRetryServiceKafkaSpoutConfig53.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy55 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder43.setFirstPollOffsetStrategy(firstPollOffsetStrategy55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder43.setMaxPollRecords((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder58.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder58.setMaxPollRecords(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder58.setMaxPartitionFectchBytes((int) 'a');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer67 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer68 = null;
        java.util.regex.Pattern pattern69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder70 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer67, firstPollOffsetStrategyEnumSerializableDeserializer68, pattern69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder70.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder70.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder74.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig79 = kafkaSpoutRetryServiceBuilder74.build();
        java.lang.String str80 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getConsumerGroupId();
        boolean boolean81 = kafkaSpoutRetryServiceKafkaSpoutConfig79.isConsumerAutoCommitMode();
        long long82 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy83 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder58.setFirstPollOffsetStrategy(firstPollOffsetStrategy83);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder34.setFirstPollOffsetStrategy(firstPollOffsetStrategy83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy44 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy44.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy55 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy55.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 200L + "'", long82 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy83 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy83.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
    }

    @Test
    public void test05480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05480");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        java.lang.String str9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        long long10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getConsumerGroupId();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator8);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2000L + "'", long10 == 2000L);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer11);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer12);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test05481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05481");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder8.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getRetryService();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig13.toString();
        org.apache.storm.kafka.spout.Subscription subscription16 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getSubscription();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getMaxTupleRetries();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(subscription16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2000L + "'", long18 == 2000L);
    }

    @Test
    public void test05482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05482");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setMaxPollRecords((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
    }

    @Test
    public void test05483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05483");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer9);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 30000L + "'", long13 == 30000L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
    }

    @Test
    public void test05484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05484");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>> kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceBuilderSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer22 = null;
        java.lang.String[] strArray25 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> firstPollOffsetStrategyEnumBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>>("hi!", firstPollOffsetStrategyEnumSerializableDeserializer21, kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer22, (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.String[]> firstPollOffsetStrategyBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.String[]>("hi!", firstPollOffsetStrategySerializableDeserializer18, strArraySerializableDeserializer19, (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, firstPollOffsetStrategyEnumSerializableDeserializer16, (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>> annotatedElementBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>>("hi!", annotatedElementSerializableDeserializer12, kafkaSpoutRetryServiceBuilderSerializableDeserializer13, (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceConsumerRecordFuncBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer8, firstPollOffsetStrategyEnumSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, firstPollOffsetStrategyEnumSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList26);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test05485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05485");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        int int8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        long long11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPollTimeoutMs();
        int int12 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription17 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        int int19 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10000000 + "'", int8 == 10000000);
        org.junit.Assert.assertNotNull(subscription9);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 200L + "'", long11 == 200L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 30000L + "'", long14 == 30000L);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2000L + "'", long16 == 2000L);
        org.junit.Assert.assertNotNull(subscription17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10000000 + "'", int19 == 10000000);
    }

    @Test
    public void test05486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05486");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, firstPollOffsetStrategyEnumSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder13.build();
        boolean boolean15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.isConsumerAutoCommitMode();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder8.setProp(strMap18);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, firstPollOffsetStrategyEnumSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setFirstPollOffsetStrategy(firstPollOffsetStrategy29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, firstPollOffsetStrategyEnumSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig36 = kafkaSpoutRetryServiceBuilder35.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer37 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator38 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getTranslator();
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator38, fields39, "");
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator38, fields42);
        java.lang.Object obj45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder8.setProp("hi!", obj45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setProp(strMap51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000000 + "'", int16 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy29 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy29.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig36);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
    }

    @Test
    public void test05487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05487");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, firstPollOffsetStrategyEnumSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder31.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder31.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder12.setMaxPollRecords((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setMaxPollRecords((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setOffsetCommitPeriodMs((long) 2147483647);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc46 = null;
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc46, fields47, "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
    }

    @Test
    public void test05488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05488");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder17.build();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig18.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService21 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getRetryService();
        boolean boolean22 = kafkaSpoutRetryServiceKafkaSpoutConfig18.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder12.setProp(strMap23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setPartitionRefreshPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setPollTimeoutMs(0L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
    }

    @Test
    public void test05489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05489");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, firstPollOffsetStrategyEnumSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder31.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder31.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder39.setMaxPartitionFectchBytes((int) '4');
        java.util.Properties properties46 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setProp(properties46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
    }

    @Test
    public void test05490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05490");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        java.lang.String str9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKafkaProps();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator7);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer8);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test05491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05491");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer14 = null;
        java.util.regex.Pattern pattern15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, firstPollOffsetStrategyEnumSerializableDeserializer14, pattern15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder16.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder16.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder8.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder22);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, firstPollOffsetStrategyEnumSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder28.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder28.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setMaxRetries((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setPartitionRefreshPeriodMs((long) (byte) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer40 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer41 = null;
        java.util.regex.Pattern pattern42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer40, firstPollOffsetStrategyEnumSerializableDeserializer41, pattern42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer50 = null;
        java.util.regex.Pattern pattern51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer49, firstPollOffsetStrategyEnumSerializableDeserializer50, pattern51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder52.build();
        boolean boolean54 = kafkaSpoutRetryServiceKafkaSpoutConfig53.isConsumerAutoCommitMode();
        int int55 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer56 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder47.setProp(strMap57);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer60 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer61 = null;
        java.util.regex.Pattern pattern62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder63 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer60, firstPollOffsetStrategyEnumSerializableDeserializer61, pattern62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder63.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder63.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy68 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder67.setFirstPollOffsetStrategy(firstPollOffsetStrategy68);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer71 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer72 = null;
        java.util.regex.Pattern pattern73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder74 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer71, firstPollOffsetStrategyEnumSerializableDeserializer72, pattern73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig75 = kafkaSpoutRetryServiceBuilder74.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer76 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator77 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getTranslator();
        org.apache.storm.tuple.Fields fields78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder67.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator77, fields78, "");
        org.apache.storm.tuple.Fields fields81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator77, fields81);
        org.apache.storm.tuple.Fields fields83 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator77, fields83, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator77);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder88 = kafkaSpoutRetryServiceBuilder22.setFetchMinBytes((int) (short) 1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 10000000 + "'", int55 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy68 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy68.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig75);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder88);
    }

    @Test
    public void test05492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05492");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, firstPollOffsetStrategyEnumSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, firstPollOffsetStrategyEnumSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setFirstPollOffsetStrategy(firstPollOffsetStrategy36);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, firstPollOffsetStrategyEnumSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder42.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator45 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator45, fields46, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator45, fields50, "");
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator45, fields53, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder10.setFetchMinBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig58 = kafkaSpoutRetryServiceBuilder57.build();
        boolean boolean59 = kafkaSpoutRetryServiceKafkaSpoutConfig58.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.Subscription subscription60 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService61 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getRetryService();
        java.lang.Class<?> wildcardClass62 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(subscription60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test05493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05493");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, firstPollOffsetStrategyEnumSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder17.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, firstPollOffsetStrategyEnumSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder28.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder28.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, firstPollOffsetStrategyEnumSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, firstPollOffsetStrategyEnumSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setFirstPollOffsetStrategy(firstPollOffsetStrategy49);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer53 = null;
        java.util.regex.Pattern pattern54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer52, firstPollOffsetStrategyEnumSerializableDeserializer53, pattern54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig56 = kafkaSpoutRetryServiceBuilder55.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer57 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator58 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getTranslator();
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator58, fields59, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator58, fields63, "");
        org.apache.storm.tuple.Fields fields66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator58, fields66, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder12.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder12.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder76.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder78.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder80.setMaxPollRecords((int) (short) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy49 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy49.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig56);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
    }

    @Test
    public void test05494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05494");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer11 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, org.apache.storm.kafka.spout.Subscription> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, org.apache.storm.kafka.spout.Subscription>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, subscriptionSerializableDeserializer11, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, firstPollOffsetStrategyEnumSerializableDeserializer8, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> annotatedElementBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", annotatedElementSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, strArray17);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, firstPollOffsetStrategyEnumSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        int int30 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer31 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer32 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer34 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getValueDeserializer();
        java.lang.String str35 = kafkaSpoutRetryServiceKafkaSpoutConfig27.toString();
        java.lang.String str36 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService37 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder21.setRetry(kafkaSpoutRetryService37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig39 = kafkaSpoutRetryServiceBuilder21.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy40 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getFirstPollOffsetStrategy();
        java.lang.String str41 = kafkaSpoutRetryServiceKafkaSpoutConfig39.toString();
        long long42 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer43 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getTranslator();
        int int45 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10000000 + "'", int30 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer31);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig39);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy40 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy40.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 200L + "'", long42 == 200L);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10000000 + "'", int45 == 10000000);
    }

    @Test
    public void test05495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05495");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, firstPollOffsetStrategyEnumSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, firstPollOffsetStrategyEnumSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder42.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService46 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder42.setRetry(kafkaSpoutRetryService46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder23.setRetry(kafkaSpoutRetryService46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder23.setMaxPollRecords((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setMaxUncommittedOffsets(10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer57 = null;
        java.util.regex.Pattern pattern58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer56, firstPollOffsetStrategyEnumSerializableDeserializer57, pattern58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder59.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy64 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder63.setFirstPollOffsetStrategy(firstPollOffsetStrategy64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder63.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService69 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder63.setRetry(kafkaSpoutRetryService69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder63.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder74.setPartitionRefreshPeriodMs((long) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer78 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer79 = null;
        java.util.regex.Pattern pattern80 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder81 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer78, firstPollOffsetStrategyEnumSerializableDeserializer79, pattern80);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig82 = kafkaSpoutRetryServiceBuilder81.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer83 = kafkaSpoutRetryServiceKafkaSpoutConfig82.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator84 = kafkaSpoutRetryServiceKafkaSpoutConfig82.getTranslator();
        int int85 = kafkaSpoutRetryServiceKafkaSpoutConfig82.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription86 = kafkaSpoutRetryServiceKafkaSpoutConfig82.getSubscription();
        java.lang.String str87 = kafkaSpoutRetryServiceKafkaSpoutConfig82.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator88 = kafkaSpoutRetryServiceKafkaSpoutConfig82.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder74.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator88);
        org.apache.storm.tuple.Fields fields90 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder92 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator88, fields90, "hi!");
        org.apache.storm.tuple.Fields fields93 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder95 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator88, fields93, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder97 = kafkaSpoutRetryServiceBuilder95.setMaxRetries((int) (byte) 1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy64 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy64.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig82);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 10000000 + "'", int85 == 10000000);
        org.junit.Assert.assertNotNull(subscription86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder92);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder95);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder97);
    }

    @Test
    public void test05496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05496");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig8 = kafkaSpoutRetryServiceBuilder7.build();
        boolean boolean9 = kafkaSpoutRetryServiceKafkaSpoutConfig8.isConsumerAutoCommitMode();
        java.lang.String str10 = kafkaSpoutRetryServiceKafkaSpoutConfig8.toString();
        java.lang.String str11 = kafkaSpoutRetryServiceKafkaSpoutConfig8.toString();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig8.toString();
        int int13 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig8.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.util.List<java.lang.String>> subscriptionBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.util.List<java.lang.String>>("hi!", subscriptionSerializableDeserializer1, strListSerializableDeserializer2, subscription15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10000000 + "'", int13 == 10000000);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription15);
    }

    @Test
    public void test05497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05497");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer23 = null;
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer22, firstPollOffsetStrategyEnumSerializableDeserializer23, (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type> subscriptionBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.Type>("hi!", subscriptionSerializableDeserializer19, typeSerializableDeserializer20, (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, firstPollOffsetStrategyEnumSerializableDeserializer17, (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, firstPollOffsetStrategyEnumSerializableDeserializer14, (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer9, firstPollOffsetStrategyEnumSerializableDeserializer10, (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, firstPollOffsetStrategyEnumSerializableDeserializer7, (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, java.lang.Comparable<java.lang.String>> cloneableBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, java.lang.Comparable<java.lang.String>>("hi!", cloneableSerializableDeserializer2, strComparableSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList26);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test05498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05498");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig5 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer6 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        boolean boolean7 = kafkaSpoutRetryServiceKafkaSpoutConfig5.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer8 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getKeyDeserializer();
        int int9 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer10 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription11 = kafkaSpoutRetryServiceKafkaSpoutConfig5.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig5);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10000000 + "'", int9 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer10);
        org.junit.Assert.assertNotNull(subscription11);
    }

    @Test
    public void test05499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05499");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, firstPollOffsetStrategyEnumSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy14);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, firstPollOffsetStrategyEnumSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig21 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer22 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator23 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getTranslator();
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setSSLKeystore("", "", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer40 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer44 = null;
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, org.apache.storm.kafka.spout.Subscription> kafkaSpoutRetryServiceBuilder51 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, org.apache.storm.kafka.spout.Subscription>("hi!", kafkaSpoutRetryServiceSerializableDeserializer43, subscriptionSerializableDeserializer44, strArray50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer40, firstPollOffsetStrategyEnumSerializableDeserializer41, strArray50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setMaxRetries((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder52.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder52.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder37.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder52);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer62 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer63 = null;
        java.util.regex.Pattern pattern64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder65 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer62, firstPollOffsetStrategyEnumSerializableDeserializer63, pattern64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig66 = kafkaSpoutRetryServiceBuilder65.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer67 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator68 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer69 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getKeyDeserializer();
        java.lang.String str70 = kafkaSpoutRetryServiceKafkaSpoutConfig66.toString();
        long long71 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy73 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getFirstPollOffsetStrategy();
        boolean boolean74 = kafkaSpoutRetryServiceKafkaSpoutConfig66.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer75 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator76 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy77 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder52.setFirstPollOffsetStrategy(firstPollOffsetStrategy77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig21);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig66);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator68);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer69);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 200L + "'", long71 == 200L);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy73 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy73.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator76);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy77 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy77.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
    }

    @Test
    public void test05500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05500");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, firstPollOffsetStrategyEnumSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, firstPollOffsetStrategyEnumSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder28.build();
        boolean boolean30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.isConsumerAutoCommitMode();
        int int31 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumDeserializer32 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder23.setProp(strMap33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder14.setProp(strMap33);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, firstPollOffsetStrategyEnumSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder43.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder35.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder53.setPartitionRefreshPeriodMs((long) 10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder56.setPartitionRefreshPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceKafkaSpoutConfig59 = kafkaSpoutRetryServiceBuilder56.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceRecordTranslator60 = kafkaSpoutRetryServiceKafkaSpoutConfig59.getTranslator();
        int int61 = kafkaSpoutRetryServiceKafkaSpoutConfig59.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10000000 + "'", int31 == 10000000);
        org.junit.Assert.assertNull(firstPollOffsetStrategyEnumDeserializer32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
    }
}

